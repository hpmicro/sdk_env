<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__pmon__drv_8h" kind="file" language="C++">
    <compoundname>hpm_pmon_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_pmon_regs.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_pmon_drv.h</label>
        <link refid="hpm__pmon__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_pmon_regs.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__pmon__drv_8h_1a1446d377860d2ae3c189bd5658f327a7" prot="public" static="no">
        <name>PMON_EVENT_GLITCH0</name>
        <initializer>(1U &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="13" column="9" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__pmon__drv_8h_1ad77ede961c31c75e6628452cd5308853" prot="public" static="no">
        <name>PMON_EVENT_GLITCH1</name>
        <initializer>(1U &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="14" column="9" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__pmon__drv_8h_1a149f7694910d4c779a4804e8b18b6ed4" prot="public" static="no">
        <name>PMON_EVENT_CLOCK0</name>
        <initializer>(1U &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="15" column="9" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__pmon__drv_8h_1a57c756f8ebebdd55812bca4e9bcf0189" prot="public" static="no">
        <name>PMON_EVENT_CLOCK1</name>
        <initializer>(1U &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="16" column="9" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="16" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__pmon__drv_8h_1ae8850fd6b9ee9182e916b0e6efdaeb11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pmon_enable</definition>
        <argsstring>(PMON_Type *ptr, uint8_t monitor_index, bool enable)</argsstring>
        <name>pmon_enable</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>monitor_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="22" column="20" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="hpm__pmon__drv_8h_1a0bca60c39bae651706ca55f9ad944c0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pmon_select_glitch_mode</definition>
        <argsstring>(PMON_Type *ptr, uint8_t monitor_index, bool active_mode)</argsstring>
        <name>pmon_select_glitch_mode</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>monitor_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="31" column="20" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="hpm__pmon__drv_8h_1a4ec502a9f13a211dfeece7341c4f467a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pmon_glich_detected</definition>
        <argsstring>(PMON_Type *ptr, uint8_t monitor_index)</argsstring>
        <name>pmon_glich_detected</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>monitor_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="40" column="20" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="hpm__pmon__drv_8h_1aab64faaab1140f763eaa254adb328754" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pmon_test_mode_enable</definition>
        <argsstring>(PMON_Type *ptr, bool enable)</argsstring>
        <name>pmon_test_mode_enable</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="45" column="20" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="hpm__pmon__drv_8h_1aa25dcd790c74d4d580c118f97139fb95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pmon_irq_enable</definition>
        <argsstring>(PMON_Type *ptr, uint32_t mask, bool enable)</argsstring>
        <name>pmon_irq_enable</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="51" column="20" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="hpm__pmon__drv_8h_1a77a29c450c7c868a5d522ab8ec5af8a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pmon_irq_get_status</definition>
        <argsstring>(PMON_Type *ptr)</argsstring>
        <name>pmon_irq_get_status</name>
        <param>
          <type><ref refid="structPMON__Type" kindref="compound">PMON_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pmon_drv.h" line="56" column="24" bodyfile="drivers/inc/hpm_pmon_drv.h" bodystart="56" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_PMON_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PMON_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_pmon_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="hpm__pmon__drv_8h_1a1446d377860d2ae3c189bd5658f327a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMON_EVENT_GLITCH0<sp/>(1U<sp/>&lt;&lt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="hpm__pmon__drv_8h_1ad77ede961c31c75e6628452cd5308853" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMON_EVENT_GLITCH1<sp/>(1U<sp/>&lt;&lt;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="hpm__pmon__drv_8h_1a149f7694910d4c779a4804e8b18b6ed4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMON_EVENT_CLOCK0<sp/>(1U<sp/>&lt;&lt;<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="hpm__pmon__drv_8h_1a57c756f8ebebdd55812bca4e9bcf0189" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMON_EVENT_CLOCK1<sp/>(1U<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="hpm__pmon__drv_8h_1ae8850fd6b9ee9182e916b0e6efdaeb11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__pmon__drv_8h_1ae8850fd6b9ee9182e916b0e6efdaeb11" kindref="member">pmon_enable</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>monitor_index,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPMON__Type_1a35e802d89e747d78834f5db94ef6df00" kindref="member">MONITOR</ref>[monitor_index].<ref refid="structPMON__Type_1a567bf5900fbd001c7c7f87550f4c206d" kindref="member">CONTROL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPMON__Type_1a35e802d89e747d78834f5db94ef6df00" kindref="member">MONITOR</ref>[monitor_index].<ref refid="structPMON__Type_1a567bf5900fbd001c7c7f87550f4c206d" kindref="member">CONTROL</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="HPM6200_2ip_2hpm__pmon__regs_8h_1aae7ad74cc14c35a657fb5a5da9bfaa8d" kindref="member">~PMON_MONITOR_CONTROL_ENABLE_MASK</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6200_2ip_2hpm__pmon__regs_8h_1a549325e09032a9c2a403eb394b47a613" kindref="member">PMON_MONITOR_CONTROL_ENABLE_SET</ref>(enable);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="hpm__pmon__drv_8h_1a0bca60c39bae651706ca55f9ad944c0c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__pmon__drv_8h_1a0bca60c39bae651706ca55f9ad944c0c" kindref="member">pmon_select_glitch_mode</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>monitor_index,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active_mode)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPMON__Type_1a35e802d89e747d78834f5db94ef6df00" kindref="member">MONITOR</ref>[monitor_index].<ref refid="structPMON__Type_1a567bf5900fbd001c7c7f87550f4c206d" kindref="member">CONTROL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPMON__Type_1a35e802d89e747d78834f5db94ef6df00" kindref="member">MONITOR</ref>[monitor_index].<ref refid="structPMON__Type_1a567bf5900fbd001c7c7f87550f4c206d" kindref="member">CONTROL</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="HPM6200_2ip_2hpm__pmon__regs_8h_1a4ed347d42f6778b2f0b81bf2566afd1a" kindref="member">~PMON_MONITOR_CONTROL_ACTIVE_MASK</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM6200_2ip_2hpm__pmon__regs_8h_1acaae226d763ee4335c2547af2dcfff7d" kindref="member">PMON_MONITOR_CONTROL_ACTIVE_SET</ref>(active_mode);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="hpm__pmon__drv_8h_1a4ec502a9f13a211dfeece7341c4f467a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__pmon__drv_8h_1a4ec502a9f13a211dfeece7341c4f467a" kindref="member">pmon_glich_detected</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>monitor_index)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPMON__Type_1a35e802d89e747d78834f5db94ef6df00" kindref="member">MONITOR</ref>[monitor_index].<ref refid="structPMON__Type_1a2b5dc9d27d040fcd0ee17614ffb05279" kindref="member">STATUS</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="hpm__pmon__drv_8h_1aab64faaab1140f763eaa254adb328754" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__pmon__drv_8h_1aab64faaab1140f763eaa254adb328754" kindref="member">pmon_test_mode_enable</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;TEST_MODE<sp/>=<sp/>(ptr-&gt;TEST_MODE<sp/>&amp;<sp/>~PMON_TEST_MODE_DISABLE_MASK)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PMON_TEST_MODE_DISABLE_SET(!enable);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="hpm__pmon__drv_8h_1aa25dcd790c74d4d580c118f97139fb95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__pmon__drv_8h_1aa25dcd790c74d4d580c118f97139fb95" kindref="member">pmon_irq_enable</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPMON__Type_1a7b4de69618f6fb5da605b9b3dedc00d2" kindref="member">IRQ_ENABLE</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPMON__Type_1a7b4de69618f6fb5da605b9b3dedc00d2" kindref="member">IRQ_ENABLE</ref><sp/>&amp;<sp/>~mask)<sp/>|<sp/>(enable<sp/>?<sp/>mask<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="hpm__pmon__drv_8h_1a77a29c450c7c868a5d522ab8ec5af8a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__pmon__drv_8h_1a77a29c450c7c868a5d522ab8ec5af8a5" kindref="member">pmon_irq_get_status</ref>(<ref refid="structPMON__Type" kindref="compound">PMON_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPMON__Type_1aa0147a37c6f842e245e7f4bd2fbac3c8" kindref="member">IRQ_FLAG</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_PMON_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_pmon_drv.h"/>
  </compounddef>
</doxygen>
