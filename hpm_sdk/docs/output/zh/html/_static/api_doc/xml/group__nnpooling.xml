<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__nnpooling" kind="group">
    <compoundname>nnpooling</compoundname>
    <title>NN Pooling Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__nnpooling_1gad43e5ccb5728bc0e0b094259dd152082" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_avepool_HWC_s8</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t out_tensor_dim, q7_t *in_tmp_buf, q7_t *out_tensor)</argsstring>
        <name>hpm_nn_avepool_HWC_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for signed 8-bit integer inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor. It is required when -mext-dsp is enabled and its size must be equal to &quot;2 * out_tensor_dim *
                                 in_tensor_ch&quot;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>15</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_DIM<sp/>*<sp/>IN_CH];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_avepool_HWC_s8(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>out_data);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15466" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15466" bodyend="15483"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1gaf6fedec35524e63e29627562f32f347f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_avepool_HWC_s8_any</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q7_t *in_tmp_buf, q7_t *out_tensor, const uint16_t out_lshift)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_lshift</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for signed 8-bit integer inputs in any x and y dimensions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp is enabled and its size must be equal to &quot;2 *
                                     out_tensor_dim_x * in_tensor_ch&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal"><sp/>#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>IN_CH<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_LSHIFT<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal"><sp/>#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_avepool_HWC_s8_any(in_data,<sp/>IN_X,<sp/>IN_Y,<sp/>IN_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_LSHIFT);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15531" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15531" bodyend="15558"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga3b15c5bc734a4136c74eee7785e3e958" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_avepool_HWC_s8_any_act</definition>
        <argsstring>(const int in_tensor_dim_y, const int in_tensor_dim_x, const int out_tensor_dim_y, const int out_tensor_dim_x, const int stride_y, const int stride_x, const int ker_dim_y, const int ker_dim_x, const int pad_y, const int pad_x, const int act_min, const int act_max, const int in_tensor_ch, int8_t *in_tensor, int16_t *in_tmp_buf, int8_t *out_tensor)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any_act</name>
        <param>
          <type>const int</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is an average pooling function for S8 inputs with any x and y dimension with the actvating parameters to limit the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. Its needed size could be obtained by calling riscv_nn_avepool_s8_HWC_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15588" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15588" bodyend="15620"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1gada121e066cbae4b8157f2f05d2bd2445" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</definition>
        <argsstring>(const int out_tensor_dim_x, const int in_tensor_ch)</argsstring>
        <name>hpm_nn_avepool_HWC_s8_any_act_get_buffer_size</name>
        <param>
          <type>const int</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>in_tensor_ch</declname>
        </param>
        <briefdescription>
<para>This function is used to obtain the required size, in bytes, for the input temporary buffer of riscv_nn_avepool_HWC_s8_any_act. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the size required by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15630" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15630" bodyend="15639"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga6ed1130644bb9611b2d8964796858a22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_maxpool_HWC_s8</definition>
        <argsstring>(q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t out_tensor_dim, q7_t *in_tmp_buf, q7_t *out_tensor)</argsstring>
        <name>hpm_nn_maxpool_HWC_s8</name>
        <param>
          <type>q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a max pooling function for signed 8-bit integer inputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>32</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>15</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[IN_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">hpm_nn_maxpool_HWC_s8(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>NULL,<sp/>out_data);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15670" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15670" bodyend="15687"/>
      </memberdef>
      <memberdef kind="function" id="group__nnpooling_1ga8a897ddb16290c428acb826d7c290c2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_maxpool_HWC_s8_any_act</definition>
        <argsstring>(const uint16_t in_tensor_dim_y, const uint16_t in_tensor_dim_x, const uint16_t out_tensor_dim_y, const uint16_t out_tensor_dim_x, const uint16_t stride_y, const uint16_t stride_x, const uint16_t ker_dim_y, const uint16_t ker_dim_x, const uint16_t pad_y, const uint16_t pad_x, const int8_t act_min, const int8_t act_max, const uint16_t in_tensor_ch, int8_t *in_tensor, int16_t *tmp_buffer, int8_t *out_tensor)</argsstring>
        <name>hpm_nn_maxpool_HWC_s8_any_act</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int8_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int8_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>tmp_buffer</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <briefdescription>
<para>This is a max pooling function for signed 8-bit integer inputs in any x and y dimensions with the actvating parameters to limit the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value that the output tensor is limited to. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="15715" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="15715" bodyend="15743"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The pooling functions are used to downsample input data. They include max and average pooling functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
