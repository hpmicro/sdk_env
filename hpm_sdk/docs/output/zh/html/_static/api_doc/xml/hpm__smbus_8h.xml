<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__smbus_8h" kind="file" language="C++">
    <compoundname>hpm_smbus.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includes refid="hpm__i2c__drv_8h" local="yes">hpm_i2c_drv.h</includes>
    <includedby refid="hpm__pmbus_8c" local="yes">components/pmbus/hpm_pmbus.c</includedby>
    <includedby refid="hpm__smbus_8c" local="yes">components/smbus/hpm_smbus.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>components/smbus/hpm_smbus.h</label>
        <link refid="hpm__smbus_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_i2c_drv.h</label>
        <link refid="hpm__i2c__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>hpm_i2c_regs.h</label>
      </node>
      <node id="8">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>components/pmbus/hpm_pmbus.c</label>
        <link refid="hpm__pmbus_8c"/>
      </node>
      <node id="3">
        <label>components/smbus/hpm_smbus.c</label>
        <link refid="hpm__smbus_8c"/>
      </node>
      <node id="1">
        <label>components/smbus/hpm_smbus.h</label>
        <link refid="hpm__smbus_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__smbus_8h_1ae3889d9d441879578ace9ce101807165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_write_byte</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t data)</argsstring>
        <name>hpm_smbus_master_write_byte</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master write data. </para>
        </briefdescription>
        <detaileddescription>
<para>write data at slave mode</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>byte to be writed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="30" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="13" bodyend="23" declfile="components/smbus/hpm_smbus.h" declline="30" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a734fa837a9a526bfaf10fd15d7def6f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_read_byte</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t *data)</argsstring>
        <name>hpm_smbus_master_read_byte</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master read byte from certain slave device. </para>
        </briefdescription>
        <detaileddescription>
<para>Read byte from SMbus device</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the byte read from device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="43" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="25" bodyend="42" declfile="components/smbus/hpm_smbus.h" declline="43" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a9351b65495ec2e512928b5086fefc888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_write_byte_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint8_t data)</argsstring>
        <name>hpm_smbus_master_write_byte_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master write byte from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>write byte from SMbus device in command code</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>byte to be writed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="57" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="44" bodyend="55" declfile="components/smbus/hpm_smbus.h" declline="57" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a310c20ad20d8e52fcf2fd8725e8a042d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_write_word_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint16_t data)</argsstring>
        <name>hpm_smbus_master_write_word_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master write word(16bits) from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>write word(16bits) from SMbus device in command code</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>word to be writed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="71" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="57" bodyend="68" declfile="components/smbus/hpm_smbus.h" declline="71" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1ac300e27e934afcde45d447211dc67dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_read_byte_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint8_t *data)</argsstring>
        <name>hpm_smbus_master_read_byte_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master read byte from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>read byte from SMbus device in command code</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>byte to be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="85" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="70" bodyend="97" declfile="components/smbus/hpm_smbus.h" declline="85" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a15bf2b934ef3f389de089bf714da6ff6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_read_word_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint16_t *data)</argsstring>
        <name>hpm_smbus_master_read_word_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>SMbus master read word(16bits) from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>read word from SMbus device in command code</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>word to be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="99" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="99" bodyend="124" declfile="components/smbus/hpm_smbus.h" declline="99" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a54e7e3782bd74d54638a3b5859668db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_write_block_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_master_write_block_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus master block write from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>block write from SMbus device in command code <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the buffer to store data read from device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be read in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="115" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="126" bodyend="142" declfile="components/smbus/hpm_smbus.h" declline="115" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1ad3aea6d1d21edc7be3ef03916082b794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_read_block_in_command</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t command, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_master_read_block_in_command</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus master block read from certain slave device in command code. </para>
        </briefdescription>
        <detaileddescription>
<para>block read from SMbus device in command code <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">command</parametername>
</parameternamelist>
<parameterdescription>
<para>command code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the buffer to store data read from device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be read in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="131" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="144" bodyend="177" declfile="components/smbus/hpm_smbus.h" declline="131" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1a423dbdbf37dec1f37810c59c4bab33c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_write</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_master_write</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus master write data to certain slave device. </para>
        </briefdescription>
        <detaileddescription>
<para>Write data to SMbus device <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the data to be sent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be sent in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="146" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="179" bodyend="193" declfile="components/smbus/hpm_smbus.h" declline="146" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1af56ff56c89a04368258e75f197acbaa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_master_read</definition>
        <argsstring>(I2C_Type *ptr, uint8_t slave_address, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_master_read</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slave_address</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus master read data from certain slave device. </para>
        </briefdescription>
        <detaileddescription>
<para>Read data from SMbus device <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slave_address</parametername>
</parameternamelist>
<parameterdescription>
<para>SMbus slave address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the buffer to store data read from device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be read in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="161" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="195" bodyend="213" declfile="components/smbus/hpm_smbus.h" declline="161" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1ac92d07af94c29b334a4cd914614f19d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_slave_write</definition>
        <argsstring>(I2C_Type *ptr, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_slave_write</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus slave write data. </para>
        </briefdescription>
        <detaileddescription>
<para>Write data at SMbus slave mode. <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the buffer to store data sent from device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be sent in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if writing is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="175" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="215" bodyend="231" declfile="components/smbus/hpm_smbus.h" declline="175" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__smbus_8h_1adba2177437a717a75be0bc1eff958276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_smbus_slave_read</definition>
        <argsstring>(I2C_Type *ptr, uint8_t *data, uint32_t size)</argsstring>
        <name>hpm_smbus_slave_read</name>
        <param>
          <type><ref refid="structI2C__Type" kindref="compound">I2C_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>SMbus slave read data. </para>
        </briefdescription>
        <detaileddescription>
<para>Read data at SMbus slave mode <simplesect kind="note"><para>size should not not greater than I2C_SOC_TRANSFER_COUNT_MAX</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the buffer to store data read from device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of data to be read in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if reading is completed without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/smbus/hpm_smbus.h" line="188" column="12" bodyfile="components/smbus/hpm_smbus.c" bodystart="233" bodyend="254" declfile="components/smbus/hpm_smbus.h" declline="188" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_SMBUS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_SMBUS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__i2c__drv_8h" kindref="compound">hpm_i2c_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1ae3889d9d441879578ace9ce101807165" kindref="member">hpm_smbus_master_write_byte</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a734fa837a9a526bfaf10fd15d7def6f1" kindref="member">hpm_smbus_master_read_byte</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a9351b65495ec2e512928b5086fefc888" kindref="member">hpm_smbus_master_write_byte_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a310c20ad20d8e52fcf2fd8725e8a042d" kindref="member">hpm_smbus_master_write_word_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/><sp/>uint16_t<sp/>data);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1ac300e27e934afcde45d447211dc67dc4" kindref="member">hpm_smbus_master_read_byte_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/>uint8_t<sp/>*data);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a15bf2b934ef3f389de089bf714da6ff6" kindref="member">hpm_smbus_master_read_word_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/>uint16_t<sp/>*data);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a54e7e3782bd74d54638a3b5859668db8" kindref="member">hpm_smbus_master_write_block_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1ad3aea6d1d21edc7be3ef03916082b794" kindref="member">hpm_smbus_master_read_block_in_command</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>command,<sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1a423dbdbf37dec1f37810c59c4bab33c7" kindref="member">hpm_smbus_master_write</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1af56ff56c89a04368258e75f197acbaa6" kindref="member">hpm_smbus_master_read</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>slave_address,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1ac92d07af94c29b334a4cd914614f19d1" kindref="member">hpm_smbus_slave_write</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__smbus_8h_1adba2177437a717a75be0bc1eff958276" kindref="member">hpm_smbus_slave_read</ref>(<ref refid="structI2C__Type" kindref="compound">I2C_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="components/smbus/hpm_smbus.h"/>
  </compounddef>
</doxygen>
