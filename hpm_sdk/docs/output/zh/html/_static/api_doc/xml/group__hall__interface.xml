<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__hall__interface" kind="group">
    <compoundname>hall_interface</compoundname>
    <title>HALL driver APIs</title>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_count_delay_start</name>
        <enumvalue id="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152aa53685f5b51adfc11309a5d17adc79dc" prot="public">
          <name>hall_count_delay_start_after_uvw_toggle</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>start counting delay after u,v,w toggle </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1gga96b4ae1434d85cfa3bd1cd4ed62f5152ad428e988ac16b30c826222713e9c97c8" prot="public">
          <name>hall_count_delay_start_after_pre_trigger</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>start counting delay after pre-trigger </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>select delay start time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="38" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_rotate_direction</name>
        <enumvalue id="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991ca148d5eae0dcdbe2dce77b7a9299fb6a8" prot="public">
          <name>hall_rotate_direction_forward</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>direction forward </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991cad59ce86aed45190a6b34ad5b19f2bc0a" prot="public">
          <name>hall_rotate_direction_reversed</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>direction reversed </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>return value of motor movement direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="47" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" prot="public" static="no" strong="no">
        <type></type>
        <name>hall_counter_type</name>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3dafc3ef6cb5fe966f45fddd9d919b9c4bf" prot="public">
          <name>hall_counter_type_w</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type w </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da28c3f36492e8bdf2effa362a6a0583cf" prot="public">
          <name>hall_counter_type_v</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type v </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da0d59f3dff9253f333c885af2a86ed0cc" prot="public">
          <name>hall_counter_type_u</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type u </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hall__interface_1ggae5193aaf9727f986d4bd48bab49a5f3da6d7198a0c9b003799d43601be0a19888" prot="public">
          <name>hall_counter_type_timer</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>type timer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>counter type config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="56" column="1" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="56" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1ga96b4ae1434d85cfa3bd1cd4ed62f5152" kindref="member">hall_count_delay_start</ref></type>
        <definition>typedef enum hall_count_delay_start hall_count_delay_start_t</definition>
        <argsstring></argsstring>
        <name>hall_count_delay_start_t</name>
        <briefdescription>
<para>select delay start time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="41" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1ga8864e0956d97664acd7fb70765a6991c" kindref="member">hall_rotate_direction</ref></type>
        <definition>typedef enum hall_rotate_direction hall_rotate_direction_t</definition>
        <argsstring></argsstring>
        <name>hall_rotate_direction_t</name>
        <briefdescription>
<para>return value of motor movement direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="50" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" prot="public" static="no">
        <type>enum <ref refid="group__hall__interface_1gae5193aaf9727f986d4bd48bab49a5f3d" kindref="member">hall_counter_type</ref></type>
        <definition>typedef enum hall_counter_type hall_counter_type_t</definition>
        <argsstring></argsstring>
        <name>hall_counter_type_t</name>
        <briefdescription>
<para>counter type config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="61" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__hall__interface_1ga5662ce3ca3a5553ca4325d57e638b064" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_wdog_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t timeout)</argsstring>
        <name>hall_wdog_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>enable the watchdog </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>watch dog timeout value , unit is HALL system clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="73" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6faabee51ade995c7fa1da32b2c2844d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_wdog_disable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_wdog_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>disable the watchdog </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="84" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gaf11afb66fc1d0abe4c32af268a6f378e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_phase_config</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t delay_count, hall_count_delay_start_t delay_start)</argsstring>
        <name>hall_phase_config</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>delay_count</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga626b3ed4fcbaa878dff7b26dfa212c5f" kindref="member">hall_count_delay_start_t</ref></type>
          <declname>delay_start</declname>
        </param>
        <briefdescription>
<para>delay a certain number of clock cycles after receiving a trigger event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_count</parametername>
</parameternamelist>
<parameterdescription>
<para>delay clock cycles number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_start</parametername>
</parameternamelist>
<parameterdescription>
<para>select the trigger moment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="96" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gad36b75f60a80c7cef30be6a001dde1c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_pre_uvw_transition_config</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t counter)</argsstring>
        <name>hall_pre_uvw_transition_config</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>early trigger configuration </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">counter</parametername>
</parameternamelist>
<parameterdescription>
<para>the clock cycle number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="109" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gace7efb7f9a92d5001089a99a296eeca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_trigger_output_event_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_trigger_output_event_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>enable trigger event mask </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask to be checked <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="127" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gab2a0b9d0d43394d33dc82f03e0a30e9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_trigger_output_event_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_trigger_output_event_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>disable trigger event mask </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>event mask to bo checked <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="146" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga2492afe7c939d96d27ff3bbf7fa58f67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_read_trigger_event_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_load_read_trigger_event_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>enable hardware read event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>read registers flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="165" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gad9bcb93a81686bb4e45e55bf526a1713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_read_trigger_event_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t event_mask)</argsstring>
        <name>hall_load_read_trigger_event_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_mask</declname>
        </param>
        <briefdescription>
<para>disable hardware read event </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>read registers flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="184" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4898af7ba422350df19377f1d22119f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_clear_status</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_clear_status</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear status register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="203" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga12226ff72d093e5cb51a7ca1dd346545" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_status</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_status</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get status register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>uint32_t</parametername>
</parameternamelist>
<parameterdescription>
<para>value: </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_WDOG_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if watchdog counter timeout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHUPT_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if U/V/W Flip any input signal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHPRE_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if early trigger events occur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_PHDLYEN_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if time delay events occur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_U_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if U signal flip </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_V_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if V signal flip </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HALL_EVENT_W_FLAG_MASK</parametername>
</parameternamelist>
<parameterdescription>
<para>if W signal flip </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="221" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga102d88e245afc1c926571913c64b3d9d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_irq_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_irq_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="239" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga7ba909dbf190bcdb4b8dccafd7fc29a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_irq_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_irq_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="257" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gae7a747c2853c28cfbec329c9951ff520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_dma_request_enable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_dma_request_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable dma request </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="275" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga56e7dd4a233060161e716ef0bd132247" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_dma_request_disable</definition>
        <argsstring>(HALL_Type *hall_x, uint32_t mask)</argsstring>
        <name>hall_dma_request_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable dma request </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>hall event flag <itemizedlist>
<listitem><para><ref refid="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" kindref="member">HALL_EVENT_WDOG_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" kindref="member">HALL_EVENT_PHUPT_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" kindref="member">HALL_EVENT_PHPRE_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" kindref="member">HALL_EVENT_PHDLYEN_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" kindref="member">HALL_EVENT_U_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" kindref="member">HALL_EVENT_V_FLAG_MASK</ref> </para>
</listitem>
<listitem><para><ref refid="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" kindref="member">HALL_EVENT_W_FLAG_MASK</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="293" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga82d2c0f2320adf27477a0ec6e6b59f31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref></type>
        <definition>static hall_rotate_direction_t hall_get_rotate_direction</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_rotate_direction</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get rotate direction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hall_rotate_direction_t</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="304" column="39" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4eeaf6172b2849f65344d97e83dc39ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_current_uvw_stat</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_current_uvw_stat</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get three bits indicate UVW state </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>three</parametername>
</parameternamelist>
<parameterdescription>
<para>bits UVW state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="315" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga325b2bafa4034ed5a104aa1824ece038" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_current_count</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_current_count</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get current count U or V or W </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="327" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga3d0d77227a42594ca98d822d5c953491" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_read_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_read_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when read event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>hall_counter_type_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="340" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="340" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gabdc22d43ddf46bf425453fe8e3ff919f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_snap0_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_snap0_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when snap0 event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="353" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="353" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6a2c8205b0abeb018f1feb3c7ee7d53f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_count_on_snap1_event</definition>
        <argsstring>(HALL_Type *hall_x, hall_counter_type_t type)</argsstring>
        <name>hall_get_count_on_snap1_event</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <param>
          <type><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>get count when snap1 event generated </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__hall__interface_1ga2115653bcbc48c1da9e3703bd741dae1" kindref="member">hall_counter_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="366" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="366" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga73b587e91cb5a060d89987807b408224" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_u_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_u_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of u when u signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="378" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gae4e42f2b5a622fb4f349476619e81d54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_u_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_u_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of u when u signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="389" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="389" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gacec58ad5241cf737107abeca961fbc4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_v_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_v_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of v when v signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="400" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga4c3a3c811d384f288c54fdaf1a925317" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_v_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_v_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of v when v signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="411" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="411" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga07f15ff098cd83c28c71ed3c90f1b6c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_w_history0</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_w_history0</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of w when w signal transition from 0 to 1 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="422" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="422" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga6e7a95c1360240fc1aad0cbdf9ab2fba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hall_get_w_history1</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_get_w_history1</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>get the history count of w when w signal transition from 1 to 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="433" column="24" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gacbe6d5be236128942d2f6f1b241573db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_load_count_to_read_registers</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_load_count_to_read_registers</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>load ucnt, vcnt, wcnt and tmrcnt into their read registers. Hardware auto-clear; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="444" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga562d09bf49535235754d6fbc7e5eb9ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_snap_enable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_snap_enable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>enable hall snap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="454" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="454" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga1258f325a1a61d3955ab063ced367ea9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_snap_disable</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_snap_disable</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>disable hall snap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="464" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1ga13f2e8449418f17a7bce73c7b173735e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_counter_reset_assert</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_counter_reset_assert</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>reset all counter and related snapshots assert </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="474" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__hall__interface_1gaa2c3294220ae1874a7606d316950c8bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hall_counter_reset_release</definition>
        <argsstring>(HALL_Type *hall_x)</argsstring>
        <name>hall_counter_reset_release</name>
        <param>
          <type><ref refid="structHALL__Type" kindref="compound">HALL_Type</ref> *</type>
          <declname>hall_x</declname>
        </param>
        <briefdescription>
<para>reset all counter and related snapshots release </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hall_x</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL base address HPM_HALLx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="484" column="20" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="484" bodyend="487"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__hall__interface_1gaf8c0df70ccad257aa9fd64b23cf9f84b" prot="public" static="no">
        <name>HALL_EVENT_WDOG_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 31)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>wdg flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="22" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga252139a79a4754618c7052d8fb17f0f1" prot="public" static="no">
        <name>HALL_EVENT_PHUPT_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phupt flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga4d217a076fedc30264bc6b239d08bedd" prot="public" static="no">
        <name>HALL_EVENT_PHPRE_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 29)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phpre flag <linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gabda43ad373427300691246914c0b9cb5" prot="public" static="no">
        <name>HALL_EVENT_PHDLYEN_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 28)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>phdly flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gad0f5dbff9dd3be7c55ca40b1b98e5a93" prot="public" static="no">
        <name>HALL_EVENT_U_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 23)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>u flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga1b3668a8a3516998b2ed09abc232c0c0" prot="public" static="no">
        <name>HALL_EVENT_V_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>v flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga5eb51bb5e4dcacc9435d826ff708f74f" prot="public" static="no">
        <name>HALL_EVENT_W_FLAG_MASK</name>
        <initializer>(1U &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>w flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga93f692772b0ba0973a08bca8f7e7d659" prot="public" static="no">
        <name>HALL_UVW_STAT_MASK</name>
        <initializer>(<ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a1a890c32fc49aeac3f422866ff40aa46" kindref="member">HALL_COUNT_U_USTAT_MASK</ref> | <ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aa6d1e415eb5f9b8a07193edf82d10992" kindref="member">HALL_COUNT_U_VSTAT_MASK</ref> | <ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1af02fe1f69c6c8aad2fffb34335da4539" kindref="member">HALL_COUNT_U_WSTAT_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1ga036d5d4c7154afa8c2f58eb686eb5bbb" prot="public" static="no">
        <name>HALL_U_STAT_MASK</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1a1a890c32fc49aeac3f422866ff40aa46" kindref="member">HALL_COUNT_U_USTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gadada5339f348bbe31f286b11934b510d" prot="public" static="no">
        <name>HALL_V_STAT_MASK</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1aa6d1e415eb5f9b8a07193edf82d10992" kindref="member">HALL_COUNT_U_VSTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hall__interface_1gaa98f1486eda70bcd352f93c1e4ec8831" prot="public" static="no">
        <name>HALL_W_STAT_MASK</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__hall__regs_8h_1af02fe1f69c6c8aad2fffb34335da4539" kindref="member">HALL_COUNT_U_WSTAT_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_hall_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_hall_drv.h" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>HALL driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
