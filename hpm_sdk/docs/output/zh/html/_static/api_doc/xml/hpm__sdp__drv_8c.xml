<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__sdp__drv_8c" kind="file" language="C++">
    <compoundname>hpm_sdp_drv.c</compoundname>
    <includes refid="hpm__sdp__drv_8h" local="yes">hpm_sdp_drv.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_sdp_drv.h</label>
        <link refid="hpm__sdp__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_sdp_drv.c</label>
        <link refid="hpm__sdp__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>hpm_sdp_regs.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structsdp__hash__internal__ctx__t" prot="public">sdp_hash_internal_ctx_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__sdp__drv_8c_1aeb10ce018c6e8a3d5f83f0bd03b283a3" prot="public" static="no">
        <name>AES_KEY_SRC_SDP_START_IDX</name>
        <initializer>0U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AES Key source definition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="16" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a7a7a520353c9ec5e4d18dbf98f481187" prot="public" static="no">
        <name>AES128_KEY_SRC_SDP_END_IDX</name>
        <initializer>0xFU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="17" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1ae895d5677746df43d220f736edf4b68b" prot="public" static="no">
        <name>AES256_KEY_SRC_SDP_END_IDX</name>
        <initializer>0x7U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="18" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1afbf017bc72ba202a1906d3a5b906394a" prot="public" static="no">
        <name>AES_KEY_SRC_KEYMAN_START_IDX</name>
        <initializer>0x20U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="19" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a0bfb5529b8764ed1fd59fb72ac5da77c" prot="public" static="no">
        <name>AES128_KEY_SRC_KEYMAN_END_IDX</name>
        <initializer>0x2FU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="20" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a9ea8433452babc5b3b2a11a08d069602" prot="public" static="no">
        <name>AES256_KEY_SRC_KEYMAN_END_IDX</name>
        <initializer>0x2FU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="21" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a8a6f90d61e11965984c98ca2101ef300" prot="public" static="no">
        <name>AES_KEY_SRC_UNIQUE_KEY_START_IDX</name>
        <initializer>0x3EU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="22" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a9ab7839c60be1c3336a9d8d8421bd85a" prot="public" static="no">
        <name>AES_KEY_SRC_OTP_KEY_START_IDX</name>
        <initializer>0x3FU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="23" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a4a7ced25ef2b10debace7e610e7056cb" prot="public" static="no">
        <name>AES_256_KEY_SIZE_IN_WORDS</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="25" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a42b91969b3d3c9ba332f2542f987c8a5" prot="public" static="no">
        <name>AES_256_KEY_SIZE_IN_BYTES</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="26" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a79fb03be73bab6b52d141b4204aa0dc4" prot="public" static="no">
        <name>CRC32_DIGEST_SIZE_IN_BYTES</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="28" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a162e0d208b2b8b5dd1a29750112dfdcf" prot="public" static="no">
        <name>SHA1_DIGEST_SIZE_IN_BYTES</name>
        <initializer>(20U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="29" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a846524744b89075365dc463125bb2429" prot="public" static="no">
        <name>SHA256_DIGEST_SIZE_IN_BYTES</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="30" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1ae80e7ea50eb966898bb9402ec820e50e" prot="public" static="no">
        <name>AES_CTR_BLOCK_UNIT</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="32" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1af19ab913a847ad1e91c5291215116de1" prot="public" static="no">
        <name>AES_BLOCK_SIZE</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="38" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" prot="public" static="no">
        <name>HASH_BLOCK_SIZE</name>
        <initializer>(64U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="39" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1ac47b19eef9db05fc53c9934372fb8a43" prot="public" static="no">
        <name>HASH_DIGEST_SIZE_MAX</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="40" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a0726a09a906b27e48afa6a80f6743d51" prot="public" static="no">
        <name>SDP_CRYPTO_ALG_IDX_AES128</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="42" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1a1e6a1438ab14f6d49d5a42f81dfd0fd6" prot="public" static="no">
        <name>SDP_CRYPTO_ALG_IDX_AES256</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="43" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__sdp__drv_8c_1ad6bb7ee577ba27ff616c84350f0d7d68" prot="public" static="no">
        <name>SDP_CRYPTO_ALG_IDX_SM4</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="44" column="9" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847" prot="public" static="no" strong="no">
        <type></type>
        <name>sdp_hash_alg_state_t</name>
        <enumvalue id="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847a6a2fbfee5afea47ca927ce774b10f82f" prot="public">
          <name>sdp_state_hash_init</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847aab6c997fb4168101e392a322689eb1b8" prot="public">
          <name>sdp_state_hash_update</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="34" column="1" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="34" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a69426bf9ad48d33ae8cbe8a8bd26d0df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sdp_hash_internal_engine_init</definition>
        <argsstring>(SDP_Type *base, sdp_hash_ctx_t *hash_ctx)</argsstring>
        <name>sdp_hash_internal_engine_init</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>hash_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="720" column="13" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="720" bodyend="727" declfile="drivers/src/hpm_sdp_drv.c" declline="63" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a41623d1717c349a69222ada3d5112b63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t sdp_hash_process_message</definition>
        <argsstring>(SDP_Type *base, sdp_hash_ctx_t *ctx, const uint8_t *msg, uint32_t msg_size)</argsstring>
        <name>sdp_hash_process_message</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>msg_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Hash block size in bytes</para>
<para>&lt; Hash block size in bytes</para>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="777" column="19" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="777" bodyend="811" declfile="drivers/src/hpm_sdp_drv.c" declline="65" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t sdp_hash_internal_update</definition>
        <argsstring>(SDP_Type *base, sdp_hash_ctx_t *ctx, const uint8_t *msg, uint32_t msg_size)</argsstring>
        <name>sdp_hash_internal_update</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>msg_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="729" column="19" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="729" bodyend="775" declfile="drivers/src/hpm_sdp_drv.c" declline="67" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a009667faf574ffb3ec812a5f3d64ee9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t sdp_hash_finalize</definition>
        <argsstring>(SDP_Type *base, sdp_hash_ctx_t *hash_ctx)</argsstring>
        <name>sdp_hash_finalize</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>hash_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="846" column="19" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="846" bodyend="855" declfile="drivers/src/hpm_sdp_drv.c" declline="69" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdp_clear_error_status</definition>
        <argsstring>(SDP_Type *base)</argsstring>
        <name>sdp_clear_error_status</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="71" column="20" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1ae83c207ce555f0801fe9b641d6287774" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sdp_increment_bn</definition>
        <argsstring>(uint8_t *big_num, uint32_t bytes)</argsstring>
        <name>sdp_increment_bn</name>
        <param>
          <type>uint8_t *</type>
          <declname>big_num</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="374" column="13" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="374" bodyend="382" declfile="drivers/src/hpm_sdp_drv.c" declline="76" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void uint32_to_be</definition>
        <argsstring>(uint8_t *dst, uint32_t len, uint32_t num)</argsstring>
        <name>uint32_to_be</name>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="419" column="13" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="419" bodyend="430" declfile="drivers/src/hpm_sdp_drv.c" declline="78" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a697da7a65f7c322b27c49b0bc6e20727" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t aes_ccm_auth_crypt</definition>
        <argsstring>(SDP_Type *base, sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t input_len, const uint8_t *iv, uint32_t iv_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, uint8_t *mac, uint32_t mac_len)</argsstring>
        <name>aes_ccm_auth_crypt</name>
        <param>
          <type><ref refid="structSDP__Type" kindref="compound">SDP_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga848c82867ca6e64f519699b37713b15a" kindref="member">sdp_aes_ctx_t</ref> *</type>
          <declname>aes_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>input_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>iv_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mac_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="485" column="19" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="485" bodyend="610" declfile="drivers/src/hpm_sdp_drv.c" declline="80" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a86ca917f1bd2dbbb403e603b3db7eb8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void aes_ccm_format_b0</definition>
        <argsstring>(uint8_t *block, const uint8_t *iv, uint32_t iv_len, uint32_t mac_len, uint32_t aad_len, uint32_t input_len)</argsstring>
        <name>aes_ccm_format_b0</name>
        <param>
          <type>uint8_t *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>iv_len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mac_len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>input_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="446" column="13" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="446" bodyend="463" declfile="drivers/src/hpm_sdp_drv.c" declline="93" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a547bcd87d605950127cbd7c11f4ad7d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void aes_ccm_format_ctr0</definition>
        <argsstring>(uint8_t *ctr, const uint8_t *iv, uint8_t iv_len)</argsstring>
        <name>aes_ccm_format_ctr0</name>
        <param>
          <type>uint8_t *</type>
          <declname>ctr</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>iv_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="477" column="13" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="477" bodyend="483" declfile="drivers/src/hpm_sdp_drv.c" declline="100" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__sdp__drv_8c_1a6b5d9e3e353da2521850f602db459a9e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdp_constant_time_cmp</definition>
        <argsstring>(const void *dst, const void *src, uint32_t len)</argsstring>
        <name>sdp_constant_time_cmp</name>
        <param>
          <type>const void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_sdp_drv.c" line="638" column="16" bodyfile="drivers/src/hpm_sdp_drv.c" bodystart="638" bodyend="652" declfile="drivers/src/hpm_sdp_drv.c" declline="102" declcolumn="16"/>
      </memberdef>
      <member refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kind="function"><name>sdp_wait_done</name></member>
      <member refid="group__sdp__interface_1ga4315481c2f0a798f3f55a3547c6f280b" kind="function"><name>sdp_init</name></member>
      <member refid="group__sdp__interface_1ga4d5276bc1c826ea3dc3ab130836c6afd" kind="function"><name>sdp_deinit</name></member>
      <member refid="group__sdp__interface_1ga46df53ae0c3e88655999f5e5e398d52a" kind="function"><name>sdp_aes_set_key</name></member>
      <member refid="group__sdp__interface_1gabb01a7313079b4d535fe1fdeb0de76cb" kind="function"><name>sdp_aes_crypt_ecb</name></member>
      <member refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kind="function"><name>sdp_aes_crypt_cbc</name></member>
      <member refid="group__sdp__interface_1gade0b1187a0b53baafc71efd07b3995c6" kind="function"><name>sdp_aes_crypt_ctr</name></member>
      <member refid="group__sdp__interface_1ga4dfba82c7a94c09311819bc8f1e009df" kind="function"><name>sdp_aes_ccm_generate_encrypt</name></member>
      <member refid="group__sdp__interface_1ga489ecaa21d6ef7959d1c54035f1ab9ae" kind="function"><name>sdp_aes_ccm_decrypt_verify</name></member>
      <member refid="group__sdp__interface_1gaddc624a4f1b3e898166eb8840ddba5de" kind="function"><name>sdp_hash_init</name></member>
      <member refid="group__sdp__interface_1ga3eca6af1fced0bab36655bd42d237a4a" kind="function"><name>sdp_hash_update</name></member>
      <member refid="group__sdp__interface_1ga112d4ab7ac0cfba065169b2ef44c49a6" kind="function"><name>sdp_hash_finish</name></member>
      <member refid="group__sdp__interface_1ga54cb70aa4500002c9f0d2f98b97ef121" kind="function"><name>sdp_memcpy</name></member>
      <member refid="group__sdp__interface_1ga6afd14bee029f2a1857529f314cf80b6" kind="function"><name>sdp_memset</name></member>
      <member refid="group__sdp__interface_1ga7371a483c2570e98902b168207c10848" kind="function"><name>sdp_trigger_action</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__sdp__drv_8h" kindref="compound">hpm_sdp_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Definitions</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_KEY_SRC_SDP_START_IDX<sp/>0U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES128_KEY_SRC_SDP_END_IDX<sp/>0xFU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES256_KEY_SRC_SDP_END_IDX<sp/>0x7U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_KEY_SRC_KEYMAN_START_IDX<sp/>0x20U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES128_KEY_SRC_KEYMAN_END_IDX<sp/>0x2FU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES256_KEY_SRC_KEYMAN_END_IDX<sp/>0x2FU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_KEY_SRC_UNIQUE_KEY_START_IDX<sp/>0x3EU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_KEY_SRC_OTP_KEY_START_IDX<sp/>0x3FU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_256_KEY_SIZE_IN_WORDS<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_256_KEY_SIZE_IN_BYTES<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRC32_DIGEST_SIZE_IN_BYTES<sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHA1_DIGEST_SIZE_IN_BYTES<sp/><sp/>(20U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHA256_DIGEST_SIZE_IN_BYTES<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_CTR_BLOCK_UNIT<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847a6a2fbfee5afea47ca927ce774b10f82f" kindref="member">sdp_state_hash_init</ref>,<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847aab6c997fb4168101e392a322689eb1b8" kindref="member">sdp_state_hash_update</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847" kindref="member">sdp_hash_alg_state_t</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AES_BLOCK_SIZE<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASH_BLOCK_SIZE<sp/>(64U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASH_DIGEST_SIZE_MAX<sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDP_CRYPTO_ALG_IDX_AES128<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDP_CRYPTO_ALG_IDX_AES256<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDP_CRYPTO_ALG_IDX_SM4<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structsdp__hash__internal__ctx__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>words[<ref refid="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" kindref="member">HASH_BLOCK_SIZE</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bytes[<ref refid="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" kindref="member">HASH_BLOCK_SIZE</ref>];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>block;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blk_size;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>full_msg_size;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>running_hash[<ref refid="hpm__sdp__drv_8c_1ac47b19eef9db05fc53c9934372fb8a43" kindref="member">HASH_DIGEST_SIZE_MAX</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaab2a0c515a472eef8c7e5cb4f1d7eee4" kindref="member">sdp_hash_alg_t</ref><sp/>alg;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847" kindref="member">sdp_hash_alg_state_t</ref><sp/>state;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hash_init;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hash_finish;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Prototypes</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a69426bf9ad48d33ae8cbe8a8bd26d0df" kindref="member">sdp_hash_internal_engine_init</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a41623d1717c349a69222ada3d5112b63" kindref="member">sdp_hash_process_message</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*msg,<sp/>uint32_t<sp/>msg_size);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" kindref="member">sdp_hash_internal_update</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*msg,<sp/>uint32_t<sp/>msg_size);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a009667faf574ffb3ec812a5f3d64ee9a" kindref="member">sdp_hash_finalize</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1ab7abd1b100b5836e6e1acbce36c72c57" kindref="member">STA</ref><sp/>=<sp/>0xFFFFFFFFUL;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1ae83c207ce555f0801fe9b641d6287774" kindref="member">sdp_increment_bn</ref>(uint8_t<sp/>*big_num,<sp/>uint32_t<sp/>bytes);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" kindref="member">uint32_to_be</ref>(uint8_t<sp/>*dst,<sp/>uint32_t<sp/>len,<sp/>uint32_t<sp/>num);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a697da7a65f7c322b27c49b0bc6e20727" kindref="member">aes_ccm_auth_crypt</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*mac,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mac_len);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a86ca917f1bd2dbbb403e603b3db7eb8c" kindref="member">aes_ccm_format_b0</ref>(uint8_t<sp/>*block,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mac_len,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a547bcd87d605950127cbd7c11f4ad7d0" kindref="member">aes_ccm_format_ctr0</ref>(uint8_t<sp/>*ctr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,<sp/>uint8_t<sp/>iv_len);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="hpm__sdp__drv_8c_1a6b5d9e3e353da2521850f602db459a9e" kindref="member">sdp_constant_time_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>Codes</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sdp_sta;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_sta<sp/>=<sp/>base-&gt;<ref refid="structSDP__Type_1ab7abd1b100b5836e6e1acbce36c72c57" kindref="member">STA</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a3352d602bcdc9c1059e7ad9fd396cce4" kindref="member">SDP_STA_ERRSET_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da2f85949d00d24bd85b8955883dfd234a" kindref="member">status_sdp_error_setup</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a453a7239e5a99412874f621d3e511833" kindref="member">SDP_STA_ERRPKT_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da07ed2d58378d6363a843612f01fec33b" kindref="member">status_sdp_error_packet</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a764c2458854bcb2d92b71433fe189c96" kindref="member">SDP_STA_ERRSRC_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da1637f39c05440ad308d9000293625226" kindref="member">status_sdp_error_src</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9db1b46eb77d092e76cf36a7eb3f49e8" kindref="member">SDP_STA_ERRDST_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5daf9f87e1f188c4edbe80bc7d89a2e8ee1" kindref="member">status_sdp_error_dst</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9c108e1c4b8b07a3dbbf17a93de534e8" kindref="member">SDP_STA_ERRHAS_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da4c460f80cfebd73ebc25604caecafe72" kindref="member">status_sdp_error_hash</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a28b8a7b11ddc609a1f89cc599d6a1129" kindref="member">SDP_STA_ERRCHAIN_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da915d1424baaac4045c3af2079f9d9cfc" kindref="member">status_sdp_error_chain</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1ga7b40dad25644eb1ce4eca8daabb140b2" kindref="member">IS_HPM_BITMASK_CLR</ref>(sdp_sta,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a63cbf5e12d06d4ba370961df8f46edd9" kindref="member">SDP_STA_PKTCNT0_MASK</ref>));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga4315481c2f0a798f3f55a3547c6f280b" kindref="member">sdp_init</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a6e9960d6e2a24a41e72a28f29c386a37" kindref="member">SDP_SDPCR_CLKGAT_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1ae5b9d1b33b9277e36a8f3cbcbaf3fa71" kindref="member">SDP_SDPCR_SFTRST_MASK</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga4d5276bc1c826ea3dc3ab130836c6afd" kindref="member">sdp_deinit</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a6e9960d6e2a24a41e72a28f29c386a37" kindref="member">SDP_SDPCR_CLKGAT_MASK</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga46df53ae0c3e88655999f5e5e398d52a" kindref="member">sdp_aes_set_key</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_aes_key_bits_t</ref><sp/>key_bits,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key_idx)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>words[<ref refid="hpm__sdp__drv_8c_1a4a7ced25ef2b10debace7e610e7056cb" kindref="member">AES_256_KEY_SIZE_IN_WORDS</ref>];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bytes[<ref refid="hpm__sdp__drv_8c_1a42b91969b3d3c9ba332f2542f987c8a5" kindref="member">AES_256_KEY_SIZE_IN_BYTES</ref>];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>aes_key;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(aes_ctx<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(key_bits<sp/>&lt;=<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8acc0a0a6b57ff24014bb631875c31258c" kindref="member">sdp_aes_keybits_256</ref>));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a38ba17f554aaf4b7ac8f43c0d685439e" kindref="member">crypto_algo</ref><sp/>=<sp/><ref refid="group__sdp__interface_1gga8dd717546e9adf10bd382a09d655d05caceeb7f2ed79b74655f2bd875bedf6212" kindref="member">sdp_crypto_alg_aes</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref>,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1af3415dd36708a5388f0d0a79cb185d6c" kindref="member">SDP_SDPCR_CIPDIS_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da88a6c197706c3bd6021fa821538fd795" kindref="member">status_sdp_no_crypto_support</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((key_bits<sp/>!=<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8aebe4bfb1cda63ea891f5f7579de1af18" kindref="member">sdp_aes_keybits_128</ref>)<sp/>&amp;&amp;<sp/>(key_bits<sp/>!=<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8acc0a0a6b57ff24014bb631875c31258c" kindref="member">sdp_aes_keybits_256</ref>));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a31930045628a0c045de0e2985803d766" kindref="member">key_bits</ref><sp/>=<sp/>key_bits;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key128_idx<sp/>=<sp/>key_idx;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_bits<sp/>==<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8acc0a0a6b57ff24014bb631875c31258c" kindref="member">sdp_aes_keybits_256</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_idx<sp/>&lt;=<sp/><ref refid="hpm__sdp__drv_8c_1ae895d5677746df43d220f736edf4b68b" kindref="member">AES256_KEY_SRC_SDP_END_IDX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(aes_key.bytes,<sp/>key,<sp/>32);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key128_idx<sp/>=<sp/>key_idx<sp/>*<sp/>2U;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aaa1b7a7e5f96324aba66efa3651bf321" kindref="member">KEYADDR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a2eb8fdfbf1b3e92cb81b95e96ca41140" kindref="member">SDP_KEYADDR_INDEX_SET</ref>(key128_idx<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1abbae7038a4dc07e9452229aec9554af9" kindref="member">KEYDAT</ref><sp/>=<sp/>aes_key.words[idx++];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((key_idx<sp/>&gt;=<sp/><ref refid="hpm__sdp__drv_8c_1afbf017bc72ba202a1906d3a5b906394a" kindref="member">AES_KEY_SRC_KEYMAN_START_IDX</ref>)<sp/>&amp;&amp;<sp/>(key_idx<sp/>&lt;=<sp/><ref refid="hpm__sdp__drv_8c_1a9ea8433452babc5b3b2a11a08d069602" kindref="member">AES256_KEY_SRC_KEYMAN_END_IDX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key128_idx<sp/>=<sp/>(key_idx<sp/>-<sp/><ref refid="hpm__sdp__drv_8c_1afbf017bc72ba202a1906d3a5b906394a" kindref="member">AES_KEY_SRC_KEYMAN_START_IDX</ref>)<sp/>*<sp/>2U<sp/>+<sp/><ref refid="hpm__sdp__drv_8c_1afbf017bc72ba202a1906d3a5b906394a" kindref="member">AES_KEY_SRC_KEYMAN_START_IDX</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_idx<sp/>&lt;=<sp/><ref refid="hpm__sdp__drv_8c_1a7a7a520353c9ec5e4d18dbf98f481187" kindref="member">AES128_KEY_SRC_SDP_END_IDX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(aes_key.bytes,<sp/>key,<sp/>16);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aaa1b7a7e5f96324aba66efa3651bf321" kindref="member">KEYADDR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a2eb8fdfbf1b3e92cb81b95e96ca41140" kindref="member">SDP_KEYADDR_INDEX_SET</ref>(key_idx);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1abbae7038a4dc07e9452229aec9554af9" kindref="member">KEYDAT</ref><sp/>=<sp/>aes_key.words[j];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref><sp/>=<sp/>key128_idx;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a31930045628a0c045de0e2985803d766" kindref="member">key_bits</ref><sp/>=<sp/>key_bits;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_HAS_SM4_SUPPORT)<sp/>&amp;&amp;<sp/>(SDP_HAS_SM4_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>sdp_sm4_set_key(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_sm4_key_bits_t</ref><sp/>key_bits,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key_idx)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key_bits<sp/>!=<sp/>sdp_sm4_keybits_128)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga46df53ae0c3e88655999f5e5e398d52a" kindref="member">sdp_aes_set_key</ref>(base,<sp/>sm4_ctx,<sp/>key,<sp/>(<ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_aes_key_bits_t</ref>)<sp/>key_bits,<sp/>key_idx);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>sm4_ctx-&gt;crypto_algo<sp/>=<sp/>sdp_crypto_alg_sm4;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1gabb01a7313079b4d535fe1fdeb0de76cb" kindref="member">sdp_aes_crypt_ecb</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(aes_ctx<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1abdc116f0df9ff50155ab670bc5f649f5" kindref="member">SDP_SDPCR_CIPHEN_MASK</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>(uint32_t)<sp/>in;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>(uint32_t)<sp/>out;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_desc<sp/>=<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1ae5d12bebbfd2c5644697f58e8d107fbb" kindref="member">sdp_pkt</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;next_cmd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;pkt_ctrl.PKT_CTRL<sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;src_addr<sp/>=<sp/>(uint32_t)<sp/>in;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;dst_addr<sp/>=<sp/>(uint32_t)<sp/>out;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;buf_size<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(base);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a38ba17f554aaf4b7ac8f43c0d685439e" kindref="member">crypto_algo</ref><sp/>==<sp/><ref refid="group__sdp__interface_1gga8dd717546e9adf10bd382a09d655d05caceeb7f2ed79b74655f2bd875bedf6212" kindref="member">sdp_crypto_alg_aes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a31930045628a0c045de0e2985803d766" kindref="member">key_bits</ref><sp/>==<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8aebe4bfb1cda63ea891f5f7579de1af18" kindref="member">sdp_aes_keybits_128</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1a0726a09a906b27e48afa6a80f6743d51" kindref="member">SDP_CRYPTO_ALG_IDX_AES128</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1a1e6a1438ab14f6d49d5a42f81dfd0fd6" kindref="member">SDP_CRYPTO_ALG_IDX_AES256</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_HAS_SM4_SUPPORT)<sp/>&amp;&amp;<sp/>(SDP_HAS_SM4_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a38ba17f554aaf4b7ac8f43c0d685439e" kindref="member">crypto_algo</ref><sp/>==<sp/>sdp_crypto_alg_sm4)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1ad6bb7ee577ba27ff616c84350f0d7d68" kindref="member">SDP_CRYPTO_ALG_IDX_SM4</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da460a1184ebaf7cd2aa9af27f8d1cbbb8" kindref="member">status_sdp_invalid_alg</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>pkt_desc;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(base);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kindref="member">sdp_aes_crypt_cbc</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>iv[16],</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(aes_ctx<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((op<sp/>&lt;=<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41acc4dd81a9bfb05c0533ca744dcb3de37" kindref="member">sdp_aes_op_decrypt</ref>)<sp/>&amp;&amp;<sp/>(input<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(output<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1abdc116f0df9ff50155ab670bc5f649f5" kindref="member">SDP_SDPCR_CIPHEN_MASK</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref><sp/>|<sp/><ref refid="group__sdp__interface_1ga5606cd14ab32a74f06fe204b3dba5094" kindref="member">SDP_PKT_CTRL_CIPHIV_MASK</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>(uint32_t)<sp/>input;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>(uint32_t)<sp/>output;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_desc<sp/>=<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1ae5d12bebbfd2c5644697f58e8d107fbb" kindref="member">sdp_pkt</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;next_cmd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;pkt_ctrl.PKT_CTRL<sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref><sp/>|<sp/><ref refid="group__sdp__interface_1ga5606cd14ab32a74f06fe204b3dba5094" kindref="member">SDP_PKT_CTRL_CIPHIV_MASK</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;src_addr<sp/>=<sp/>(uint32_t)<sp/>input;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;dst_addr<sp/>=<sp/>(uint32_t)<sp/>output;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;buf_size<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(base);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a38ba17f554aaf4b7ac8f43c0d685439e" kindref="member">crypto_algo</ref><sp/>==<sp/><ref refid="group__sdp__interface_1gga8dd717546e9adf10bd382a09d655d05caceeb7f2ed79b74655f2bd875bedf6212" kindref="member">sdp_crypto_alg_aes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a31930045628a0c045de0e2985803d766" kindref="member">key_bits</ref><sp/>==<sp/><ref refid="group__sdp__interface_1gga8df04ef8ae870747d0cf6e72cb9d08a8aebe4bfb1cda63ea891f5f7579de1af18" kindref="member">sdp_aes_keybits_128</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1a0726a09a906b27e48afa6a80f6743d51" kindref="member">SDP_CRYPTO_ALG_IDX_AES128</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1afc859035ad596d149794e7b1dbf0ca5d" kindref="member">SDP_MODCTRL_AESMOD_SET</ref>(1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1a1e6a1438ab14f6d49d5a42f81dfd0fd6" kindref="member">SDP_CRYPTO_ALG_IDX_AES256</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1afc859035ad596d149794e7b1dbf0ca5d" kindref="member">SDP_MODCTRL_AESMOD_SET</ref>(1);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_HAS_SM4_SUPPORT)<sp/>&amp;&amp;<sp/>(SDP_HAS_SM4_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a38ba17f554aaf4b7ac8f43c0d685439e" kindref="member">crypto_algo</ref><sp/>==<sp/>sdp_crypto_alg_sm4)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(<ref refid="hpm__sdp__drv_8c_1ad6bb7ee577ba27ff616c84350f0d7d68" kindref="member">SDP_CRYPTO_ALG_IDX_SM4</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a3f7250e0fcae07a8a92e42abaa9d86b3" kindref="member">key_idx</ref>)<sp/>|</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(op)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1afc859035ad596d149794e7b1dbf0ca5d" kindref="member">SDP_MODCTRL_AESMOD_SET</ref>(1);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5da460a1184ebaf7cd2aa9af27f8d1cbbb8" kindref="member">status_sdp_invalid_alg</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>IV,<sp/>copy<sp/>the<sp/>IV<sp/>to<sp/>the<sp/>context<sp/>first<sp/>in<sp/>case<sp/>the<sp/>IV<sp/>address<sp/>is<sp/>not<sp/>32-bit<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_32[4];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(iv_32,<sp/>iv,<sp/>16);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a9873043e0699e4fffcf94fb57331ee0d" kindref="member">CIPHIV</ref>[i]<sp/>=<sp/>iv_32[i];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(iv_32,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(iv_32));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>pkt_desc;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(base);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>AES-CTR<sp/>algorithm,<sp/>all<sp/>the<sp/>numbers<sp/>are<sp/>represented<sp/>in<sp/>big-endian<sp/>format,<sp/>namely,<sp/>LSB<sp/>is<sp/>in<sp/>last<sp/>byte</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1ae83c207ce555f0801fe9b641d6287774" kindref="member">sdp_increment_bn</ref>(uint8_t<sp/>*big_num,<sp/>uint32_t<sp/>bytes)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>bytes<sp/>-<sp/>1;<sp/>i<sp/>&gt;<sp/>0u;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>big_num[i]++;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(big_num[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1gade0b1187a0b53baafc71efd07b3995c6" kindref="member">sdp_aes_crypt_ctr</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*nonce_counter,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(base<sp/>==<sp/>NULL)<sp/>||<sp/>(aes_ctx<sp/>==<sp/>NULL)<sp/>||<sp/>(nonce_counter<sp/>==<sp/>NULL)<sp/>||<sp/>(input<sp/>==<sp/>NULL)<sp/>||<sp/>(output<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>calc_len;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*cipher_nonce<sp/>=<sp/>(uint8_t<sp/>*)<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1ad95ac82c35baad6b729995d3feb9d74f" kindref="member">buf3</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_len<sp/>=<sp/>(length<sp/>&lt;<sp/>16U)<sp/>?<sp/>length<sp/>:<sp/>16U;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1gabb01a7313079b4d535fe1fdeb0de76cb" kindref="member">sdp_aes_crypt_ecb</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>nonce_counter,<sp/>cipher_nonce);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>tmp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>calc_len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>*input++;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*output++<sp/>=<sp/>(uint8_t)<sp/>(tmp<sp/>^<sp/>cipher_nonce[i]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>-=<sp/>calc_len;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Increment<sp/>counter,<sp/>(128-bit<sp/>big-endian<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1ae83c207ce555f0801fe9b641d6287774" kindref="member">sdp_increment_bn</ref>(nonce_counter,<sp/><ref refid="hpm__sdp__drv_8c_1ae80e7ea50eb966898bb9402ec820e50e" kindref="member">AES_CTR_BLOCK_UNIT</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" kindref="member">uint32_to_be</ref>(uint8_t<sp/>*dst,<sp/>uint32_t<sp/>len,<sp/>uint32_t<sp/>num)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(dst,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[len<sp/>-<sp/>1<sp/>-<sp/>i]<sp/>=<sp/>num<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>See<sp/>section<sp/>A2.1<sp/>in<sp/>NIST<sp/>Special<sp/>Publication<sp/>800-38C</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>q<sp/>+<sp/>n<sp/>=<sp/>15</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>n<sp/>-<sp/>nonce<sp/>/<sp/>iv</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>byte0<sp/>=<sp/>FLAG</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/>bit[2:0]<sp/>-<sp/>(q-1)</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>bit[5:3]<sp/>-<sp/>(t-2/2</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>bit[6]<sp/>-<sp/>adata</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>bit[7]<sp/>-<sp/>reserved</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>byte<sp/>(1...<sp/>15-q)<sp/>nonce</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>byte<sp/>(16-q...15)<sp/>input<sp/>length</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a86ca917f1bd2dbbb403e603b3db7eb8c" kindref="member">aes_ccm_format_b0</ref>(uint8_t<sp/>*block,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mac_len,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>q<sp/>=<sp/>15U<sp/>-<sp/>iv_len;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>block[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>block[0]<sp/>|=<sp/>(aad_len<sp/>&gt;<sp/>0)<sp/>?<sp/>(1U<sp/>&lt;&lt;<sp/>6)<sp/>:<sp/>0U;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>block[0]<sp/>|=<sp/>((mac_len<sp/>-<sp/>2U)<sp/>/<sp/>2U)<sp/>&lt;&lt;<sp/>3;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>block[0]<sp/>|=<sp/>q<sp/>-<sp/>1U;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(block<sp/>+<sp/>1U,<sp/>iv,<sp/>iv_len);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" kindref="member">uint32_to_be</ref>(block<sp/>+<sp/>1U<sp/>+<sp/>iv_len,<sp/>q,<sp/>input_len);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>See<sp/>section<sp/>A2.3<sp/>in<sp/>NIST<sp/>Special<sp/>Publication<sp/>800-38C</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/><sp/>q<sp/>+<sp/>n<sp/>=<sp/>15</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/><sp/>n<sp/>-<sp/>nonce/iv</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/><sp/>byte<sp/>0<sp/>=<sp/>FLAG</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/><sp/>bit[2:0]<sp/>:<sp/>(q<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/><sp/>bit[5:3]<sp/>:<sp/>0</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/><sp/>bit[7:6]<sp/>:<sp/>0</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/><sp/>byte<sp/>(1...15-q)<sp/>nonce</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/><sp/>byte<sp/>(16-q<sp/>...15)<sp/>i</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a547bcd87d605950127cbd7c11f4ad7d0" kindref="member">aes_ccm_format_ctr0</ref>(uint8_t<sp/>*ctr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,<sp/>uint8_t<sp/>iv_len)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>q<sp/>=<sp/>15U<sp/>-<sp/>iv_len;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(ctr,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>ctr[0]<sp/>|=<sp/>q<sp/>-<sp/>1U;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(ctr<sp/>+<sp/>1U,<sp/>iv,<sp/>iv_len);</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a697da7a65f7c322b27c49b0bc6e20727" kindref="member">aes_ccm_auth_crypt</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len)</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(aes_ctx<sp/>==<sp/>NULL)<sp/>||<sp/>(input<sp/>==<sp/>NULL)<sp/>||<sp/>(output<sp/>==<sp/>NULL)<sp/>||<sp/>(tag<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*See<sp/>section<sp/>A.1<sp/>in<sp/>NIST<sp/>Special<sp/>Publication<sp/>800-38C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>Tlen<sp/>is<sp/>4,<sp/>6,<sp/>8,<sp/>10,<sp/>12,<sp/>14,<sp/>16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((tag_len<sp/>%<sp/>2U<sp/>!=<sp/>0U)<sp/>||<sp/>(tag_len<sp/>/<sp/>2U<sp/>&lt;<sp/>2)<sp/>||<sp/>(tag_len<sp/>/<sp/>2U<sp/>&gt;<sp/>8));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Valid<sp/>Nonce<sp/>length<sp/>is<sp/>7,<sp/>8,<sp/>9,<sp/>10,<sp/>11,<sp/>12,<sp/>13<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((iv_len<sp/>&lt;<sp/>7U)<sp/>||<sp/>(iv_len<sp/>&gt;<sp/>13U));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note,<sp/>this<sp/>API<sp/>supports<sp/>maximum<sp/>2^32<sp/>-<sp/>1<sp/>bytes<sp/>of<sp/>data,<sp/>so<sp/>the<sp/>valid<sp/>q<sp/>value<sp/>should<sp/>be<sp/>2,<sp/>3,<sp/>or<sp/>4<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*b<sp/>=<sp/>(uint8_t<sp/>*)<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1af4f0e2e8b5ce344be70814b9e2749f73" kindref="member">buf0</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*y<sp/>=<sp/>(uint8_t<sp/>*)<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a66f48d17afdf104405886d1408617c50" kindref="member">buf1</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*ctr<sp/>=<sp/>(uint8_t<sp/>*)<sp/>&amp;aes_ctx-&gt;<ref refid="structsdp__crypto__ctx__t_1a9194d10c6b1b5354695b20dfa028bf1c" kindref="member">buf2</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Format<sp/>B0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a86ca917f1bd2dbbb403e603b3db7eb8c" kindref="member">aes_ccm_format_b0</ref>(b,<sp/>iv,<sp/>iv_len,<sp/>tag_len,<sp/>aad_len,<sp/>input_len);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>Y0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gabb01a7313079b4d535fe1fdeb0de76cb" kindref="member">sdp_aes_crypt_ecb</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>b,<sp/>y);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Follow<sp/>A2.2.2<sp/>in<sp/>NIST<sp/>Special<sp/>Publication<sp/>800-38C,<sp/>only<sp/>supports<sp/>up<sp/>to<sp/>2^32<sp/>bytes</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aad_len<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>calc_len<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad_src<sp/>=<sp/>aad;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>remaining_len<sp/>=<sp/>aad_len;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(b,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>B1</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Follow<sp/>A2.2.2<sp/>in<sp/>NIST<sp/>Special<sp/>Publication<sp/>800-38C,<sp/>only<sp/>supports<sp/>up<sp/>to<sp/>2^32<sp/>bytes</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aad_len<sp/>&lt;<sp/>((1UL<sp/>&lt;&lt;<sp/>16)<sp/>-<sp/>(1U<sp/>&lt;&lt;<sp/>8)))<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" kindref="member">uint32_to_be</ref>(b,<sp/>2,<sp/>aad_len);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_len<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(remaining_len,<sp/>14U);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;b[2],<sp/>aad_src,<sp/>calc_len);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>0xFFU;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>0xFEU;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1aa3efacb00b26896fc61d2e57103cf44f" kindref="member">uint32_to_be</ref>(&amp;b[6],<sp/>4,<sp/>calc_len);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_len<sp/>=<sp/>10U;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;b[2],<sp/>aad_src,<sp/>calc_len);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_src<sp/>+=<sp/>calc_len;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_len<sp/>-=<sp/>calc_len;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>Y(i)<sp/>=<sp/>CIPHk(B(i)<sp/>^<sp/>Y(i-1))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kindref="member">sdp_aes_crypt_cbc</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>b,<sp/>y,<sp/>y);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining_len<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_len<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(remaining_len,<sp/>16U);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(b,<sp/>aad_src,<sp/>calc_len);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_len<sp/>&lt;<sp/>16U)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(&amp;b[calc_len],<sp/>0,<sp/>16U<sp/>-<sp/>calc_len);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_src<sp/>+=<sp/>calc_len;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_len<sp/>-=<sp/>calc_len;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>Y(i)<sp/>=<sp/>CIPHk(B(i)<sp/>^<sp/>Y(i-1))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kindref="member">sdp_aes_crypt_cbc</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>b,<sp/>y,<sp/>y);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a547bcd87d605950127cbd7c11f4ad7d0" kindref="member">aes_ccm_format_ctr0</ref>(ctr,<sp/>iv,<sp/>iv_len);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Encryption/Decryption<sp/>starts<sp/>from<sp/>CTR1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1ae83c207ce555f0801fe9b641d6287774" kindref="member">sdp_increment_bn</ref>(ctr,<sp/>16);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Continue<sp/>CBC-MAC<sp/>calculation<sp/>+<sp/>Encryption/Decryption<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>remaining_len<sp/>=<sp/>input_len;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*src<sp/>=<sp/>(uint8_t<sp/>*)<sp/>input;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*dst<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining_len<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>calc_len<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(remaining_len,<sp/>16U);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(b,<sp/>src,<sp/>calc_len);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_len<sp/>&lt;<sp/>16U)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(&amp;b[calc_len],<sp/>0,<sp/>16U<sp/>-<sp/>calc_len);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>Y(i)<sp/>=<sp/>CIPHk(B(i)<sp/>^<sp/>Y(i-1))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kindref="member">sdp_aes_crypt_cbc</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>b,<sp/>y,<sp/>y);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gade0b1187a0b53baafc71efd07b3995c6" kindref="member">sdp_aes_crypt_ctr</ref>(base,<sp/>aes_ctx,<sp/>ctr,<sp/>src,<sp/>dst,<sp/>calc_len);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(op<sp/>==<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41acc4dd81a9bfb05c0533ca744dcb3de37" kindref="member">sdp_aes_op_decrypt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(b,<sp/>dst,<sp/>calc_len);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_len<sp/>&lt;<sp/>16U)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(&amp;b[calc_len],<sp/>0,<sp/>16U<sp/>-<sp/>calc_len);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>Y(i)<sp/>=<sp/>CIPHk(B(i)<sp/>^<sp/>Y(i-1))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaf0cc771c288306509b24a650917283a4" kindref="member">sdp_aes_crypt_cbc</ref>(base,<sp/>aes_ctx,<sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,<sp/>16,<sp/>b,<sp/>y,<sp/>y);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>calc_len;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>calc_len;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_len<sp/>-=<sp/>calc_len;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>CTR0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a547bcd87d605950127cbd7c11f4ad7d0" kindref="member">aes_ccm_format_ctr0</ref>(ctr,<sp/>iv,<sp/>iv_len);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>MAC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gade0b1187a0b53baafc71efd07b3995c6" kindref="member">sdp_aes_crypt_ctr</ref>(base,<sp/>aes_ctx,<sp/>ctr,<sp/>y,<sp/>b,<sp/>16);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>mac<sp/>to<sp/>the<sp/>destination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(tag,<sp/>b,<sp/>tag_len);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wipe-out<sp/>temporary<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(b,<sp/>0,<sp/>16U);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(y,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(ctr,<sp/>0,<sp/>16);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga4dfba82c7a94c09311819bc8f1e009df" kindref="member">sdp_aes_ccm_generate_encrypt</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a697da7a65f7c322b27c49b0bc6e20727" kindref="member">aes_ccm_auth_crypt</ref>(base,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41a3117fa24931bd0cd1d52ea73182749ec" kindref="member">sdp_aes_op_encrypt</ref>,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_len,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv_len,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_len,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag_len);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="hpm__sdp__drv_8c_1a6b5d9e3e353da2521850f602db459a9e" kindref="member">sdp_constant_time_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>result<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*dst_8<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<sp/>dst;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src_8<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*)<sp/>src;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len--<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>|=<sp/>*dst_8<sp/>^<sp/>*src_8;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dst_8;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++src_8;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga489ecaa21d6ef7959d1c54035f1ab9ae" kindref="member">sdp_aes_ccm_decrypt_verify</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*iv,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>iv_len,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>calc_mac[4];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a697da7a65f7c322b27c49b0bc6e20727" kindref="member">aes_ccm_auth_crypt</ref>(base,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aes_ctx,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gga7703a60c41664731c2419a25a110ac41acc4dd81a9bfb05c0533ca744dcb3de37" kindref="member">sdp_aes_op_decrypt</ref>,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_len,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv_len,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aad_len,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t<sp/>*)<sp/>&amp;calc_mac,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag_len);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hpm__sdp__drv_8c_1a6b5d9e3e353da2521850f602db459a9e" kindref="member">sdp_constant_time_cmp</ref>(calc_mac,<sp/>tag,<sp/>tag_len)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5dac7fcabcafec2fd9b8f01557b0b17156e" kindref="member">status_sdp_error_invalid_mac</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1gaddc624a4f1b3e898166eb8840ddba5de" kindref="member">sdp_hash_init</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/><ref refid="group__sdp__interface_1gaab2a0c515a472eef8c7e5cb4f1d7eee4" kindref="member">sdp_hash_alg_t</ref><sp/>alg)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref>,<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a0a80121a7b5f268062cbb316e9533468" kindref="member">SDP_SDPCR_HASDIS_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ggaa6db2c38ebc194c80d154d53851a4d5daca714ff069ddf2fb6495c0334b2080e8" kindref="member">status_sdp_no_hash_support</ref>;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>the<sp/>SDP<sp/>HASH<sp/>context<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;hash_ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(ctx_internal,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ctx_internal));</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;alg<sp/>=<sp/>alg;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;blk_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;state<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847a6a2fbfee5afea47ca927ce774b10f82f" kindref="member">sdp_state_hash_init</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;full_msg_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__sdp__drv_8c_1a69426bf9ad48d33ae8cbe8a8bd26d0df" kindref="member">sdp_hash_internal_engine_init</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx)</highlight></codeline>
<codeline lineno="721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>base;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;hash_ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx_internal-&gt;hash_init<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx_internal-&gt;hash_finish<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" kindref="member">sdp_hash_internal_update</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*msg,<sp/>uint32_t<sp/>msg_size)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_desc<sp/>=<sp/>(<ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*)<sp/>&amp;ctx-&gt;sdp_pkt;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;next_cmd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pkt_ctrl<sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;hash_init)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkt_ctrl<sp/>|=<sp/><ref refid="group__sdp__interface_1gad6ef9125058efa497a90f0528dff9c0b" kindref="member">SDP_PKT_CTRL_HASHINIT_MASK</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;hash_init<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;hash_finish)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkt_ctrl<sp/>|=<sp/><ref refid="group__sdp__interface_1ga484e51b4454437c30a7cd5f7b1814479" kindref="member">SDP_PKT_CTRL_HASHFINISH_MASK</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;hash_finish<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a558218368a8e788909f759e0d00f181b" kindref="member">SDP_SDPCR_HASHEN_MASK</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a3fd053fd74be681d5b5104060cdbd84a" kindref="member">NPKTPTR</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/>pkt_ctrl;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>(uint32_t)<sp/>msg;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>(uint32_t)<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>msg_size;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;pkt_ctrl.PKT_CTRL<sp/>=<sp/>pkt_ctrl;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;src_addr<sp/>=<sp/>(uint32_t)<sp/>msg;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;dst_addr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;buf_size<sp/>=<sp/>msg_size;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;reserved[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;reserved[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;reserved[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(base);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a7a0569fbc4cc7174492959c100546b34" kindref="member">SDP_MODCTRL_HASALG_SET</ref>(ctx_internal-&gt;alg);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>pkt_desc;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(base);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a41623d1717c349a69222ada3d5112b63" kindref="member">sdp_hash_process_message</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*msg,<sp/>uint32_t<sp/>msg_size)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>there<sp/>is<sp/>partially<sp/>filled<sp/>internal<sp/>buffer,<sp/>fill<sp/>it<sp/>to<sp/>full<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;blk_size<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>size_to_copy<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" kindref="member">HASH_BLOCK_SIZE</ref><sp/>-<sp/>ctx_internal-&gt;blk_size;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;ctx_internal-&gt;block.bytes[ctx_internal-&gt;blk_size],<sp/>msg,<sp/>size_to_copy);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/>size_to_copy;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_size<sp/>-=<sp/>size_to_copy;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>the<sp/>full<sp/>internal<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" kindref="member">sdp_hash_internal_update</ref>(base,<sp/>ctx,<sp/>&amp;ctx_internal-&gt;block.bytes[0],<sp/><ref refid="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" kindref="member">HASH_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>all<sp/>full<sp/>blocks<sp/>in<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>full_blk_size<sp/>=<sp/>(msg_size<sp/>&gt;&gt;<sp/>6)<sp/>&lt;&lt;<sp/>6;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full_blk_size<sp/>&gt;<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" kindref="member">sdp_hash_internal_update</ref>(base,<sp/>ctx,<sp/>msg,<sp/>full_blk_size);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/>full_blk_size;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_size<sp/>-=<sp/>full_blk_size;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;ctx_internal-&gt;block.bytes[0],<sp/>msg,<sp/>msg_size);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx_internal-&gt;blk_size<sp/>=<sp/>msg_size;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga3eca6af1fced0bab36655bd42d237a4a" kindref="member">sdp_hash_update</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(hash_ctx<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(data<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;hash_ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>block_size<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a7b65d39b4e3e3b991ad75149530595a9" kindref="member">HASH_BLOCK_SIZE</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;full_msg_size<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>data<sp/>is<sp/>still<sp/>less<sp/>than<sp/>HASH_BLOCK_SIZE,<sp/>keep<sp/>them<sp/>only<sp/>in<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctx_internal-&gt;blk_size<sp/>+<sp/>length)<sp/>&lt;=<sp/>block_size)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(&amp;ctx_internal-&gt;block.bytes[0]<sp/>+<sp/>ctx_internal-&gt;blk_size,<sp/>data,<sp/>length);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;blk_size<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;state<sp/>!=<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847aab6c997fb4168101e392a322689eb1b8" kindref="member">sdp_state_hash_update</ref>)<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a69426bf9ad48d33ae8cbe8a8bd26d0df" kindref="member">sdp_hash_internal_engine_init</ref>(base,<sp/>hash_ctx);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;state<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847aab6c997fb4168101e392a322689eb1b8" kindref="member">sdp_state_hash_update</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>input<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a41623d1717c349a69222ada3d5112b63" kindref="member">sdp_hash_process_message</ref>(base,<sp/>hash_ctx,<sp/>data,<sp/>length);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__sdp__drv_8c_1a009667faf574ffb3ec812a5f3d64ee9a" kindref="member">sdp_hash_finalize</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx)</highlight></codeline>
<codeline lineno="847"><highlight class="normal">{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;hash_ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx_internal-&gt;hash_finish<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad85626bbbcdb9a1b0e45652e3a391a23" kindref="member">sdp_hash_internal_update</ref>(base,<sp/>hash_ctx,<sp/>&amp;ctx_internal-&gt;block.bytes[0],<sp/>ctx_internal-&gt;blk_size);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga112d4ab7ac0cfba065169b2ef44c49a6" kindref="member">sdp_hash_finish</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/>uint8_t<sp/>*digest)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(hash_ctx<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(digest<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*ctx_internal<sp/>=<sp/>(<ref refid="structsdp__hash__internal__ctx__t" kindref="compound">sdp_hash_internal_ctx_t</ref><sp/>*)<sp/>&amp;hash_ctx-&gt;<ref refid="structsdp__hash__ctx__t_1aedfe17c78ecf8f15ea8d86e74af52665" kindref="member">internal</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;state<sp/>==<sp/><ref refid="hpm__sdp__drv_8c_1ad5802b3ec10f6d550f40646b1c9f5847a6a2fbfee5afea47ca927ce774b10f82f" kindref="member">sdp_state_hash_init</ref>)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a69426bf9ad48d33ae8cbe8a8bd26d0df" kindref="member">sdp_hash_internal_engine_init</ref>(base,<sp/>hash_ctx);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a009667faf574ffb3ec812a5f3d64ee9a" kindref="member">sdp_hash_finalize</ref>(base,<sp/>hash_ctx);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>copy_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>digest_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctx_internal-&gt;alg)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ggaab2a0c515a472eef8c7e5cb4f1d7eee4a6152490ad2bc6db8a17330037f06c5ba" kindref="member">sdp_hash_alg_crc32</ref>:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_bytes<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a79fb03be73bab6b52d141b4204aa0dc4" kindref="member">CRC32_DIGEST_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;running_hash[0]<sp/>=<sp/>base-&gt;<ref refid="structSDP__Type_1ae027157575030b9d10cc5690ea196740" kindref="member">HASWRD</ref>[0];</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ggaab2a0c515a472eef8c7e5cb4f1d7eee4a1725eff06fca130610b9b10f13ee7d87" kindref="member">sdp_hash_alg_sha1</ref>:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_bytes<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a162e0d208b2b8b5dd1a29750112dfdcf" kindref="member">SHA1_DIGEST_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digest_words<sp/>=<sp/>copy_bytes<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>digest_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;running_hash[i]<sp/>=<sp/>base-&gt;<ref refid="structSDP__Type_1ae027157575030b9d10cc5690ea196740" kindref="member">HASWRD</ref>[i];</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ggaab2a0c515a472eef8c7e5cb4f1d7eee4afdf9e228ace7d6319e77350eae0ef609" kindref="member">sdp_hash_alg_sha256</ref>:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_HAS_SM3_SUPPORT)<sp/>&amp;&amp;<sp/>(SDP_HAS_SM3_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sdp_hash_alg_sm3:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_bytes<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a846524744b89075365dc463125bb2429" kindref="member">SHA256_DIGEST_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digest_words<sp/>=<sp/>copy_bytes<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>digest_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx_internal-&gt;running_hash[i]<sp/>=<sp/>base-&gt;<ref refid="structSDP__Type_1ae027157575030b9d10cc5690ea196740" kindref="member">HASWRD</ref>[i];</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Never<sp/>reach<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memcpy(digest,<sp/>ctx_internal-&gt;running_hash,<sp/>copy_bytes);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga54cb70aa4500002c9f0d2f98b97ef121" kindref="member">sdp_memcpy</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*dma_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>dma_ctx;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a0da9bce3e1ac48691eb4e84a08077bbb" kindref="member">SDP_SDPCR_MCPEN_MASK</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a3fd053fd74be681d5b5104060cdbd84a" kindref="member">NPKTPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1aca24248a48475d0a893011867dbe590e" kindref="member">SDP_PKTCTL_PKTTAG_SET</ref>(1);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>(uint32_t)<sp/>src;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>(uint32_t)<sp/>dst;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_desc<sp/>=<sp/>&amp;dma_ctx-&gt;<ref refid="structsdp__dma__ctx__t_1ab47ab8c708542b3331e180ea5ee4424c" kindref="member">sdp_pkt</ref>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;next_cmd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;pkt_ctrl.PKT_CTRL<sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;src_addr<sp/>=<sp/>(uint32_t)<sp/>src;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;dst_addr<sp/>=<sp/>(uint32_t)<sp/>dst;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;buf_size<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(base);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>pkt_desc;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(base);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga6afd14bee029f2a1857529f314cf80b6" kindref="member">sdp_memset</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/><ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*sdp_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/>uint8_t<sp/>pattern,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>sdp_ctx;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>pattern_32<sp/>=<sp/>(pattern)<sp/>|<sp/>((uint32_t)<sp/>pattern<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((uint32_t)<sp/>pattern<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((uint32_t)<sp/>pattern<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a760b94ae25f06457ee95aa7831e17469" kindref="member">SDP_SDPCR_CONFEN_MASK</ref>;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>(uint32_t)<sp/>pattern_32;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>(uint32_t)<sp/>dst;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_desc<sp/>=<sp/>&amp;sdp_ctx-&gt;<ref refid="structsdp__dma__ctx__t_1ab47ab8c708542b3331e180ea5ee4424c" kindref="member">sdp_pkt</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;next_cmd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;pkt_ctrl.PKT_CTRL<sp/>=<sp/><ref refid="group__sdp__interface_1gac27e0b37d01ea11ec337a0ae6e0e63ef" kindref="member">SDP_PKT_CTRL_DERSEMA_MASK</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;src_addr<sp/>=<sp/>pattern_32;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;dst_addr<sp/>=<sp/>(uint32_t)<sp/>dst;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>pkt_desc-&gt;buf_size<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__sdp__drv_8c_1a7b7ed15856c40deeb23ccb319943fbcb" kindref="member">sdp_clear_error_status</ref>(base);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>SDP_REGISTER_DESCRIPTOR_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>pkt_desc;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__sdp__interface_1ga8ef05d86de822df8b6e64e5ca100b2dc" kindref="member">sdp_wait_done</ref>(base);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__sdp__interface_1ga7371a483c2570e98902b168207c10848" kindref="member">sdp_trigger_action</ref>(<ref refid="structSDP__Type" kindref="compound">SDP_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsdp__action__t" kindref="compound">sdp_action_t</ref><sp/>*action,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*cmd_pkt)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((action<sp/>==<sp/>NULL)<sp/>||<sp/>(cmd_pkt<sp/>==<sp/>NULL)<sp/>||<sp/>(action-&gt;<ref refid="structsdp__action__t_1abe6b4d527c2fc3c8a284a9683ee78461" kindref="member">op</ref><sp/>==<sp/><ref refid="group__sdp__interface_1gga3756a197b58580042efaea0d4c927897ab2326974ee17fdfc480e7f120b7282e9" kindref="member">sdp_op_invalid</ref>))<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_cipher<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hash_hash<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sdp_cr<sp/>=<sp/>action-&gt;<ref refid="structsdp__action__t_1abe6b4d527c2fc3c8a284a9683ee78461" kindref="member">op</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sdp_mode_ctrl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(action-&gt;<ref refid="structsdp__action__t_1abe6b4d527c2fc3c8a284a9683ee78461" kindref="member">op</ref>)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1gga3756a197b58580042efaea0d4c927897ac909e029661cee37bd4bffb41184844e" kindref="member">sdp_op_cipher_only</ref>:</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_cipher<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1gga3756a197b58580042efaea0d4c927897afc91056f4a1f900ec02860034ba46c32" kindref="member">sdp_op_hash_only</ref>:</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_hash<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1gga3756a197b58580042efaea0d4c927897a139cf9c9aa4f54247fe7f8493e6c55ee" kindref="member">sdp_op_cipher_hash</ref>:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_cipher<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_hash<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__sdp__interface_1gga3756a197b58580042efaea0d4c927897abe5aa5a7ebf2ed91286278f09c917357" kindref="member">sdp_op_copy_hash</ref>:</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hash_hash<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cipher)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a9bceabf26b89298f1cc154b4209775f5" kindref="member">SDP_MODCTRL_AESDIR_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1a901a0772815143509f8779d5aa19e8e5" kindref="member">crypto_op</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1afc859035ad596d149794e7b1dbf0ca5d" kindref="member">SDP_MODCTRL_AESMOD_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1acf96fcfcff29393e207c95c89116a1d9" kindref="member">crypto_mode</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1adf1c23a73297725b5fe3bd163bf1737d" kindref="member">SDP_MODCTRL_AESKS_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1aa4339ed8b76db444cbbccb6cf33b41f2" kindref="member">key_index</ref>);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>crypto_alg_idx<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a0726a09a906b27e48afa6a80f6743d51" kindref="member">SDP_CRYPTO_ALG_IDX_AES128</ref>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_HAS_SM4_SUPPORT)<sp/>&amp;&amp;<sp/>(SDP_HAS_SM4_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action-&gt;<ref refid="structsdp__action__t_1a53f2f6a4982647293c3bec1209376cdf" kindref="member">crypto_alg</ref><sp/>==<sp/>sdp_crypto_alg_sm4)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto_alg_idx<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1ad6bb7ee577ba27ff616c84350f0d7d68" kindref="member">SDP_CRYPTO_ALG_IDX_SM4</ref>;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action-&gt;<ref refid="structsdp__action__t_1a83e8bc5ac01e27f486c1e46240cb05f1" kindref="member">key_bits</ref><sp/>==<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crypto_alg_idx<sp/>=<sp/><ref refid="hpm__sdp__drv_8c_1a1e6a1438ab14f6d49d5a42f81dfd0fd6" kindref="member">SDP_CRYPTO_ALG_IDX_AES256</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a09bc3553369030cb612982a788a61443" kindref="member">SDP_MODCTRL_AESALG_SET</ref>(crypto_alg_idx);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1ae86aac8015b857669760f3996044bc3a" kindref="member">SDP_MODCTRL_KEYSWP_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1afa9f575eff5f8b302a219e55ef9731b8" kindref="member">key_swap_mode</ref>);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash_hash)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a7a0569fbc4cc7174492959c100546b34" kindref="member">SDP_MODCTRL_HASALG_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1a40d6e7901eca7d060c91a808ccaf153e" kindref="member">hash_alg</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1ab2f93597ec8b330d83a8539cd960327d" kindref="member">SDP_MODCTRL_HASCHK_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1ac762642a85859981f1e929d755459bef" kindref="member">hash_check</ref>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_cipher<sp/>&amp;&amp;<sp/>hash_hash)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a3004d1ab99e4830858984ac8b0617d9c" kindref="member">SDP_MODCTRL_HASOUT_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1af8cfee1f6f061efc411b6869e3f295b9" kindref="member">hash_mode</ref>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1ab656b3c823379673dde4dff6f2eb8b35" kindref="member">SDP_MODCTRL_DINSWP_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1a274a0e755f388157d47c8cc6f3baecfb" kindref="member">input_swap_mode</ref>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_mode_ctrl<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1affe9852f7fdc6594966a3eb7055de686" kindref="member">SDP_MODCTRL_DOUTSWP_SET</ref>(action-&gt;<ref refid="structsdp__action__t_1a7750d7e62b61fbb10908554a7aa7e085" kindref="member">output_swap_mode</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>=<sp/>(base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>&amp;<sp/>~(<ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a760b94ae25f06457ee95aa7831e17469" kindref="member">SDP_SDPCR_CONFEN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a558218368a8e788909f759e0d00f181b" kindref="member">SDP_SDPCR_HASHEN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1abdc116f0df9ff50155ab670bc5f649f5" kindref="member">SDP_SDPCR_CIPHEN_MASK</ref><sp/>|</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__sdp__regs_8h_1a0da9bce3e1ac48691eb4e84a08077bbb" kindref="member">SDP_SDPCR_MCPEN_MASK</ref>))<sp/>|<sp/>sdp_cr;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a00a8d96c860f897886034b63518d5052" kindref="member">MODCTRL</ref><sp/>=<sp/>sdp_mode_ctrl;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1gaf79d47fa8be736b1b9a70b475d6f8b00" kindref="member">sdp_clear_status</ref>(<ref refid="HPM5300_2HPM5321_2hpm__soc_8h_1a1d6f4c848d7084fe4ca6dea80e98e2d0" kindref="member">HPM_SDP</ref>,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>(uint32_t)<sp/>cmd_pkt;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>count<sp/>of<sp/>command<sp/>packet<sp/>in<sp/>the<sp/>command<sp/>packet<sp/>linked<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pkt_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*pkt_list<sp/>=<sp/>(<ref refid="group__sdp__interface_1ga6e5749a1f05b23675ef9e38b5cb5b32b" kindref="member">sdp_pkt_struct_t</ref><sp/>*)<sp/>cmd_pkt;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pkt_list<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pkt_list-&gt;pkt_ctrl.DCRSEMA<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pkt_cnt;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pkt_list-&gt;pkt_ctrl.CHAIN<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pkt_list<sp/>=<sp/>pkt_list-&gt;next_cmd;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(SDP_REGISTER_DESCRIPTOR_COUNT)<sp/>&amp;&amp;<sp/>(SDP_REGISTER_DESCRIPTOR_COUNT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pkt_cnt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1aa86bcc1aface395ec5840fb9e5216a87" kindref="member">SDPCR</ref><sp/>|=<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>8);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a7216ca7a70620a10b991e76bb6792013" kindref="member">CMDPTR</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a70dd8a19967f08e7013cf6e6f9dcec7f" kindref="member">PKTCTL</ref><sp/>=<sp/>cmd_pkt-&gt;pkt_ctrl.PKT_CTRL;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1af2b3eee414b6db93efd1043c58a12b7b" kindref="member">PKTSRC</ref><sp/>=<sp/>cmd_pkt-&gt;src_addr;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a95b6f94465a03b7347ae47d1352f5152" kindref="member">PKTDST</ref><sp/>=<sp/>cmd_pkt-&gt;dst_addr;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a0f8cc34288a37d86cfc60e57591034b1" kindref="member">PKTBUF</ref><sp/>=<sp/>cmd_pkt-&gt;buf_size;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structSDP__Type_1a6b9345af897978fd967344bf034edbc3" kindref="member">PKTCNT</ref><sp/>=<sp/>pkt_cnt;<sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>Action<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_sdp_drv.c"/>
  </compounddef>
</doxygen>
