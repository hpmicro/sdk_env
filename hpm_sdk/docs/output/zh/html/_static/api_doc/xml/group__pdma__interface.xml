<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__pdma__interface" kind="group">
    <compoundname>pdma_interface</compoundname>
    <title>PDMA driver APIs</title>
    <innerclass refid="structpdma__plane__config" prot="public">pdma_plane_config</innerclass>
    <innerclass refid="structpdma__output__config" prot="public">pdma_output_config</innerclass>
    <innerclass refid="structpdma__config" prot="public">pdma_config</innerclass>
    <innerclass refid="structpdma__plane__info" prot="public">pdma_plane_info</innerclass>
    <innerclass refid="structpdma__blit__option" prot="public">pdma_blit_option</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__pdma__interface_1ga6739788b75165c40c5fa298fbd9c18bd" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__pdma__interface_1gga6739788b75165c40c5fa298fbd9c18bdad45bc4b9f6c08e31b1c042469b07749f" prot="public">
          <name>status_pdma_done</name>
          <initializer>= status_success</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga6739788b75165c40c5fa298fbd9c18bdaf595cc18da03da4ae0c5a536865cc317" prot="public">
          <name>status_pdma_error</name>
          <initializer>=  ((uint32_t)(status_group_pdma)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga6739788b75165c40c5fa298fbd9c18bda5d22e58bc028d156c8d443482798b168" prot="public">
          <name>status_pdma_busy</name>
          <initializer>=  ((uint32_t)(status_group_pdma)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga6739788b75165c40c5fa298fbd9c18bdaa85bc650cbbdae434860684722e5da85" prot="public">
          <name>status_pdma_idle</name>
          <initializer>=  ((uint32_t)(status_group_pdma)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA status. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="24" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="enum" id="group__pdma__interface_1ga0d60d4d77cbe8886819f1d5aeba54be0" prot="public" static="no" strong="no">
        <type></type>
        <name>pdma_plane</name>
        <enumvalue id="group__pdma__interface_1gga0d60d4d77cbe8886819f1d5aeba54be0a22bc7f22d493fab764dc241ae269367f" prot="public">
          <name>pdma_plane_src</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga0d60d4d77cbe8886819f1d5aeba54be0a91de98a3214661ae16f7e337af038fc6" prot="public">
          <name>pdma_plane_dst</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga0d60d4d77cbe8886819f1d5aeba54be0a0fbb1db30c5d2b82ccd717b57ebac777" prot="public">
          <name>pdma_plane_both</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga0d60d4d77cbe8886819f1d5aeba54be0a47f85f93c21e889cb93139ba1f865ba8" prot="public">
          <name>pdma_plane_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="34" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="group__pdma__interface_1ga94883f3b66fe9bd1d2a82c61fcad7049" prot="public" static="no" strong="no">
        <type></type>
        <name>pdma_flip</name>
        <enumvalue id="group__pdma__interface_1gga94883f3b66fe9bd1d2a82c61fcad7049ac7b3dd580d024a8b2b1d35c72c877b67" prot="public">
          <name>pdma_flip_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga94883f3b66fe9bd1d2a82c61fcad7049a0ada0ec35903e6a3dd50bd466599a80e" prot="public">
          <name>pdma_flip_horizontal</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga94883f3b66fe9bd1d2a82c61fcad7049af333dccf81821715a105cb4385eeffb4" prot="public">
          <name>pdma_flip_vertical</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga94883f3b66fe9bd1d2a82c61fcad7049aface52f4c3e509dab99c290b96e793a5" prot="public">
          <name>pdma_flip_both</name>
          <initializer>= pdma_flip_horizontal | pdma_flip_vertical</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA flip. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="44" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="enum" id="group__pdma__interface_1ga820cf9f1f346d77c1b7f22ddfa453f9a" prot="public" static="no" strong="no">
        <type></type>
        <name>pdma_rotate</name>
        <enumvalue id="group__pdma__interface_1gga820cf9f1f346d77c1b7f22ddfa453f9aac94920386629ec7a91298999288c0650" prot="public">
          <name>pdma_rotate_0_degree</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga820cf9f1f346d77c1b7f22ddfa453f9aa8c6cf6b36d89c74ea46ec8e24dfb8a27" prot="public">
          <name>pdma_rotate_90_degree</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga820cf9f1f346d77c1b7f22ddfa453f9aaa03efe83445dcb698b9300005bc50606" prot="public">
          <name>pdma_rotate_180_degree</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga820cf9f1f346d77c1b7f22ddfa453f9aa63d88278eece9f7b195b1461fa3e46b4" prot="public">
          <name>pdma_rotate_270_degree</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA rotate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="54" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="group__pdma__interface_1ga878067ed8c77ac20eac995cea0f068db" prot="public" static="no" strong="no">
        <type></type>
        <name>pdma_decimation</name>
        <enumvalue id="group__pdma__interface_1gga878067ed8c77ac20eac995cea0f068dba5a9e68fa63a5984a1293ba276599c04e" prot="public">
          <name>pdma_decimation_by_1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga878067ed8c77ac20eac995cea0f068dbaccc8856a996e6c441b089d951bb8c9fd" prot="public">
          <name>pdma_decimation_by_2</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga878067ed8c77ac20eac995cea0f068dba325a1267e4295e27de1290901c221830" prot="public">
          <name>pdma_decimation_by_4</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1gga878067ed8c77ac20eac995cea0f068dba06835e8d3389f263d74be8418bfe614b" prot="public">
          <name>pdma_decimation_by_8</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA decimation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="64" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="enum" id="group__pdma__interface_1gab4380fbb3f3ba0493d53abbd97c8d7d7" prot="public" static="no" strong="no">
        <type></type>
        <name>pdma_blocksize</name>
        <enumvalue id="group__pdma__interface_1ggab4380fbb3f3ba0493d53abbd97c8d7d7abe4c0a9c231b07e0cd4e8156d3c8fdab" prot="public">
          <name>pdma_blocksize_16x16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pdma__interface_1ggab4380fbb3f3ba0493d53abbd97c8d7d7aa4d255c5c68e842875ac5a865cc22df0" prot="public">
          <name>pdma_blocksize_8x8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PDMA block size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="74" column="1" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="74" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__pdma__interface_1gaf3d17db9443b1ed4a72c74d034b7d0f1" prot="public" static="no">
        <type>enum <ref refid="group__pdma__interface_1ga0d60d4d77cbe8886819f1d5aeba54be0" kindref="member">pdma_plane</ref></type>
        <definition>typedef enum pdma_plane pdma_plane_t</definition>
        <argsstring></argsstring>
        <name>pdma_plane_t</name>
        <briefdescription>
<para>PDMA plane. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="39" column="14"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga570548e1d09e2f7e7816d51de3f112b8" prot="public" static="no">
        <type>enum <ref refid="group__pdma__interface_1ga94883f3b66fe9bd1d2a82c61fcad7049" kindref="member">pdma_flip</ref></type>
        <definition>typedef enum pdma_flip pdma_flip_t</definition>
        <argsstring></argsstring>
        <name>pdma_flip_t</name>
        <briefdescription>
<para>PDMA flip. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="49" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1gabb91da0b69fa93170ae3aa5cf7d7a520" prot="public" static="no">
        <type>enum <ref refid="group__pdma__interface_1ga820cf9f1f346d77c1b7f22ddfa453f9a" kindref="member">pdma_rotate</ref></type>
        <definition>typedef enum pdma_rotate pdma_rotate_t</definition>
        <argsstring></argsstring>
        <name>pdma_rotate_t</name>
        <briefdescription>
<para>PDMA rotate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="59" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga97e2361301b8dc9848f02c9e545e12be" prot="public" static="no">
        <type>enum <ref refid="group__pdma__interface_1ga878067ed8c77ac20eac995cea0f068db" kindref="member">pdma_decimation</ref></type>
        <definition>typedef enum pdma_decimation pdma_decimation_t</definition>
        <argsstring></argsstring>
        <name>pdma_decimation_t</name>
        <briefdescription>
<para>PDMA decimation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="69" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1gaada8ddd793938162ca4e6d90aa5d5838" prot="public" static="no">
        <type>enum <ref refid="group__pdma__interface_1gab4380fbb3f3ba0493d53abbd97c8d7d7" kindref="member">pdma_blocksize</ref></type>
        <definition>typedef enum pdma_blocksize pdma_blocksize_t</definition>
        <argsstring></argsstring>
        <name>pdma_blocksize_t</name>
        <briefdescription>
<para>PDMA block size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="77" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga5920b9855c54afba6ad776dd016b8546" prot="public" static="no">
        <type>struct <ref refid="structpdma__plane__config" kindref="compound">pdma_plane_config</ref></type>
        <definition>typedef struct pdma_plane_config pdma_plane_config_t</definition>
        <argsstring></argsstring>
        <name>pdma_plane_config_t</name>
        <briefdescription>
<para>PDMA plane config. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="111" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga224467e058590d488dcd3bbecf21d9d7" prot="public" static="no">
        <type>struct <ref refid="structpdma__output__config" kindref="compound">pdma_output_config</ref></type>
        <definition>typedef struct pdma_output_config pdma_output_config_t</definition>
        <argsstring></argsstring>
        <name>pdma_output_config_t</name>
        <briefdescription>
<para>PDMA output config. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="130" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga32505b3e11c395d11d638910acb42c95" prot="public" static="no">
        <type>struct <ref refid="structpdma__config" kindref="compound">pdma_config</ref></type>
        <definition>typedef struct pdma_config pdma_config_t</definition>
        <argsstring></argsstring>
        <name>pdma_config_t</name>
        <briefdescription>
<para>PDMA config. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="139" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1gaa64decdd7b188fb3872d3aa830efc560" prot="public" static="no">
        <type>struct <ref refid="structpdma__plane__info" kindref="compound">pdma_plane_info</ref></type>
        <definition>typedef struct pdma_plane_info pdma_plane_info_t</definition>
        <argsstring></argsstring>
        <name>pdma_plane_info_t</name>
        <briefdescription>
<para>PDMA plane info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="151" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pdma__interface_1ga83c31ff652e86936271ccd7893db7b9a" prot="public" static="no">
        <type>struct <ref refid="structpdma__blit__option" kindref="compound">pdma_blit_option</ref></type>
        <definition>typedef struct pdma_blit_option pdma_blit_option_t</definition>
        <argsstring></argsstring>
        <name>pdma_blit_option_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="166" column="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__pdma__interface_1ga53eacd226a98eb200f9933f6281d65e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_get_default_config</definition>
        <argsstring>(PDMA_Type *ptr, pdma_config_t *config, display_pixel_format_t pixel_format)</argsstring>
        <name>pdma_get_default_config</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga32505b3e11c395d11d638910acb42c95" kindref="member">pdma_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>pixel_format</declname>
        </param>
        <briefdescription>
<para>Get default configuration according to input pixel format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_config_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="179" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="58" bodyend="73" declfile="drivers/inc/hpm_pdma_drv.h" declline="179" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga26ff9186154bd3e45b17fa9b2374dab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_get_default_plane_config</definition>
        <argsstring>(PDMA_Type *ptr, pdma_plane_config_t *config, display_pixel_format_t pixel_format)</argsstring>
        <name>pdma_get_default_plane_config</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga5920b9855c54afba6ad776dd016b8546" kindref="member">pdma_plane_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>pixel_format</declname>
        </param>
        <briefdescription>
<para>Get default plane configuration according input pixel format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_plane_config_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="188" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="75" bodyend="113" declfile="drivers/inc/hpm_pdma_drv.h" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga4d4cb56c6df9ef721256d660a3eecb16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_get_default_yuv2rgb_coef_config</definition>
        <argsstring>(PDMA_Type *ptr, display_yuv2rgb_coef_t *yuv2rgb_coef, display_pixel_format_t source_format)</argsstring>
        <name>pdma_get_default_yuv2rgb_coef_config</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1gacdbe8b79ef8511c5823e49e5b1b20c8d" kindref="member">display_yuv2rgb_coef_t</ref> *</type>
          <declname>yuv2rgb_coef</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>source_format</declname>
        </param>
        <briefdescription>
<para>Get default YUV2RGB coefficient configuration according to input pixel format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The two plane share one YUV2RGB_COEF, so not support convert one plane YUV422 format and another plane YCbCr422 format at same time</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">yuv2rgb_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>display_yuv2rgb_coef_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source_format</parametername>
</parameternamelist>
<parameterdescription>
<para>the YUV2RGB input source pixel format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="200" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="115" bodyend="149" declfile="drivers/inc/hpm_pdma_drv.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga1631544e83d5f77bb13f9835df6814d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_get_default_output_config</definition>
        <argsstring>(PDMA_Type *ptr, pdma_output_config_t *config, display_pixel_format_t pixel_format)</argsstring>
        <name>pdma_get_default_output_config</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga224467e058590d488dcd3bbecf21d9d7" kindref="member">pdma_output_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>pixel_format</declname>
        </param>
        <briefdescription>
<para>Get default output configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_output_config_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>output data pixel format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="209" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="151" bodyend="219" declfile="drivers/inc/hpm_pdma_drv.h" declline="209" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga11a99f4af1a2378a980f81f54446a219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_enable_irq</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t mask, bool enable)</argsstring>
        <name>pdma_enable_irq</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>PDMA enable/disable irq. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>: <itemizedlist>
<listitem><para>true: enable </para>
</listitem>
<listitem><para>false: disable </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="221" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="48" bodyend="56" declfile="drivers/inc/hpm_pdma_drv.h" declline="221" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gace4832aef43bf5a66861d0290a3d3407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_config_output</definition>
        <argsstring>(PDMA_Type *ptr, pdma_output_config_t *config)</argsstring>
        <name>pdma_config_output</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga224467e058590d488dcd3bbecf21d9d7" kindref="member">pdma_output_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>PDMA config output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_output_config_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="229" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="368" bodyend="412" declfile="drivers/inc/hpm_pdma_drv.h" declline="229" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga2aac2869501893b85179d1c73d40a462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_config_planes</definition>
        <argsstring>(PDMA_Type *ptr, void *plane_src_config, void *plane_dst_config, void *yuv2rgb_coef)</argsstring>
        <name>pdma_config_planes</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plane_src_config</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plane_dst_config</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>yuv2rgb_coef</declname>
        </param>
        <briefdescription>
<para>Configure PDMA planes. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: The plane_src and plane_dst share one YUV2RGB_COEF, so not support convert one plane YUV422 format and another plane YCbCr422 format at same time</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plane_src_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to plane_src configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plane_dst_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to plan_dst configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yuv2rgb_coef</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to yuv2rgb_coef configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="242" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="271" bodyend="366" declfile="drivers/inc/hpm_pdma_drv.h" declline="242" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga69452a43e91eda705fdffce906886e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_init</definition>
        <argsstring>(PDMA_Type *ptr, pdma_config_t *config)</argsstring>
        <name>pdma_init</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga32505b3e11c395d11d638910acb42c95" kindref="member">pdma_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>PDMA initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_output_config_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="250" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="228" bodyend="253" declfile="drivers/inc/hpm_pdma_drv.h" declline="250" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga39813b2b88126c2593e174f982fa54d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_check_status</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t *status)</argsstring>
        <name>pdma_check_status</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA check status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="258" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="420" bodyend="440" declfile="drivers/inc/hpm_pdma_drv.h" declline="258" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga0d65ab29d4ddc2cd588e402199338665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_fill_color</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t dst, uint32_t dst_width, uint32_t width, uint32_t height, uint32_t color, uint8_t alpha, display_pixel_format_t format, bool wait, uint32_t *status)</argsstring>
        <name>pdma_fill_color</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>color</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA fill color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_width</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>output image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>output image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">color</parametername>
</parameternamelist>
<parameterdescription>
<para>color value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>wait for execution to complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hpm_stat_t</parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if flip and rotate plane without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="275" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="442" bodyend="507" declfile="drivers/inc/hpm_pdma_drv.h" declline="275" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga3e98c63fb424412115e8f07cd2e64466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_flip_rotate</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t dst, uint32_t dst_width, uint32_t src, uint32_t src_width, uint32_t x, uint32_t y, uint32_t width, uint32_t height, pdma_flip_t flip, pdma_rotate_t rotate, uint8_t alpha, display_pixel_format_t format, bool wait, uint32_t *status)</argsstring>
        <name>pdma_flip_rotate</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga570548e1d09e2f7e7816d51de3f112b8" kindref="member">pdma_flip_t</ref></type>
          <declname>flip</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1gabb91da0b69fa93170ae3aa5cf7d7a520" kindref="member">pdma_rotate_t</ref></type>
          <declname>rotate</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA flip rotate plane. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_width</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_width</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>output image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>output image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flip</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_flip_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rotate</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_rotate_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>wait for execution to complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hpm_stat_t</parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if flip and rotate plane without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="301" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="509" bodyend="592" declfile="drivers/inc/hpm_pdma_drv.h" declline="301" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga2f10949b765b412d7dde0c7e3ff129d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_blit</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t dst, uint32_t dst_width, uint32_t src, uint32_t src_width, uint32_t x, uint32_t y, uint32_t width, uint32_t height, uint8_t alpha, display_pixel_format_t format, bool wait, uint32_t *status)</argsstring>
        <name>pdma_blit</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA blit plane. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_width</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_width</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>output image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>output image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>wait for execution to complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hpm_stat_t</parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if flip and rotate plane without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="326" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="594" bodyend="672" declfile="drivers/inc/hpm_pdma_drv.h" declline="326" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga3221775ddb2f05825cd292cb0f7a561e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_scale</definition>
        <argsstring>(PDMA_Type *ptr, uint32_t dst, uint32_t dst_width, uint32_t src, uint32_t src_width, uint32_t x, uint32_t y, uint32_t width, uint32_t height, uint32_t target_width, uint32_t target_height, uint8_t alpha, display_pixel_format_t format, bool wait, uint32_t *status)</argsstring>
        <name>pdma_scale</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>target_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>target_height</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA scale plane. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_width</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_width</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff pixel width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate n buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>input image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>input image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target_width</parametername>
</parameternamelist>
<parameterdescription>
<para>output image width </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target_height</parametername>
</parameternamelist>
<parameterdescription>
<para>output image height </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>alpha value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>display_pixel_format_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>wait for execution to complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hpm_stat_t</parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if flip and rotate plane without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="354" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="698" bodyend="792" declfile="drivers/inc/hpm_pdma_drv.h" declline="354" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gaf017388b13315c38f910c2b931525967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_get_default_blit_option</definition>
        <argsstring>(pdma_blit_option_t *op)</argsstring>
        <name>pdma_get_default_blit_option</name>
        <param>
          <type><ref refid="group__pdma__interface_1ga83c31ff652e86936271ccd7893db7b9a" kindref="member">pdma_blit_option_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>PDMA get default blit option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>option of blit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="367" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="819" bodyend="828" declfile="drivers/inc/hpm_pdma_drv.h" declline="367" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gaf509de8dab25ec524dd459967fa4b1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pdma_blit_ex</definition>
        <argsstring>(PDMA_Type *ptr, display_buf_t *dst, display_buf_t *src, pdma_blit_option_t *op, bool wait, uint32_t *status)</argsstring>
        <name>pdma_blit_ex</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga2f93ce396df0bd86b06e1168e6774b5c" kindref="member">display_buf_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga2f93ce396df0bd86b06e1168e6774b5c" kindref="member">display_buf_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1ga83c31ff652e86936271ccd7893db7b9a" kindref="member">pdma_blit_option_t</ref> *</type>
          <declname>op</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>PDMA blit plane by option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>target buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>source buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>option of blit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>wait for execution to complete </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>hpm_stat_t</parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if flip and rotate plane without any error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="380" column="12" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="830" bodyend="926" declfile="drivers/inc/hpm_pdma_drv.h" declline="380" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gaadf1b309c85956db1bc9f167d333e740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_set_block_size</definition>
        <argsstring>(PDMA_Type *ptr, pdma_blocksize_t size)</argsstring>
        <name>pdma_set_block_size</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pdma__interface_1gaada8ddd793938162ca4e6d90aa5d5838" kindref="member">pdma_blocksize_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>PDMA set block size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>pdma_blocksize_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="392" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="15" bodyend="19" declfile="drivers/inc/hpm_pdma_drv.h" declline="392" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gaa865c1b63ae64af32586e8a52973bda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pdma_stop</definition>
        <argsstring>(PDMA_Type *ptr)</argsstring>
        <name>pdma_stop</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>PDMA stop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="399" column="6" bodyfile="drivers/src/hpm_pdma_drv.c" bodystart="221" bodyend="226" declfile="drivers/inc/hpm_pdma_drv.h" declline="399" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gafaad2b4eb75035676b2ae0df20b2a76d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pdma_get_status</definition>
        <argsstring>(PDMA_Type *ptr)</argsstring>
        <name>pdma_get_status</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>PDMA stop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>STAT</parametername>
</parameternamelist>
<parameterdescription>
<para>register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="408" column="24" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1gac67c44ca3d98fde2d89665fb0e422502" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pdma_start</definition>
        <argsstring>(PDMA_Type *ptr)</argsstring>
        <name>pdma_start</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>PDMA start. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="418" column="20" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="418" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga92c27b8b3ca00ae0f37ba93efc7f49de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pdma_software_reset</definition>
        <argsstring>(PDMA_Type *ptr)</argsstring>
        <name>pdma_software_reset</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>PDMA software reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="429" column="20" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="429" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group__pdma__interface_1ga0af1f67b4625c94eb0edea10efbb6d68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pdma_set_plane_colorkey</definition>
        <argsstring>(PDMA_Type *ptr, uint8_t plane_index, uint32_t key_high, uint32_t key_low)</argsstring>
        <name>pdma_set_plane_colorkey</name>
        <param>
          <type><ref refid="structPDMA__Type" kindref="compound">PDMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>plane_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_high</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_low</declname>
        </param>
        <briefdescription>
<para>PDMA set plane color key limits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PDMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">plane_index</parametername>
</parameternamelist>
<parameterdescription>
<para>plane index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_high</parametername>
</parameternamelist>
<parameterdescription>
<para>color key high limits </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_low</parametername>
</parameternamelist>
<parameterdescription>
<para>color key low limits </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="444" column="20" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="444" bodyend="451"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__pdma__interface_1gaeac693a96466b3be8375439e10e36846" prot="public" static="no">
        <name>PDMA_MAKE_SCALE_SET</name>
        <param><defname>integer</defname></param>
        <param><defname>fractional</defname></param>
        <initializer>    (((integer) &amp; 0x3) &lt;&lt; 12 | ((fractional) &amp; 0xFFF))</initializer>
        <briefdescription>
<para>PDMA make scale value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pdma_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_pdma_drv.h" bodystart="82" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PDMA driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
