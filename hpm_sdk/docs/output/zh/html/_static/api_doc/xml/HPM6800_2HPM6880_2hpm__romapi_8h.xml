<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="HPM6800_2HPM6880_2hpm__romapi_8h" kind="file" language="C++">
    <compoundname>hpm_romapi.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes refid="HPM6800_2HPM6880_2hpm__otp__drv_8h" local="yes">hpm_otp_drv.h</includes>
    <includes refid="hpm__romapi__xpi__def_8h" local="yes">hpm_romapi_xpi_def.h</includes>
    <includes refid="HPM6800_2HPM6880_2hpm__romapi__xpi__soc__def_8h" local="yes">hpm_romapi_xpi_soc_def.h</includes>
    <includes refid="hpm__romapi__xpi__nor__def_8h" local="yes">hpm_romapi_xpi_nor_def.h</includes>
    <includes refid="hpm__romapi__xpi__ram__def_8h" local="yes">hpm_romapi_xpi_ram_def.h</includes>
    <includes refid="hpm__sdp__drv_8h" local="yes">hpm_sdp_drv.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_romapi_xpi_def.h</label>
        <link refid="hpm__romapi__xpi__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_romapi_xpi_nor_def.h</label>
        <link refid="hpm__romapi__xpi__nor__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hpm_romapi_xpi_ram_def.h</label>
        <link refid="hpm__romapi__xpi__ram__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hpm_sdp_drv.h</label>
        <link refid="hpm__sdp__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hpm_otp_drv.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__otp__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>soc/HPM6800/HPM6880/hpm_romapi.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__romapi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_romapi_xpi_soc_def.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__romapi__xpi__soc__def_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="14">
        <label>hpm_sdp_regs.h</label>
      </node>
      <node id="15">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="unionapi__boot__arg__t" prot="public">api_boot_arg_t</innerclass>
    <innerclass refid="structexip__region__param__t" prot="public">exip_region_param_t</innerclass>
    <innerclass refid="structotp__driver__interface__t" prot="public">otp_driver_interface_t</innerclass>
    <innerclass refid="structxpi__driver__interface__t" prot="public">xpi_driver_interface_t</innerclass>
    <innerclass refid="structxpi__nor__driver__interface__t" prot="public">xpi_nor_driver_interface_t</innerclass>
    <innerclass refid="structxpi__ram__driver__interface__t" prot="public">xpi_ram_driver_interface_t</innerclass>
    <innerclass refid="structsdp__driver__interface__t" prot="public">sdp_driver_interface_t</innerclass>
    <innerclass refid="structbootloader__api__table__t" prot="public">bootloader_api_table_t</innerclass>
    <sectiondef kind="define">
      <member refid="group__romapi__interface_1ga0f1e5b77a24047bd47d5576092023006" kind="define"><name>HPM_XPI0_BASE</name></member>
      <member refid="group__romapi__interface_1ga90de8082ccbc4d76fee99eb00af37f86" kind="define"><name>HPM_XPI0</name></member>
      <member refid="group__romapi__interface_1ga9f243a6d37831423391c9f6cbd541ea5" kind="define"><name>API_BOOT_TAG</name></member>
      <member refid="group__romapi__interface_1ga0deffdfc25009e93ada093c7ebd30da3" kind="define"><name>API_BOOT_SRC_OTP</name></member>
      <member refid="group__romapi__interface_1gaffa0b2f33f17572e5acafc4fcf287d89" kind="define"><name>API_BOOT_SRC_PRIMARY</name></member>
      <member refid="group__romapi__interface_1ga4c76156826fa1eaae54f9f12d121e55c" kind="define"><name>API_BOOT_SRC_SERIAL_BOOT</name></member>
      <member refid="group__romapi__interface_1gaee179a3fa952f95bc2c1655790f52c9f" kind="define"><name>API_BOOT_SRC_ISP</name></member>
      <member refid="group__romapi__interface_1ga0440efa3a0644bff48016f156ed19b3a" kind="define"><name>API_BOOT_PERIPH_AUTO</name></member>
      <member refid="group__romapi__interface_1ga96a16274d6310b37b5bb72e6ffae3a84" kind="define"><name>API_BOOT_PERIPH_UART</name></member>
      <member refid="group__romapi__interface_1gafa698607597ff80c2d0b673da5d2f371" kind="define"><name>API_BOOT_PERIPH_USBHID</name></member>
      <member refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kind="define"><name>ROM_API_TABLE_ROOT</name></member>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gabdd06249f094468bb05ceaf2d6c14aba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_enter_bootloader</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>rom_enter_bootloader</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Eneter specified Boot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Enter bootloader context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters were deteced </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="363" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf816942157bc7e474a6d39b646c31749" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_get_config</definition>
        <argsstring>(XPI_Type *base, xpi_nor_config_t *nor_cfg, xpi_nor_config_option_t *cfg_option)</argsstring>
        <name>rom_xpi_nor_get_config</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_cfg</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref> *</type>
          <declname>cfg_option</declname>
        </param>
        <briefdescription>
<para>Get XPI NOR configuration via cfg_option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nor_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg_option</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="384" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="384" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga1376058beb27fdb41e7d687b699269ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_init</definition>
        <argsstring>(XPI_Type *base, xpi_nor_config_t *nor_config)</argsstring>
        <name>rom_xpi_nor_init</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <briefdescription>
<para>Initialize XPI NOR based on nor_config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="401" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="401" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gab4aa92e8ccdb567ea46a99f867ead45b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start, uint32_t length)</argsstring>
        <name>rom_xpi_nor_erase</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Erase specified FLASH region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI nOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Erase address start address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Region size to be erased </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="419" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="419" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gafff0ace73928949c127e01a3dad09db9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_sector</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start)</argsstring>
        <name>rom_xpi_nor_erase_sector</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Erase specified FLASH sector in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Sector address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="439" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="439" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaafa98732a2b3526f72c8325d20eadfe7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_sector_nonblocking</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start)</argsstring>
        <name>rom_xpi_nor_erase_sector_nonblocking</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Erase specified FLASH sector in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Sector address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="458" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="458" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga7f5541d645b09587e57a946abee86f74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_block</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start)</argsstring>
        <name>rom_xpi_nor_erase_block</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Erase specified FLASH blcok in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Block address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="475" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="475" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gad99de9de910346630d39c9915391c4da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_block_nonblocking</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start)</argsstring>
        <name>rom_xpi_nor_erase_block_nonblocking</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Erase specified FLASH blcok in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Block address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="494" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="494" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga5153440b228ed1f15fe5409d8de50600" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_chip</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</argsstring>
        <name>rom_xpi_nor_erase_chip</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <briefdescription>
<para>Erase the whole FLASH in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="510" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="510" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga3ca36c8911662c599d9eae4738394fe1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_erase_chip_nonblocking</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</argsstring>
        <name>rom_xpi_nor_erase_chip_nonblocking</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <briefdescription>
<para>Erase the whole FLASH in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="527" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="527" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gae4b6f4f0b3c8addf155c472450ef56e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_program</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</argsstring>
        <name>rom_xpi_nor_program</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Program data to specified FLASH address in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>data source address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination FLASH address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to be programmed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="547" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="547" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa510c92b2bc085a14ea31d2aff48cda1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_page_program_nonblocking</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</argsstring>
        <name>rom_xpi_nor_page_program_nonblocking</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Page-Program data to specified FLASH address in non-blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>data source address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination FLASH address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to be programmed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="570" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="570" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga157f1dc06f8abca192a0424aecbef387" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_xpi_nor_read</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t *dst, uint32_t start, uint32_t length)</argsstring>
        <name>rom_xpi_nor_read</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read data from specified FLASH address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory start address to store the data read out from FLASH </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH address for data read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data to be read out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="591" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="591" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga0eb6978aa391e2761d0c04e3d398d095" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t rom_xpi_nor_auto_config</definition>
        <argsstring>(XPI_Type *base, xpi_nor_config_t *config, xpi_nor_config_option_t *cfg_option)</argsstring>
        <name>rom_xpi_nor_auto_config</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref> *</type>
          <declname>cfg_option</declname>
        </param>
        <briefdescription>
<para>Automatically configure XPI NOR based on cfg_option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg_option</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="609" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="609" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf37589b18a165b154fd0d3b2a22f8b10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_xpi_nor_get_property</definition>
        <argsstring>(XPI_Type *base, xpi_nor_config_t *nor_cfg, uint32_t property_id, uint32_t *value)</argsstring>
        <name>rom_xpi_nor_get_property</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property_id</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get XPI NOR properties. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">property_id</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>property value retrieved by this API </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="627" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="627" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gad3f40eac364247903239e2f689485415" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_xpi_nor_get_status</definition>
        <argsstring>(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr, uint16_t *out_status)</argsstring>
        <name>rom_xpi_nor_get_status</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref> *</type>
          <declname>nor_config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out_status</declname>
        </param>
        <briefdescription>
<para>Return the status register value on XPI NOR FLASH. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">channel</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI transfer channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nor_config</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI NOR configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH address offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_status</parametername>
</parameternamelist>
<parameterdescription>
<para>FLASH status register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="645" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="645" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga83aeb2d4ff4c20781045f46f662a5426" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC bool</type>
        <definition>static ATTR_RAMFUNC bool rom_xpi_nor_remap_config</definition>
        <argsstring>(XPI_Type *base, uint32_t start, uint32_t len, uint32_t offset)</argsstring>
        <name>rom_xpi_nor_remap_config</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Configure the XPI Address Remapping Logic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>Start Address (memory mapped address) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size for the remapping region </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative address based on parameter &quot;start&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>is all parameters are valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameter is invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; XPI0 Base address</para>
<para>&lt; XPI0 Base pointer</para>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="664" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="664" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gabe916bf365fab19077212099aec7efe7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC void</type>
        <definition>static ATTR_RAMFUNC void rom_xpi_nor_remap_disable</definition>
        <argsstring>(XPI_Type *base)</argsstring>
        <name>rom_xpi_nor_remap_disable</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Disable XPI Remapping logic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="688" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="688" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaeb988f190188a5f797d16e43f33ff58a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC bool</type>
        <definition>static ATTR_RAMFUNC bool rom_xpi_nor_is_remap_enabled</definition>
        <argsstring>(XPI_Type *base)</argsstring>
        <name>rom_xpi_nor_is_remap_enabled</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether XPI Remapping is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Remapping logic is enabled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Remapping logic is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="708" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="708" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga86a03db2360b6021aa7e3275a9befd83" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC bool</type>
        <definition>static ATTR_RAMFUNC bool rom_xpi_nor_exip_region_config</definition>
        <argsstring>(XPI_Type *base, uint32_t index, exip_region_param_t *param)</argsstring>
        <name>rom_xpi_nor_exip_region_config</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structexip__region__param__t" kindref="compound">exip_region_param_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Configure Specified EXiP Region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>EXiP Region index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>ExiP Region Parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>All parameters are valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Any parameter is invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; XPI0 Base address</para>
<para>&lt; XPI0 Base pointer</para>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="727" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="727" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa66e278b3ea7562b7090f16840189c2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC void</type>
        <definition>static ATTR_RAMFUNC void rom_xpi_nor_exip_region_disable</definition>
        <argsstring>(XPI_Type *base, uint32_t index)</argsstring>
        <name>rom_xpi_nor_exip_region_disable</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Disable EXiP Feature on specified EXiP Region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>EXiP Region index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="757" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="757" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga8949f97a458b84d4e1cd841ceab5a7c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC void</type>
        <definition>static ATTR_RAMFUNC void rom_xpi_nor_exip_enable</definition>
        <argsstring>(XPI_Type *base)</argsstring>
        <name>rom_xpi_nor_exip_enable</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Enable global EXiP logic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="776" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="776" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gada0ac3cc4aa6a4f935cc19611c8b95b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ATTR_RAMFUNC void</type>
        <definition>static ATTR_RAMFUNC void rom_xpi_nor_exip_disable</definition>
        <argsstring>(XPI_Type *base)</argsstring>
        <name>rom_xpi_nor_exip_disable</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Disable global EXiP logic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="793" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="793" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gacb9baa531b8e1094047e8ad94e2f1e49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_xpi_ram_get_config</definition>
        <argsstring>(XPI_Type *base, xpi_ram_config_t *ram_cfg, xpi_ram_config_option_t *cfg_option)</argsstring>
        <name>rom_xpi_ram_get_config</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref> *</type>
          <declname>ram_cfg</declname>
        </param>
        <param>
          <type><ref refid="structxpi__ram__config__option__t" kindref="compound">xpi_ram_config_option_t</ref> *</type>
          <declname>cfg_option</declname>
        </param>
        <briefdescription>
<para>Get XPI RAM configuration based on cfg_option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ram_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI RAM configuration structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg_option</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI RAM configuration option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="821" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="821" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gad281763b85e62be96bcafb25aaff5e09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_xpi_ram_init</definition>
        <argsstring>(XPI_Type *base, xpi_ram_config_t *ram_cfg)</argsstring>
        <name>rom_xpi_ram_init</name>
        <param>
          <type><ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref> *</type>
          <declname>ram_cfg</declname>
        </param>
        <briefdescription>
<para>Initialize XPI RAM. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ram_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>XPI ram configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="834" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="834" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa1a7db36b5e594b6fbdd736320e0ae5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void rom_sdp_init</definition>
        <argsstring>(void)</argsstring>
        <name>rom_sdp_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize SDP IP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="849" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="849" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gacb615dc4ef4c283c0987fa75b49f27fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void rom_sdp_deinit</definition>
        <argsstring>(void)</argsstring>
        <name>rom_sdp_deinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>De-initialize SDP IP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="857" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="857" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gac7f09535eb70e53f83dbdc761e7bdc19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_aes_set_key</definition>
        <argsstring>(sdp_aes_ctx_t *aes_ctx, const uint8_t *key, sdp_aes_key_bits_t key_bits, uint32_t key_idx)</argsstring>
        <name>rom_sdp_aes_set_key</name>
        <param>
          <type><ref refid="group__sdp__interface_1ga848c82867ca6e64f519699b37713b15a" kindref="member">sdp_aes_ctx_t</ref> *</type>
          <declname>aes_ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_aes_key_bits_t</ref></type>
          <declname>key_bits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_idx</declname>
        </param>
        <briefdescription>
<para>Set AES key to SDP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aes_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>AES context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>AES key buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>AES key-bit option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>AES key index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="870" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="870" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf15af67d61f1cc1863369ef05e095a34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_aes_crypt_ecb</definition>
        <argsstring>(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</argsstring>
        <name>rom_sdp_aes_crypt_ecb</name>
        <param>
          <type><ref refid="group__sdp__interface_1ga848c82867ca6e64f519699b37713b15a" kindref="member">sdp_aes_ctx_t</ref> *</type>
          <declname>aes_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>SDP AES ECB crypto operation(Encrypt or Decrypt) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aes_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>AES context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>AES operation: encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length for AES encryption/decryption </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="887" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="887" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga044dfd3ad02ae8eb40fe98e9d88019b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_aes_crypt_cbc</definition>
        <argsstring>(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *in, uint8_t *out)</argsstring>
        <name>rom_sdp_aes_crypt_cbc</name>
        <param>
          <type><ref refid="group__sdp__interface_1ga848c82867ca6e64f519699b37713b15a" kindref="member">sdp_aes_ctx_t</ref> *</type>
          <declname>aes_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>iv</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>SDP AES CBC crypto operation(Encrypt or Decrypt) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aes_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>AES context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>AES operation: encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length for AES encryption/decryption </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iv</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial vector/nonce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="906" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="906" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa02758305a26f8ab12e1f0394a070199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_sm4_set_key</definition>
        <argsstring>(sdp_sm4_ctx_t *sm4_ctx, const uint8_t *key, sdp_sm4_key_bits_t key_bits, uint32_t key_idx)</argsstring>
        <name>rom_sdp_sm4_set_key</name>
        <param>
          <type>sdp_sm4_ctx_t *</type>
          <declname>sm4_ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_sm4_key_bits_t</ref></type>
          <declname>key_bits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>key_idx</declname>
        </param>
        <briefdescription>
<para>Set SM4 key to SDP. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sm4_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 key buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 key-bit option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">key_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 key index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="924" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="924" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga863c84e574a037199a7af14b13ff90b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_sm4_crypt_ecb</definition>
        <argsstring>(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</argsstring>
        <name>rom_sdp_sm4_crypt_ecb</name>
        <param>
          <type>sdp_sm4_ctx_t *</type>
          <declname>sm4_ctx</declname>
        </param>
        <param>
          <type>sdp_sm4_op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>SDP SM4 ECB crypto operation(Encrypt or Decrypt) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sm4_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 operation: encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length for SM4 encryption/decryption </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="941" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="941" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga1e47fcfa2e4aaaad7e1af604b52022d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_sm4_crypt_cbc</definition>
        <argsstring>(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *in, uint8_t *out)</argsstring>
        <name>rom_sdp_sm4_crypt_cbc</name>
        <param>
          <type>sdp_sm4_ctx_t *</type>
          <declname>sm4_ctx</declname>
        </param>
        <param>
          <type>sdp_sm4_op_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>iv</declname>
          <array>[16]</array>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>SDP SM4 CBC crypto operation(Encrypt or Decrypt) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sm4_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>SM4 operation: encrypt or decrypt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length for SM4 encryption/decryption </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">iv</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial vector/nonce </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="960" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="960" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gafa7e59b0002a92b9e23a554fa0ad1356" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_hash_init</definition>
        <argsstring>(sdp_hash_ctx_t *hash_ctx, sdp_hash_alg_t alg)</argsstring>
        <name>rom_sdp_hash_init</name>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>hash_ctx</declname>
        </param>
        <param>
          <type><ref refid="group__sdp__interface_1gaab2a0c515a472eef8c7e5cb4f1d7eee4" kindref="member">sdp_hash_alg_t</ref></type>
          <declname>alg</declname>
        </param>
        <briefdescription>
<para>HASH initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hash_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>HASH context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>HASH algorithm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="976" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="976" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaee03b6fb6da5c471fa7be24a521160f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_hash_update</definition>
        <argsstring>(sdp_hash_ctx_t *hash_ctx, const uint8_t *data, uint32_t length)</argsstring>
        <name>rom_sdp_hash_update</name>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>hash_ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>HASH Update. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hash_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>HASH context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data for HASH operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>of the data for HASH operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="988" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="988" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1gaecd05b4a517b4759288052d6d7fa2e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_hash_finish</definition>
        <argsstring>(sdp_hash_ctx_t *hash_ctx, uint8_t *digest)</argsstring>
        <name>rom_sdp_hash_finish</name>
        <param>
          <type><ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref> *</type>
          <declname>hash_ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>HASH finialize. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hash_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>HASH context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digest</parametername>
</parameternamelist>
<parameterdescription>
<para>the output digest </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="999" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="999" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga52e3ec6c4f91b5041983eeb64fdcc3c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_memcpy</definition>
        <argsstring>(sdp_dma_ctx_t *dma_ctx, void *dst, const void *src, uint32_t length)</argsstring>
        <name>rom_sdp_memcpy</name>
        <param>
          <type><ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref> *</type>
          <declname>dma_ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>SDP memcpy operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dma_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address for memcpy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source address for memcpy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data for memcpy operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="1012" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="1012" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__romapi_8h_1ga02a75c20fd79e82e79877a5c4e202512" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rom_sdp_memset</definition>
        <argsstring>(sdp_dma_ctx_t *dma_ctx, void *dst, uint8_t pattern, uint32_t length)</argsstring>
        <name>rom_sdp_memset</name>
        <param>
          <type><ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref> *</type>
          <declname>dma_ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>SDP memset operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dma_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address for memset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>pattern for memset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of data for memset operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_romapi.h" line="1025" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_romapi.h" bodystart="1025" bodyend="1028"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2022-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_ROMAPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_ROMAPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HPM6800_2HPM6880_2hpm__otp__drv_8h" kindref="compound">hpm_otp_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__romapi__xpi__def_8h" kindref="compound">hpm_romapi_xpi_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HPM6800_2HPM6880_2hpm__romapi__xpi__soc__def_8h" kindref="compound">hpm_romapi_xpi_soc_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__romapi__xpi__nor__def_8h" kindref="compound">hpm_romapi_xpi_nor_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__romapi__xpi__ram__def_8h" kindref="compound">hpm_romapi_xpi_ram_def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__sdp__drv_8h" kindref="compound">hpm_sdp_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XPI0<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__romapi__interface_1ga0f1e5b77a24047bd47d5576092023006" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_XPI0_BASE<sp/>(0xF3000000UL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XPI0<sp/>base<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__romapi__interface_1ga90de8082ccbc4d76fee99eb00af37f86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_XPI0<sp/>((XPI_Type<sp/>*)<sp/>HPM_XPI0_BASE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Definitions</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>U;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>index:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>peripheral:<sp/>8;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>src:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="unionapi__boot__arg__t" kindref="compound">api_boot_arg_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*EXiP<sp/>Region<sp/>Parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>key[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ctr[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}<sp/><ref refid="structexip__region__param__t" kindref="compound">exip_region_param_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__romapi__interface_1ga9f243a6d37831423391c9f6cbd541ea5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_TAG<sp/><sp/>(0xEBU)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__romapi__interface_1ga0deffdfc25009e93ada093c7ebd30da3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_SRC_OTP<sp/>(0U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__romapi__interface_1gaffa0b2f33f17572e5acafc4fcf287d89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_SRC_PRIMARY<sp/>(1U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="group__romapi__interface_1ga4c76156826fa1eaae54f9f12d121e55c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_SRC_SERIAL_BOOT<sp/>(2U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__romapi__interface_1gaee179a3fa952f95bc2c1655790f52c9f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_SRC_ISP<sp/>(3U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group__romapi__interface_1ga0440efa3a0644bff48016f156ed19b3a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_PERIPH_AUTO<sp/>(0U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__romapi__interface_1ga96a16274d6310b37b5bb72e6ffae3a84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_PERIPH_UART<sp/>(1U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group__romapi__interface_1gafa698607597ff80c2d0b673da5d2f371" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>API_BOOT_PERIPH_USBHID<sp/>(2U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="cc10128007_8c_1a43a1dd71f8056a9e569ae7ae4359478e" kindref="member">init</ref>)(void);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*deinit)(void);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>(*read_from_shadow)(uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>(*read_from_ip)(uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*program)(uint32_t<sp/>addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src,<sp/>uint32_t<sp/>num_of_words);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*reload)(<ref refid="group__otp__interface_1ga91f037922a2221da2cf80318ef7f1cab" kindref="member">otp_region_t</ref><sp/>region);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*lock)(uint32_t<sp/>addr,<sp/><ref refid="group__otp__interface_1gac83f4aa4e08e84001044bef8b5de1a13" kindref="member">otp_lock_option_t</ref><sp/>lock_option);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*lock_shadow)(uint32_t<sp/>addr,<sp/><ref refid="group__otp__interface_1gac83f4aa4e08e84001044bef8b5de1a13" kindref="member">otp_lock_option_t</ref><sp/>lock_option);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*set_configurable_region)(uint32_t<sp/>start,<sp/>uint32_t<sp/>num_of_words);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*write_shadow_register)(uint32_t<sp/>addr,<sp/>uint32_t<sp/>data);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/><ref refid="structotp__driver__interface__t" kindref="compound">otp_driver_interface_t</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_default_config)(<ref refid="structxpi__config__t" kindref="compound">xpi_config_t</ref><sp/>*xpi_config);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_default_device_config)(<ref refid="structxpi__device__config__t" kindref="compound">xpi_device_config_t</ref><sp/>*dev_config);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*<ref refid="cc10128007_8c_1a43a1dd71f8056a9e569ae7ae4359478e" kindref="member">init</ref>)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__config__t" kindref="compound">xpi_config_t</ref><sp/>*xpi_config);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*config_ahb_buffer)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__ahb__buffer__cfg__t" kindref="compound">xpi_ahb_buffer_cfg_t</ref><sp/>*ahb_buf_cfg);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*config_device)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__device__config__t" kindref="compound">xpi_device_config_t</ref><sp/>*dev_cfg,<sp/><ref refid="group__xpi__interface_1gac593d19770e78e26f3e26e197486900b" kindref="member">xpi_channel_t</ref><sp/>channel);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*update_instr_table)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*inst_base,<sp/>uint32_t<sp/>seq_idx,<sp/>uint32_t<sp/>num);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*transfer_blocking)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__xfer__ctx__t" kindref="compound">xpi_xfer_ctx_t</ref><sp/>*xfer);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*software_reset)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*is_idle)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*update_dllcr)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>serial_root_clk_freq,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_valid_time,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1gac593d19770e78e26f3e26e197486900b" kindref="member">xpi_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dly_target);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>(*get_abs_apb_xfer_addr)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/>uint32_t<sp/>in_addr,<sp/>uint32_t<sp/>*out_addr);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/><ref refid="structxpi__driver__interface__t" kindref="compound">xpi_driver_interface_t</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_config)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_cfg,<sp/><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref><sp/>*cfg_option);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*<ref refid="cc10128007_8c_1a43a1dd71f8056a9e569ae7ae4359478e" kindref="member">init</ref>)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>(*enable_write)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,<sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_status)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>addr,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*out_status);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>(*wait_busy)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,<sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*erase)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*erase_chip)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>(*erase_sector)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,<sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>(*erase_block)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,<sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*program)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dst_addr,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*<ref refid="hpm__serial__nor__host__spi_8c_1ab1010f3c4b433749dd56d20f9f8b5452" kindref="member">read</ref>)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*dst,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*page_program_nonblocking)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dst_addr,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*erase_sector_nonblocking)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*erase_block_nonblocking)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>addr);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>(*erase_chip_nonblocking)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved0[3];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*auto_config)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_cfg,<sp/><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref><sp/>*cfg_option);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_property)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_cfg,<sp/>uint32_t<sp/>property_id,<sp/>uint32_t<sp/>*value);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/><ref refid="structxpi__nor__driver__interface__t" kindref="compound">xpi_nor_driver_interface_t</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*get_config)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref><sp/>*ram_cfg,<sp/><ref refid="structxpi__ram__config__option__t" kindref="compound">xpi_ram_config_option_t</ref><sp/>*cfg_option);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*<ref refid="cc10128007_8c_1a43a1dd71f8056a9e569ae7ae4359478e" kindref="member">init</ref>)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref><sp/>*ram_cfg);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}<sp/><ref refid="structxpi__ram__driver__interface__t" kindref="compound">xpi_ram_driver_interface_t</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sdp_ip_init)(void);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sdp_ip_deinit)(void);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*aes_set_key)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,<sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_aes_key_bits_t</ref><sp/>keybits,<sp/>uint32_t<sp/>key_idx);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*aes_crypt_ecb)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,<sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,<sp/>uint32_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,<sp/>uint8_t<sp/>*out);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*aes_crypt_cbc)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>iv[16],</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>(*aes_crypt_ctr)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,<sp/>uint8_t<sp/>*nonce_ctr,<sp/>uint8_t<sp/>*input,<sp/>uint8_t<sp/>*output,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*aes_ccm_gen_enc)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*nonce,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nonce_len,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*aes_ccm_dec_verify)(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*nonce,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nonce_len,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*memcpy)(<ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*dma_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*memset)(<ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*dma_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/>uint8_t<sp/>pattern,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*hash_init)(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/><ref refid="group__sdp__interface_1gaab2a0c515a472eef8c7e5cb4f1d7eee4" kindref="member">sdp_hash_alg_t</ref><sp/>alg);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*hash_update)(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*hash_finish)(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/>uint8_t<sp/>*digest);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sm4_set_key)(sdp_sm4_ctx_t<sp/>*sm4_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,<sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_sm4_key_bits_t</ref><sp/>keybits,<sp/>uint32_t<sp/>key_idx);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sm4_crypt_ecb)(sdp_sm4_ctx_t<sp/>*sm4_ctx,<sp/>sdp_sm4_op_t<sp/>op,<sp/>uint32_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,<sp/>uint8_t<sp/>*out);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sm4_crypt_cbc)(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_sm4_op_t<sp/>op,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>iv[16],</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>(*sm4_crypt_ctr)(sdp_sm4_ctx_t<sp/>*sm4_ctx,<sp/>uint8_t<sp/>*nonce_ctr,<sp/>uint8_t<sp/>*input,<sp/>uint8_t<sp/>*output,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sm4_ccm_gen_enc)(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*nonce,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nonce_len,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*sm4_ccm_dec_verify)(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>input_len,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*nonce,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>nonce_len,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*aad,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aad_len,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*input,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*output,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*tag,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tag_len);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}<sp/><ref refid="structsdp__driver__interface__t" kindref="compound">sdp_driver_interface_t</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*copyright;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>(*run_bootloader)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structotp__driver__interface__t" kindref="compound">otp_driver_interface_t</ref><sp/>*otp_driver_if;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__driver__interface__t" kindref="compound">xpi_driver_interface_t</ref><sp/>*xpi_driver_if;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__driver__interface__t" kindref="compound">xpi_nor_driver_interface_t</ref><sp/>*xpi_nor_driver_if;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__ram__driver__interface__t" kindref="compound">xpi_ram_driver_interface_t</ref><sp/>*xpi_ram_driver_if;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structsdp__driver__interface__t" kindref="compound">sdp_driver_interface_t</ref><sp/>*sdp_driver_if;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}<sp/><ref refid="structbootloader__api__table__t" kindref="compound">bootloader_api_table_t</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROM_API_TABLE_ROOT<sp/>((const<sp/>bootloader_api_table_t<sp/>*)0x2001FF00U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Enter<sp/>bootloader<sp/>Wrapper</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gabdd06249f094468bb05ceaf2d6c14aba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gabdd06249f094468bb05ceaf2d6c14aba" kindref="member">rom_enter_bootloader</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;run_bootloader(ctx);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>XPI<sp/>NOR<sp/>Driver<sp/>Wrapper</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="384" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf816942157bc7e474a6d39b646c31749" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaf816942157bc7e474a6d39b646c31749" kindref="member">rom_xpi_nor_get_config</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_cfg,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref><sp/>*cfg_option)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;<ref refid="structbootloader__api__table__t_1a3cb28c103277f5326a32d8bf560849d6" kindref="member">xpi_nor_driver_if</ref>-&gt;<ref refid="structxpi__nor__driver__interface__t_1a907b51ffbe46b1089c0db810c4f7166b" kindref="member">get_config</ref>(base,<sp/>nor_cfg,<sp/>cfg_option);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="401" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga1376058beb27fdb41e7d687b699269ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga1376058beb27fdb41e7d687b699269ad" kindref="member">rom_xpi_nor_init</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;init(base,<sp/>nor_config);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="419" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gab4aa92e8ccdb567ea46a99f867ead45b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gab4aa92e8ccdb567ea46a99f867ead45b" kindref="member">rom_xpi_nor_erase</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase(base,<sp/>channel,<sp/>nor_config,<sp/>start,<sp/>length);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="439" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gafff0ace73928949c127e01a3dad09db9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gafff0ace73928949c127e01a3dad09db9" kindref="member">rom_xpi_nor_erase_sector</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_sector(base,<sp/>channel,<sp/>nor_config,<sp/>start);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="458" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaafa98732a2b3526f72c8325d20eadfe7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaafa98732a2b3526f72c8325d20eadfe7" kindref="member">rom_xpi_nor_erase_sector_nonblocking</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_sector_nonblocking(base,<sp/>channel,<sp/>nor_config,<sp/>start);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="475" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga7f5541d645b09587e57a946abee86f74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga7f5541d645b09587e57a946abee86f74" kindref="member">rom_xpi_nor_erase_block</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_block(base,<sp/>channel,<sp/>nor_config,<sp/>start);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="494" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gad99de9de910346630d39c9915391c4da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gad99de9de910346630d39c9915391c4da" kindref="member">rom_xpi_nor_erase_block_nonblocking</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_block_nonblocking(base,<sp/>channel,<sp/>nor_config,<sp/>start);</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="510" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga5153440b228ed1f15fe5409d8de50600" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga5153440b228ed1f15fe5409d8de50600" kindref="member">rom_xpi_nor_erase_chip</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_chip(base,<sp/>channel,<sp/>nor_config);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="527" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga3ca36c8911662c599d9eae4738394fe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga3ca36c8911662c599d9eae4738394fe1" kindref="member">rom_xpi_nor_erase_chip_nonblocking</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;erase_chip_nonblocking(base,<sp/>channel,<sp/>nor_config);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="547" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gae4b6f4f0b3c8addf155c472450ef56e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gae4b6f4f0b3c8addf155c472450ef56e7" kindref="member">rom_xpi_nor_program</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dst_addr,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;program(base,<sp/>channel,<sp/>nor_config,<sp/>src,<sp/>dst_addr,<sp/>length);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="570" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa510c92b2bc085a14ea31d2aff48cda1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaa510c92b2bc085a14ea31d2aff48cda1" kindref="member">rom_xpi_nor_page_program_nonblocking</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*src,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dst_addr,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;page_program_nonblocking(base,<sp/>channel,<sp/>nor_config,<sp/>src,<sp/>dst_addr,<sp/>length);</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga157f1dc06f8abca192a0424aecbef387" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga157f1dc06f8abca192a0424aecbef387" kindref="member">rom_xpi_nor_read</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*dst,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;read(base,<sp/>channel,<sp/>nor_config,<sp/>dst,<sp/>start,<sp/>length);</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="609" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga0eb6978aa391e2761d0c04e3d398d095" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga0eb6978aa391e2761d0c04e3d398d095" kindref="member">rom_xpi_nor_auto_config</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*config,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref><sp/>*cfg_option)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;auto_config(base,<sp/>config,<sp/>cfg_option);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf37589b18a165b154fd0d3b2a22f8b10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaf37589b18a165b154fd0d3b2a22f8b10" kindref="member">rom_xpi_nor_get_property</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_cfg,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>property_id,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*value)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;get_property(base,<sp/>nor_cfg,<sp/>property_id,<sp/>value);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gad3f40eac364247903239e2f689485415" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gad3f40eac364247903239e2f689485415" kindref="member">rom_xpi_nor_get_status</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__xpi__interface_1ga1b1f60773ddc963ed77118b58caa8c6b" kindref="member">xpi_xfer_channel_t</ref><sp/>channel,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structxpi__nor__config__t" kindref="compound">xpi_nor_config_t</ref><sp/>*nor_config,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>addr,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*out_status)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_nor_driver_if-&gt;get_status(base,<sp/>channel,<sp/>nor_config,<sp/>addr,<sp/>out_status);</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="664" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga83aeb2d4ff4c20781045f46f662a5426" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1ga83aeb2d4ff4c20781045f46f662a5426" kindref="member">rom_xpi_nor_remap_config</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/>uint32_t<sp/>start,<sp/>uint32_t<sp/>len,<sp/>uint32_t<sp/>offset)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((base<sp/>!=<sp/><ref refid="group__romapi__interface_1ga90de8082ccbc4d76fee99eb00af37f86" kindref="member">HPM_XPI0</ref>)<sp/>||<sp/>((start<sp/>&amp;<sp/>0xFFF)<sp/>!=<sp/>0)<sp/>||<sp/>((len<sp/>&amp;<sp/>0xFFF)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((offset<sp/>&amp;<sp/>0xFFF)<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_xpi_remap_config[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2e,<sp/>0x96,<sp/>0x23,<sp/>0x22,<sp/>0xc5,<sp/>0x42,<sp/>0x23,<sp/>0x24,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xd5,<sp/>0x42,<sp/>0x93,<sp/>0xe5,<sp/>0x15,<sp/>0x00,<sp/>0x23,<sp/>0x20,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xb5,<sp/>0x42,<sp/>0x05,<sp/>0x45,<sp/>0x82,<sp/>0x80,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*remap_config_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*,<sp/>uint32_t,<sp/>uint32_t,<sp/>uint32_t);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>remap_config_cb_t<sp/>cb<sp/>=<sp/>(remap_config_cb_t)<sp/>&amp;k_mc_xpi_remap_config;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>cb(base,<sp/>start,<sp/>len,<sp/>offset);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_driver_if-&gt;software_reset(base);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="688" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gabe916bf365fab19077212099aec7efe7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gabe916bf365fab19077212099aec7efe7" kindref="member">rom_xpi_nor_remap_disable</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_xpi_remap_disable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x83,<sp/>0x27,<sp/>0x05,<sp/>0x42,<sp/>0xf9,<sp/>0x9b,<sp/>0x23,<sp/>0x20,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf5,<sp/>0x42,<sp/>0x82,<sp/>0x80,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*remap_disable_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>remap_disable_cb_t<sp/>cb<sp/>=<sp/>(remap_disable_cb_t)<sp/>&amp;k_mc_xpi_remap_disable;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>cb(base);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="708" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaeb988f190188a5f797d16e43f33ff58a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaeb988f190188a5f797d16e43f33ff58a" kindref="member">rom_xpi_nor_is_remap_enabled</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_xpi_remap_enabled[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03,<sp/>0x25,<sp/>0x05,<sp/>0x42,<sp/>0x05,<sp/>0x89,<sp/>0x82,<sp/>0x80,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*remap_chk_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>remap_chk_cb_t<sp/>chk_cb<sp/>=<sp/>(remap_chk_cb_t)<sp/>&amp;k_mc_xpi_remap_enabled;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chk_cb(base);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="727" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga86a03db2360b6021aa7e3275a9befd83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1ga86a03db2360b6021aa7e3275a9befd83" kindref="member">rom_xpi_nor_exip_region_config</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/>uint32_t<sp/>index,<sp/><ref refid="structexip__region__param__t" kindref="compound">exip_region_param_t</ref><sp/>*param)</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>!=<sp/><ref refid="group__romapi__interface_1ga90de8082ccbc4d76fee99eb00af37f86" kindref="member">HPM_XPI0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_exip_region_config[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x18,<sp/>0x4a,<sp/>0x9a,<sp/>0x05,<sp/>0x2e,<sp/>0x95,<sp/>0x85,<sp/>0x67,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xaa,<sp/>0x97,<sp/>0x23,<sp/>0xa4,<sp/>0xe7,<sp/>0xd0,<sp/>0x4c,<sp/>0x4a,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x14,<sp/>0x42,<sp/>0x58,<sp/>0x42,<sp/>0x23,<sp/>0xa6,<sp/>0xb7,<sp/>0xd0,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4c,<sp/>0x46,<sp/>0x36,<sp/>0x97,<sp/>0x13,<sp/>0x77,<sp/>0x07,<sp/>0xc0,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x23,<sp/>0xa2,<sp/>0xb7,<sp/>0xd0,<sp/>0x0c,<sp/>0x46,<sp/>0x13,<sp/>0x67,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37,<sp/>0x00,<sp/>0x05,<sp/>0x45,<sp/>0x23,<sp/>0xa0,<sp/>0xb7,<sp/>0xd0,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0c,<sp/>0x4e,<sp/>0x23,<sp/>0xaa,<sp/>0xb7,<sp/>0xd0,<sp/>0x50,<sp/>0x4e,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x23,<sp/>0xa8,<sp/>0xc7,<sp/>0xd0,<sp/>0x23,<sp/>0xac,<sp/>0xd7,<sp/>0xd0,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x23,<sp/>0xae,<sp/>0xe7,<sp/>0xd0,<sp/>0x82,<sp/>0x80,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*exip_region_config_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*,<sp/>uint32_t,<sp/><ref refid="structexip__region__param__t" kindref="compound">exip_region_param_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>exip_region_config_cb_t<sp/>cb<sp/>=<sp/>(exip_region_config_cb_t)<sp/>&amp;k_mc_exip_region_config;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>cb(base,<sp/>index,<sp/>param);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_driver_if-&gt;software_reset(base);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="757" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa66e278b3ea7562b7090f16840189c2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa66e278b3ea7562b7090f16840189c2f" kindref="member">rom_xpi_nor_exip_region_disable</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_exip_region_disable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x9a,<sp/>0x05,<sp/>0x2e,<sp/>0x95,<sp/>0x85,<sp/>0x67,<sp/>0xaa,<sp/>0x97,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03,<sp/>0xa7,<sp/>0xc7,<sp/>0xd1,<sp/>0x75,<sp/>0x9b,<sp/>0x23,<sp/>0xae,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe7,<sp/>0xd0,<sp/>0x82,<sp/>0x80</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*exip_region_disable_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*,<sp/>uint32_t);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>exip_region_disable_cb_t<sp/>cb<sp/>=<sp/>(exip_region_disable_cb_t)<sp/>&amp;k_mc_exip_region_disable;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>cb(base,<sp/>index);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_driver_if-&gt;software_reset(base);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="776" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga8949f97a458b84d4e1cd841ceab5a7c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1ga8949f97a458b84d4e1cd841ceab5a7c1" kindref="member">rom_xpi_nor_exip_enable</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_exip_enable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x85,<sp/>0x67,<sp/>0x3e,<sp/>0x95,<sp/>0x83,<sp/>0x27,<sp/>0x05,<sp/>0xc0,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x37,<sp/>0x07,<sp/>0x00,<sp/>0x80,<sp/>0xd9,<sp/>0x8f,<sp/>0x23,<sp/>0x20,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf5,<sp/>0xc0,<sp/>0x82,<sp/>0x80</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*exip_enable_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>exip_enable_cb_t<sp/>cb<sp/>=<sp/>(exip_enable_cb_t)<sp/>&amp;k_mc_exip_enable;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>cb(base);</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">ATTR_RAMFUNC</highlight></codeline>
<codeline lineno="793" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gada0ac3cc4aa6a4f935cc19611c8b95b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gada0ac3cc4aa6a4f935cc19611c8b95b2" kindref="member">rom_xpi_nor_exip_disable</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>k_mc_exip_disable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x85,<sp/>0x67,<sp/>0x3e,<sp/>0x95,<sp/>0x83,<sp/>0x27,<sp/>0x05,<sp/>0xc0,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x86,<sp/>0x07,<sp/>0x85,<sp/>0x83,<sp/>0x23,<sp/>0x20,<sp/>0xf5,<sp/>0xc0,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x82,<sp/>0x80</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*exip_disable_cb_t)(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>exip_disable_cb_t<sp/>cb<sp/>=<sp/>(exip_disable_cb_t)<sp/>&amp;k_mc_exip_disable;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>cb(base);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_driver_if-&gt;software_reset(base);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="riscv__core_8h_1a806cbb3bc7fd59a0be13059cc401098a" kindref="member">fencei</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>XPI<sp/>RAM<sp/>Driver<sp/>Wrapper</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight></codeline>
<codeline lineno="821" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gacb9baa531b8e1094047e8ad94e2f1e49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gacb9baa531b8e1094047e8ad94e2f1e49" kindref="member">rom_xpi_ram_get_config</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref><sp/>*ram_cfg,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxpi__ram__config__option__t" kindref="compound">xpi_ram_config_option_t</ref><sp/>*cfg_option)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_ram_driver_if-&gt;get_config(base,<sp/>ram_cfg,<sp/>cfg_option);</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gad281763b85e62be96bcafb25aaff5e09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gad281763b85e62be96bcafb25aaff5e09" kindref="member">rom_xpi_ram_init</ref>(<ref refid="group__xpi__interface_1ga87560204ea6254a4c1b7dbbbae1bf60b" kindref="member">XPI_Type</ref><sp/>*base,<sp/><ref refid="structxpi__ram__config__t" kindref="compound">xpi_ram_config_t</ref><sp/>*ram_cfg)</highlight></codeline>
<codeline lineno="835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;xpi_ram_driver_if-&gt;init(base,<sp/>ram_cfg);</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>SDP<sp/>Driver<sp/>Wrapper</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight></codeline>
<codeline lineno="849" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa1a7db36b5e594b6fbdd736320e0ae5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa1a7db36b5e594b6fbdd736320e0ae5b" kindref="member">rom_sdp_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;sdp_ip_init();</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gacb615dc4ef4c283c0987fa75b49f27fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gacb615dc4ef4c283c0987fa75b49f27fa" kindref="member">rom_sdp_deinit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;sdp_ip_deinit();</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gac7f09535eb70e53f83dbdc761e7bdc19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gac7f09535eb70e53f83dbdc761e7bdc19" kindref="member">rom_sdp_aes_set_key</ref>(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_aes_key_bits_t</ref><sp/>key_bits,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key_idx)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;aes_set_key(aes_ctx,<sp/>key,<sp/>key_bits,<sp/>key_idx);</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="887" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaf15af67d61f1cc1863369ef05e095a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaf15af67d61f1cc1863369ef05e095a34" kindref="member">rom_sdp_aes_crypt_ecb</ref>(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out)</highlight></codeline>
<codeline lineno="892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;aes_crypt_ecb(aes_ctx,<sp/>op,<sp/>len,<sp/>in,<sp/>out);</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga044dfd3ad02ae8eb40fe98e9d88019b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga044dfd3ad02ae8eb40fe98e9d88019b6" kindref="member">rom_sdp_aes_crypt_cbc</ref>(<ref refid="structsdp__crypto__ctx__t" kindref="compound">sdp_aes_ctx_t</ref><sp/>*aes_ctx,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga7703a60c41664731c2419a25a110ac41" kindref="member">sdp_aes_op_t</ref><sp/>op,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>iv[16],</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;aes_crypt_cbc(aes_ctx,<sp/>op,<sp/>length,<sp/>iv,<sp/>in,<sp/>out);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="924" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaa02758305a26f8ab12e1f0394a070199" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaa02758305a26f8ab12e1f0394a070199" kindref="member">rom_sdp_sm4_set_key</ref>(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*key,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sdp__interface_1ga8df04ef8ae870747d0cf6e72cb9d08a8" kindref="member">sdp_sm4_key_bits_t</ref><sp/>key_bits,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>key_idx)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;sm4_set_key(sm4_ctx,<sp/>key,<sp/>key_bits,<sp/>key_idx);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga863c84e574a037199a7af14b13ff90b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga863c84e574a037199a7af14b13ff90b8" kindref="member">rom_sdp_sm4_crypt_ecb</ref>(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_sm4_op_t<sp/>op,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out)</highlight></codeline>
<codeline lineno="946"><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;sm4_crypt_ecb(sm4_ctx,<sp/>op,<sp/>len,<sp/>in,<sp/>out);</highlight></codeline>
<codeline lineno="948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga1e47fcfa2e4aaaad7e1af604b52022d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga1e47fcfa2e4aaaad7e1af604b52022d2" kindref="member">rom_sdp_sm4_crypt_cbc</ref>(sdp_sm4_ctx_t<sp/>*sm4_ctx,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdp_sm4_op_t<sp/>op,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>iv[16],</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*out)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;sm4_crypt_cbc(sm4_ctx,<sp/>op,<sp/>length,<sp/>iv,<sp/>in,<sp/>out);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gafa7e59b0002a92b9e23a554fa0ad1356" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gafa7e59b0002a92b9e23a554fa0ad1356" kindref="member">rom_sdp_hash_init</ref>(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/><ref refid="group__sdp__interface_1gaab2a0c515a472eef8c7e5cb4f1d7eee4" kindref="member">sdp_hash_alg_t</ref><sp/>alg)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;hash_init(hash_ctx,<sp/>alg);</highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaee03b6fb6da5c471fa7be24a521160f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaee03b6fb6da5c471fa7be24a521160f8" kindref="member">rom_sdp_hash_update</ref>(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;hash_update(hash_ctx,<sp/>data,<sp/>length);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="999" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1gaecd05b4a517b4759288052d6d7fa2e64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1gaecd05b4a517b4759288052d6d7fa2e64" kindref="member">rom_sdp_hash_finish</ref>(<ref refid="structsdp__hash__ctx__t" kindref="compound">sdp_hash_ctx_t</ref><sp/>*hash_ctx,<sp/>uint8_t<sp/>*digest)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;hash_finish(hash_ctx,<sp/>digest);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga52e3ec6c4f91b5041983eeb64fdcc3c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga52e3ec6c4f91b5041983eeb64fdcc3c8" kindref="member">rom_sdp_memcpy</ref>(<ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*dma_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;memcpy(dma_ctx,<sp/>dst,<sp/>src,<sp/>length);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="HPM6800_2HPM6880_2hpm__romapi_8h_1ga02a75c20fd79e82e79877a5c4e202512" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__romapi__interface_1ga02a75c20fd79e82e79877a5c4e202512" kindref="member">rom_sdp_memset</ref>(<ref refid="structsdp__dma__ctx__t" kindref="compound">sdp_dma_ctx_t</ref><sp/>*dma_ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/>uint8_t<sp/>pattern,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__romapi__interface_1gaa411a5a540550533a3aeffef4afeb756" kindref="member">ROM_API_TABLE_ROOT</ref>-&gt;sdp_driver_if-&gt;memset(dma_ctx,<sp/>dst,<sp/>pattern,<sp/>length);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_ROMAPI_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="soc/HPM6800/HPM6880/hpm_romapi.h"/>
  </compounddef>
</doxygen>
