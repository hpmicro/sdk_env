<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structsdp__driver__interface__t" kind="struct" language="C++" prot="public">
    <compoundname>sdp_driver_interface_t</compoundname>
    <includes refid="HPM5300_2HPM5361_2hpm__romapi_8h" local="no">hpm_romapi.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsdp__driver__interface__t_1aa8a9b5b2ed083e9d0d2f7d66d2047c24" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sdp_driver_interface_t::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <qualifiedname>sdp_driver_interface_t::version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; SDP API interface: API version SDP API interface: Initialize IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="129" column="14" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a4f729e07b5cafc683632f4d775247588" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sdp_ip_init)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>sdp_ip_init</name>
        <qualifiedname>sdp_driver_interface_t::sdp_ip_init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: Deinitialize IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="131" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1ab37daceb5d4266de1eecb80e57027fb4" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sdp_ip_deinit)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>sdp_ip_deinit</name>
        <qualifiedname>sdp_driver_interface_t::sdp_ip_deinit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: Set AES key </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="133" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1ab747cbeb89702a02ee9c61f4d9e8ad79" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_set_key)(sdp_aes_ctx_t *aes_ctx, const uint8_t *key, sdp_aes_key_bits_t keybits, uint32_t key_idx)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, const uint8_t *key, sdp_aes_key_bits_t keybits, uint32_t key_idx)</argsstring>
        <name>aes_set_key</name>
        <qualifiedname>sdp_driver_interface_t::aes_set_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: AES ECB crypto operation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="135" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a744afb7ef2caf0e825b3ee23afe48f30" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_crypt_ecb)(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</argsstring>
        <name>aes_crypt_ecb</name>
        <qualifiedname>sdp_driver_interface_t::aes_crypt_ecb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: AES CBC crypto operation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="137" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a9ca45c8036b1fc59520b5f4a05bdf6ec" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_crypt_cbc)(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *input, uint8_t *output)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, sdp_aes_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *input, uint8_t *output)</argsstring>
        <name>aes_crypt_cbc</name>
        <qualifiedname>sdp_driver_interface_t::aes_crypt_cbc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: AES CTR crypto operation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="139" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1aae6c9dfa178cb2dfe80211ff3aed5170" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_crypt_ctr)(sdp_aes_ctx_t *aes_ctx, uint8_t *nonce_ctr, uint8_t *input, uint8_t *output, uint32_t length)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, uint8_t *nonce_ctr, uint8_t *input, uint8_t *output, uint32_t length)</argsstring>
        <name>aes_crypt_ctr</name>
        <qualifiedname>sdp_driver_interface_t::aes_crypt_ctr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: AES CCM encryption </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="146" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1afa646d7d514d5691afc1226fcb850fd7" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_ccm_gen_enc)(sdp_aes_ctx_t *aes_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, uint8_t *tag, uint32_t tag_len)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, uint8_t *tag, uint32_t tag_len)</argsstring>
        <name>aes_ccm_gen_enc</name>
        <qualifiedname>sdp_driver_interface_t::aes_ccm_gen_enc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: AES CCM Decrypt and verify </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="149" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1ad6213239048ff677c29fc86a34cbe897" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::aes_ccm_dec_verify)(sdp_aes_ctx_t *aes_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, const uint8_t *tag, uint32_t tag_len)</definition>
        <argsstring>)(sdp_aes_ctx_t *aes_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, const uint8_t *tag, uint32_t tag_len)</argsstring>
        <name>aes_ccm_dec_verify</name>
        <qualifiedname>sdp_driver_interface_t::aes_ccm_dec_verify</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: memcpy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="160" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a86d79b6fb91e73adbdce20734040bacc" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::memcpy)(sdp_dma_ctx_t *dma_ctx, void *dst, const void *src, uint32_t length)</definition>
        <argsstring>)(sdp_dma_ctx_t *dma_ctx, void *dst, const void *src, uint32_t length)</argsstring>
        <name>memcpy</name>
        <qualifiedname>sdp_driver_interface_t::memcpy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: memset </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="171" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1ac91e31973e2b3f11a2af6c4dda91cc20" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::memset)(sdp_dma_ctx_t *dma_ctx, void *dst, uint8_t pattern, uint32_t length)</definition>
        <argsstring>)(sdp_dma_ctx_t *dma_ctx, void *dst, uint8_t pattern, uint32_t length)</argsstring>
        <name>memset</name>
        <qualifiedname>sdp_driver_interface_t::memset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: HASH initialization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="173" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a2e9929bfb59e294ef899233b6ecf6c7d" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::hash_init)(sdp_hash_ctx_t *hash_ctx, sdp_hash_alg_t alg)</definition>
        <argsstring>)(sdp_hash_ctx_t *hash_ctx, sdp_hash_alg_t alg)</argsstring>
        <name>hash_init</name>
        <qualifiedname>sdp_driver_interface_t::hash_init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: HASH update </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="175" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a7b948556c4c1f0ef3d70182eb12b640b" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::hash_update)(sdp_hash_ctx_t *hash_ctx, const uint8_t *data, uint32_t length)</definition>
        <argsstring>)(sdp_hash_ctx_t *hash_ctx, const uint8_t *data, uint32_t length)</argsstring>
        <name>hash_update</name>
        <qualifiedname>sdp_driver_interface_t::hash_update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: HASH finish </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="177" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a997dcc30d86d176387d06a0e207228fa" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::hash_finish)(sdp_hash_ctx_t *hash_ctx, uint8_t *digest)</definition>
        <argsstring>)(sdp_hash_ctx_t *hash_ctx, uint8_t *digest)</argsstring>
        <name>hash_finish</name>
        <qualifiedname>sdp_driver_interface_t::hash_finish</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: Set SM4 Key </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="179" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a5c20ab6758c84311b1fff59225c2d2c6" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_set_key)(sdp_sm4_ctx_t *sm4_ctx, const uint8_t *key, sdp_sm4_key_bits_t keybits, uint32_t key_idx)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, const uint8_t *key, sdp_sm4_key_bits_t keybits, uint32_t key_idx)</argsstring>
        <name>sm4_set_key</name>
        <qualifiedname>sdp_driver_interface_t::sm4_set_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API interface: SM4 Crypto ECB mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="181" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a2e973e4b946f375aa630b4f19ca955e1" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_crypt_ecb)(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t len, const uint8_t *in, uint8_t *out)</argsstring>
        <name>sm4_crypt_ecb</name>
        <qualifiedname>sdp_driver_interface_t::sm4_crypt_ecb</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API Interface: SM4 Crypto CBC mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="183" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1ab5edd65ebfa6d46025981a1311b5b7b1" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_crypt_cbc)(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *input, uint8_t *output)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, sdp_sm4_op_t op, uint32_t length, uint8_t iv[16], const uint8_t *input, uint8_t *output)</argsstring>
        <name>sm4_crypt_cbc</name>
        <qualifiedname>sdp_driver_interface_t::sm4_crypt_cbc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API Interface: SM4 CTR mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="185" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a33ecdc3a9a4ff62b699543afd145c1ed" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_crypt_ctr)(sdp_sm4_ctx_t *sm4_ctx, uint8_t *nonce_ctr, uint8_t *input, uint8_t *output, uint32_t length)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, uint8_t *nonce_ctr, uint8_t *input, uint8_t *output, uint32_t length)</argsstring>
        <name>sm4_crypt_ctr</name>
        <qualifiedname>sdp_driver_interface_t::sm4_crypt_ctr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API Interface: SM4 CCM Encryption </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="192" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1a62c913e10a4da9a5451e1d5097edc3a2" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_ccm_gen_enc)(sdp_sm4_ctx_t *sm4_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, uint8_t *tag, uint32_t tag_len)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, uint8_t *tag, uint32_t tag_len)</argsstring>
        <name>sm4_ccm_gen_enc</name>
        <qualifiedname>sdp_driver_interface_t::sm4_ccm_gen_enc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDP API Interface: SM4 CCM Decrypt and Verify </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="195" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structsdp__driver__interface__t_1aca9ceae4b197bc18b34655fe00bfce0b" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* sdp_driver_interface_t::sm4_ccm_dec_verify)(sdp_sm4_ctx_t *sm4_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, const uint8_t *tag, uint32_t tag_len)</definition>
        <argsstring>)(sdp_sm4_ctx_t *sm4_ctx, uint32_t input_len, const uint8_t *nonce, uint32_t nonce_len, const uint8_t *aad, uint32_t aad_len, const uint8_t *input, uint8_t *output, const uint8_t *tag, uint32_t tag_len)</argsstring>
        <name>sm4_ccm_dec_verify</name>
        <qualifiedname>sdp_driver_interface_t::sm4_ccm_dec_verify</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="206" column="5" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="206" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SDP API interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="soc/HPM5300/HPM5361/hpm_romapi.h" line="127" column="1" bodyfile="soc/HPM5300/HPM5361/hpm_romapi.h" bodystart="127" bodyend="216"/>
    <listofallmembers>
      <member refid="structsdp__driver__interface__t_1ad6213239048ff677c29fc86a34cbe897" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_ccm_dec_verify</name></member>
      <member refid="structsdp__driver__interface__t_1afa646d7d514d5691afc1226fcb850fd7" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_ccm_gen_enc</name></member>
      <member refid="structsdp__driver__interface__t_1a9ca45c8036b1fc59520b5f4a05bdf6ec" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_crypt_cbc</name></member>
      <member refid="structsdp__driver__interface__t_1aae6c9dfa178cb2dfe80211ff3aed5170" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_crypt_ctr</name></member>
      <member refid="structsdp__driver__interface__t_1a744afb7ef2caf0e825b3ee23afe48f30" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_crypt_ecb</name></member>
      <member refid="structsdp__driver__interface__t_1ab747cbeb89702a02ee9c61f4d9e8ad79" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>aes_set_key</name></member>
      <member refid="structsdp__driver__interface__t_1a997dcc30d86d176387d06a0e207228fa" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>hash_finish</name></member>
      <member refid="structsdp__driver__interface__t_1a2e9929bfb59e294ef899233b6ecf6c7d" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>hash_init</name></member>
      <member refid="structsdp__driver__interface__t_1a7b948556c4c1f0ef3d70182eb12b640b" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>hash_update</name></member>
      <member refid="structsdp__driver__interface__t_1a86d79b6fb91e73adbdce20734040bacc" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>memcpy</name></member>
      <member refid="structsdp__driver__interface__t_1ac91e31973e2b3f11a2af6c4dda91cc20" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>memset</name></member>
      <member refid="structsdp__driver__interface__t_1ab37daceb5d4266de1eecb80e57027fb4" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sdp_ip_deinit</name></member>
      <member refid="structsdp__driver__interface__t_1a4f729e07b5cafc683632f4d775247588" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sdp_ip_init</name></member>
      <member refid="structsdp__driver__interface__t_1aca9ceae4b197bc18b34655fe00bfce0b" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_ccm_dec_verify</name></member>
      <member refid="structsdp__driver__interface__t_1a62c913e10a4da9a5451e1d5097edc3a2" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_ccm_gen_enc</name></member>
      <member refid="structsdp__driver__interface__t_1ab5edd65ebfa6d46025981a1311b5b7b1" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_crypt_cbc</name></member>
      <member refid="structsdp__driver__interface__t_1a33ecdc3a9a4ff62b699543afd145c1ed" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_crypt_ctr</name></member>
      <member refid="structsdp__driver__interface__t_1a2e973e4b946f375aa630b4f19ca955e1" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_crypt_ecb</name></member>
      <member refid="structsdp__driver__interface__t_1a5c20ab6758c84311b1fff59225c2d2c6" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>sm4_set_key</name></member>
      <member refid="structsdp__driver__interface__t_1aa8a9b5b2ed083e9d0d2f7d66d2047c24" prot="public" virt="non-virtual"><scope>sdp_driver_interface_t</scope><name>version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
