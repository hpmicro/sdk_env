<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__nor__flash_8c" kind="file" language="C++">
    <compoundname>hpm_nor_flash.c</compoundname>
    <includes refid="eeprom__emulation_8h" local="yes">eeprom_emulation.h</includes>
    <includes refid="hpm__nor__flash_8h" local="yes">hpm_nor_flash.h</includes>
    <includes refid="hpm__l1c__drv_8h" local="yes">hpm_l1c_drv.h</includes>
    <includes local="yes">board.h</includes>
    <incdepgraph>
      <node id="12">
        <label>hpm_l1c_drv.h</label>
        <link refid="hpm__l1c__drv_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>riscv/riscv_core.h</label>
        <link refid="riscv__core_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>user_config.h</label>
        <link refid="user__config_8h"/>
      </node>
      <node id="2">
        <label>eeprom_emulation.h</label>
        <link refid="eeprom__emulation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/eeprom_emulation/port/hpm_nor_flash.c</label>
        <link refid="hpm__nor__flash_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>hpm_nor_flash.h</label>
        <link refid="hpm__nor__flash_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>hpm_csr_drv.h</label>
        <link refid="hpm__csr__drv_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>assert.h</label>
      </node>
      <node id="17">
        <label>board.h</label>
      </node>
      <node id="14">
        <label>hpm_csr_regs.h</label>
      </node>
      <node id="11">
        <label>hpm_romapi.h</label>
      </node>
      <node id="16">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__nor__flash_8c_1ac73bcd50ecffee04904b2bd864a2dfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void e2p_enter_critical</definition>
        <argsstring>(void)</argsstring>
        <name>e2p_enter_critical</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="13" column="6" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1af49fa0aceb4611f04d6f5e0460fdafd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void e2p_exit_critical</definition>
        <argsstring>(void)</argsstring>
        <name>e2p_exit_critical</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="18" column="6" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1af027016b905ddd70f95c6cddfcd176bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>ATTR_RAMFUNC hpm_stat_t nor_flash_init</definition>
        <argsstring>(nor_flash_config_t *cfg)</argsstring>
        <name>nor_flash_init</name>
        <param>
          <type><ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>hpm nor-flash initialization </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config_context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="24" column="12" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="24" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1a7f1086f842eed2dc2127c33baaf7ee3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>ATTR_RAMFUNC hpm_stat_t nor_flash_read</definition>
        <argsstring>(nor_flash_config_t *cfg, uint8_t *buf, uint32_t addr, uint32_t size)</argsstring>
        <name>nor_flash_read</name>
        <param>
          <type><ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>hpm nor-flash read function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config_context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>store read data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>read physical start addr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>read bytes size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="42" column="12" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="42" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1a7cef9c163caacc3aa8939c80539436aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>ATTR_RAMFUNC hpm_stat_t nor_flash_write</definition>
        <argsstring>(nor_flash_config_t *cfg, uint8_t *buf, uint32_t addr, uint32_t size)</argsstring>
        <name>nor_flash_write</name>
        <param>
          <type><ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>hpm nor-flash write function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config_context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>write physical start addr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>write bytes size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="56" column="12" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1a2d8bf7bd86701a385bc8828c91f8d35a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ATTR_RAMFUNC <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static ATTR_RAMFUNC hpm_stat_t nor_flash_erase_sector</definition>
        <argsstring>(nor_flash_config_t *cfg, uint32_t start_addr)</argsstring>
        <name>nor_flash_erase_sector</name>
        <param>
          <type><ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="66" column="19" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="hpm__nor__flash_8c_1a8f48d58085da300b601a1d6f9c6abe0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ATTR_RAMFUNC void</type>
        <definition>ATTR_RAMFUNC void nor_flash_erase</definition>
        <argsstring>(nor_flash_config_t *cfg, uint32_t start_addr, uint32_t size)</argsstring>
        <name>nor_flash_erase</name>
        <param>
          <type><ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>hpm nor-flash erase function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config_context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>erase physical start addr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>erase bytes size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/eeprom_emulation/port/hpm_nor_flash.c" line="75" column="6" bodyfile="components/eeprom_emulation/port/hpm_nor_flash.c" bodystart="75" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eeprom__emulation_8h" kindref="compound">eeprom_emulation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__nor__flash_8h" kindref="compound">hpm_nor_flash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__l1c__drv_8h" kindref="compound">hpm_l1c_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;board.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__nor__flash_8c_1ac73bcd50ecffee04904b2bd864a2dfea" kindref="member">e2p_enter_critical</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__irq__interface_1gae4ab71575d7300570260517dd5993327" kindref="member">disable_global_irq</ref>(<ref refid="HPM5300_2HPM5301_2hpm__csr__regs_8h_1a8e27337cc82e0b08475a4229d85dee77" kindref="member">CSR_MSTATUS_MIE_MASK</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__nor__flash_8c_1af49fa0aceb4611f04d6f5e0460fdafd9" kindref="member">e2p_exit_critical</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__irq__interface_1ga06fc101bc7f7de45a2e4d499294652ff" kindref="member">enable_global_irq</ref>(<ref refid="HPM5300_2HPM5301_2hpm__csr__regs_8h_1a8e27337cc82e0b08475a4229d85dee77" kindref="member">CSR_MSTATUS_MIE_MASK</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="hpm__nor__flash_8h_1a63af3adc9c46cd2298ac6255d384b2f4" kindref="member">E2P_ATTR</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__nor__flash_8c_1af027016b905ddd70f95c6cddfcd176bd" kindref="member">nor_flash_init</ref>(<ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref><sp/>*cfg)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structxpi__nor__config__option__t" kindref="compound">xpi_nor_config_option_t</ref><sp/>option;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="structxpi__nor__config__option__t_1a49b896e12c6c051c1677d5643a707893" kindref="member">header</ref>.<ref refid="structxpi__nor__config__option__t_1aab19967522d0154c61d8ba473d3fe79c" kindref="member">U</ref><sp/>=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1a90cb9df6f662e67b48fa9f97a660dff6" kindref="member">opt_header</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="structxpi__nor__config__option__t_1a03d4f07999f8e1b0199b77b7414b91ae" kindref="member">option0</ref>.<ref refid="structxpi__nor__config__option__t_1aab19967522d0154c61d8ba473d3fe79c" kindref="member">U</ref><sp/>=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1a1189d4f210e3d938480bdc0824c87d97" kindref="member">opt0</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>option.<ref refid="structxpi__nor__config__option__t_1a002cba4275232519e1e731a3f0e7a22c" kindref="member">option1</ref>.<ref refid="structxpi__nor__config__option__t_1aab19967522d0154c61d8ba473d3fe79c" kindref="member">U</ref><sp/>=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1a1ed6454d84a7617bc25958ea8ad6355b" kindref="member">opt1</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1ga0eb6978aa391e2761d0c04e3d398d095" kindref="member">rom_xpi_nor_auto_config</ref>(cfg-&gt;<ref refid="structnor__flash__config__t_1a36afc09a5d528dd3f3965508b1c92358" kindref="member">xpi_base</ref>,<sp/>&amp;cfg-&gt;<ref refid="structnor__flash__config__t_1aa9beb13e735a7a3570f2fe55118713d1" kindref="member">nor_config</ref>,<sp/>&amp;option);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__romapi__interface_1gaf37589b18a165b154fd0d3b2a22f8b10" kindref="member">rom_xpi_nor_get_property</ref>(cfg-&gt;<ref refid="structnor__flash__config__t_1a36afc09a5d528dd3f3965508b1c92358" kindref="member">xpi_base</ref>,<sp/>&amp;cfg-&gt;<ref refid="structnor__flash__config__t_1aa9beb13e735a7a3570f2fe55118713d1" kindref="member">nor_config</ref>,<sp/><ref refid="group__xpi__nor__interface_1gga91a47069ab1b529682e5b0adb0eed4a4a25fa950d6474a26d892326122751eebe" kindref="member">xpi_nor_property_sector_size</ref>,<sp/>&amp;cfg-&gt;<ref refid="structnor__flash__config__t_1a923fd3fe3e5631bc9f4ca7c69e4bb520" kindref="member">sector_size</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;fence.i&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="hpm__nor__flash_8h_1a63af3adc9c46cd2298ac6255d384b2f4" kindref="member">E2P_ATTR</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__nor__flash_8c_1a7f1086f842eed2dc2127c33baaf7ee3f" kindref="member">nor_flash_read</ref>(<ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref><sp/>*cfg,<sp/>uint8_t<sp/>*buf,<sp/>uint32_t<sp/>addr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_start<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3053dfee4086a6092816983a53393cca" kindref="member">HPM_L1C_CACHELINE_ALIGN_DOWN</ref>(addr);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_end<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a7e795aefe75dc25f3883818c735d7b00" kindref="member">HPM_L1C_CACHELINE_ALIGN_UP</ref>(addr<sp/>+<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_size<sp/>=<sp/>aligned_end<sp/>-<sp/>aligned_start;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)cfg;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__l1cache__interface_1gad211f4a8e8d756b6b92977d208f8e5de" kindref="member">l1c_dc_invalidate</ref>(aligned_start,<sp/>aligned_size);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)addr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="hpm__nor__flash_8h_1a63af3adc9c46cd2298ac6255d384b2f4" kindref="member">E2P_ATTR</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__nor__flash_8c_1a7cef9c163caacc3aa8939c80539436aa" kindref="member">nor_flash_write</ref>(<ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref><sp/>*cfg,<sp/>uint8_t<sp/>*buf,<sp/>uint32_t<sp/>addr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>addr<sp/>&gt;<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1adce351077720f076c9e9ba29be50a3c8" kindref="member">base_addr</ref><sp/>?<sp/>(addr<sp/>-=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1adce351077720f076c9e9ba29be50a3c8" kindref="member">base_addr</ref>)<sp/>:<sp/>addr;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gae4b6f4f0b3c8addf155c472450ef56e7" kindref="member">rom_xpi_nor_program</ref>(cfg-&gt;<ref refid="structnor__flash__config__t_1a36afc09a5d528dd3f3965508b1c92358" kindref="member">xpi_base</ref>,<sp/><ref refid="group__xpi__interface_1gga1b1f60773ddc963ed77118b58caa8c6baf48d92571e43ca16b47afc9813becc32" kindref="member">xpi_xfer_channel_auto</ref>,<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cfg-&gt;<ref refid="structnor__flash__config__t_1aa9beb13e735a7a3570f2fe55118713d1" kindref="member">nor_config</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)buf,<sp/>addr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="hpm__nor__flash_8h_1a63af3adc9c46cd2298ac6255d384b2f4" kindref="member">E2P_ATTR</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__nor__flash_8c_1a2d8bf7bd86701a385bc8828c91f8d35a" kindref="member">nor_flash_erase_sector</ref>(<ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>start_addr)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>start_addr<sp/>&gt;<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1adce351077720f076c9e9ba29be50a3c8" kindref="member">base_addr</ref><sp/>?<sp/>(start_addr<sp/>-=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1adce351077720f076c9e9ba29be50a3c8" kindref="member">base_addr</ref>)<sp/>:<sp/>start_addr;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__romapi__interface_1gafff0ace73928949c127e01a3dad09db9" kindref="member">rom_xpi_nor_erase_sector</ref>(cfg-&gt;<ref refid="structnor__flash__config__t_1a36afc09a5d528dd3f3965508b1c92358" kindref="member">xpi_base</ref>,<sp/><ref refid="group__xpi__interface_1gga1b1f60773ddc963ed77118b58caa8c6baf48d92571e43ca16b47afc9813becc32" kindref="member">xpi_xfer_channel_auto</ref>,<sp/>&amp;cfg-&gt;<ref refid="structnor__flash__config__t_1aa9beb13e735a7a3570f2fe55118713d1" kindref="member">nor_config</ref>,<sp/>start_addr);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="hpm__nor__flash_8h_1a63af3adc9c46cd2298ac6255d384b2f4" kindref="member">E2P_ATTR</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__nor__flash_8c_1a8f48d58085da300b601a1d6f9c6abe0c" kindref="member">nor_flash_erase</ref>(<ref refid="structnor__flash__config__t" kindref="compound">nor_flash_config_t</ref><sp/>*cfg,<sp/>uint32_t<sp/>start_addr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sector_size<sp/>=<sp/>cfg-&gt;<ref refid="structnor__flash__config__t_1a923fd3fe3e5631bc9f4ca7c69e4bb520" kindref="member">sector_size</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>sector_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__nor__flash_8c_1a2d8bf7bd86701a385bc8828c91f8d35a" kindref="member">nor_flash_erase_sector</ref>(cfg,<sp/>start_addr<sp/>+<sp/>i<sp/>*<sp/>sector_size);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/eeprom_emulation/port/hpm_nor_flash.c"/>
  </compounddef>
</doxygen>
