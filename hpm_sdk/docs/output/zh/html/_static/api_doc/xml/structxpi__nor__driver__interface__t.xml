<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structxpi__nor__driver__interface__t" kind="struct" language="C++" prot="public">
    <compoundname>xpi_nor_driver_interface_t</compoundname>
    <includes refid="hpm__romapi__xpi__nor__def_8h" local="no">hpm_romapi_xpi_nor_def.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a7236867af63b81f9853a01c6106d663f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t xpi_nor_driver_interface_t::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <qualifiedname>xpi_nor_driver_interface_t::version</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; XPI NOR driver interface: API version XPI NOR driver interface: Get FLASH configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="310" column="14" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a5a5ae14d3ed5666d2822fb8ff9b215ad" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::get_config) (XPI_Type *base, xpi_nor_config_t *nor_cfg, xpi_nor_config_option_t *cfg_option)</definition>
        <argsstring>)(XPI_Type *base, xpi_nor_config_t *nor_cfg, xpi_nor_config_option_t *cfg_option)</argsstring>
        <name>get_config</name>
        <qualifiedname>xpi_nor_driver_interface_t::get_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: initialize FLASH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="312" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a16308a97a2719f58d2c6e590d53e2152" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::init) (XPI_Type *base, xpi_nor_config_t *nor_config)</definition>
        <argsstring>)(XPI_Type *base, xpi_nor_config_t *nor_config)</argsstring>
        <name>init</name>
        <qualifiedname>xpi_nor_driver_interface_t::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Enable write access to FLASH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="314" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a8cca6d3af3ecf2ee1bc8f03621c04a0f" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::enable_write) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>enable_write</name>
        <qualifiedname>xpi_nor_driver_interface_t::enable_write</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Get FLASH status register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="316" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1adb08f3e6b0432458cfc6f3480c3ddce7" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::get_status) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr, uint16_t *out_status)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr, uint16_t *out_status)</argsstring>
        <name>get_status</name>
        <qualifiedname>xpi_nor_driver_interface_t::get_status</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Wait when FLASH is still busy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="319" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a998706b209ae600bf522abccc627e40f" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::wait_busy) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>wait_busy</name>
        <qualifiedname>xpi_nor_driver_interface_t::wait_busy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: erase a specified FLASH region </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="325" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a81add651854d8ee9fc0c702059e79722" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start, uint32_t length)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t start, uint32_t length)</argsstring>
        <name>erase</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Erase the whole FLASH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="328" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a52c3094bb3347c2ba6a54bbdf5b56f35" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_chip) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</argsstring>
        <name>erase_chip</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_chip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Erase specified FLASH sector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="334" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1aa1cdfc280247379bfdcdc2453180f4f0" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_sector) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>erase_sector</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_sector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Erase specified FLASH block </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="336" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1aa69676f4fd81345ea1273f750c959c65" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_block) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>erase_block</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_block</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Program data to specified FLASH address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="339" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a011aaa265ace32062aefc70a6b9b2039" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::program) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</argsstring>
        <name>program</name>
        <qualifiedname>xpi_nor_driver_interface_t::program</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: read data from specified FLASH address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="342" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a95dfb7ab37dc5e0649dbfe1241b69561" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::read) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t *dst, uint32_t start, uint32_t length)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t *dst, uint32_t start, uint32_t length)</argsstring>
        <name>read</name>
        <qualifiedname>xpi_nor_driver_interface_t::read</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: program FLASH page using nonblocking interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="349" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a1911d580ecf6cefb72c79a6abdb530f6" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::page_program_nonblocking) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</argsstring>
        <name>page_program_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::page_program_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: erase FLASH sector using nonblocking interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="356" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a211dc3dbc24a001a8703688fa16e85fd" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_sector_nonblocking) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>erase_sector_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_sector_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: erase FLASH block using nonblocking interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="363" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1ab69c4a69d051a4e79781ac8cac6606bf" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_block_nonblocking) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config, uint32_t addr)</argsstring>
        <name>erase_block_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_block_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: erase the whole FLASh using nonblocking interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="368" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1aafce31912c6793d3323305842226d40f" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::erase_chip_nonblocking) (XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t channel, const xpi_nor_config_t *nor_config)</argsstring>
        <name>erase_chip_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::erase_chip_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="373" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1abcf6215953a6003058601bb7e4bfceb4" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t xpi_nor_driver_interface_t::reserved0[3]</definition>
        <argsstring>[3]</argsstring>
        <name>reserved0</name>
        <qualifiedname>xpi_nor_driver_interface_t::reserved0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: automatically configuration flash based on the cfg_option setting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="377" column="14" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a1c99e0a69b40cd120e02db464196e97b" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::auto_config) (XPI_Type *base, xpi_nor_config_t *nor_cfg, xpi_nor_config_option_t *cfg_option)</definition>
        <argsstring>)(XPI_Type *base, xpi_nor_config_t *nor_cfg, xpi_nor_config_option_t *cfg_option)</argsstring>
        <name>auto_config</name>
        <qualifiedname>xpi_nor_driver_interface_t::auto_config</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>XPI NOR driver interface: Get FLASH properties </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="380" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a3abe9104f6b7d0537eec3929e70e4e28" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::get_property) (XPI_Type *base, xpi_nor_config_t *nor_cfg, uint32_t property_id, uint32_t *value)</definition>
        <argsstring>)(XPI_Type *base, xpi_nor_config_t *nor_cfg, uint32_t property_id, uint32_t *value)</argsstring>
        <name>get_property</name>
        <qualifiedname>xpi_nor_driver_interface_t::get_property</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="383" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a71a01522e60b2bef710b70e077b44550" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t xpi_nor_driver_interface_t::reserved1</definition>
        <argsstring></argsstring>
        <name>reserved1</name>
        <qualifiedname>xpi_nor_driver_interface_t::reserved1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post Erase Sector Nonblocking operation: For Hybrid mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="385" column="14" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a11841c06e423a0915857f76cda1e04b9" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::post_erase_sector_nonblocking) (XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg, uint32_t addr)</argsstring>
        <name>post_erase_sector_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::post_erase_sector_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post Erase Block Nonblocking operation: For Hybrid mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="388" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a7c7620e3ce03cbeca057758acd7e82e4" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::post_erase_block_nonblocking) (XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg, uint32_t addr)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg, uint32_t addr)</argsstring>
        <name>post_erase_block_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::post_erase_block_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post Erase Chip Nonblocking operation: For Hybrid mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="391" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a9716a3fe38d5f0309301610b82eb33f9" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::post_erase_chip_nonblocking) (XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_cfg)</argsstring>
        <name>post_erase_chip_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::post_erase_chip_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post Page Program Nonblocking operation: For Hybrid mode only </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="394" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a0c38a7b3b4f73e33b36c6353450b2c66" prot="public" static="no" mutable="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>hpm_stat_t(* xpi_nor_driver_interface_t::post_page_program_nonblocking) (XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</definition>
        <argsstring>)(XPI_Type *base, xpi_xfer_channel_t chn, xpi_nor_config_t *nor_config, const uint32_t *src, uint32_t dst_addr, uint32_t length)</argsstring>
        <name>post_page_program_nonblocking</name>
        <qualifiedname>xpi_nor_driver_interface_t::post_page_program_nonblocking</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn on the power for Internal FLASH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="397" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a344ba79266e03cdd97280f8242d0a918" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* xpi_nor_driver_interface_t::sip_flash_power_on) (XPI_Type *base)</definition>
        <argsstring>)(XPI_Type *base)</argsstring>
        <name>sip_flash_power_on</name>
        <qualifiedname>xpi_nor_driver_interface_t::sip_flash_power_on</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn off the power for Internal FLASH </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="400" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a135bf83209aac493c2f7efcb4f8fe08c" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* xpi_nor_driver_interface_t::sip_flash_power_off) (XPI_Type *base)</definition>
        <argsstring>)(XPI_Type *base)</argsstring>
        <name>sip_flash_power_off</name>
        <qualifiedname>xpi_nor_driver_interface_t::sip_flash_power_off</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable Hybrid mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="403" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a6f8012fe57a13511e3a8416261190423" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* xpi_nor_driver_interface_t::enable_hybrid_xpi) (XPI_Type *base)</definition>
        <argsstring>)(XPI_Type *base)</argsstring>
        <name>enable_hybrid_xpi</name>
        <qualifiedname>xpi_nor_driver_interface_t::enable_hybrid_xpi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable Hybrid mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="406" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpi__nor__driver__interface__t_1a97876fba99575ac6bf1d6caddeb7c537" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* xpi_nor_driver_interface_t::disable_hybrid_xpi) (XPI_Type *base)</definition>
        <argsstring>)(XPI_Type *base)</argsstring>
        <name>disable_hybrid_xpi</name>
        <qualifiedname>xpi_nor_driver_interface_t::disable_hybrid_xpi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="409" column="5" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="409" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>XPI NOR driver interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="drivers/inc/hpm_romapi_xpi_nor_def.h" line="308" column="1" bodyfile="drivers/inc/hpm_romapi_xpi_nor_def.h" bodystart="308" bodyend="411"/>
    <listofallmembers>
      <member refid="structxpi__nor__driver__interface__t_1a1c99e0a69b40cd120e02db464196e97b" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>auto_config</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a97876fba99575ac6bf1d6caddeb7c537" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>disable_hybrid_xpi</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a6f8012fe57a13511e3a8416261190423" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>enable_hybrid_xpi</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a8cca6d3af3ecf2ee1bc8f03621c04a0f" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>enable_write</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a81add651854d8ee9fc0c702059e79722" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase</name></member>
      <member refid="structxpi__nor__driver__interface__t_1aa69676f4fd81345ea1273f750c959c65" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_block</name></member>
      <member refid="structxpi__nor__driver__interface__t_1ab69c4a69d051a4e79781ac8cac6606bf" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_block_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a52c3094bb3347c2ba6a54bbdf5b56f35" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_chip</name></member>
      <member refid="structxpi__nor__driver__interface__t_1aafce31912c6793d3323305842226d40f" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_chip_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1aa1cdfc280247379bfdcdc2453180f4f0" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_sector</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a211dc3dbc24a001a8703688fa16e85fd" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>erase_sector_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a5a5ae14d3ed5666d2822fb8ff9b215ad" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>get_config</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a3abe9104f6b7d0537eec3929e70e4e28" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>get_property</name></member>
      <member refid="structxpi__nor__driver__interface__t_1adb08f3e6b0432458cfc6f3480c3ddce7" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>get_status</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a16308a97a2719f58d2c6e590d53e2152" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>init</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a1911d580ecf6cefb72c79a6abdb530f6" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>page_program_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a7c7620e3ce03cbeca057758acd7e82e4" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>post_erase_block_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a9716a3fe38d5f0309301610b82eb33f9" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>post_erase_chip_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a11841c06e423a0915857f76cda1e04b9" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>post_erase_sector_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a0c38a7b3b4f73e33b36c6353450b2c66" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>post_page_program_nonblocking</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a011aaa265ace32062aefc70a6b9b2039" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>program</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a95dfb7ab37dc5e0649dbfe1241b69561" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>read</name></member>
      <member refid="structxpi__nor__driver__interface__t_1abcf6215953a6003058601bb7e4bfceb4" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>reserved0</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a71a01522e60b2bef710b70e077b44550" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>reserved1</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a135bf83209aac493c2f7efcb4f8fe08c" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>sip_flash_power_off</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a344ba79266e03cdd97280f8242d0a918" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>sip_flash_power_on</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a7236867af63b81f9853a01c6106d663f" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>version</name></member>
      <member refid="structxpi__nor__driver__interface__t_1a998706b209ae600bf522abccc627e40f" prot="public" virt="non-virtual"><scope>xpi_nor_driver_interface_t</scope><name>wait_busy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
