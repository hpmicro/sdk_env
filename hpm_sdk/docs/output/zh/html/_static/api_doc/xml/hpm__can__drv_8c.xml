<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__can__drv_8c" kind="file" language="C++">
    <compoundname>hpm_can_drv.c</compoundname>
    <includes refid="hpm__can__drv_8h" local="yes">hpm_can_drv.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_can_drv.h</label>
        <link refid="hpm__can__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_can_drv.c</label>
        <link refid="hpm__can__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>hpm_can_regs.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcan__bit__timing__table__t" prot="public">can_bit_timing_table_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__can__drv_8c_1a3c8ced3500393e7789ad282fb24b71c8" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CAN2_0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="16" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CAN2_0</name>
        <initializer>(65U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="17" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a359764c23c8d51368902dff711ba344c" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="19" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(65U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="20" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a9524617ed8aa43c68ec32a720dc4d4e9" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CANFD_DATA</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="22" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ad963a76008f23791fd360172f11bfbf6" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CANFD_DATA</name>
        <initializer>(17U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="23" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a9a94e7591e32eee8cca0177370b014d3" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CAN2_0</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="25" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CAN2_0</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="26" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ae7206fe575f15b97663d14e638662389" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="28" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a12760041a59c3ae354925d02b03a0798" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="29" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a760c18c6342bcfe4ed97820a754cb0de" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CANFD_DATA</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="31" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CANFD_DATA</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="32" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a3ed4c7f6c07f6ab6152b4304b60abab4" prot="public" static="no">
        <name>TSJW_MIN_FOR_CAN2_0</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="34" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1afbb30f7d2539d15b0d9cc4982e8f3471" prot="public" static="no">
        <name>TSJW_MAX_FOR_CAN2_0</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="35" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a2ca376d6b4cbb68da3c6e41cc79746c1" prot="public" static="no">
        <name>TSJW_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="37" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a023db0c30d8b6275bffb86038f59e4bb" prot="public" static="no">
        <name>TSJW_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="38" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a7766d34f7b7a21edf8be4b6ec7acc01a" prot="public" static="no">
        <name>TSJW_MIN_FOR_CANFD_DATA</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="40" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a0c165ae36a475cb008acd66eb446e8fb" prot="public" static="no">
        <name>TSJW_MAX_FOR_CANFD_DATA</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="41" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1aa7c447e3ed657f71771b4c985ace827e" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CAN2_0</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="43" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a7f82c52fb990df48dc02e3b7e5f6633f" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CAN2_0</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" kindref="member">TSEG1_MAX_FOR_CAN2_0</ref> + <ref refid="hpm__can__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" kindref="member">TSEG2_MAX_FOR_CAN2_0</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="44" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1afef0b3ffad46a89ff59f2f8fbd100976" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="46" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ac514cc2897243c1556d03906779cdb58" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" kindref="member">TSEG1_MAX_FOR_CANFD_NOMINAL</ref> + <ref refid="hpm__can__drv_8c_1a12760041a59c3ae354925d02b03a0798" kindref="member">TSEG2_MAX_FOR_CANFD_NOMINAL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="47" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a66a569d6175fdd4f8b9dd293174741b8" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CANFD_DATA</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="49" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ae577dcab491583f8d47eda13c4945718" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CANFD_DATA</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1ad963a76008f23791fd360172f11bfbf6" kindref="member">TSEG1_MAX_FOR_CANFD_DATA</ref> + <ref refid="hpm__can__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" kindref="member">TSEG2_MAX_FOR_CANFD_DATA</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="50" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a985e40899866d1d3497a844bbf88e4b0" prot="public" static="no">
        <name>MIN_TQ_MUL_PRESCALE</name>
        <initializer>(10U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="52" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ab49b989fcef70917fce305249fe4fffe" prot="public" static="no">
        <name>NUM_PRESCALE_MAX</name>
        <initializer>(256U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="54" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a3e9c54d60d7238084b360f9f4ff3c182" prot="public" static="no">
        <name>CAN_FILTER_INDEX_MAX</name>
        <initializer>(15U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="56" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a81052210f9a150efbad74dcf30b4287a" prot="public" static="no">
        <name>CAN_FILTER_NUM_MAX</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="57" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a5b5662f88c0e9504077883915b6d7bb2" prot="public" static="no">
        <name>CAN_TIMEOUT_CNT</name>
        <initializer>(0xFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="59" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" prot="public" static="no">
        <name>CAN_SAMPLEPOINT_MIN</name>
        <initializer>(750U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="61" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" prot="public" static="no">
        <name>CAN_SAMPLEPOINT_MAX</name>
        <initializer>(875U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="62" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__can__drv_8c_1a27407425a217f08c23091a03d54ea4f8" prot="public" static="no">
        <name>CAN_DEFAULT_FILTER_SETTING</name>
        <initializer>{0, <ref refid="hpm__can__drv_8h_1a7056c5b615e8772c5a446a04fbb54355" kindref="member">can_filter_id_mode_both_frames</ref>, true, 0, (1UL &lt;&lt; 29) - 1U }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="65" column="9" bodyfile="drivers/src/hpm_can_drv.c" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hpm__can__drv_8c_1a47f4940b8109f6efadebf5aa4fe52a27" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structcan__bit__timing__table__t" kindref="compound">can_bit_timing_table_t</ref></type>
        <definition>const can_bit_timing_table_t s_can_bit_timing_tbl[3]</definition>
        <argsstring>[3]</argsstring>
        <name>s_can_bit_timing_tbl</name>
        <initializer>= {
        {
                .tq_min = (8U) ,
                .tq_max = ( (65U) + (8U) ),
                .seg1_min = (2U) ,
                .seg1_max = (65U) ,
                .seg2_min = (1U) ,
                .seg2_max = (8U) ,
                .sjw_min = (1U) ,
                .sjw_max = (16U) ,
                .min_diff_seg1_minus_seg2 = 2,
        },
        {
                .tq_min = (8U) ,
                .tq_max = ( (65U) + (32U) ),
                .seg1_min = (2U) ,
                .seg1_max = (65U) ,
                .seg2_min = (1U) ,
                .seg2_max = (32U) ,
                .sjw_min = (1U) ,
                .sjw_max = (16U) ,
                .min_diff_seg1_minus_seg2 = 2,
        },
        {
                .tq_min = (8U) ,
                .tq_max = ( (17U) + (8U) ),
                .seg1_min = (2U) ,
                .seg1_max = (17U) ,
                .seg2_min = (1U) ,
                .seg2_max = (8U) ,
                .sjw_min = (1U) ,
                .sjw_max = (8U) ,
                .min_diff_seg1_minus_seg2 = 1,
        }
}</initializer>
        <briefdescription>
<para>CAN bit timing list for all supported bit timing modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="85" column="37" bodyfile="drivers/src/hpm_can_drv.c" bodystart="85" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__can__drv_8c_1a68049e8e56f009eccb33cb52df5d582c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t find_optimal_prescaler</definition>
        <argsstring>(uint32_t num_tq_mul_prescaler, uint32_t start_prescaler, uint32_t max_tq, uint32_t min_tq)</argsstring>
        <name>find_optimal_prescaler</name>
        <param>
          <type>uint32_t</type>
          <declname>num_tq_mul_prescaler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_prescaler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_tq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_tq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="139" column="17" bodyfile="drivers/src/hpm_can_drv.c" bodystart="139" bodyend="166" declfile="drivers/src/hpm_can_drv.c" declline="125" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_data_words_from_dlc</definition>
        <argsstring>(uint32_t dlc)</argsstring>
        <name>can_get_data_words_from_dlc</name>
        <param>
          <type>uint32_t</type>
          <declname>dlc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="338" column="16" bodyfile="drivers/src/hpm_can_drv.c" bodystart="338" bodyend="375" declfile="drivers/src/hpm_can_drv.c" declline="128" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void can_fill_tx_buffer</definition>
        <argsstring>(CAN_Type *base, const can_transmit_buf_t *message)</argsstring>
        <name>can_fill_tx_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="377" column="13" bodyfile="drivers/src/hpm_can_drv.c" bodystart="377" bodyend="386" declfile="drivers/src/hpm_can_drv.c" declline="130" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_can_bit_timing_param_valid</definition>
        <argsstring>(can_bit_timing_option_t option, const can_bit_timing_param_t *param)</argsstring>
        <name>is_can_bit_timing_param_valid</name>
        <param>
          <type><ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const <ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_can_drv.c" line="242" column="13" bodyfile="drivers/src/hpm_can_drv.c" bodystart="242" bodyend="263" declfile="drivers/src/hpm_can_drv.c" declline="132" declcolumn="13"/>
      </memberdef>
      <member refid="group__can__interface_1ga3a8c46558825c0463a50618161351de4" kind="function"><name>can_calculate_bit_timing</name></member>
      <member refid="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" kind="function"><name>can_set_bit_timing</name></member>
      <member refid="group__can__interface_1gae03b8c0387b3a0867505f5781ae35214" kind="function"><name>can_set_filter</name></member>
      <member refid="group__can__interface_1ga111b83df5cafa16889865acef42097a6" kind="function"><name>can_send_message_blocking</name></member>
      <member refid="group__can__interface_1ga4cc3ed8404d5d0340d1d03dd9fca679c" kind="function"><name>can_send_high_priority_message_blocking</name></member>
      <member refid="group__can__interface_1ga3edf5cdf5a93d28aa629c2bcdac3d9f3" kind="function"><name>can_send_message_nonblocking</name></member>
      <member refid="group__can__interface_1ga9a7676e94c3b7d500f85f44c93e44ae9" kind="function"><name>can_send_high_priority_message_nonblocking</name></member>
      <member refid="group__can__interface_1ga152ceffef9b26071634f3910426156f4" kind="function"><name>can_receive_message_blocking</name></member>
      <member refid="group__can__interface_1ga064b9c32ea5252b72e35f7bc6b31a4bd" kind="function"><name>can_read_received_message</name></member>
      <member refid="group__can__interface_1gabe2e41f5a36374c2864816ed68042de3" kind="function"><name>can_get_default_config</name></member>
      <member refid="group__can__interface_1ga4b98f7d670a9f51da7ad27fd36ec609d" kind="function"><name>can_init</name></member>
      <member refid="group__can__interface_1ga5f816882c2c1001ca8381608deab446c" kind="function"><name>can_deinit</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__can__drv_8h" kindref="compound">hpm_can_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Definitions</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CAN2_0<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CAN2_0<sp/>(65U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CANFD_NOMINAL<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CANFD_NOMINAL<sp/>(65U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CANFD_DATA<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CANFD_DATA<sp/>(17U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CAN2_0<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CAN2_0<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CANFD_NOMINAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CANFD_NOMINAL<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CANFD_DATA<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CANFD_DATA<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CAN2_0<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CAN2_0<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CANFD_NOMINAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CANFD_NOMINAL<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CANFD_DATA<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CANFD_DATA<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CAN2_0<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CAN2_0<sp/>(TSEG1_MAX_FOR_CAN2_0<sp/>+<sp/>TSEG2_MAX_FOR_CAN2_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CANFD_NOMINAL<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CANFD_NOMINAL<sp/>(TSEG1_MAX_FOR_CANFD_NOMINAL<sp/>+<sp/>TSEG2_MAX_FOR_CANFD_NOMINAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CANFD_DATA<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CANFD_DATA<sp/>(TSEG1_MAX_FOR_CANFD_DATA<sp/>+<sp/>TSEG2_MAX_FOR_CANFD_DATA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_TQ_MUL_PRESCALE<sp/>(10U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PRESCALE_MAX<sp/>(256U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FILTER_INDEX_MAX<sp/>(15U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_FILTER_NUM_MAX<sp/>(16U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_TIMEOUT_CNT<sp/>(0xFFFFFFUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_SAMPLEPOINT_MIN<sp/>(750U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_SAMPLEPOINT_MAX<sp/>(875U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_DEFAULT_FILTER_SETTING<sp/>{0,<sp/>can_filter_id_mode_both_frames,<sp/>true,<sp/>0,<sp/>(1UL<sp/>&lt;&lt;<sp/>29)<sp/>-<sp/>1U<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>@brief<sp/>CAN<sp/>bit-timing<sp/>table</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structcan__bit__timing__table__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tq_min;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tq_max;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>seg1_min;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>seg1_max;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>seg2_min;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>seg2_max;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>sjw_min;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>sjw_max;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>min_diff_seg1_minus_seg2;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="structcan__bit__timing__table__t" kindref="compound">can_bit_timing_table_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__bit__timing__table__t" kindref="compound">can_bit_timing_table_t</ref><sp/><ref refid="hpm__can__drv_8c_1a47f4940b8109f6efadebf5aa4fe52a27" kindref="member">s_can_bit_timing_tbl</ref>[3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1aa7c447e3ed657f71771b4c985ace827e" kindref="member">NUM_TQ_MIN_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a7f82c52fb990df48dc02e3b7e5f6633f" kindref="member">NUM_TQ_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a3c8ced3500393e7789ad282fb24b71c8" kindref="member">TSEG1_MIN_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" kindref="member">TSEG1_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a9a94e7591e32eee8cca0177370b014d3" kindref="member">TSEG2_MIN_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" kindref="member">TSEG2_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a3ed4c7f6c07f6ab6152b4304b60abab4" kindref="member">TSJW_MIN_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1afbb30f7d2539d15b0d9cc4982e8f3471" kindref="member">TSJW_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1afef0b3ffad46a89ff59f2f8fbd100976" kindref="member">NUM_TQ_MIN_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1ac514cc2897243c1556d03906779cdb58" kindref="member">NUM_TQ_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a359764c23c8d51368902dff711ba344c" kindref="member">TSEG1_MIN_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" kindref="member">TSEG1_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1ae7206fe575f15b97663d14e638662389" kindref="member">TSEG2_MIN_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a12760041a59c3ae354925d02b03a0798" kindref="member">TSEG2_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a2ca376d6b4cbb68da3c6e41cc79746c1" kindref="member">TSJW_MIN_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a023db0c30d8b6275bffb86038f59e4bb" kindref="member">TSJW_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a66a569d6175fdd4f8b9dd293174741b8" kindref="member">NUM_TQ_MIN_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1ae577dcab491583f8d47eda13c4945718" kindref="member">NUM_TQ_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a9524617ed8aa43c68ec32a720dc4d4e9" kindref="member">TSEG1_MIN_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1ad963a76008f23791fd360172f11bfbf6" kindref="member">TSEG1_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a760c18c6342bcfe4ed97820a754cb0de" kindref="member">TSEG2_MIN_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" kindref="member">TSEG2_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a7766d34f7b7a21edf8be4b6ec7acc01a" kindref="member">TSJW_MIN_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a0c165ae36a475cb008acd66eb446e8fb" kindref="member">TSJW_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/>Prototypes</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__can__drv_8c_1a68049e8e56f009eccb33cb52df5d582c" kindref="member">find_optimal_prescaler</ref>(uint32_t<sp/>num_tq_mul_prescaler,<sp/>uint32_t<sp/>start_prescaler,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_tq,<sp/>uint32_t<sp/>min_tq);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" kindref="member">can_get_data_words_from_dlc</ref>(uint32_t<sp/>dlc);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" kindref="member">is_can_bit_timing_param_valid</ref>(<ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref><sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref><sp/>*param);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/>Codes</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__can__drv_8c_1a68049e8e56f009eccb33cb52df5d582c" kindref="member">find_optimal_prescaler</ref>(uint32_t<sp/>num_tq_mul_prescaler,<sp/>uint32_t<sp/>start_prescaler,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_tq,<sp/>uint32_t<sp/>min_tq)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prescaler<sp/>=<sp/>start_prescaler;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!has_found)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_tq_mul_prescaler<sp/>/<sp/>prescaler<sp/>&gt;<sp/>max_tq)<sp/>||<sp/>(num_tq_mul_prescaler<sp/>%<sp/>prescaler<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++prescaler;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tq<sp/>=<sp/>num_tq_mul_prescaler<sp/>/<sp/>prescaler;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tq<sp/>*<sp/>prescaler<sp/>==<sp/>num_tq_mul_prescaler)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tq<sp/>&lt;<sp/>min_tq)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++prescaler;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_found<sp/>?<sp/>prescaler<sp/>:<sp/>0U;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga3a8c46558825c0463a50618161351de4" kindref="member">can_calculate_bit_timing</ref>(uint32_t<sp/>src_clk_freq,<sp/><ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref><sp/>option,<sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,<sp/>uint16_t<sp/>samplepoint_max,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref><sp/>*timing_param)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((option<sp/>&gt;<sp/><ref refid="hpm__can__drv_8h_1a7d28865087c13478e6ea1108372831b0" kindref="member">can_bit_timing_canfd_data</ref>)<sp/>||<sp/>(baudrate<sp/>==<sp/>0U)<sp/>||</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(src_clk_freq<sp/>/<sp/>baudrate<sp/>&lt;<sp/><ref refid="hpm__can__drv_8c_1a985e40899866d1d3497a844bbf88e4b0" kindref="member">MIN_TQ_MUL_PRESCALE</ref>)<sp/>||<sp/>(timing_param<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__bit__timing__table__t" kindref="compound">can_bit_timing_table_t</ref><sp/>*tbl<sp/>=<sp/>&amp;<ref refid="hpm__can__drv_8c_1a47f4940b8109f6efadebf5aa4fe52a27" kindref="member">s_can_bit_timing_tbl</ref>[(uint8_t)<sp/>option];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>According<sp/>to<sp/>the<sp/>CAN<sp/>specification<sp/>2.0,</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>Tq<sp/>must<sp/>be<sp/>in<sp/>range<sp/>specified<sp/>in<sp/>the<sp/>above<sp/>CAN<sp/>bit-timing<sp/>table</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_clk_freq<sp/>/<sp/>baudrate<sp/>&lt;<sp/>tbl-&gt;tq_min)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_tq_mul_prescaler<sp/>=<sp/>src_clk_freq<sp/>/<sp/>baudrate;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_prescaler<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_seg1,<sp/>num_seg2;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>out<sp/>the<sp/>minimum<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!has_found)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_prescaler<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a68049e8e56f009eccb33cb52df5d582c" kindref="member">find_optimal_prescaler</ref>(num_tq_mul_prescaler,<sp/>start_prescaler,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a6edefd43c6cfbf9dad6e50088bf39f79" kindref="member">tq_max</ref>,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a6c1f0e70f96f81382ac48cdd3b0ab6d6" kindref="member">tq_min</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_prescaler<sp/>&lt;<sp/>start_prescaler)<sp/>||<sp/>(current_prescaler<sp/>&gt;<sp/><ref refid="hpm__can__drv_8c_1ab49b989fcef70917fce305249fe4fffe" kindref="member">NUM_PRESCALE_MAX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_tq<sp/>=<sp/>num_tq_mul_prescaler<sp/>/<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg2<sp/>=<sp/>(num_tq<sp/>-<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a41195197ca708404b9cab9ec6cc3497f" kindref="member">min_diff_seg1_minus_seg2</ref>)<sp/>/<sp/>2U;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg1<sp/>=<sp/>num_tq<sp/>-<sp/>num_seg2;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_seg2<sp/>&gt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a61f008f2e2b959079f212993f49e1c6f" kindref="member">seg2_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg2--;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg1++;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recommended<sp/>sample<sp/>point<sp/>is<sp/>75%<sp/>-<sp/>87.5%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((num_seg1<sp/>*<sp/>1000U)<sp/>/<sp/>num_tq<sp/>&lt;<sp/>samplepoint_min)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_seg1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--num_seg2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_seg1<sp/>*<sp/>1000U)<sp/>/<sp/>num_tq<sp/>&gt;<sp/>samplepoint_max)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_seg2<sp/>&gt;=<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a1c5027d9d41afc53025a6757187d1549" kindref="member">seg2_min</ref>)<sp/>&amp;&amp;<sp/>(num_seg1<sp/>&lt;=<sp/>tbl-&gt;seg1_max))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_prescaler<sp/>=<sp/>current_prescaler<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_found)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_sjw<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a2f28a3d89e0085b924470e4b20d40958" kindref="member">sjw_max</ref>,<sp/>num_seg2);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structcan__bit__timing__param__t_1aceb1f5e517eed0abfab6545aeccac611" kindref="member">num_seg1</ref><sp/>=<sp/>num_seg1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structcan__bit__timing__param__t_1a795e03158971ecf10966bb256f304aa1" kindref="member">num_seg2</ref><sp/>=<sp/>num_seg2;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structcan__bit__timing__param__t_1a5449778d96223967f55d9bd3eac25256" kindref="member">num_sjw</ref><sp/>=<sp/>num_sjw;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structcan__bit__timing__param__t_1a23f961a958d2e42a2f281219e208d09f" kindref="member">prescaler</ref><sp/>=<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" kindref="member">is_can_bit_timing_param_valid</ref>(<ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref><sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref><sp/>*param)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__bit__timing__table__t" kindref="compound">can_bit_timing_table_t</ref><sp/>*tbl<sp/>=<sp/>&amp;<ref refid="hpm__can__drv_8c_1a47f4940b8109f6efadebf5aa4fe52a27" kindref="member">s_can_bit_timing_tbl</ref>[(uint8_t)<sp/>option];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structcan__bit__timing__param__t_1aceb1f5e517eed0abfab6545aeccac611" kindref="member">num_seg1</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1ad8917e52dbbcc8dbbd28175ca42fe248" kindref="member">seg1_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structcan__bit__timing__param__t_1aceb1f5e517eed0abfab6545aeccac611" kindref="member">num_seg1</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a5966b06c5265b9ca78dafaec2f1aa558" kindref="member">seg1_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structcan__bit__timing__param__t_1a795e03158971ecf10966bb256f304aa1" kindref="member">num_seg2</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a1c5027d9d41afc53025a6757187d1549" kindref="member">seg2_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structcan__bit__timing__param__t_1a795e03158971ecf10966bb256f304aa1" kindref="member">num_seg2</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a61f008f2e2b959079f212993f49e1c6f" kindref="member">seg2_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structcan__bit__timing__param__t_1a5449778d96223967f55d9bd3eac25256" kindref="member">num_sjw</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a30df1007d247a5322592da7974f4e34b" kindref="member">sjw_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structcan__bit__timing__param__t_1a5449778d96223967f55d9bd3eac25256" kindref="member">num_sjw</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structcan__bit__timing__table__t_1a2f28a3d89e0085b924470e4b20d40958" kindref="member">sjw_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param-&gt;<ref refid="structcan__bit__timing__param__t_1a23f961a958d2e42a2f281219e208d09f" kindref="member">prescaler</ref><sp/>&gt;<sp/><ref refid="hpm__can__drv_8c_1ab49b989fcef70917fce305249fe4fffe" kindref="member">NUM_PRESCALE_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" kindref="member">can_set_bit_timing</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/><ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref><sp/>option,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>src_clk_freq,<sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,<sp/>uint16_t<sp/>samplepoint_max)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref><sp/>timing_param;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1ga3a8c46558825c0463a50618161351de4" kindref="member">can_calculate_bit_timing</ref>(src_clk_freq,<sp/>option,<sp/>baudrate,<sp/>samplepoint_min,<sp/>samplepoint_max,<sp/>&amp;timing_param);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option<sp/>&lt;<sp/><ref refid="hpm__can__drv_8h_1a7d28865087c13478e6ea1108372831b0" kindref="member">can_bit_timing_canfd_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a37b668491ed0e48370d421c05a9ba979" kindref="member">S_PRESC</ref><sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a1266d94af7ae2c41e67d375826da5995" kindref="member">CAN_S_PRESC_S_PRESC_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a23f961a958d2e42a2f281219e208d09f" kindref="member">prescaler</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a270b63bffe3b6763ece99b07e4109f2d" kindref="member">CAN_S_PRESC_S_SEG_1_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1aceb1f5e517eed0abfab6545aeccac611" kindref="member">num_seg1</ref><sp/>-<sp/>2U)<sp/>|</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a0a0f2255923d104c03696554b6ce7caf" kindref="member">CAN_S_PRESC_S_SEG_2_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a795e03158971ecf10966bb256f304aa1" kindref="member">num_seg2</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a17a3e40546948687159e650434b22e79" kindref="member">CAN_S_PRESC_S_SJW_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a5449778d96223967f55d9bd3eac25256" kindref="member">num_sjw</ref><sp/>-<sp/>1U);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a5e423b8950a8850dfe17f30ab9e4ca26" kindref="member">F_PRESC</ref><sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a717e26935382357c457ca65a711a710d" kindref="member">CAN_F_PRESC_F_PRESC_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a23f961a958d2e42a2f281219e208d09f" kindref="member">prescaler</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a2101247c801c9ef059bfd74d479e2455" kindref="member">CAN_F_PRESC_F_SEG_1_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1aceb1f5e517eed0abfab6545aeccac611" kindref="member">num_seg1</ref><sp/>-<sp/>2U)<sp/>|</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a9bd9a3c8feceb75692d325ebff677635" kindref="member">CAN_F_PRESC_F_SEG_2_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a795e03158971ecf10966bb256f304aa1" kindref="member">num_seg2</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ad40c8c1e3485b762bec94cf112a0f28c" kindref="member">CAN_F_PRESC_F_SJW_SET</ref>(timing_param.<ref refid="structcan__bit__timing__param__t_1a5449778d96223967f55d9bd3eac25256" kindref="member">num_sjw</ref><sp/>-<sp/>1U);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1gae03b8c0387b3a0867505f5781ae35214" kindref="member">can_set_filter</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcan__filter__config__t" kindref="compound">can_filter_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(config<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__filter__config__t_1a512d9e9145af2fb9735c5079a6ac3317" kindref="member">index</ref><sp/>&gt;<sp/><ref refid="hpm__can__drv_8c_1a3e9c54d60d7238084b360f9f4ff3c182" kindref="member">CAN_FILTER_INDEX_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba6077b3bdf357687fa33f2b7f27fd6b05" kindref="member">status_can_filter_index_invalid</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>acceptance<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1aee691b871455449d0d53ae86b966e4a6" kindref="member">ACFCTRL</ref><sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a25a6612d289b4050ec112da75545eafd" kindref="member">CAN_ACFCTRL_ACFADR_SET</ref>(config-&gt;<ref refid="structcan__filter__config__t_1a512d9e9145af2fb9735c5079a6ac3317" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a32d9556560c80d13b6322da410ff3375" kindref="member">ACF</ref><sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a62dea447ad8a0f61f6a5840b3c41ee33" kindref="member">CAN_ACF_CODE_MASK_SET</ref>(config-&gt;<ref refid="structcan__filter__config__t_1a53ee3f0a07d6610f76c1bf457cf2109d" kindref="member">code</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>acceptance<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>acf_value<sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a62dea447ad8a0f61f6a5840b3c41ee33" kindref="member">CAN_ACF_CODE_MASK_SET</ref>(config-&gt;<ref refid="structcan__filter__config__t_1a5e970f2349ba56ec568487934cf58295" kindref="member">mask</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__filter__config__t_1a1190dad2fc30aac814b0b42b040cb7d9" kindref="member">id_mode</ref><sp/>==<sp/><ref refid="hpm__can__drv_8h_1a0a9f6c970f8fe9d11a840a13e8adbc57" kindref="member">can_filter_id_mode_standard_frames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acf_value<sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa709e6901d1dfec17fa5e31b68de0989" kindref="member">CAN_ACF_AIDEE_MASK</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__filter__config__t_1a1190dad2fc30aac814b0b42b040cb7d9" kindref="member">id_mode</ref><sp/>==<sp/><ref refid="hpm__can__drv_8h_1a78ddd12aeba316d936ca26895118bf39" kindref="member">can_filter_id_mode_extended_frames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acf_value<sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa709e6901d1dfec17fa5e31b68de0989" kindref="member">CAN_ACF_AIDEE_MASK</ref><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a83508e5433df6a2cc62b0d0cfcea9708" kindref="member">CAN_ACF_AIDE_MASK</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Treat<sp/>it<sp/>as<sp/>the<sp/>default<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acf_value<sp/>|=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1aee691b871455449d0d53ae86b966e4a6" kindref="member">ACFCTRL</ref><sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a08827e065e988eedccfa36738e0d37c8" kindref="member">CAN_ACFCTRL_SELMASK_MASK</ref><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a25a6612d289b4050ec112da75545eafd" kindref="member">CAN_ACFCTRL_ACFADR_SET</ref>(config-&gt;<ref refid="structcan__filter__config__t_1a512d9e9145af2fb9735c5079a6ac3317" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a32d9556560c80d13b6322da410ff3375" kindref="member">ACF</ref><sp/>=<sp/>acf_value;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__filter__config__t_1a0ccae370067d88ec8e9b03b0e75f0549" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a9b506b0d71bc5b2e7de20721a0d8c3" kindref="member">ACF_EN</ref><sp/>|=<sp/>(1U<sp/>&lt;&lt;<sp/>config-&gt;<ref refid="structcan__filter__config__t_1a512d9e9145af2fb9735c5079a6ac3317" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a9b506b0d71bc5b2e7de20721a0d8c3" kindref="member">ACF_EN</ref><sp/>&amp;=<sp/>(uint16_t)<sp/>~(1U<sp/>&lt;&lt;<sp/>config-&gt;<ref refid="structcan__filter__config__t_1a512d9e9145af2fb9735c5079a6ac3317" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" kindref="member">can_get_data_words_from_dlc</ref>(uint32_t<sp/>dlc)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>copy_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>dlc<sp/>&amp;=<sp/>0xFU;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlc<sp/>&lt;=<sp/>8U)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>(dlc<sp/>+<sp/>3U)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dlc)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7af3efce552949dcf79e46b9e82e19d970" kindref="member">can_payload_size_12</ref>:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>3U;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a8d460591395d51862e2202f59b3a619c" kindref="member">can_payload_size_16</ref>:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>4U;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a64eaeca350b8d1a37400abd89d3dc52f" kindref="member">can_payload_size_20</ref>:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>5U;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a74991244c51e449819a26e4e79ef29ec" kindref="member">can_payload_size_24</ref>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>6U;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a13cc8368ae15618a9f7b227c05270fe3" kindref="member">can_payload_size_32</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>8U;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a4a246cd64d7852b3e70956df040fc7ed" kindref="member">can_payload_size_48</ref>:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>12U;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ggadf764cbdea00d65edcd07bb9953ad2b7a4f54e842aff31ef877394d929fcdd4da" kindref="member">can_payload_size_64</ref>:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_words<sp/>=<sp/>16U;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Code<sp/>should<sp/>never<sp/>touch<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_words;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1af9031271e3272d460afd0acfd4fb45dc" kindref="member">TBUF</ref>[0]<sp/>=<sp/>message-&gt;buffer[0];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1af9031271e3272d460afd0acfd4fb45dc" kindref="member">TBUF</ref>[1]<sp/>=<sp/>message-&gt;buffer[1];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>copy_words<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" kindref="member">can_get_data_words_from_dlc</ref>(message-&gt;dlc);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>copy_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1af9031271e3272d460afd0acfd4fb45dc" kindref="member">TBUF</ref>[2U<sp/>+<sp/>i]<sp/>=<sp/>message-&gt;buffer[2U<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga111b83df5cafa16889865acef42097a6" kindref="member">can_send_message_blocking</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(message<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1afebedd9723664eafffd1b2eb8c30ad22" kindref="member">CAN_CMD_STA_CMD_CTRL_TBSEL_MASK</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(base,<sp/>message);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>STB<sp/>is<sp/>not<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>timeout_cnt<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a5b5662f88c0e9504077883915b6d7bb2" kindref="member">CAN_TIMEOUT_CNT</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a8f90d8344717f044ce9c4e1519041c09" kindref="member">CAN_CMD_STA_CMD_CTRL_TSSTAT_GET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>)<sp/>==<sp/><ref refid="group__can__interface_1gadbcad1bc10c1b20bc669c6cad6f0e0c8" kindref="member">CAN_STB_IS_FULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_cnt--;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_cnt<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ac208138b6a514862685e5dad256ed908" kindref="member">CAN_CMD_STA_CMD_CTRL_TSNEXT_MASK</ref><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ab9c11e06f8b9667629b27c0ff673c0d1" kindref="member">CAN_CMD_STA_CMD_CTRL_TSONE_MASK</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_cnt<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a5b5662f88c0e9504077883915b6d7bb2" kindref="member">CAN_TIMEOUT_CNT</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a8f90d8344717f044ce9c4e1519041c09" kindref="member">CAN_CMD_STA_CMD_CTRL_TSSTAT_GET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>)<sp/>!=<sp/><ref refid="group__can__interface_1gabac161adbf7014034259484d94dada78" kindref="member">CAN_STB_IS_EMPTY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_cnt--;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_cnt<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga4cc3ed8404d5d0340d1d03dd9fca679c" kindref="member">can_send_high_priority_message_blocking</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(message<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>high-priority<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>&amp;=<sp/>~CAN_CMD_STA_CMD_CTRL_TBSEL_MASK;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(base,<sp/>message);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>data<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa85a7f73f608d1d559f4f16c9a6fc037" kindref="member">CAN_CMD_STA_CMD_CTRL_TPE_MASK</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>until<sp/>the<sp/>data<sp/>is<sp/>sent<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>timeout_cnt<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a5b5662f88c0e9504077883915b6d7bb2" kindref="member">CAN_TIMEOUT_CNT</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa85a7f73f608d1d559f4f16c9a6fc037" kindref="member">CAN_CMD_STA_CMD_CTRL_TPE_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_cnt--;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout_cnt<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga3edf5cdf5a93d28aa629c2bcdac3d9f3" kindref="member">can_send_message_nonblocking</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(message<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a8f90d8344717f044ce9c4e1519041c09" kindref="member">CAN_CMD_STA_CMD_CTRL_TSSTAT_GET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>)<sp/>==<sp/><ref refid="group__can__interface_1gadbcad1bc10c1b20bc669c6cad6f0e0c8" kindref="member">CAN_STB_IS_FULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55baa220d5bd47aa8b734b151015496e93c2" kindref="member">status_can_tx_fifo_full</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1afebedd9723664eafffd1b2eb8c30ad22" kindref="member">CAN_CMD_STA_CMD_CTRL_TBSEL_MASK</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(base,<sp/>message);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ac208138b6a514862685e5dad256ed908" kindref="member">CAN_CMD_STA_CMD_CTRL_TSNEXT_MASK</ref><sp/>|<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ab9c11e06f8b9667629b27c0ff673c0d1" kindref="member">CAN_CMD_STA_CMD_CTRL_TSONE_MASK</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga9a7676e94c3b7d500f85f44c93e44ae9" kindref="member">can_send_high_priority_message_nonblocking</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(message<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1gae1eae6c44712583303b6e650a21d4875" kindref="member">IS_HPM_BITMASK_SET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>,<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa85a7f73f608d1d559f4f16c9a6fc037" kindref="member">CAN_CMD_STA_CMD_CTRL_TPE_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55baa220d5bd47aa8b734b151015496e93c2" kindref="member">status_can_tx_fifo_full</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Select<sp/>the<sp/>high-priority<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>&amp;=<sp/>~CAN_CMD_STA_CMD_CTRL_TBSEL_MASK;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8c_1aeb354702a61a51db06ac40ad6244c42b" kindref="member">can_fill_tx_buffer</ref>(base,<sp/>message);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>the<sp/>data<sp/>out<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aa85a7f73f608d1d559f4f16c9a6fc037" kindref="member">CAN_CMD_STA_CMD_CTRL_TPE_MASK</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga152ceffef9b26071634f3910426156f4" kindref="member">can_receive_message_blocking</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/><ref refid="group__can__interface_1gaead5fa76fd408804e2cd0828a2fe6ecc" kindref="member">can_receive_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(message<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a0ca943c88a07dfd2bd83a6a2c47b2f4d" kindref="member">CAN_CMD_STA_CMD_CTRL_RSTAT_GET</ref>(base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref>)<sp/>==<sp/><ref refid="group__can__interface_1ga31ccdcf915e018404ef95f6eb1285398" kindref="member">CAN_RXBUF_IS_EMPTY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>first<sp/>2<sp/>words<sp/>(including<sp/>CAN<sp/>ID,<sp/>Data<sp/>length<sp/>and<sp/>other<sp/>control<sp/>bits)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[0]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[0];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[1]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[1];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;error_type<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(message-&gt;error_type)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55bae96b1ac882763cb4c8d2451495b6e164" kindref="member">status_can_bit_error</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba43ff40f92c5cb0da19f05968992852b7" kindref="member">status_can_form_error</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba9ed82093c1bb95538000027c70570623" kindref="member">status_can_stuff_error</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba78e42513c60026fc263a8801caf05f29" kindref="member">status_can_ack_error</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba361fa2997079c1f25b046e63d44be5ee" kindref="member">status_can_crc_error</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55bafdd5a9663f667ae265e7546de2440e9e" kindref="member">status_can_other_error</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;remote_frame<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>copy_words<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" kindref="member">can_get_data_words_from_dlc</ref>(message-&gt;dlc);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>copy_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[2U<sp/>+<sp/>i]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[2U<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>current<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a1a625a1fde778c2d78917d2a0a35cca0" kindref="member">CAN_CMD_STA_CMD_CTRL_RREL_MASK</ref>;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga064b9c32ea5252b72e35f7bc6b31a4bd" kindref="member">can_read_received_message</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/><ref refid="group__can__interface_1gaead5fa76fd408804e2cd0828a2fe6ecc" kindref="member">can_receive_buf_t</ref><sp/>*message)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((base<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(message<sp/>!=<sp/>NULL));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>first<sp/>2<sp/>words<sp/>(including<sp/>CAN<sp/>ID,<sp/>Data<sp/>length<sp/>and<sp/>other<sp/>control<sp/>bits)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[0]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[0];</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[1]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[1];</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;error_type<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(message-&gt;error_type)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55bae96b1ac882763cb4c8d2451495b6e164" kindref="member">status_can_bit_error</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba43ff40f92c5cb0da19f05968992852b7" kindref="member">status_can_form_error</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba9ed82093c1bb95538000027c70570623" kindref="member">status_can_stuff_error</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba78e42513c60026fc263a8801caf05f29" kindref="member">status_can_ack_error</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55ba361fa2997079c1f25b046e63d44be5ee" kindref="member">status_can_crc_error</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55bafdd5a9663f667ae265e7546de2440e9e" kindref="member">status_can_other_error</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;remote_frame<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>copy_words<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a385f5e88ebe19635419577470f4bc601" kindref="member">can_get_data_words_from_dlc</ref>(message-&gt;dlc);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>copy_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;buffer[2U<sp/>+<sp/>i]<sp/>=<sp/>base-&gt;<ref refid="structCAN__Type_1aacb610f80157d25b8094045dff391e2a" kindref="member">RBUF</ref>[2U<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>current<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>|=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a1a625a1fde778c2d78917d2a0a35cca0" kindref="member">CAN_CMD_STA_CMD_CTRL_RREL_MASK</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1gabe2e41f5a36374c2864816ed68042de3" kindref="member">can_get_default_config</ref>(<ref refid="structcan__config__t" kindref="compound">can_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>timing<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a26a3705b7540fdef272f64d0bd648093" kindref="member">baudrate</ref><sp/>=<sp/>1000000UL;<sp/></highlight><highlight class="comment">/*<sp/>1Mbit/s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a69ff80bff54bc96b93299f36faa8ce93" kindref="member">baudrate_fd</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a7206818b05e7ba6ea85cc907a73b5db1" kindref="member">use_lowlevel_timing_setting</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a9386ca9c2dca1c7b9fced166c881fb55" kindref="member">can20_samplepoint_min</ref><sp/>=<sp/><ref refid="hpm__can__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" kindref="member">CAN_SAMPLEPOINT_MIN</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a3dad57f38e4b79bd0efd5d1cd9c9da45" kindref="member">can20_samplepoint_max</ref><sp/>=<sp/><ref refid="hpm__can__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" kindref="member">CAN_SAMPLEPOINT_MAX</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a5fa6835023ed8d5014d2210987a799e8" kindref="member">canfd_samplepoint_min</ref><sp/>=<sp/><ref refid="hpm__can__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" kindref="member">CAN_SAMPLEPOINT_MIN</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1aa42adfd1ec2219bb60e127f3ce3bebf1" kindref="member">canfd_samplepoint_max</ref><sp/>=<sp/><ref refid="hpm__can__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" kindref="member">CAN_SAMPLEPOINT_MAX</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a19af4b7bca348e7dab6a6fab042dd8ec" kindref="member">enable_canfd</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a5326dd1b36dfc6efe18dd07fc6a26e4d" kindref="member">enable_can_fd_iso_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a8c5cf03988f9268851dabd73ab9c82c2" kindref="member">mode</ref><sp/>=<sp/><ref refid="hpm__can__drv_8h_1a1b1dff5ca63d9ff1524d16e43d33634a" kindref="member">can_mode_normal</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a5bbbb8061d661470534c4c161f85aecb" kindref="member">enable_self_ack</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1aa536f53638875b64336d3b23c9ddeda5" kindref="member">disable_stb_retransmission</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a6436316a8a55217dc68c09f69edcb3f3" kindref="member">disable_ptb_retransmission</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1aa0da6fd6a6d9956a8ffd57f33ffe5b44" kindref="member">enable_tx_buffer_priority_mode</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a07b274815a5956ebe5247027fdd604de" kindref="member">enable_tdc</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>filter<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1af51a142c8ed9655c03d40eee6e246b4e" kindref="member">filter_list_num</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a2a5d639bd208e3106b57bed936e348b1" kindref="member">filter_list</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>Interrupt<sp/>enable<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a48bd1ee8818eecc1ac71315a4bc715e8" kindref="member">irq_txrx_enable_mask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a09d5b060e49721baa8831c7cc77a213b" kindref="member">irq_error_enable_mask</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__can__interface_1ga4b98f7d670a9f51da7ad27fd36ec609d" kindref="member">can_init</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base,<sp/><ref refid="structcan__config__t" kindref="compound">can_config_t</ref><sp/>*config,<sp/>uint32_t<sp/>src_clk_freq)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((base<sp/>==<sp/>NULL)<sp/>||<sp/>(config<sp/>==<sp/>NULL)<sp/>||<sp/>(src_clk_freq<sp/>==<sp/>0U)<sp/>||<sp/>(config-&gt;<ref refid="structcan__config__t_1af51a142c8ed9655c03d40eee6e246b4e" kindref="member">filter_list_num</ref><sp/>&gt;<sp/>16U));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gab6e2a05f695556c4b536c204d124f7f9" kindref="member">can_reset</ref>(base,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8daacaa8e9c936750682aeb8e2132f23" kindref="member">TTCFG</ref><sp/>&amp;=<sp/>~CAN_TTCFG_TTEN_MASK;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structCAN__Type_1a8a203a84a26491d0bb5de5a8aa5e64f4" kindref="member">CMD_STA_CMD_CTRL</ref><sp/>&amp;=<sp/>~CAN_CMD_STA_CMD_CTRL_TTTBM_MASK;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config-&gt;<ref refid="structcan__config__t_1a7206818b05e7ba6ea85cc907a73b5db1" kindref="member">use_lowlevel_timing_setting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__config__t_1a19af4b7bca348e7dab6a6fab042dd8ec" kindref="member">enable_canfd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" kindref="member">can_set_bit_timing</ref>(base,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8h_1a319c88eb66af8bd9728187814747f281" kindref="member">can_bit_timing_canfd_nominal</ref>,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a26a3705b7540fdef272f64d0bd648093" kindref="member">baudrate</ref>,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a9386ca9c2dca1c7b9fced166c881fb55" kindref="member">can20_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a3dad57f38e4b79bd0efd5d1cd9c9da45" kindref="member">can20_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" kindref="member">can_set_bit_timing</ref>(base,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8h_1a7d28865087c13478e6ea1108372831b0" kindref="member">can_bit_timing_canfd_data</ref>,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a69ff80bff54bc96b93299f36faa8ce93" kindref="member">baudrate_fd</ref>,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a5fa6835023ed8d5014d2210987a799e8" kindref="member">canfd_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1aa42adfd1ec2219bb60e127f3ce3bebf1" kindref="member">canfd_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" kindref="member">can_set_bit_timing</ref>(base,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__can__drv_8h_1af0844b6ef860ab2c22a93ac812e1d0e0" kindref="member">can_bit_timing_can2_0</ref>,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a26a3705b7540fdef272f64d0bd648093" kindref="member">baudrate</ref>,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a9386ca9c2dca1c7b9fced166c881fb55" kindref="member">can20_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structcan__config__t_1a3dad57f38e4b79bd0efd5d1cd9c9da45" kindref="member">can20_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__config__t_1a19af4b7bca348e7dab6a6fab042dd8ec" kindref="member">enable_canfd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>param_valid<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" kindref="member">is_can_bit_timing_param_valid</ref>(<ref refid="hpm__can__drv_8h_1a319c88eb66af8bd9728187814747f281" kindref="member">can_bit_timing_canfd_nominal</ref>,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1a5bbb9370ef5b01a66005150242d14ac9" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55babeeddfad79514084285efc9faa28a769" kindref="member">status_can_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_valid<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" kindref="member">is_can_bit_timing_param_valid</ref>(<ref refid="hpm__can__drv_8h_1a7d28865087c13478e6ea1108372831b0" kindref="member">can_bit_timing_canfd_data</ref>,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1aa11e26fba38169f73ddd83e4825d6699" kindref="member">canfd_timing</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55babeeddfad79514084285efc9faa28a769" kindref="member">status_can_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga47e798ab81b91c1d129685cd54a6c2b9" kindref="member">can_set_slow_speed_timing</ref>(base,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1a5bbb9370ef5b01a66005150242d14ac9" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga87a6964bf3e2d2ad391b626c60f79363" kindref="member">can_set_fast_speed_timing</ref>(base,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1aa11e26fba38169f73ddd83e4825d6699" kindref="member">canfd_timing</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>param_valid<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a724f5be942293b17d1aff86de97b9088" kindref="member">is_can_bit_timing_param_valid</ref>(<ref refid="hpm__can__drv_8h_1af0844b6ef860ab2c22a93ac812e1d0e0" kindref="member">can_bit_timing_can2_0</ref>,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1a5bbb9370ef5b01a66005150242d14ac9" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55babeeddfad79514084285efc9faa28a769" kindref="member">status_can_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga47e798ab81b91c1d129685cd54a6c2b9" kindref="member">can_set_slow_speed_timing</ref>(base,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1a5bbb9370ef5b01a66005150242d14ac9" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>Transmitter<sp/>Delay<sp/>Compensation<sp/>as<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ssp_offset<sp/>=<sp/><ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ae7a26b0a4218b9024a3b2366a3da4430" kindref="member">CAN_F_PRESC_F_SEG_1_GET</ref>(base-&gt;<ref refid="structCAN__Type_1a5e423b8950a8850dfe17f30ab9e4ca26" kindref="member">F_PRESC</ref>)<sp/>+<sp/>2U;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gabaaf1ac9262c86fad5f3ca03c9abe63f" kindref="member">can_set_transmitter_delay_compensation</ref>(base,<sp/>ssp_offset,<sp/>config-&gt;<ref refid="structcan__config__t_1a07b274815a5956ebe5247027fdd604de" kindref="member">enable_tdc</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>the<sp/>CAN<sp/>filters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__config__t_1af51a142c8ed9655c03d40eee6e246b4e" kindref="member">filter_list_num</ref><sp/>&gt;<sp/><ref refid="hpm__can__drv_8c_1a81052210f9a150efbad74dcf30b4287a" kindref="member">CAN_FILTER_NUM_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gga06fc87d81c62e9abb8790b6e5713c55bac0d5ba8473773f14d321b14e16c8631f" kindref="member">status_can_filter_num_invalid</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structcan__config__t_1af51a142c8ed9655c03d40eee6e246b4e" kindref="member">filter_list_num</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcan__filter__config__t" kindref="compound">can_filter_config_t</ref><sp/>default_filter<sp/>=<sp/><ref refid="hpm__can__drv_8c_1a27407425a217f08c23091a03d54ea4f8" kindref="member">CAN_DEFAULT_FILTER_SETTING</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="hpm__can__drv_8c_1a81052210f9a150efbad74dcf30b4287a" kindref="member">CAN_FILTER_NUM_MAX</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga113d609ad117311b29f09a17f4052520" kindref="member">can_disable_filter</ref>(base,<sp/>i);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/><ref refid="group__can__interface_1gae03b8c0387b3a0867505f5781ae35214" kindref="member">can_set_filter</ref>(base,<sp/>&amp;default_filter);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="hpm__can__drv_8c_1a81052210f9a150efbad74dcf30b4287a" kindref="member">CAN_FILTER_NUM_MAX</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga113d609ad117311b29f09a17f4052520" kindref="member">can_disable_filter</ref>(base,<sp/>i);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>config-&gt;<ref refid="structcan__config__t_1af51a142c8ed9655c03d40eee6e246b4e" kindref="member">filter_list_num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__can__interface_1gae03b8c0387b3a0867505f5781ae35214" kindref="member">can_set_filter</ref>(base,<sp/>&amp;config-&gt;<ref refid="structcan__config__t_1a2a5d639bd208e3106b57bed936e348b1" kindref="member">filter_list</ref>[i]);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CAN<sp/>FD<sp/>standard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga84ebb3675b0698af0bd572b6dff7888c" kindref="member">can_enable_can_fd_iso_mode</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a5326dd1b36dfc6efe18dd07fc6a26e4d" kindref="member">enable_can_fd_iso_mode</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gab6e2a05f695556c4b536c204d124f7f9" kindref="member">can_reset</ref>(base,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>mode<sp/>must<sp/>be<sp/>set<sp/>when<sp/>the<sp/>CAN<sp/>controller<sp/>is<sp/>not<sp/>in<sp/>reset<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>re-transmission<sp/>on<sp/>PTB<sp/>on<sp/>demand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga435ea033e91254b240a3d2692c593f5f" kindref="member">can_disable_ptb_retransmission</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a6436316a8a55217dc68c09f69edcb3f3" kindref="member">disable_ptb_retransmission</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>re-transmission<sp/>on<sp/>STB<sp/>on<sp/>demand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gae65f034449e099c9d1416fec6ff6f65d" kindref="member">can_disable_stb_retransmission</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1aa536f53638875b64336d3b23c9ddeda5" kindref="member">disable_stb_retransmission</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>Self-ack<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga6d8473a6062662c406d835816853640c" kindref="member">can_enable_self_ack</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a5bbbb8061d661470534c4c161f85aecb" kindref="member">enable_self_ack</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>CAN<sp/>work<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga0546791b59326060a6572a93cbcd4fc4" kindref="member">can_set_node_mode</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a8c5cf03988f9268851dabd73ab9c82c2" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>TX<sp/>Buffer<sp/>priority<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gace7f0b6c493ba5dffd840fdcd96d4477" kindref="member">can_select_tx_buffer_priority_mode</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1aa0da6fd6a6d9956a8ffd57f33ffe5b44" kindref="member">enable_tx_buffer_priority_mode</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gae1be4b29b7474bf9c64769daf92bb54e" kindref="member">can_disable_tx_rx_irq</ref>(base,<sp/>0xFFU);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga65457c022f3c55f288bf37942809ccc3" kindref="member">can_disable_error_irq</ref>(base,<sp/>0xFFU);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gacd2e45edae3c77e25a15cfd58b0e04d2" kindref="member">can_enable_tx_rx_irq</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a48bd1ee8818eecc1ac71315a4bc715e8" kindref="member">irq_txrx_enable_mask</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga883ad3561bd3d6db480fe026cd2edf3a" kindref="member">can_enable_error_irq</ref>(base,<sp/>config-&gt;<ref refid="structcan__config__t_1a09d5b060e49721baa8831c7cc77a213b" kindref="member">irq_error_enable_mask</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__can__interface_1ga5f816882c2c1001ca8381608deab446c" kindref="member">can_deinit</ref>(<ref refid="structCAN__Type" kindref="compound">CAN_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(base<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1ga0c6069b848881509e94d03531cb9523e" kindref="member">can_force_bus_off</ref>(base);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__can__interface_1gab6e2a05f695556c4b536c204d124f7f9" kindref="member">can_reset</ref>(base,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_can_drv.c"/>
  </compounddef>
</doxygen>
