<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__tamper__interface" kind="group">
    <compoundname>tamper_interface</compoundname>
    <title>TAMPER driver APIs</title>
    <innerclass refid="structtamper__ch__config__t" prot="public">tamper_ch_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__tamper__interface_1gac4ee9125b204c562a60d3dda5bcd64ab" prot="public" static="no" strong="no">
        <type></type>
        <name>tamper_speed_t</name>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba1a2b1122e3f0e0eae32500a4b42f5ece" prot="public">
          <name>spd_1_time_per_sec</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba7e312093cc6aedc55a6161fcde001fda" prot="public">
          <name>spd_2_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba7013db21c5c4459e13630eded9cb9514" prot="public">
          <name>spd_4_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64abacf5f2cb8f5fb915ed7836027239bccf4" prot="public">
          <name>spd_8_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba9f64ac3476484cd031cb0da1d31102fb" prot="public">
          <name>spd_16_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64abaddcc086c4f14e371c3993068db2188aa" prot="public">
          <name>spd_32_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64abad5e6d28003f6b82dfcf61f14d0cd0673" prot="public">
          <name>spd_64_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba209f93e10c6fd4c93538d8fb6b9a5213" prot="public">
          <name>spd_128_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba78083ab5e5fd3cd2537bca323ee1585d" prot="public">
          <name>spd_256_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba2e12bc50fa61d0c1cdf0cd36b4acd6ce" prot="public">
          <name>spd_512_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba740c5d2ea20d8a8900a4fe1b6dc655b8" prot="public">
          <name>spd_1024_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64abae167f5ffdf5ce15ce920f92eeb640512" prot="public">
          <name>spd_2048_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba53f4d2808f14565253b0d1b78d32ca60" prot="public">
          <name>spd_4096_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba272d02b41a5d7f9c5ca7f7708a4a788e" prot="public">
          <name>spd_8192_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64aba52997f1fba05fd3a8cb5567d06bbd80f" prot="public">
          <name>spd_16384_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1ggac4ee9125b204c562a60d3dda5bcd64abaebc10b9bdf5147b8c936dc919ba7dd67" prot="public">
          <name>spd_32768_times_per_sec</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="22" column="1" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="22" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="group__tamper__interface_1ga5cae09a02974372220e854cd1db05ec9" prot="public" static="no" strong="no">
        <type></type>
        <name>tamper_filter_len_t</name>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9ae61846d6011ed21a83568087ee4b3bef" prot="public">
          <name>filter_len_1_cycle</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9af4aacbd3063b84d0a175c27e30176ab2" prot="public">
          <name>filter_len_2_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a26c94ecb2f66dd48001da580080fe407" prot="public">
          <name>filter_len_4_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a9ba8c3655c015a0995c9b8f99a2d2160" prot="public">
          <name>filter_len_8_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a01a34f0fa869de8033d8c940d6a38244" prot="public">
          <name>filter_len_16_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9ae2c90008dca64092be9e024f9965b573" prot="public">
          <name>filter_len_32_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9adf2b34a40ec227f03170bcbca6843435" prot="public">
          <name>filter_len_64_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a28c399feefde5fb9a31a7da419f66f16" prot="public">
          <name>filter_len_128_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9ac5c543bc09bed2b4687e75e715ef7857" prot="public">
          <name>filter_len_256_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9ac935449f12fd6be36d326d8e36f00f46" prot="public">
          <name>filter_len_512_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9ad6d802b5e683dbd853b5859005cae228" prot="public">
          <name>filter_len_1024_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a3fb6fbdac8f3154607a72495a20e7c13" prot="public">
          <name>filter_len_2048_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a0b76df51c4b8ed4b6491e13e014cdd52" prot="public">
          <name>filter_len_4096_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a118459eff6dfb5e9828b000facac57ff" prot="public">
          <name>filter_len_8192_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9af4775a8ffac94b1f48fb53d9ec6b05f4" prot="public">
          <name>filter_len_16384_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tamper__interface_1gga5cae09a02974372220e854cd1db05ec9a20b77b1dae5f27ac2766b350d9099586" prot="public">
          <name>filter_len_32768_cycles</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="41" column="1" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="41" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__tamper__interface_1ga43681cd07291d044443880a86d8ea7bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tamp_init_ch_config</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch, tamper_ch_config_t *config)</argsstring>
        <name>tamp_init_ch_config</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="structtamper__ch__config__t" kindref="compound">tamper_ch_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Init tamper channel config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel config struct pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="85" column="6" bodyfile="drivers/src/hpm_tamp_drv.c" bodystart="10" bodyend="22" declfile="drivers/inc/hpm_tamp_drv.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga9a1105d5ff57aac8786b4eb87bba095c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tamp_get_default_ch_config</definition>
        <argsstring>(TAMP_Type *ptr, tamper_ch_config_t *config)</argsstring>
        <name>tamp_get_default_ch_config</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structtamper__ch__config__t" kindref="compound">tamper_ch_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get tamper default channel config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper default channel config struct pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="94" column="6" bodyfile="drivers/src/hpm_tamp_drv.c" bodystart="24" bodyend="36" declfile="drivers/inc/hpm_tamp_drv.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1gaf4df61136d18d4dc36e9cf58c507e0ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_set_ch_enable</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch, bool enable)</argsstring>
        <name>tamp_set_ch_enable</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set tamper channel enable or disable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true - enable tamper, false - disable tamper </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="104" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="104" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga69d33a83656b088b2d263854749252ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_set_ch_config_lock</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch, bool lock)</argsstring>
        <name>tamp_set_ch_config_lock</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
<para>Set tamper channel config lock or unlock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock</parametername>
</parameternamelist>
<parameterdescription>
<para>true - config lock, false - config unlock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="122" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="122" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga19dd1a549d9a0d3451c1dc77e2aaacb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t tamp_get_flags</definition>
        <argsstring>(TAMP_Type *ptr)</argsstring>
        <name>tamp_get_flags</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get tamper all channel flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>all channel flags </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="139" column="24" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1gac2b8fdd8226247f96269e075b7a1950f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_clear_flags</definition>
        <argsstring>(TAMP_Type *ptr, uint32_t flags)</argsstring>
        <name>tamp_clear_flags</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear tamper flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>clear channel flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="151" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1gad7d474562e2e01843d90df242bac9ae8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tamp_check_ch_flag</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch)</argsstring>
        <name>tamp_check_ch_flag</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Check tamper channel flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>TAMPER base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true - flag is set, false - falg is unset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="164" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga649513b589617642fea2c5041ea72969" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_clear_ch_flag</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch)</argsstring>
        <name>tamp_clear_ch_flag</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Clear tamper channel flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>TAMPER base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="176" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga8c23ec623f8d6bbed12a82fa2c10866f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_enable_ch_irq</definition>
        <argsstring>(TAMP_Type *ptr, uint8_t ch, bool enable)</argsstring>
        <name>tamp_enable_ch_irq</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set tamper channel irq enable or disable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>TAMPER base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true - irq enable, false - irq disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="189" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="189" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="group__tamper__interface_1ga4fe7e87765ca10f6a29d56b767366e54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tamp_set_irq_lock</definition>
        <argsstring>(TAMP_Type *ptr, bool lock)</argsstring>
        <name>tamp_set_irq_lock</name>
        <param>
          <type><ref refid="structTAMP__Type" kindref="compound">TAMP_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lock</declname>
        </param>
        <briefdescription>
<para>Set tamper irq lock or unlock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>tamper base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock</parametername>
</parameternamelist>
<parameterdescription>
<para>true - irq lock, false - irq unlock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_tamp_drv.h" line="205" column="20" bodyfile="drivers/inc/hpm_tamp_drv.h" bodystart="205" bodyend="212"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>TAMPER driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
