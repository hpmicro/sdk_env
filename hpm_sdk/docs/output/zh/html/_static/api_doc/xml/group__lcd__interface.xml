<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__lcd__interface" kind="group">
    <compoundname>lcd_interface</compoundname>
    <title>LCD driver APIs</title>
    <innerclass refid="structlcdc__control" prot="public">lcdc_control</innerclass>
    <innerclass refid="structlcdc__xsync__config" prot="public">lcdc_xsync_config</innerclass>
    <innerclass refid="structlcdc__config" prot="public">lcdc_config</innerclass>
    <innerclass refid="structlcdc__layer__config" prot="public">lcdc_layer_config</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lcd__interface_1gad096a51ec1af43a3bef1c2f3045ce928" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__lcd__interface_1ggad096a51ec1af43a3bef1c2f3045ce928a5ac506e0f76f957ddb4a86402bde06fe" prot="public">
          <name>status_lcdc_no_active_layer_yet</name>
          <initializer>=  ((uint32_t)(status_group_lcdc)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggad096a51ec1af43a3bef1c2f3045ce928aa27260d3e7c97fae14ccbb988aa29b05" prot="public">
          <name>status_lcdc_layer_not_supported</name>
          <initializer>=  ((uint32_t)(status_group_lcdc)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="29" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_line_pattern</name>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aca0adaf72d4677defc5bc6d923f7e87a" prot="public">
          <name>lcdc_line_pattern_rgb</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aba41f0e661dd312cee08f57cf6a7c8b3" prot="public">
          <name>lcdc_line_pattern_rbg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6aab29a99c5cd4ca1c302a3300a7127357" prot="public">
          <name>lcdc_line_pattern_gbr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6adb8938fe1232bf4fff9390b0be9621e8" prot="public">
          <name>lcdc_line_pattern_grb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6af2c7132e2c4a7884412fcf5e85aca898" prot="public">
          <name>lcdc_line_pattern_brg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggac8baeee654d9bd5162e70955f6590dd6ab1bea42405e8cc07530c88ef11531a76" prot="public">
          <name>lcdc_line_pattern_bgr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="35" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="35" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_display_mode</name>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba250e3d53f02b0bcffd9e3f31c45c8733" prot="public">
          <name>lcdc_display_mode_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08bab6c6d57cadccf3272afa904af51fc852" prot="public">
          <name>lcdc_display_mode_test_mode_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba237710209146b2179d3ceeadcb0ca69d" prot="public">
          <name>lcdc_display_mode_test_mode_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1ggace4b674064d39a3e2d28d39cc47ed08ba85250add35513c14d8c8c68160351cf8" prot="public">
          <name>lcdc_display_mode_test_mode_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="45" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" prot="public" static="no" strong="no">
        <type></type>
        <name>lcdc_layer_max_bytes_per_transfer</name>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a941c845cd1cb12d64328e2b0b2a9523d" prot="public">
          <name>lcdc_layer_max_bytes_64</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473aa0f68132e15d234b9192db891ebcbd1d" prot="public">
          <name>lcdc_layer_max_bytes_128</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a3329228a351ad5155f47531cba4f9aa9" prot="public">
          <name>lcdc_layer_max_bytes_256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1a7e2222559a38db8d8a0204e952c5c3" prot="public">
          <name>lcdc_layer_max_bytes_512</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lcd__interface_1gga3ac0b02cfa9dfea7d4f6afea26866473a1d43fa423a10d94a763211609ecf2077" prot="public">
          <name>lcdc_layer_max_bytes_1024</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="53" column="1" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="53" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lcd__interface_1gaeb9b6aa8e37e2ecc814cbc10f1b1fdfc" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1gac8baeee654d9bd5162e70955f6590dd6" kindref="member">lcdc_line_pattern</ref></type>
        <definition>typedef enum lcdc_line_pattern lcdc_line_pattern_t</definition>
        <argsstring></argsstring>
        <name>lcdc_line_pattern_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="42" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga1d1353e5d3a62b664c37e8654fc07ab4" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1gace4b674064d39a3e2d28d39cc47ed08b" kindref="member">lcdc_display_mode</ref></type>
        <definition>typedef enum lcdc_display_mode lcdc_display_mode_t</definition>
        <argsstring></argsstring>
        <name>lcdc_display_mode_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="50" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga0272f1dd52fd2261a6e00c21ab69e669" prot="public" static="no">
        <type>enum <ref refid="group__lcd__interface_1ga3ac0b02cfa9dfea7d4f6afea26866473" kindref="member">lcdc_layer_max_bytes_per_transfer</ref></type>
        <definition>typedef enum lcdc_layer_max_bytes_per_transfer lcdc_layer_max_bytes_per_transfer_t</definition>
        <argsstring></argsstring>
        <name>lcdc_layer_max_bytes_per_transfer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="59" column="37"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga8f87b673193f2a1cccdb8fcb90eaa931" prot="public" static="no">
        <type>struct <ref refid="structlcdc__control" kindref="compound">lcdc_control</ref></type>
        <definition>typedef struct lcdc_control lcdc_control_t</definition>
        <argsstring></argsstring>
        <name>lcdc_control_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="70" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga864f51e879f69ddeb9930e7f9a96042a" prot="public" static="no">
        <type>struct <ref refid="structlcdc__xsync__config" kindref="compound">lcdc_xsync_config</ref></type>
        <definition>typedef struct lcdc_xsync_config lcdc_xsync_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_xsync_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="77" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" prot="public" static="no">
        <type>struct <ref refid="structlcdc__config" kindref="compound">lcdc_config</ref></type>
        <definition>typedef struct lcdc_config lcdc_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="87" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" prot="public" static="no">
        <type>struct <ref refid="structlcdc__layer__config" kindref="compound">lcdc_layer_config</ref></type>
        <definition>typedef struct lcdc_layer_config lcdc_layer_config_t</definition>
        <argsstring></argsstring>
        <name>lcdc_layer_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="105" column="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__lcd__interface_1gaca8744ccbaf1a274ca2a659048b6f67e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_software_reset</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_software_reset</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Layer config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="117" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga574ca415d8b9f0832ab2d52b5df4af90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_enable_interrupt</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t interrupt_mask)</argsstring>
        <name>lcdc_enable_interrupt</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupt according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="130" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae656bf3a25f6f2cdeb0604555d070529" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_disable_interrupt</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t interrupt_mask)</argsstring>
        <name>lcdc_disable_interrupt</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupt according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="142" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab8c85a0ceecf7639bbc3cd2fcaa18a4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_clear_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_clear_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear specific status according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Status mask of status to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="154" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga4a61faf4d1467b887ca6b7eb9e6acb71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_layer_control_shadow_loaded</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index)</argsstring>
        <name>lcdc_layer_control_shadow_loaded</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Make layer control shadow registers take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of layer to be controlled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="166" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga46763020b7422cbf42f5f4c4eeb975db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lcdc_get_dma_status</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_get_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get DMA status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DMA</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="178" column="24" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaad71d0dc1862ea893a65af2faf1e44e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_check_dma_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_check_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check DMA status against the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected DMA status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if all bits set to 1 in mask are set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if any bit set to 1 in mask is not set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="192" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga91b1d6d93d8b501c34a8577d298c7e24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_clear_dma_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_clear_dma_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear DMA status according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected DMA status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="204" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad58708966231705405111327c0831ea7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t lcdc_get_status</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_get_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>current</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="216" column="24" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga7e368098c2b81d53566e5b1d008a1aa8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool lcdc_check_status</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t mask)</argsstring>
        <name>lcdc_check_status</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Check status against the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of expected status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if all bits set to 1 in mask are set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if any bit set to 1 in mask is not set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="230" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga003ef157d362cfd3269703a47a2977be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_set_next_buffer</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index, uint32_t buffer)</argsstring>
        <name>lcdc_layer_set_next_buffer</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Set next buffer for certain layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>display buffer to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="243" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga690f2cdcd596a43791aa83466625b5e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_background</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, display_color_32b_t background)</argsstring>
        <name>lcdc_layer_update_background</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1gad391a163a4166553135c8e5e8fa5b1a1" kindref="member">display_color_32b_t</ref></type>
          <declname>background</declname>
        </param>
        <briefdescription>
<para>Update specific layer background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">background</parametername>
</parameternamelist>
<parameterdescription>
<para>color to be set as background </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="257" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga324db591eddb10957918a6781e275ea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_position</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint16_t x, uint32_t y)</argsstring>
        <name>lcdc_layer_update_position</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Update specific layer position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Position X coord </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>Position Y coord </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="273" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga022e9c7867a95c631fdda3a785ee3170" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update_dimension</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint8_t width, uint8_t height)</argsstring>
        <name>lcdc_layer_update_dimension</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Update specific layer dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width in pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height in pixel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="290" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="290" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gafab5498c611abef8ec7b7cb0f4253a8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_set_region</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)</argsstring>
        <name>lcdc_layer_set_region</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
<para>Update specific layer region. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
</parameternamelist>
<parameterdescription>
<para>X coord of the top left pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y1</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coord of the top left pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x2</parametername>
</parameternamelist>
<parameterdescription>
<para>X coord of the bottom right pixel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y2</parametername>
</parameternamelist>
<parameterdescription>
<para>Y coord of the bottom right pixel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="309" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="309" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad7a75cfa1242bc88e90d6c8ec8780406" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_update</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index)</argsstring>
        <name>lcdc_layer_update</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Update specific layer configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="326" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae6fa4c9cae9fb980692a3e7af37b891b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_enable</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index)</argsstring>
        <name>lcdc_layer_enable</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Enable specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="338" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga746402452749ebe1c65fe09353732ded" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_layer_disable</definition>
        <argsstring>(LCDC_Type *ptr, uint32_t layer_index)</argsstring>
        <name>lcdc_layer_disable</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Disable specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="351" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="351" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga4c7dea3a91b3cfdf6f79de939bcccd9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_set_testmode</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t test_mode)</argsstring>
        <name>lcdc_set_testmode</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>test_mode</declname>
        </param>
        <briefdescription>
<para>Set test mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">test_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>target test mode to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="365" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="365" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga3eec4612d5db08ad03ebe155bf38728f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_set_background</definition>
        <argsstring>(LCDC_Type *ptr, display_color_32b_t color)</argsstring>
        <name>lcdc_set_background</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1gad391a163a4166553135c8e5e8fa5b1a1" kindref="member">display_color_32b_t</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set background. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">color</parametername>
</parameternamelist>
<parameterdescription>
<para>background color </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="379" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1ga9bd64357e9fc54c3516894646f32bbc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_enable_background_in_alpha_blender</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_enable_background_in_alpha_blender</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable background on alpha blender </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it not depend the background color of the layer itself. it can be used with lcdc_set_background API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="395" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad32de1a11167d5e54fc47464b0b9cf0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lcdc_disable_background_in_alpha_blender</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_disable_background_in_alpha_blender</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable background on alpha blender </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if not use background but want depend the the background color of the layer itself, can be use the API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="408" column="20" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab00cf80546531f73627e151d9cd60dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_get_default_layer_config</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_layer_config_t *layer, display_pixel_format_t pixel_format, uint8_t layer_index)</argsstring>
        <name>lcdc_get_default_layer_config</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" kindref="member">lcdc_layer_config_t</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="group__Display__common__interface_1ga3609d1a38c447089436d67c313916bf8" kindref="member">display_pixel_format_t</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <briefdescription>
<para>Get default layer configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of layer configuration struct buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Pixel format to be used for this layer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="421" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="51" bodyend="111" declfile="drivers/inc/hpm_lcdc_drv.h" declline="421" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gab6c13f8160459eea736fa9f9712cb5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_get_default_config</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_config_t *config)</argsstring>
        <name>lcdc_get_default_config</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" kindref="member">lcdc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default configuration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of configuration struct buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="431" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="113" bodyend="133" declfile="drivers/inc/hpm_lcdc_drv.h" declline="431" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaf6614a25a45db9947bb8c64145913a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_init</definition>
        <argsstring>(LCDC_Type *ptr, lcdc_config_t *config)</argsstring>
        <name>lcdc_init</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga1618096149b89f53016e8ca7218ef0ef" kindref="member">lcdc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize LCD controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of configuration struct buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="440" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="165" bodyend="190" declfile="drivers/inc/hpm_lcdc_drv.h" declline="440" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gad1d4855261cdfef944230cbc874795c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t lcdc_config_layer</definition>
        <argsstring>(LCDC_Type *ptr, uint8_t layer_index, lcdc_layer_config_t *layer_config, bool enable_layer)</argsstring>
        <name>lcdc_config_layer</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>layer_index</declname>
        </param>
        <param>
          <type><ref refid="group__lcd__interface_1ga66b7b8fa0bb34db0052ca10dd75cde43" kindref="member">lcdc_layer_config_t</ref> *</type>
          <declname>layer_config</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_layer</declname>
        </param>
        <briefdescription>
<para>Configure specific layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_index</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">layer_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of layer configuration struct buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_layer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true if the layer needs to be enabled right after being configured </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="451" column="12" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="192" bodyend="259" declfile="drivers/inc/hpm_lcdc_drv.h" declline="451" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gaa97b8a406e9092722a63e60b7df387ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_turn_on_display</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_turn_on_display</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Turn on display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="460" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="281" bodyend="286" declfile="drivers/inc/hpm_lcdc_drv.h" declline="460" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__lcd__interface_1gae40d2ac8aaf7c927b561a8609f39c3d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lcdc_turn_off_display</definition>
        <argsstring>(LCDC_Type *ptr)</argsstring>
        <name>lcdc_turn_off_display</name>
        <param>
          <type><ref refid="structLCDC__Type" kindref="compound">LCDC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Turn off display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>LCD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="468" column="6" bodyfile="drivers/src/hpm_lcdc_drv.c" bodystart="261" bodyend="279" declfile="drivers/inc/hpm_lcdc_drv.h" declline="468" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__lcd__interface_1gaeabbe9167bb40d69fc7b73605892c4fd" prot="public" static="no">
        <name>LCDC_TEST_MODE_DISABLE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1gadcbebef1d3fdc51c7d1270d1c17f8b81" prot="public" static="no">
        <name>LCDC_TEST_MODE_BACKGROUND</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1gabf2b80ad1f1ea0b7ac7f61a84fb12445" prot="public" static="no">
        <name>LCDC_TEST_MODE_COLOR_BAR_COL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__lcd__interface_1ga4109f2ce073dabcc0f1e8f6fa00fe713" prot="public" static="no">
        <name>LCDC_TEST_MODE_COLOR_BAR_ROW</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_lcdc_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_lcdc_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>LCD driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
