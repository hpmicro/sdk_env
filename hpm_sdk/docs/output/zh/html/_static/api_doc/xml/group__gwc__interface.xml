<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__gwc__interface" kind="group">
    <compoundname>gwc_interface</compoundname>
    <title>GWC driver APIs</title>
    <innerclass refid="structgwc__ch__config" prot="public">gwc_ch_config</innerclass>
    <innerclass refid="structgwc__config" prot="public">gwc_config</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" prot="public" static="no" strong="no">
        <type></type>
        <name>gwc_clk_pol</name>
        <enumvalue id="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a19719b0c58b147bb9cd3de11ff6147e9" prot="public">
          <name>gwc_clk_pol_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gwc__interface_1gga7f15ecf2e18d21552dd9b824c8191229a75d34f62186fc926b781ec382509da5d" prot="public">
          <name>gwc_clk_pol_invert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>gwc clk polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="39" column="1" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="39" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" prot="public" static="no">
        <type>struct <ref refid="structgwc__ch__config" kindref="compound">gwc_ch_config</ref></type>
        <definition>typedef struct gwc_ch_config gwc_ch_config_t</definition>
        <argsstring></argsstring>
        <name>gwc_ch_config_t</name>
        <briefdescription>
<para>gwc channel config </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>area of channel do not overlap. in other words, eache pixel belongs to a single channel at most. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="34" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gwc__interface_1ga95486f7e4cd2b6cdfa51b57c8f828a13" prot="public" static="no">
        <type>enum <ref refid="group__gwc__interface_1ga7f15ecf2e18d21552dd9b824c8191229" kindref="member">gwc_clk_pol</ref></type>
        <definition>typedef enum gwc_clk_pol gwc_clk_pol_t</definition>
        <argsstring></argsstring>
        <name>gwc_clk_pol_t</name>
        <briefdescription>
<para>gwc clk polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="42" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" prot="public" static="no">
        <type>struct <ref refid="structgwc__config" kindref="compound">gwc_config</ref></type>
        <definition>typedef struct gwc_config gwc_config_t</definition>
        <argsstring></argsstring>
        <name>gwc_config_t</name>
        <briefdescription>
<para>gwc config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="49" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__gwc__interface_1ga4cb3ae657db0cf911027977ccb875d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_get_default_config</definition>
        <argsstring>(gwc_config_t *cfg)</argsstring>
        <name>gwc_get_default_config</name>
        <param>
          <type><ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC config <ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="60" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="11" bodyend="14" declfile="drivers/inc/hpm_gwc_drv.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga49ff1d81c432761c128143ba0d53eecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_init</definition>
        <argsstring>(GWC_Type *ptr, gwc_config_t *cfg)</argsstring>
        <name>gwc_init</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC config <ref refid="group__gwc__interface_1ga7fe65c1c3b3b9bd752979c11a9d8eadd" kindref="member">gwc_config_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the function is called while gwc is disable only </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="70" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="16" bodyend="19" declfile="drivers/inc/hpm_gwc_drv.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1gadd59eb4f7c8c5f899b47e3512d01624d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_enable</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_enable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="77" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="21" bodyend="24" declfile="drivers/inc/hpm_gwc_drv.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga0f5299826216b6930aed2110b19c285d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_disable</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_disable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable the gwc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="84" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="26" bodyend="29" declfile="drivers/inc/hpm_gwc_drv.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga8c04beeb1aac1d1e7981bcf44c665e48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_enable_interrupt</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_enable_interrupt</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable interrupts </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupt events that would be enabled <ref refid="hpm__gwc__regs_8h_1af5137bb2e1f1cb852a3bfd1b1fb81bd9" kindref="member">GWC_IRQ_MASK_ERR_MASK_MASK</ref> <ref refid="hpm__gwc__regs_8h_1a7f8041ddb5981e239f05123a6b235b7a" kindref="member">GWC_IRQ_MASK_FUNC_MASK_MASK</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="94" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga2f1084ecbb1496b011ea6ac55d4471ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_disable_interrupt</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_disable_interrupt</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of interrupt events that would be enabled. <ref refid="hpm__gwc__regs_8h_1af5137bb2e1f1cb852a3bfd1b1fb81bd9" kindref="member">GWC_IRQ_MASK_ERR_MASK_MASK</ref> <ref refid="hpm__gwc__regs_8h_1a7f8041ddb5981e239f05123a6b235b7a" kindref="member">GWC_IRQ_MASK_FUNC_MASK_MASK</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="107" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga1bfe9d8f044ecb45c02061f44f04b974" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gwc_get_status</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_get_status</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get gwc status flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>gwc status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="118" column="24" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga31ba768324a851c1f5f9153dc4dba237" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_clear_status</definition>
        <argsstring>(GWC_Type *ptr, uint32_t mask)</argsstring>
        <name>gwc_clear_status</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear gwc status flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>logical OR&apos;ed of GWC_IRQ_STS_XXX_STS_MASK </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="129" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga80fb83e3dae9db0904bdee9ef4516e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_freeze_interrupt_control</definition>
        <argsstring>(GWC_Type *ptr)</argsstring>
        <name>gwc_freeze_interrupt_control</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable change of interrupt masks </para>
        </briefdescription>
        <detaileddescription>
<para>Once this function is called, the interrupt enabled status could not be changed until reset.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="142" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="31" bodyend="34" declfile="drivers/inc/hpm_gwc_drv.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1gaecb237bab2b19d150d49acf33abb3d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gwc_ch_init</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index, gwc_ch_config_t *cfg)</argsstring>
        <name>gwc_ch_init</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="group__gwc__interface_1gaa009847576947a2fa247bdf55abe0403" kindref="member">gwc_ch_config_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>init gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>config of gwc channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the function is called while gwc channel is disable only </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="153" column="6" bodyfile="drivers/src/hpm_gwc_drv.c" bodystart="36" bodyend="45" declfile="drivers/inc/hpm_gwc_drv.h" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga0fcf1250fd62d087c6876a8587de39c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_ch_enable</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_enable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>enable gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="161" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga82012ad61f72f52fcdd46d9b8249e3ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gwc_ch_disable</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_disable</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>disable gwc channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="173" column="20" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__gwc__interface_1ga54a5b2501cb787563ebef17d9077a88d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gwc_ch_get_crc</definition>
        <argsstring>(GWC_Type *ptr, uint8_t ch_index)</argsstring>
        <name>gwc_ch_get_crc</name>
        <param>
          <type><ref refid="structGWC__Type" kindref="compound">GWC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>get gwc channel calc crc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GWC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index ref GWC_CHANNEL_CHn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gwc_drv.h" line="185" column="24" bodyfile="drivers/inc/hpm_gwc_drv.h" bodystart="185" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>GWC APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
