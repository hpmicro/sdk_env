<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__filter_8c" kind="file" language="C++">
    <compoundname>hpm_mcl_filter.c</compoundname>
    <includes refid="hpm__mcl__common_8h" local="yes">hpm_mcl_common.h</includes>
    <includes refid="hpm__mcl__filter_8h" local="yes">hpm_mcl_filter.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c</label>
        <link refid="hpm__mcl__filter_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hpm_mcl_filter.h</label>
        <link refid="hpm__mcl__filter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="2">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__filter_8c_1a71a6d34aa70cad2f189ce715b260a93d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_filter_iir_df1_init</definition>
        <argsstring>(mcl_filter_iir_df1_t *iir, mcl_filter_iir_df1_cfg_t *cfg, mcl_filter_iir_df1_memory_t *mem)</argsstring>
        <name>hpm_mcl_filter_iir_df1_init</name>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> *</type>
          <declname>iir</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__cfg__t" kindref="compound">mcl_filter_iir_df1_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>Initialising the iir filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iir</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__cfg__t" kindref="compound">mcl_filter_iir_df1_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mem</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" line="11" column="16" bodyfile="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" bodystart="11" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__filter_8c_1a2acfcbb9d64faac619b31ae9901f9491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hpm_mcl_filter_iir_df1</definition>
        <argsstring>(mcl_filter_iir_df1_t *iir, float input)</argsstring>
        <name>hpm_mcl_filter_iir_df1</name>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> *</type>
          <declname>iir</declname>
        </param>
        <param>
          <type>float</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>iir filtering of input data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iir</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>raw data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Filtered data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" line="23" column="7" bodyfile="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" bodystart="23" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__filter_8c_1afec402a6828056aeec3d1e3310589cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_filter_pll_type_i</definition>
        <argsstring>(mcl_filter_pll_type_i_t *pll, float sin_val, float cos_val, mcl_filter_pll_output_t *output)</argsstring>
        <name>hpm_mcl_filter_pll_type_i</name>
        <param>
          <type><ref refid="structmcl__filter__pll__type__i__t" kindref="compound">mcl_filter_pll_type_i_t</ref> *</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sin_val</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cos_val</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__pll__output__t" kindref="compound">mcl_filter_pll_output_t</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type I Phase-Locked Loop (PLL) Filter. This function processes the input signal to estimate the phase and speed of the signal.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structmcl__filter__pll__type__i__t" kindref="compound">mcl_filter_pll_type_i_t</ref> structure, containing the internal state and configuration of the PLL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sin_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The sine component of the input signal, used for phase difference calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cos_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The cosine component of the input signal, used for phase difference calculation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the <ref refid="structmcl__filter__pll__output__t" kindref="compound">mcl_filter_pll_output_t</ref> structure, for storing the output results including theta and speed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" line="49" column="6" bodyfile="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" bodystart="49" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__filter_8c_1ae3de02bbc76b4f3a5c37ae804e84b9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_filter_pll_type_ii</definition>
        <argsstring>(mcl_filter_pll_type_ii_t *pll, float sin_val, float cos_val, mcl_filter_pll_output_t *output)</argsstring>
        <name>hpm_mcl_filter_pll_type_ii</name>
        <param>
          <type><ref refid="structmcl__filter__pll__type__ii__t" kindref="compound">mcl_filter_pll_type_ii_t</ref> *</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sin_val</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cos_val</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__pll__output__t" kindref="compound">mcl_filter_pll_output_t</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type II Phase-Locked Loop (PLL) Filter. This function updates the PLL state based on the input sine and cosine values and calculates the output theta and speed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the PLL structure containing the state and configuration parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sin_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The sine value of the input signal, representing the sine component. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cos_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The cosine value of the input signal, representing the cosine component. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the output structure to store the computed theta and speed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" line="72" column="6" bodyfile="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c" bodystart="72" bodyend="99"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__common_8h" kindref="compound">hpm_mcl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__filter_8h" kindref="compound">hpm_mcl_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__filter_8c_1a71a6d34aa70cad2f189ce715b260a93d" kindref="member">hpm_mcl_filter_iir_df1_init</ref>(<ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref><sp/>*iir,<sp/><ref refid="structmcl__filter__iir__df1__cfg__t" kindref="compound">mcl_filter_iir_df1_cfg_t</ref><sp/>*cfg,<sp/><ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref><sp/>*mem)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(iir<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(mem<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref><sp/>=<sp/>mem;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref><sp/>=<sp/>cfg;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>,<sp/>0,<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1ac80ed0899a9ec325c600ec81d422c662" kindref="member">section</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref>));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__filter_8c_1a2acfcbb9d64faac619b31ae9901f9491" kindref="member">hpm_mcl_filter_iir_df1</ref>(<ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref><sp/>*iir,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>input)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(iir<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[0].<ref refid="structmcl__filter__iir__df1__memory__t_1a799366733af0fbf55eebdb95e4078131" kindref="member">x0</ref><sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1ac80ed0899a9ec325c600ec81d422c662" kindref="member">section</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1a48a2350b633f9e7cd452490b04701990" kindref="member">b0</ref><sp/>*<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a799366733af0fbf55eebdb95e4078131" kindref="member">x0</ref><sp/>+</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1a5de0fda6e557c33bc7344d08552ae9cc" kindref="member">b1</ref><sp/>*<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a9f00929bffbb4e6e21b6b226dd72fde7" kindref="member">x1</ref><sp/>+</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1ad101c8d95658d4cefa0ad2ae72070f8b" kindref="member">b2</ref><sp/>*<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a7fa302a9320fb14a27a8743838966722" kindref="member">x2</ref><sp/>-</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1ada42d940f6f3d0ef8f945a16ed5b22e6" kindref="member">a1</ref><sp/>*<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a62d968054661943810b643d01e5dfc59" kindref="member">y1</ref><sp/>-</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1a005dc9575ba99ca7eaf0a73f0d48d625" kindref="member">a2</ref><sp/>*<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a194dd69a07c56b5f2077a0d1964f4483" kindref="member">y2</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a7fa302a9320fb14a27a8743838966722" kindref="member">x2</ref><sp/>=<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a9f00929bffbb4e6e21b6b226dd72fde7" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a9f00929bffbb4e6e21b6b226dd72fde7" kindref="member">x1</ref><sp/>=<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a799366733af0fbf55eebdb95e4078131" kindref="member">x0</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a194dd69a07c56b5f2077a0d1964f4483" kindref="member">y2</ref><sp/>=<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a62d968054661943810b643d01e5dfc59" kindref="member">y1</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i].<ref refid="structmcl__filter__iir__df1__memory__t_1a62d968054661943810b643d01e5dfc59" kindref="member">y1</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>*=<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1abd045fd6d07da3749766429ad2afad40" kindref="member">matrix</ref>[i].<ref refid="structmcl__filter__iir__df1__matrix__t_1a8d7effa5e3760fc50aeca08cdff5e1ec" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i+1)<sp/>&lt;<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1ac80ed0899a9ec325c600ec81d422c662" kindref="member">section</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>[i+1].<ref refid="structmcl__filter__iir__df1__memory__t_1a799366733af0fbf55eebdb95e4078131" kindref="member">x0</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__filter_8c_1afec402a6828056aeec3d1e3310589cd4" kindref="member">hpm_mcl_filter_pll_type_i</ref>(<ref refid="structmcl__filter__pll__type__i__t" kindref="compound">mcl_filter_pll_type_i_t</ref><sp/>*pll,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_val,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_val,<sp/><ref refid="structmcl__filter__pll__output__t" kindref="compound">mcl_filter_pll_output_t</ref><sp/>*output)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>intermediate<sp/>variables<sp/>a0<sp/>to<sp/>a4<sp/>for<sp/>temporary<sp/>storage<sp/>during<sp/>calculations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0,<sp/>a1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>a0<sp/>based<sp/>on<sp/>the<sp/>current<sp/>phase<sp/>estimate<sp/>and<sp/>the<sp/>sine<sp/>and<sp/>cosine<sp/>components<sp/>of<sp/>the<sp/>input<sp/>signal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>a0<sp/>=<sp/>cosf(pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref>)<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1a0f575f4277a8cd5d800de6a042c38fa2" kindref="member">k1</ref><sp/>*<sp/>sin_val<sp/>-<sp/>sinf(pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref>)<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1a0f575f4277a8cd5d800de6a042c38fa2" kindref="member">k1</ref><sp/>*<sp/>cos_val;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pi<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a6382e4df43de1a1676b0aca1dcf517ce" kindref="member">x0</ref><sp/>+=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1a4a923c1b18c45de3235af38ed298180f" kindref="member">ki</ref><sp/>*<sp/>a0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a6382e4df43de1a1676b0aca1dcf517ce" kindref="member">x0</ref><sp/>+<sp/>a0<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1accf76a58a6d6ce16afc241aca9031303" kindref="member">kp</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Low<sp/>pass<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ae19288a2f1f66afdc1edba4ed48312f5" kindref="member">x1</ref><sp/>+=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1a42694c9135926791fa43bd12b5ab53fb" kindref="member">lowpass_k</ref><sp/>*<sp/>(a1<sp/>-<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ae19288a2f1f66afdc1edba4ed48312f5" kindref="member">x1</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Integrator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref><sp/>+=<sp/>a1<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ad69898c95bfffa5b92f51e3f4a828e20" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__i__cfg__t_1a446689f2d374eb0a5152beeebb57e1f3" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref><sp/>=<sp/><ref refid="hpm__mcl__common_8h_1a2d3879a27c6198a449b63fcbbbbd9496" kindref="member">MCL_ANGLE_MOD_X</ref>(0,<sp/><ref refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" kindref="member">MCL_2PI</ref>,<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="structmcl__filter__pll__output__t_1ae65b316ceab5849d9c503a1d75cf90ab" kindref="member">theta</ref><sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1a1304c852d363560d3f6c931cd900f0d4" kindref="member">x2</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="structmcl__filter__pll__output__t_1ae45a36fbefc19b7d363813f9a2cb5045" kindref="member">speed</ref><sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__i__t_1ae19288a2f1f66afdc1edba4ed48312f5" kindref="member">x1</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__filter_8c_1ae3de02bbc76b4f3a5c37ae804e84b9da" kindref="member">hpm_mcl_filter_pll_type_ii</ref>(<ref refid="structmcl__filter__pll__type__ii__t" kindref="compound">mcl_filter_pll_type_ii_t</ref><sp/>*pll,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sin_val,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_val,<sp/><ref refid="structmcl__filter__pll__output__t" kindref="compound">mcl_filter_pll_output_t</ref><sp/>*output)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Define<sp/>intermediate<sp/>variables<sp/>a0<sp/>to<sp/>a4<sp/>for<sp/>temporary<sp/>storage<sp/>during<sp/>calculations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0,<sp/>a1,<sp/>a2,<sp/>a3,<sp/>a4;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>a0<sp/>based<sp/>on<sp/>the<sp/>current<sp/>phase<sp/>estimate<sp/>and<sp/>the<sp/>sine<sp/>and<sp/>cosine<sp/>components<sp/>of<sp/>the<sp/>input<sp/>signal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>a0<sp/>=<sp/>cosf(pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a663016539585f974e38c5c3d2c71e07d" kindref="member">x3</ref>)<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1abe7309d29c98272b1793237a2d28dbca" kindref="member">k1</ref><sp/>*<sp/>sin_val<sp/>-<sp/>sinf(pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a663016539585f974e38c5c3d2c71e07d" kindref="member">x3</ref>)<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1abe7309d29c98272b1793237a2d28dbca" kindref="member">k1</ref><sp/>*<sp/>cos_val;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>state<sp/>variable<sp/>x0<sp/>by<sp/>integrating<sp/>the<sp/>phase<sp/>error.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1ad67f294757ee21ea625b1a9c3ade052b" kindref="member">x0</ref><sp/>+=<sp/>a0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1ad67f294757ee21ea625b1a9c3ade052b" kindref="member">x0</ref><sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1aff9aaddfbe2b25a5cb5c609353976200" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>a2<sp/>as<sp/>the<sp/>weighted<sp/>difference<sp/>between<sp/>the<sp/>current<sp/>a1<sp/>and<sp/>the<sp/>previous<sp/>state<sp/>variable<sp/>x1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>a1<sp/>-<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a8615c6e38497607b978bf494a34e2885" kindref="member">x1</ref><sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1a89cedb8ccad6ade1fde22e8a49aaa28d" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>a3<sp/>=<sp/>a2<sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1a52355a931cf486aed81a9774b8757f24" kindref="member">b</ref><sp/>+<sp/>a2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>the<sp/>state<sp/>variable<sp/>x2<sp/>by<sp/>integrating<sp/>a3.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1ae2169b201dbec52a8782201217028a29" kindref="member">x2</ref><sp/>+=<sp/>a3;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>a4<sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1ae2169b201dbec52a8782201217028a29" kindref="member">x2</ref><sp/>*<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1abb184827febfe1d6116cd944140f9017" kindref="member">cfg</ref>.<ref refid="structmcl__filter__pll__type__ii__cfg__t_1aff9aaddfbe2b25a5cb5c609353976200" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Update<sp/>the<sp/>state<sp/>variables<sp/>x1<sp/>and<sp/>x3<sp/>for<sp/>the<sp/>next<sp/>iteration.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a8615c6e38497607b978bf494a34e2885" kindref="member">x1</ref><sp/>=<sp/>a2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a663016539585f974e38c5c3d2c71e07d" kindref="member">x3</ref><sp/>=<sp/><ref refid="hpm__mcl__common_8h_1a2d3879a27c6198a449b63fcbbbbd9496" kindref="member">MCL_ANGLE_MOD_X</ref>(0,<sp/><ref refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" kindref="member">MCL_2PI</ref>,<sp/>a4);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>the<sp/>computed<sp/>phase<sp/>and<sp/>speed<sp/>in<sp/>the<sp/>output<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="structmcl__filter__pll__output__t_1ae65b316ceab5849d9c503a1d75cf90ab" kindref="member">theta</ref><sp/>=<sp/>pll-&gt;<ref refid="structmcl__filter__pll__type__ii__t_1a663016539585f974e38c5c3d2c71e07d" kindref="member">x3</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>output-&gt;<ref refid="structmcl__filter__pll__output__t_1ae45a36fbefc19b7d363813f9a2cb5045" kindref="member">speed</ref><sp/>=<sp/>a3;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c"/>
  </compounddef>
</doxygen>
