<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__pllctl__drv_8h" kind="file" language="C++">
    <compoundname>hpm_pllctl_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includes refid="hpm__pllctl__regs_8h" local="yes">hpm_pllctl_regs.h</includes>
    <includedby refid="hpm__pllctl__drv_8c" local="yes">drivers/src/hpm_pllctl_drv.c</includedby>
    <includedby refid="HPM6700_2HPM6750_2hpm__clock__drv_8c" local="yes">soc/HPM6700/HPM6750/hpm_clock_drv.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_pllctl_drv.h</label>
        <link refid="hpm__pllctl__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_pllctl_regs.h</label>
        <link refid="hpm__pllctl__regs_8h"/>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>drivers/inc/hpm_pllctl_drv.h</label>
        <link refid="hpm__pllctl__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/src/hpm_pllctl_drv.c</label>
        <link refid="hpm__pllctl__drv_8c"/>
      </node>
      <node id="3">
        <label>soc/HPM6700/HPM6750/hpm_clock_drv.c</label>
        <link refid="HPM6700_2HPM6750_2hpm__clock__drv_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <member refid="group__pllctl__interface_1gac6656cca9e1d4470de33b82e0ef21b91" kind="define"><name>PLLCTL_PLL_VCO_FREQ_MIN</name></member>
      <member refid="group__pllctl__interface_1ga636a8bfde463b9c73d40821ee11b78d2" kind="define"><name>PLLCTL_PLL_VCO_FREQ_MAX</name></member>
      <member refid="group__pllctl__interface_1gac40dd386366ab1d8fae7e8478d24e743" kind="define"><name>PLLCTL_PLL_LOCK_SS_RESET</name></member>
      <member refid="group__pllctl__interface_1ga6d32d4b8922569729da2a0030db473d6" kind="define"><name>PLLCTL_PLL_LOCK_REFDIV</name></member>
      <member refid="group__pllctl__interface_1ga4335293547680b1610e990a5c32aec18" kind="define"><name>PLLCTL_PLL_LOCK_POSTDIV1</name></member>
      <member refid="group__pllctl__interface_1ga1f37591a670ff29ea323745bc131a524" kind="define"><name>PLLCTL_PLL_LOCK_SS_SPREAD</name></member>
      <member refid="group__pllctl__interface_1ga7bbb31f78295d2a2fefe7e0f6c6581c8" kind="define"><name>PLLCTL_PLL_LOCK_SS_DIVVAL</name></member>
      <member refid="group__pllctl__interface_1ga21b28487eb0b39679b81f6d7695e91e9" kind="define"><name>PLLCTL_PLL_LOCK_ALL</name></member>
    </sectiondef>
    <sectiondef kind="enum">
      <member refid="group__pllctl__interface_1gac8dc960ed0e83a06356ee2589564f7a9" kind="enum"><name></name></member>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__pllctl__interface_1gab8859c2f420775ae0a8282db23fe181e" kind="function"><name>pllctl_pll_unlock</name></member>
      <member refid="group__pllctl__interface_1ga410812aa2a415878623279f853d6fb2b" kind="function"><name>pllctl_pll_lock</name></member>
      <member refid="group__pllctl__interface_1gaccd66f951ffe2658c594abd51814fc09" kind="function"><name>pllctl_pll_ss_disable</name></member>
      <member refid="group__pllctl__interface_1ga1cb7d7fcb3251d38e61120df293ec782" kind="function"><name>pllctl_pll_powerdown</name></member>
      <member refid="group__pllctl__interface_1ga4274e0440d448c49ffc027c3be426317" kind="function"><name>pllctl_pll_poweron</name></member>
      <member refid="group__pllctl__interface_1ga931f9d23dd556dfcec071fde49a80dc8" kind="function"><name>pllctl_pll_ss_enable</name></member>
      <member refid="group__pllctl__interface_1ga5a0322295494aa584793a62c5927c6a1" kind="function"><name>pllctl_set_postdiv1</name></member>
      <member refid="group__pllctl__interface_1ga7150f289eb4608709d9cc93c57e4b5f8" kind="function"><name>pllctl_set_fbdiv_int</name></member>
      <member refid="group__pllctl__interface_1gaaf5c623915a7aa2a1434ccf07df6a7db" kind="function"><name>pllctl_set_fbdiv_frac</name></member>
      <member refid="group__pllctl__interface_1gad6944ae4511978f29719db041b764c0d" kind="function"><name>pllctl_set_frac</name></member>
      <member refid="group__pllctl__interface_1ga876316522e5ce6207a83afbc9614612f" kind="function"><name>pllctl_get_div</name></member>
      <member refid="group__pllctl__interface_1ga5a92ec53c69591548a747d3c8105e75f" kind="function"><name>pllctl_set_div</name></member>
      <member refid="group__pllctl__interface_1gae0adf14235ee37388f6f6dd7ddccc3f8" kind="function"><name>pllctl_div_is_stable</name></member>
      <member refid="group__pllctl__interface_1ga8442e12a22d7fb560485d2e88c4b15ac" kind="function"><name>pllctl_pll_is_enabled</name></member>
      <member refid="group__pllctl__interface_1gad330d44d20a314ca8f47693903f8e3c3" kind="function"><name>pllctl_xtal_is_stable</name></member>
      <member refid="group__pllctl__interface_1ga6b46e9265a46db939a93cdc86d2114c4" kind="function"><name>pllctl_xtal_is_enabled</name></member>
      <member refid="group__pllctl__interface_1ga63f3716221535f3b2fafcc81a84b78a9" kind="function"><name>pllctl_xtal_set_rampup_time</name></member>
      <member refid="group__pllctl__interface_1ga42ce3268bcff8f50aec59877a039ffd7" kind="function"><name>pllctl_set_pll_work_mode</name></member>
      <member refid="group__pllctl__interface_1gac21393aa2b216e943d84042c2ab6207f" kind="function"><name>pllctl_set_refdiv</name></member>
      <member refid="group__pllctl__interface_1gaf842de75b99d637f4c24c14063369f03" kind="function"><name>pllctl_init_int_pll_with_freq</name></member>
      <member refid="group__pllctl__interface_1ga0d2078e89146023194fd42c6d6c73bb9" kind="function"><name>pllctl_init_frac_pll_with_freq</name></member>
      <member refid="group__pllctl__interface_1ga6ba63ccd276fc2421e4e1455b93ffd39" kind="function"><name>pllctl_get_pll_freq_in_hz</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_PLLCTL_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLLCTL_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__pllctl__regs_8h" kindref="compound">hpm_pllctl_regs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="group__pllctl__interface_1gac6656cca9e1d4470de33b82e0ef21b91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_VCO_FREQ_MIN<sp/>(375000000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="group__pllctl__interface_1ga636a8bfde463b9c73d40821ee11b78d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_VCO_FREQ_MAX<sp/>(2200000000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>@brief<sp/>PLL<sp/>parts<sp/>with<sp/>lock</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__pllctl__interface_1gac40dd386366ab1d8fae7e8478d24e743" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_SS_RESET<sp/>PLLCTL_PLL_LOCK_LOCK_SS_RSTPTR_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="group__pllctl__interface_1ga6d32d4b8922569729da2a0030db473d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_REFDIV<sp/>PLLCTL_PLL_LOCK_LOCK_REFDIV_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="group__pllctl__interface_1ga4335293547680b1610e990a5c32aec18" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_POSTDIV1<sp/>PLLCTL_PLL_LOCK_LOCK_POSTDIV1_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__pllctl__interface_1ga1f37591a670ff29ea323745bc131a524" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_SS_SPREAD<sp/>PLLCTL_PLL_LOCK_LOCK_SS_SPREAD_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__pllctl__interface_1ga7bbb31f78295d2a2fefe7e0f6c6581c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_SS_DIVVAL<sp/>PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__pllctl__interface_1ga21b28487eb0b39679b81f6d7695e91e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLLCTL_PLL_LOCK_ALL<sp/>(PLLCTL_PLL_LOCK_LOCK_SS_RSTPTR_MASK<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PLLCTL_PLL_LOCK_LOCK_REFDIV_MASK<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PLLCTL_PLL_LOCK_LOCK_POSTDIV1_MASK<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PLLCTL_PLL_LOCK_LOCK_SS_SPREAD_MASK<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>@brief<sp/>PLLCTL<sp/>specific<sp/>status</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43" refid="group__pllctl__interface_1ggac8dc960ed0e83a06356ee2589564f7a9a3fa666edd89077065fc97eb95942931a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pllctl__interface_1ggac8dc960ed0e83a06356ee2589564f7a9a3fa666edd89077065fc97eb95942931a" kindref="member">status_pllctl_not_enabled</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a67fb43feabaacf0ebebb429a6ab25c00" kindref="member">status_group_pllctl</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="44" refid="group__pllctl__interface_1ggac8dc960ed0e83a06356ee2589564f7a9a67a02dd116738171c1afa34d31bf3543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pllctl__interface_1ggac8dc960ed0e83a06356ee2589564f7a9a67a02dd116738171c1afa34d31bf3543" kindref="member">status_pllctl_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409a67fb43feabaacf0ebebb429a6ab25c00" kindref="member">status_group_pllctl</ref>,<sp/>2),</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group__pllctl__interface_1gab8859c2f420775ae0a8282db23fe181e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1gab8859c2f420775ae0a8282db23fe181e" kindref="member">pllctl_pll_unlock</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint32_t<sp/>lock_mask)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1abb22b2e12ffd973ee342a3c9938c5a71" kindref="member">LOCK</ref><sp/>&amp;=<sp/>~lock_mask;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group__pllctl__interface_1ga410812aa2a415878623279f853d6fb2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1ga410812aa2a415878623279f853d6fb2b" kindref="member">pllctl_pll_lock</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint32_t<sp/>lock_mask)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1abb22b2e12ffd973ee342a3c9938c5a71" kindref="member">LOCK</ref><sp/>=<sp/>lock_mask;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group__pllctl__interface_1gaccd66f951ffe2658c594abd51814fc09" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1gaccd66f951ffe2658c594abd51814fc09" kindref="member">pllctl_pll_ss_disable</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>|=<sp/>(<ref refid="hpm__pllctl__regs_8h_1a4b70bc8621f00bc432521d0960aa0e47" kindref="member">PLLCTL_PLL_CFG0_SS_RSTPTR_MASK</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a7ca386197165fb38179121cbe51d0552" kindref="member">PLLCTL_PLL_CFG0_SS_RESET_MASK</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>|=<sp/><ref refid="hpm__pllctl__regs_8h_1ae455a8d235dfee1848491c9211e6a968" kindref="member">PLLCTL_PLL_CFG0_SS_DISABLE_SSCG_MASK</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group__pllctl__interface_1ga1cb7d7fcb3251d38e61120df293ec782" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga1cb7d7fcb3251d38e61120df293ec782" kindref="member">pllctl_pll_powerdown</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~(<ref refid="hpm__pllctl__regs_8h_1a160a22e31ed960caf184d4550486f599" kindref="member">PLLCTL_PLL_CFG1_PLLCTRL_HW_EN_MASK</ref><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a62d79e9461b13c964947b55e25d4458c" kindref="member">PLLCTL_PLL_CFG1_CLKEN_SW_MASK</ref>))</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a5e6c2efcfec74b8d28dada6ef67c6dbc" kindref="member">PLLCTL_PLL_CFG1_PLLPD_SW_MASK</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group__pllctl__interface_1ga4274e0440d448c49ffc027c3be426317" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga4274e0440d448c49ffc027c3be426317" kindref="member">pllctl_pll_poweron</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cfg;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>cfg<sp/>=<sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(cfg<sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a5e6c2efcfec74b8d28dada6ef67c6dbc" kindref="member">PLLCTL_PLL_CFG1_PLLPD_SW_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cfg<sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a160a22e31ed960caf184d4550486f599" kindref="member">PLLCTL_PLL_CFG1_PLLCTRL_HW_EN_MASK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>&amp;=<sp/>~PLLCTL_PLL_CFG1_PLLCTRL_HW_EN_MASK;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>&amp;=<sp/>~PLLCTL_PLL_CFG1_PLLPD_SW_MASK;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>put<sp/>back<sp/>to<sp/>hardware<sp/>mode</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>|=<sp/><ref refid="hpm__pllctl__regs_8h_1a160a22e31ed960caf184d4550486f599" kindref="member">PLLCTL_PLL_CFG1_PLLCTRL_HW_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__pllctl__interface_1ga931f9d23dd556dfcec071fde49a80dc8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga931f9d23dd556dfcec071fde49a80dc8" kindref="member">pllctl_pll_ss_enable</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>spread,<sp/>uint8_t<sp/>div,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>down_spread)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(spread<sp/>&gt;<sp/>(<ref refid="hpm__pllctl__regs_8h_1a7fdb11f16d0d704267dd3571e3863744" kindref="member">PLLCTL_PLL_CFG0_SS_SPREAD_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1ac00a4ee7c58c3b1bbe520ad982dab177" kindref="member">PLLCTL_PLL_CFG0_SS_SPREAD_SHIFT</ref>))</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(div<sp/>&gt;<sp/>(<ref refid="hpm__pllctl__regs_8h_1a040b49266ad903466de548e74a54f6b6" kindref="member">PLLCTL_PLL_CFG0_SS_DIVVAL_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1ac605d1679e5a429912466e4dbaa9747f" kindref="member">PLLCTL_PLL_CFG0_SS_DIVVAL_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a6d9a63c62004c15ed1fca11c94ba4473" kindref="member">CFG1</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a5e6c2efcfec74b8d28dada6ef67c6dbc" kindref="member">PLLCTL_PLL_CFG1_PLLPD_SW_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__pllctl__interface_1ga1cb7d7fcb3251d38e61120df293ec782" kindref="member">pllctl_pll_powerdown</ref>(ptr,<sp/>pll);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>&amp;=<sp/>~(<ref refid="hpm__pllctl__regs_8h_1a4b70bc8621f00bc432521d0960aa0e47" kindref="member">PLLCTL_PLL_CFG0_SS_RSTPTR_MASK</ref></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a7ca386197165fb38179121cbe51d0552" kindref="member">PLLCTL_PLL_CFG0_SS_RESET_MASK</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>&amp;=<sp/>~PLLCTL_PLL_CFG0_SS_DISABLE_SSCG_MASK;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1a7fdb11f16d0d704267dd3571e3863744" kindref="member">PLLCTL_PLL_CFG0_SS_SPREAD_MASK</ref><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a040b49266ad903466de548e74a54f6b6" kindref="member">PLLCTL_PLL_CFG0_SS_DIVVAL_MASK</ref>))</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1aea56601b216eae6a8519894504579fb2" kindref="member">PLLCTL_PLL_CFG0_SS_SPREAD_SET</ref>(spread)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a56b17a7d4c1671c32f120feb462e0879" kindref="member">PLLCTL_PLL_CFG0_SS_DIVVAL_SET</ref>(div)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1ac31c22db3cda3e41b92e4ff4c303f34b" kindref="member">PLLCTL_PLL_CFG0_SS_DOWNSPREAD_SET</ref>(down_spread);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pllctl__interface_1ga4274e0440d448c49ffc027c3be426317" kindref="member">pllctl_pll_poweron</ref>(ptr,<sp/>pll);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="group__pllctl__interface_1ga5a0322295494aa584793a62c5927c6a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga5a0322295494aa584793a62c5927c6a1" kindref="member">pllctl_set_postdiv1</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint8_t<sp/>div)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!div)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((div)<sp/>&gt;<sp/>(<ref refid="hpm__pllctl__regs_8h_1adb8fe837edf89d49f0984dc89b74f80e" kindref="member">PLLCTL_PLL_CFG0_POSTDIV1_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1a4ebf46ba6237fef7e20425f754e574e0" kindref="member">PLLCTL_PLL_CFG0_POSTDIV1_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1a22883a58b5d6f4002dbb979331d13c1f" kindref="member">CFG0</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1adb8fe837edf89d49f0984dc89b74f80e" kindref="member">PLLCTL_PLL_CFG0_POSTDIV1_MASK</ref>)))<sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a137ba0bc430e029c79ef3332a979be92" kindref="member">PLLCTL_PLL_CFG0_POSTDIV1_SET</ref>(div);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="group__pllctl__interface_1ga7150f289eb4608709d9cc93c57e4b5f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga7150f289eb4608709d9cc93c57e4b5f8" kindref="member">pllctl_set_fbdiv_int</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint16_t<sp/>fbdiv)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((fbdiv<sp/>-<sp/>1)<sp/>&gt;<sp/>(uint16_t)(<ref refid="hpm__pllctl__regs_8h_1ae2bdc047efba41cf4e9672264f8ad208" kindref="member">PLLCTL_PLL_CFG2_FBDIV_INT_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1ac0912945cf7e590e656952d7d1464039" kindref="member">PLLCTL_PLL_CFG2_FBDIV_INT_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ad04a551bfbda0893ab5ac1f7a18d3682" kindref="member">CFG2</ref><sp/>=<sp/>((ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ad04a551bfbda0893ab5ac1f7a18d3682" kindref="member">CFG2</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1ae2bdc047efba41cf4e9672264f8ad208" kindref="member">PLLCTL_PLL_CFG2_FBDIV_INT_MASK</ref>)))<sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a326be2da1448438610017fc6acc468e3" kindref="member">PLLCTL_PLL_CFG2_FBDIV_INT_SET</ref>(fbdiv<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="group__pllctl__interface_1gaaf5c623915a7aa2a1434ccf07df6a7db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1gaaf5c623915a7aa2a1434ccf07df6a7db" kindref="member">pllctl_set_fbdiv_frac</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint16_t<sp/>fbdiv)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((fbdiv<sp/>-<sp/>1)<sp/>&gt;<sp/>(uint16_t)<sp/>(<ref refid="hpm__pllctl__regs_8h_1add73360c5bf6f20f3b6a739e54d307c6" kindref="member">PLLCTL_PLL_FREQ_FBDIV_FRAC_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1a463c964473811a71e79ac4fa79f95b24" kindref="member">PLLCTL_PLL_FREQ_FBDIV_FRAC_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1aeaeb12f7d67a7e9327cd47a7f25e43d8" kindref="member">FREQ</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1aeaeb12f7d67a7e9327cd47a7f25e43d8" kindref="member">FREQ</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1add73360c5bf6f20f3b6a739e54d307c6" kindref="member">PLLCTL_PLL_FREQ_FBDIV_FRAC_MASK</ref>))</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a11053ad8c9c82ba092863478bc2b293c" kindref="member">PLLCTL_PLL_FREQ_FBDIV_FRAC_SET</ref>(fbdiv<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="group__pllctl__interface_1gad6944ae4511978f29719db041b764c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1gad6944ae4511978f29719db041b764c0d" kindref="member">pllctl_set_frac</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint32_t<sp/>frac)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(frac<sp/>&gt;<sp/>(<ref refid="hpm__pllctl__regs_8h_1a0f779adeb3f223897f048d6725b3e74d" kindref="member">PLLCTL_PLL_FREQ_FRAC_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1a9c1315b2c709aae8699948188fbc4a3d" kindref="member">PLLCTL_PLL_FREQ_FRAC_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1aeaeb12f7d67a7e9327cd47a7f25e43d8" kindref="member">FREQ</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1aeaeb12f7d67a7e9327cd47a7f25e43d8" kindref="member">FREQ</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1a0f779adeb3f223897f048d6725b3e74d" kindref="member">PLLCTL_PLL_FREQ_FRAC_MASK</ref>))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a28037638ee2cece4960ea841170cea8b" kindref="member">PLLCTL_PLL_FREQ_FRAC_SET</ref>(frac);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="group__pllctl__interface_1ga876316522e5ce6207a83afbc9614612f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga876316522e5ce6207a83afbc9614612f" kindref="member">pllctl_get_div</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint8_t<sp/>div_index)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a658a28fa4b67077abd0edd0802cb7f36" kindref="member">PLLCTL_SOC_PLL_HAS_DIV0</ref>(pll)))<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div_index)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__pllctl__regs_8h_1a29205647897bc860f2315bbcd7dae78e" kindref="member">PLLCTL_PLL_DIV0_DIV_GET</ref>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ac31e7d887c0f815c47047a5e01e0304a" kindref="member">DIV1</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__pllctl__regs_8h_1a29205647897bc860f2315bbcd7dae78e" kindref="member">PLLCTL_PLL_DIV0_DIV_GET</ref>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1afe76a4b5ba8b170d40faf701c387f270" kindref="member">DIV0</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="group__pllctl__interface_1ga5a92ec53c69591548a747d3c8105e75f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga5a92ec53c69591548a747d3c8105e75f" kindref="member">pllctl_set_div</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint8_t<sp/>div_index,<sp/>uint16_t<sp/>div)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a658a28fa4b67077abd0edd0802cb7f36" kindref="member">PLLCTL_SOC_PLL_HAS_DIV0</ref>(pll))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((div<sp/>-<sp/>1)<sp/>&gt;<sp/>(uint16_t)<sp/>(<ref refid="hpm__pllctl__regs_8h_1a09efb95d3c6fae9bf80bed69aadfa0af" kindref="member">PLLCTL_PLL_DIV0_DIV_MASK</ref><sp/>&gt;&gt;<sp/><ref refid="hpm__pllctl__regs_8h_1abe1edaa1eff2f8600e4ca41a8733bc3b" kindref="member">PLLCTL_PLL_DIV0_DIV_SHIFT</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div_index)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ac31e7d887c0f815c47047a5e01e0304a" kindref="member">DIV1</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ac31e7d887c0f815c47047a5e01e0304a" kindref="member">DIV1</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1abbbedeb6848642f57c5e215ade46c42b" kindref="member">PLLCTL_PLL_DIV1_DIV_MASK</ref>))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a91c59976dca843759a99512c867ec4e6" kindref="member">PLLCTL_PLL_DIV1_DIV_SET</ref>(div<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1afe76a4b5ba8b170d40faf701c387f270" kindref="member">DIV0</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1afe76a4b5ba8b170d40faf701c387f270" kindref="member">DIV0</ref><sp/>&amp;<sp/>~(<ref refid="hpm__pllctl__regs_8h_1a09efb95d3c6fae9bf80bed69aadfa0af" kindref="member">PLLCTL_PLL_DIV0_DIV_MASK</ref>))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a1b37e170e18cabb26f43cd3d26ed2455" kindref="member">PLLCTL_PLL_DIV0_DIV_SET</ref>(div<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="group__pllctl__interface_1gae0adf14235ee37388f6f6dd7ddccc3f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1gae0adf14235ee37388f6f6dd7ddccc3f8" kindref="member">pllctl_div_is_stable</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint8_t<sp/>div_index)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll<sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ae30098ec93d5ab2d008a7678703d2635" kindref="member">PLLCTL_SOC_PLL_MAX_COUNT</ref><sp/>-<sp/>1))<sp/>||<sp/>!(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a658a28fa4b67077abd0edd0802cb7f36" kindref="member">PLLCTL_SOC_PLL_HAS_DIV0</ref>(pll)))<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div_index)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1ac31e7d887c0f815c47047a5e01e0304a" kindref="member">DIV1</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a6ad31b94d54ab1e8f28692a338e5fdc3" kindref="member">PLLCTL_PLL_DIV0_RESPONSE_MASK</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1afe76a4b5ba8b170d40faf701c387f270" kindref="member">DIV0</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a6ad31b94d54ab1e8f28692a338e5fdc3" kindref="member">PLLCTL_PLL_DIV0_RESPONSE_MASK</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group__pllctl__interface_1ga8442e12a22d7fb560485d2e88c4b15ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1ga8442e12a22d7fb560485d2e88c4b15ac" kindref="member">pllctl_pll_is_enabled</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a4537f5c68b8dc39507fba15787c56416" kindref="member">PLL</ref>[pll].<ref refid="structPLLCTL__Type_1aa1f7bfd529e6e4e39985c5559518a787" kindref="member">STATUS</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1ab8aeef1fda18b0f074c53a5c6c7a7960" kindref="member">PLLCTL_PLL_STATUS_ENABLE_MASK</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="group__pllctl__interface_1gad330d44d20a314ca8f47693903f8e3c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1gad330d44d20a314ca8f47693903f8e3c3" kindref="member">pllctl_xtal_is_stable</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a100e03d1e42ef9eb0e4fc41e45efed38" kindref="member">XTAL</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a5110e1bc4382bb2b110f7d645adbee62" kindref="member">PLLCTL_XTAL_RESPONSE_MASK</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="group__pllctl__interface_1ga6b46e9265a46db939a93cdc86d2114c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1ga6b46e9265a46db939a93cdc86d2114c4" kindref="member">pllctl_xtal_is_enabled</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a100e03d1e42ef9eb0e4fc41e45efed38" kindref="member">XTAL</ref><sp/>&amp;<sp/><ref refid="hpm__pllctl__regs_8h_1a0216f6b4591a79ed85d4ea1f654c7d8e" kindref="member">PLLCTL_XTAL_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>XTAL<sp/>rampup<sp/>time<sp/>in<sp/>cycles<sp/>of<sp/>IRC24M</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>PLLCTL<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="group__pllctl__interface_1ga63f3716221535f3b2fafcc81a84b78a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pllctl__interface_1ga63f3716221535f3b2fafcc81a84b78a9" kindref="member">pllctl_xtal_set_rampup_time</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>cycles)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPLLCTL__Type_1a100e03d1e42ef9eb0e4fc41e45efed38" kindref="member">XTAL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPLLCTL__Type_1a100e03d1e42ef9eb0e4fc41e45efed38" kindref="member">XTAL</ref><sp/>&amp;<sp/>~PLLCTL_XTAL_RAMP_TIME_MASK)<sp/>|<sp/><ref refid="hpm__pllctl__regs_8h_1a14f3aae551928da7e37b278e2656f165" kindref="member">PLLCTL_XTAL_RAMP_TIME_SET</ref>(cycles);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga42ce3268bcff8f50aec59877a039ffd7" kindref="member">pllctl_set_pll_work_mode</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>int_mode);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1gac21393aa2b216e943d84042c2ab6207f" kindref="member">pllctl_set_refdiv</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,<sp/>uint8_t<sp/>div);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1gaf842de75b99d637f4c24c14063369f03" kindref="member">pllctl_init_int_pll_with_freq</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>freq_in_hz);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pllctl__interface_1ga0d2078e89146023194fd42c6d6c73bb9" kindref="member">pllctl_init_frac_pll_with_freq</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>freq_in_hz);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">uint32_t<sp/><ref refid="group__pllctl__interface_1ga6ba63ccd276fc2421e4e1455b93ffd39" kindref="member">pllctl_get_pll_freq_in_hz</ref>(<ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>pll);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_PLLCTL_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_pllctl_drv.h"/>
  </compounddef>
</doxygen>
