<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structmcl__encoer__cfg__t" kind="struct" language="C++" prot="public">
    <compoundname>mcl_encoer_cfg_t</compoundname>
    <includes refid="hpm__mcl__encoder_8h" local="no">hpm_mcl_encoder.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1ac23339131d52010f08757e12b68e3821" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t mcl_encoer_cfg_t::disable_start_sample_interrupt</definition>
        <argsstring></argsstring>
        <name>disable_start_sample_interrupt</name>
        <qualifiedname>mcl_encoer_cfg_t::disable_start_sample_interrupt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="116" column="13" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a066dccd24e8c640bf343990b0803ade9" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t mcl_encoer_cfg_t::communication_interval_us</definition>
        <argsstring></argsstring>
        <name>communication_interval_us</name>
        <qualifiedname>mcl_encoer_cfg_t::communication_interval_us</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The communication interval of the communicating encoder ensures that an angle reading can be completed within the interval. Optical encoders can be read at any time, given as zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="117" column="14" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a78ea4b8313d43543e74c693369cba547" prot="public" static="no" mutable="no">
        <type><ref refid="hpm__mcl__encoder_8h_1add0d8d359bdd218ea5cc5e2d3cf8a6b6" kindref="member">mcl_encoder_cal_speed_function_t</ref></type>
        <definition>mcl_encoder_cal_speed_function_t mcl_encoer_cfg_t::speed_cal_method</definition>
        <argsstring></argsstring>
        <name>speed_cal_method</name>
        <qualifiedname>mcl_encoer_cfg_t::speed_cal_method</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="118" column="38" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a8f31674ad11c34c19e57de7a486fea81" prot="public" static="no" mutable="no">
        <type><ref refid="structmcl__encoder__cal__speed__pll__cfg__t" kindref="compound">mcl_encoder_cal_speed_pll_cfg_t</ref></type>
        <definition>mcl_encoder_cal_speed_pll_cfg_t mcl_encoer_cfg_t::cal_speed_pll_cfg</definition>
        <argsstring></argsstring>
        <name>cal_speed_pll_cfg</name>
        <qualifiedname>mcl_encoer_cfg_t::cal_speed_pll_cfg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="119" column="37" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a56558ba89ebd15691ac96eadcb76ce39" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float mcl_encoer_cfg_t::timeout_s</definition>
        <argsstring></argsstring>
        <name>timeout_s</name>
        <qualifiedname>mcl_encoer_cfg_t::timeout_s</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timeout time, after this time angle is not updated, the speed will be cleared to zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="120" column="11" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1aa7fccc79318d74c8d37880e3be4363fc" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float mcl_encoer_cfg_t::speed_abs_switch_m_t</definition>
        <argsstring></argsstring>
        <name>speed_abs_switch_m_t</name>
        <qualifiedname>mcl_encoer_cfg_t::speed_abs_switch_m_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use the m_t method to set the validity, the speed is greater than the set speed, use the m method, the speed is less than the set speed t use the t method to calculate the speed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="121" column="11" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1ab70938e9679a0673db061bc22c3e16f6" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t mcl_encoer_cfg_t::precision</definition>
        <argsstring></argsstring>
        <name>precision</name>
        <qualifiedname>mcl_encoer_cfg_t::precision</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sensor accuracy, various encoders converted to number of lines. The maximum number of angular changes that can occur per revolution of the motor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="122" column="14" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a0a0b872e4b9711b80d44f0944f937632" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float mcl_encoer_cfg_t::period_call_time_s</definition>
        <argsstring></argsstring>
        <name>period_call_time_s</name>
        <qualifiedname>mcl_encoer_cfg_t::period_call_time_s</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The time of the cycle call, the handler function should be called periodically, in s. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="123" column="11" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmcl__encoer__cfg__t_1a37a7162b57c8498f5cc544bc540e7176" prot="public" static="no" mutable="no">
        <type><ref refid="hpm__mcl__encoder_8h_1a87939416b490f3207c13c53e4dac72ab" kindref="member">mcl_encoder_callback_t</ref></type>
        <definition>mcl_encoder_callback_t mcl_encoer_cfg_t::callback</definition>
        <argsstring></argsstring>
        <name>callback</name>
        <qualifiedname>mcl_encoer_cfg_t::callback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="124" column="28" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Encoder Configuration. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>mcl_encoder_cal_speed_pll_cfg_t</label>
        <link refid="structmcl__encoder__cal__speed__pll__cfg__t"/>
      </node>
      <node id="3">
        <label>mcl_encoder_callback</label>
        <link refid="structmcl__encoder__callback"/>
      </node>
      <node id="1">
        <label>mcl_encoer_cfg_t</label>
        <link refid="structmcl__encoer__cfg__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cal_speed_pll_cfg</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>callback</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" line="115" column="1" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h" bodystart="115" bodyend="125"/>
    <listofallmembers>
      <member refid="structmcl__encoer__cfg__t_1a8f31674ad11c34c19e57de7a486fea81" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>cal_speed_pll_cfg</name></member>
      <member refid="structmcl__encoer__cfg__t_1a37a7162b57c8498f5cc544bc540e7176" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>callback</name></member>
      <member refid="structmcl__encoer__cfg__t_1a066dccd24e8c640bf343990b0803ade9" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>communication_interval_us</name></member>
      <member refid="structmcl__encoer__cfg__t_1ac23339131d52010f08757e12b68e3821" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>disable_start_sample_interrupt</name></member>
      <member refid="structmcl__encoer__cfg__t_1a0a0b872e4b9711b80d44f0944f937632" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>period_call_time_s</name></member>
      <member refid="structmcl__encoer__cfg__t_1ab70938e9679a0673db061bc22c3e16f6" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>precision</name></member>
      <member refid="structmcl__encoer__cfg__t_1aa7fccc79318d74c8d37880e3be4363fc" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>speed_abs_switch_m_t</name></member>
      <member refid="structmcl__encoer__cfg__t_1a78ea4b8313d43543e74c693369cba547" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>speed_cal_method</name></member>
      <member refid="structmcl__encoer__cfg__t_1a56558ba89ebd15691ac96eadcb76ce39" prot="public" virt="non-virtual"><scope>mcl_encoer_cfg_t</scope><name>timeout_s</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
