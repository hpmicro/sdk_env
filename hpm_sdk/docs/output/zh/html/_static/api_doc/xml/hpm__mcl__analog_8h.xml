<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__analog_8h" kind="file" language="C++">
    <compoundname>hpm_mcl_analog.h</compoundname>
    <includes refid="hpm__mcl__common_8h" local="yes">hpm_mcl_common.h</includes>
    <includes refid="hpm__mcl__filter_8h" local="yes">hpm_mcl_filter.h</includes>
    <includedby refid="hpm__mcl__loop_8h" local="yes">middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</includedby>
    <includedby refid="hpm__mcl__analog_8c" local="yes">middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hpm_mcl_filter.h</label>
        <link refid="hpm__mcl__filter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h</label>
        <link refid="hpm__mcl__analog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="2">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.c</label>
        <link refid="hpm__mcl__detect_8c"/>
      </node>
      <node id="3">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</label>
        <link refid="hpm__mcl__detect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c</label>
        <link refid="hpm__mcl__loop_8c"/>
      </node>
      <node id="2">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</label>
        <link refid="hpm__mcl__loop_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c</label>
        <link refid="hpm__mcl__analog_8c"/>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h</label>
        <link refid="hpm__mcl__analog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmcl__analog__callback__t" prot="public">mcl_analog_callback_t</innerclass>
    <innerclass refid="structmcl__analog__cfg__t" prot="public">mcl_analog_cfg_t</innerclass>
    <innerclass refid="structmcl__analog__t" prot="public">mcl_analog_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a93b002eab2917030fa029bd356fedb20" prot="public">
          <name>mcl_analog_init_error</name>
          <initializer>= MAKE_STATUS(mcl_group_analog, 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ac9660398a528594bf84adb4215b7a81e" prot="public">
          <name>mcl_analog_not_ready</name>
          <initializer>= MAKE_STATUS(mcl_group_analog, 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" prot="public">
          <name>mcl_analog_update_location_error</name>
          <initializer>= MAKE_STATUS(mcl_group_analog, 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a51356c08afcafa07f69412da6c59455f" prot="public">
          <name>mcl_analog_get_value_error</name>
          <initializer>= MAKE_STATUS(mcl_group_analog, 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="13" column="1" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" bodystart="13" bodyend="18"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497e" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_analog_status_t</name>
        <enumvalue id="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea99e61eeca9369e405bd4fea089ee9c45" prot="public">
          <name>analog_status_null</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea73b9dca4fe0281419bf6a7ad1fb4234b" prot="public">
          <name>analog_status_init</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ead7edbc5db0e03d1626bf5a026eed69fc" prot="public">
          <name>analog_status_run</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497eabf8eb7654f6d884eb0214d0315c23a79" prot="public">
          <name>analog_status_fail</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="20" column="1" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_analog_chn_t</name>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aad8eddad861a1e44336789fc2b51005a" prot="public">
          <name>analog_a_current</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7ed6f1f4a16e96471c54d3d27b16648f" prot="public">
          <name>analog_b_current</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1c6df855d543763f5ed606533e913b0d" prot="public">
          <name>analog_c_current</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1ee481c47ae347ab94f30994be02c899" prot="public">
          <name>analog_a_voltage</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7b6d1cbca12474e7db085badea250605" prot="public">
          <name>analog_b_voltage</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aa93a60c7a056403af8b076536b5a21cd" prot="public">
          <name>analog_c_voltage</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a93c40e9750d69847fee558f193c4eff2" prot="public">
          <name>analog_vbus</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Analog function channel numbers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="31" column="1" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" bodystart="31" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__analog_8h_1ae621a365bae94e9a04a96e31fd430586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_init</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_cfg_t *cfg, mcl_cfg_t *mcl_cfg)</argsstring>
        <name>hpm_mcl_analog_init</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> *</type>
          <declname>mcl_cfg</declname>
        </param>
        <briefdescription>
<para>Initialize data structures for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcl_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="95" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="9" bodyend="61" declfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" declline="95" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8h_1a23e18b2e083e09ab7dcd6f4071475728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_get_value</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn, float *value)</argsstring>
        <name>hpm_mcl_analog_get_value</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the value of the analog channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Processed Sample Values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="105" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="63" bodyend="87" declfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" declline="105" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8h_1ab4e091c1e3985c0bcdfc3e14b1778cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_iir_filter_init</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn, mcl_filter_iir_df1_t *iir)</argsstring>
        <name>hpm_mcl_analog_iir_filter_init</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> *</type>
          <declname>iir</declname>
        </param>
        <briefdescription>
<para>Initializing the iir filter for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iir</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="115" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="89" bodyend="98" declfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" declline="115" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8h_1ab19d91ffa005004fb1d8f2e82a644519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_disable_iir_filter</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn)</argsstring>
        <name>hpm_mcl_analog_disable_iir_filter</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Turn off the iir filter for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="124" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="100" bodyend="107" declfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" declline="124" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8h_1a101c66fc83aaa5d4a3b9b80516dfdccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_step_convert</definition>
        <argsstring>(mcl_analog_t *analog, float value, mcl_analog_chn_t chn, float angle, float *output)</argsstring>
        <name>hpm_mcl_analog_step_convert</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Current conversion of stepper motors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data acquired by the analog function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>electrical angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Transformed data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" line="136" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="109" bodyend="132" declfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h" declline="136" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCL_ANALOG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCL_ANALOG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__common_8h" kindref="compound">hpm_mcl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__filter_8h" kindref="compound">hpm_mcl_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14" refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a93b002eab2917030fa029bd356fedb20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a93b002eab2917030fa029bd356fedb20" kindref="member">mcl_analog_init_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" kindref="member">mcl_group_analog</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="15" refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ac9660398a528594bf84adb4215b7a81e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ac9660398a528594bf84adb4215b7a81e" kindref="member">mcl_analog_not_ready</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" kindref="member">mcl_group_analog</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="16" refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" kindref="member">mcl_group_analog</ref>,<sp/>2),</highlight></codeline>
<codeline lineno="17" refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a51356c08afcafa07f69412da6c59455f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a51356c08afcafa07f69412da6c59455f" kindref="member">mcl_analog_get_value_error</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" kindref="member">mcl_group_analog</ref>,<sp/>3),</highlight></codeline>
<codeline lineno="18"><highlight class="normal">};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21" refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea99e61eeca9369e405bd4fea089ee9c45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea99e61eeca9369e405bd4fea089ee9c45" kindref="member">analog_status_null</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="22" refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea73b9dca4fe0281419bf6a7ad1fb4234b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea73b9dca4fe0281419bf6a7ad1fb4234b" kindref="member">analog_status_init</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="23" refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ead7edbc5db0e03d1626bf5a026eed69fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ead7edbc5db0e03d1626bf5a026eed69fc" kindref="member">analog_status_run</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="24" refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497eabf8eb7654f6d884eb0214d0315c23a79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497eabf8eb7654f6d884eb0214d0315c23a79" kindref="member">analog_status_fail</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497e" kindref="member">mcl_analog_status_t</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aad8eddad861a1e44336789fc2b51005a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aad8eddad861a1e44336789fc2b51005a" kindref="member">analog_a_current</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="33" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7ed6f1f4a16e96471c54d3d27b16648f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7ed6f1f4a16e96471c54d3d27b16648f" kindref="member">analog_b_current</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="34" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1c6df855d543763f5ed606533e913b0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1c6df855d543763f5ed606533e913b0d" kindref="member">analog_c_current</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="35" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1ee481c47ae347ab94f30994be02c899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1ee481c47ae347ab94f30994be02c899" kindref="member">analog_a_voltage</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="36" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7b6d1cbca12474e7db085badea250605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7b6d1cbca12474e7db085badea250605" kindref="member">analog_b_voltage</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="37" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aa93a60c7a056403af8b076536b5a21cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aa93a60c7a056403af8b076536b5a21cd" kindref="member">analog_c_voltage</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="38" refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a93c40e9750d69847fee558f193c4eff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a93c40e9750d69847fee558f193c4eff2" kindref="member">analog_vbus</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structmcl__analog__callback__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="structmcl__analog__callback__t_1a700cd68ec04a3cc08b94e42f315793da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/>(*<ref refid="structmcl__analog__callback__t_1a700cd68ec04a3cc08b94e42f315793da" kindref="member">init</ref>)(void);</highlight></codeline>
<codeline lineno="47" refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/>(*<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>)(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/>uint32_t<sp/>tick);</highlight></codeline>
<codeline lineno="48" refid="structmcl__analog__callback__t_1a9caaf38256ba74c6a66f6fbd2513b8ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>_FUNC_OPTIONAL_<sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/>(*<ref refid="structmcl__analog__callback__t_1a9caaf38256ba74c6a66f6fbd2513b8ef" kindref="member">process_by_user</ref>)(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/>int32_t<sp/>adc_value,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="49" refid="structmcl__analog__callback__t_1ae9d68ec64159ca25e365fd46e0f82a4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/>(*<ref refid="structmcl__analog__callback__t_1ae9d68ec64159ca25e365fd46e0f82a4b" kindref="member">get_value</ref>)(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/>int32_t<sp/>*value);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}<sp/><ref refid="structmcl__analog__callback__t" kindref="compound">mcl_analog_callback_t</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structmcl__analog__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58" refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__analog__callback__t" kindref="compound">mcl_analog_callback_t</ref><sp/><ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="59" refid="structmcl__analog__cfg__t_1a65d6771db72fa49e67f182dae8ef10a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1a65d6771db72fa49e67f182dae8ef10a5" kindref="member">enable_a_current</ref>;</highlight></codeline>
<codeline lineno="60" refid="structmcl__analog__cfg__t_1a5774d874a70c61ddd5de66316befafd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1a5774d874a70c61ddd5de66316befafd3" kindref="member">enable_b_current</ref>;</highlight></codeline>
<codeline lineno="61" refid="structmcl__analog__cfg__t_1a43111017c3b3bd2732ac5da058b3e9c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1a43111017c3b3bd2732ac5da058b3e9c6" kindref="member">enable_c_current</ref>;</highlight></codeline>
<codeline lineno="62" refid="structmcl__analog__cfg__t_1a1e38b2aeeb84ea9b7a6a756b2dddab03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1a1e38b2aeeb84ea9b7a6a756b2dddab03" kindref="member">enable_a_voltage</ref>;</highlight></codeline>
<codeline lineno="63" refid="structmcl__analog__cfg__t_1af8b51421185c124474268d5d07198020" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1af8b51421185c124474268d5d07198020" kindref="member">enable_b_voltage</ref>;</highlight></codeline>
<codeline lineno="64" refid="structmcl__analog__cfg__t_1aae25dec9d00a20a097bb335b318b8cec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1aae25dec9d00a20a097bb335b318b8cec" kindref="member">enable_c_voltage</ref>;</highlight></codeline>
<codeline lineno="65" refid="structmcl__analog__cfg__t_1af981fe53cf8766f98b9f2ee59eedd91d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1af981fe53cf8766f98b9f2ee59eedd91d" kindref="member">enable_vbus</ref>;</highlight></codeline>
<codeline lineno="66" refid="structmcl__analog__cfg__t_1ae0a0e6da2292ca048082ef1f44328581" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1ae0a0e6da2292ca048082ef1f44328581" kindref="member">enable_process_by_user</ref>;</highlight></codeline>
<codeline lineno="67" refid="structmcl__analog__cfg__t_1ad7b962346d96bcdc53d8f7162280f506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__cfg__t_1ad7b962346d96bcdc53d8f7162280f506" kindref="member">enable_filter</ref>[<ref refid="hpm__mcl__physical_8h_1ae69f9f4bfeb8393e097cd34c0004c3c4" kindref="member">MCL_ANALOG_CHN_NUM</ref>];</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structmcl__analog__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75" refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref><sp/>*<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="76" refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structphysical__board__analog__t" kindref="compound">physical_board_analog_t</ref><sp/>*<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref>;</highlight></codeline>
<codeline lineno="77" refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref><sp/>*<ref refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" kindref="member">iir</ref>[<ref refid="hpm__mcl__physical_8h_1ae69f9f4bfeb8393e097cd34c0004c3c4" kindref="member">MCL_ANALOG_CHN_NUM</ref>];</highlight></codeline>
<codeline lineno="78" refid="structmcl__analog__t_1afecb0757590df7eb4a895e4c3dc09864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__analog__t_1afecb0757590df7eb4a895e4c3dc09864" kindref="member">current</ref>[<ref refid="hpm__mcl__physical_8h_1ae69f9f4bfeb8393e097cd34c0004c3c4" kindref="member">MCL_ANALOG_CHN_NUM</ref>];</highlight></codeline>
<codeline lineno="79" refid="structmcl__analog__t_1a05c0671eee91b42ef5d71e3dbc8374a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structmcl__analog__t_1a05c0671eee91b42ef5d71e3dbc8374a2" kindref="member">num_current_sample_res</ref>;</highlight></codeline>
<codeline lineno="80" refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497e" kindref="member">mcl_analog_status_t</ref><sp/><ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8h_1ae621a365bae94e9a04a96e31fd430586" kindref="member">hpm_mcl_analog_init</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref><sp/>*cfg,<sp/><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref><sp/>*mcl_cfg);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8h_1a23e18b2e083e09ab7dcd6f4071475728" kindref="member">hpm_mcl_analog_get_value</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8h_1ab4e091c1e3985c0bcdfc3e14b1778cb1" kindref="member">hpm_mcl_analog_iir_filter_init</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref><sp/>*iir);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8h_1ab19d91ffa005004fb1d8f2e82a644519" kindref="member">hpm_mcl_analog_disable_iir_filter</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8h_1a101c66fc83aaa5d4a3b9b80516dfdccc" kindref="member">hpm_mcl_analog_step_convert</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h"/>
  </compounddef>
</doxygen>
