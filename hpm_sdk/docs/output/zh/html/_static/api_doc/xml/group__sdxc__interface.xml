<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__sdxc__interface" kind="group">
    <compoundname>sdxc_interface</compoundname>
    <title>SDXC driver APIs</title>
    <innerclass refid="structsdxc__capabilities__t" prot="public">sdxc_capabilities_t</innerclass>
    <innerclass refid="structsdxc__xfer__callback__t" prot="public">sdxc_xfer_callback_t</innerclass>
    <innerclass refid="structsdxc__handle__t" prot="public">sdxc_handle_t</innerclass>
    <innerclass refid="structsdxc__host__t" prot="public">sdxc_host_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sdxc__interface_1ga3e279efabf854742684341c3e4f50d31" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a0d3ed7978bcf00ac97000a033e24737c" prot="public">
          <name>status_sdxc_busy</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC is busy </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a90a101d6f4c68eba057f5e7dfddff13e" prot="public">
          <name>status_sdxc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a5d9ed478629b49bd06b978e7841de0c8" prot="public">
          <name>status_sdxc_send_cmd_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31ab2a9c2fa4c7ae0234e1ea374dd99bbfe" prot="public">
          <name>status_sdxc_cmd_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31ab8d9155beb3e069555bd203e9d485045" prot="public">
          <name>status_sdxc_cmd_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31aadbaf10ea7030dd7b044f56c34bc01f0" prot="public">
          <name>status_sdxc_cmd_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(5))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a8ffa3c3732649bc348f81b96b05e9260" prot="public">
          <name>status_sdxc_cmd_index_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(6))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a1a7bebe571cca56a17cd01e8e2764b09" prot="public">
          <name>status_sdxc_data_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(7))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data timeout error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a58e1427f43d8e630168b698a2e64cadc" prot="public">
          <name>status_sdxc_data_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(8))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a7fef9211d246f475e32944a8185d99f3" prot="public">
          <name>status_sdxc_data_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(9))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31ad7400f529550c82c85ad43a0b107abb8" prot="public">
          <name>status_sdxc_auto_cmd_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(10))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC auto command error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a4191c30d551d9bd5f5ffcad8c4783c13" prot="public">
          <name>status_sdxc_adma_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(11))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC ADMA error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a58b51de0f2d44a61b0abbfc6188104e0" prot="public">
          <name>status_sdxc_tuning_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(12))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a4ba77233f0090055390d7c9b75985d0b" prot="public">
          <name>status_sdxc_response_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(13))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31aca505cb4baae0011c885cab106a414dc" prot="public">
          <name>status_sdxc_boot_ack_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(14))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC boot ack error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a6d045106d67a8803bcf2825126a47cfe" prot="public">
          <name>status_sdxc_retuning_request</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(15))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC retuning request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a8d6c70d2367c09cf71e8841034732bb8" prot="public">
          <name>status_sdxc_autocmd_cmd12_not_exec</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(16))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a630138954e3b1a47749401fabd1b0089" prot="public">
          <name>status_sdxc_autocmd_cmd_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(17))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a795dbdfae54266142c777b6cd9f31afc" prot="public">
          <name>status_sdxc_autocmd_cmd_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(18))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD crc error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a293bc0f5d4a80d6b26ae6a62b1185cc1" prot="public">
          <name>status_sdxc_autocmd_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(19))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a04d86e8b11e32a689d30bcebb4f53f62" prot="public">
          <name>status_sdxc_autocmd_cmd_index_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(20))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a7eb07985533706de43d29ada59565fed" prot="public">
          <name>status_sdxc_autocmd_cmd_response_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(21))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a6fd382dc4ad27dd293653a4ddf2cc140" prot="public">
          <name>status_sdxc_autocmd_cmd_not_issued_auto_cmd12</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(22))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC unsupported operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a922e482934f1906dce3bd5341bf1c0b4" prot="public">
          <name>status_sdxc_unsupported</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(23))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a21a5057961c4408e63e3f485fc3eebee" prot="public">
          <name>status_sdxc_transfer_data_completed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(24))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a33c64d4046bd3ef323a83ed45a9059d1" prot="public">
          <name>status_sdxc_send_cmd_successful</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(25))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC send command succeeded </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a962556472b7895e218f4cc47ea13ba9b" prot="public">
          <name>status_sdxc_transfer_dma_completed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(26))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer DMA completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a95bf0c3245ac266184cffa6a737ca4d8" prot="public">
          <name>status_sdxc_transfer_data_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(27))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a8e4badb0ef283026627654bb5cc74047" prot="public">
          <name>status_sdxc_dma_addr_unaligned</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(28))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC DMA address unaligned </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31aba4a732221da48321d3372d0f5bd4830" prot="public">
          <name>status_sdxc_tuning_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(29))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a47c025118075e92dbe27bc668b3a3ab3" prot="public">
          <name>status_sdxc_card_removed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(30))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Card removed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a2d394f15d7e0b451a401ba24c07bd514" prot="public">
          <name>status_sdxc_non_recoverable_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(30))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC non-recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3e279efabf854742684341c3e4f50d31a8ba3bc94de999f14ac9a2b806ac21ca9" prot="public">
          <name>status_sdxc_recoverable_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(31))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="253" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="253" bodyend="290"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1ga3d3667ada0f76359974e3bdb799ada12" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1gga3d3667ada0f76359974e3bdb799ada12aee467041660608bc02e9cdd601be9bf2" prot="public">
          <name>sdxc_xfer_data_normal</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer normal read/write data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3d3667ada0f76359974e3bdb799ada12ab8387c9c070610e53f7e18ed8248e541" prot="public">
          <name>sdxc_xfer_data_boot</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga3d3667ada0f76359974e3bdb799ada12a5a4b9f0510d3398611f785a3bfe8fc9f" prot="public">
          <name>sdxc_xfer_data_boot_continuous</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data continuously </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC transfer data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="420" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1gac12627b43234a2c5005eca7a2a0a88cd" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1ggac12627b43234a2c5005eca7a2a0a88cda89e9d880ccd9f305c773af3e38926301" prot="public">
          <name>sdxc_adma_desc_single_flag</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1ggac12627b43234a2c5005eca7a2a0a88cda803b0b7d09e2149f4e9b58c338959f36" prot="public">
          <name>sdxc_adma_desc_multi_flag</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="443" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="443" bodyend="446"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" prot="public" static="no">
        <type>enum _sdxc_software_reset</type>
        <definition>typedef enum _sdxc_software_reset sdxc_sw_reset_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_sw_reset_type_t</name>
        <briefdescription>
<para>Software reset flag definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="111" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" prot="public" static="no">
        <type>enum _sdxc_bus_voltage_option</type>
        <definition>typedef enum _sdxc_bus_voltage_option sdxc_bus_voltage_option_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_voltage_option_t</name>
        <briefdescription>
<para>SDXC Bus voltage options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="121" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" prot="public" static="no">
        <type>enum _sdxc_wakeup_event</type>
        <definition>typedef enum _sdxc_wakeup_event sdxc_wakeup_event_t</definition>
        <argsstring></argsstring>
        <name>sdxc_wakeup_event_t</name>
        <briefdescription>
<para>SDXC wakeup events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="130" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" prot="public" static="no">
        <type>enum _sdxc_dma_type</type>
        <definition>typedef enum _sdxc_dma_type sdxc_dma_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dma_type_t</name>
        <briefdescription>
<para>SDXC DMA types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="140" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" prot="public" static="no">
        <type>enum _sdxc_bus_width</type>
        <definition>typedef enum _sdxc_bus_width sdxc_bus_width_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_width_t</name>
        <briefdescription>
<para>SDXC Bus width options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="149" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" prot="public" static="no">
        <type>enum _sdxc_speed_mode</type>
        <definition>typedef enum _sdxc_speed_mode sdxc_speed_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_speed_mode_t</name>
        <briefdescription>
<para>SDXC Speed mode options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="171" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1e05f721758271a748c54c7f78408af5" prot="public" static="no">
        <type>enum _sdxc_auto_cmd_sel</type>
        <definition>typedef enum _sdxc_auto_cmd_sel sdxc_auto_cmd_sel_t</definition>
        <argsstring></argsstring>
        <name>sdxc_auto_cmd_sel_t</name>
        <briefdescription>
<para>SDXC auto command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="181" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" prot="public" static="no">
        <type>enum _sdxc_xfer_direction</type>
        <definition>typedef enum _sdxc_xfer_direction sdxc_xfer_direction_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_direction_t</name>
        <briefdescription>
<para>SDXC transfer direction options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="189" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" prot="public" static="no">
        <type>enum _sdxc_command_type</type>
        <definition>typedef enum _sdxc_command_type sdxc_command_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_type_t</name>
        <briefdescription>
<para>SDXC Command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="200" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" prot="public" static="no">
        <type>enum _sdxc_boot_mode</type>
        <definition>typedef enum _sdxc_boot_mode sdxc_boot_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_mode_t</name>
        <briefdescription>
<para>SDXC boot mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="216" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf6b1d2191e32aab10f798ed7fcbd7002" prot="public" static="no">
        <type>enum _sdxc_response_type</type>
        <definition>typedef enum _sdxc_response_type sdxc_response_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_response_type_t</name>
        <briefdescription>
<para>SDXC response types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="226" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" prot="public" static="no">
        <type>enum _sdxc_dev_resp_type</type>
        <definition>typedef enum _sdxc_dev_resp_type sdxc_dev_resp_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dev_resp_type_t</name>
        <briefdescription>
<para>SDXC Device response type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="377" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" prot="public" static="no">
        <type>struct _sdxc_command</type>
        <definition>typedef struct _sdxc_command sdxc_command_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_t</name>
        <briefdescription>
<para>SDXC command structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="392" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaa724f349a37ce2a3e63b1f73a6ef19f0" prot="public" static="no">
        <type>struct _sdxc_data_list</type>
        <definition>typedef struct _sdxc_data_list sdxc_data_list_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_list_t</name>
        <briefdescription>
<para>SDXC data list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="401" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" prot="public" static="no">
        <type>struct _sdxc_data</type>
        <definition>typedef struct _sdxc_data sdxc_data_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_t</name>
        <briefdescription>
<para>SDXC data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="415" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" prot="public" static="no">
        <type>struct _sdxc_xfer</type>
        <definition>typedef struct _sdxc_xfer sdxc_xfer_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_t</name>
        <briefdescription>
<para>SDXC transfer context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="432" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" prot="public" static="no">
        <type>struct _sdxc_adma_config</type>
        <definition>typedef struct _sdxc_adma_config sdxc_adma_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma_config_t</name>
        <briefdescription>
<para>SDXC ADMA configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="441" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" prot="public" static="no">
        <type>struct _sdxc_config</type>
        <definition>typedef struct _sdxc_config sdxc_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_config_t</name>
        <briefdescription>
<para>SDXC configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="453" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" prot="public" static="no">
        <type>struct _sdxc_adma2_descriptor</type>
        <definition>typedef struct _sdxc_adma2_descriptor sdxc_adma2_descriptor_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma2_descriptor_t</name>
        <briefdescription>
<para>SDXC ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="471" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" prot="public" static="no">
        <type>struct _sdxc_adma3_cmd_sd_desc</type>
        <definition>typedef struct _sdxc_adma3_cmd_sd_desc sdxc_adma3_cmd_sd_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_cmd_sd_desc_t</name>
        <briefdescription>
<para>ADMA3 command descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="505" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" prot="public" static="no">
        <type>struct _sdxc_adma3_integrated_desc</type>
        <definition>typedef struct _sdxc_adma3_integrated_desc sdxc_adma3_integrated_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_integrated_desc_t</name>
        <briefdescription>
<para>SDXC ADMA3 Integrated Descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="513" column="30"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" prot="public" static="no">
        <type>struct _sdxc_boot_config</type>
        <definition>typedef struct _sdxc_boot_config sdxc_boot_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_config_t</name>
        <briefdescription>
<para>SDXC Boot confituration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="525" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" prot="public" static="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>typedef hpm_stat_t(* sdxc_xfer_func_t) (SDXC_Type *base, sdxc_xfer_t *content)</definition>
        <argsstring>)(SDXC_Type *base, sdxc_xfer_t *content)</argsstring>
        <name>sdxc_xfer_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="543" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="543" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__sdxc__interface_1ga6a826eb5ed7075f21da7f3ce0ec51af4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>inaterrupt status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="563" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga314df25e8301a829f7890e019f674d2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_card_inserted</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_card_inserted</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is inserted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card insertion status <itemizedlist>
<listitem><para>true SD Card is inserted </para>
</listitem>
<listitem><para>false SD card is not inserted </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="574" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="574" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga877f3616bd2dd0700e904974f58762fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_write_protected</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_write_protected</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is Write Protected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card Write Protection status <itemizedlist>
<listitem><para>true SD Card is Write protected </para>
</listitem>
<listitem><para>false SD card is not Write Protected </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="585" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa391eb3d08898c6ba7355a52b4c60003" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_clear_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t status_mask)</argsstring>
        <name>sdxc_clear_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>status_mask</declname>
        </param>
        <briefdescription>
<para>Clear SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the status mask to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="595" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae5f0710dfc49f88f2329f2344b7f9f93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt status mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt status enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="606" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3b728a911debd78741f3a610632aece3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_signal</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt signal mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt signal enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="621" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="621" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga234d3b0deb7f4f11f98570b5cd8d0fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_get_capabilities</definition>
        <argsstring>(SDXC_Type *base, sdxc_capabilities_t *capabilities)</argsstring>
        <name>sdxc_get_capabilities</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref> *</type>
          <declname>capabilities</declname>
        </param>
        <briefdescription>
<para>Get SDXC capabilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">capabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="635" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="272" bodyend="287" declfile="drivers/inc/hpm_sdxc_drv.h" declline="635" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga772d6ade95adacf74717f5f0ead2e6a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdxc_get_adma_error_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_adma_error_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC ADMA error status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>AMDA</parametername>
</parameternamelist>
<parameterdescription>
<para>error status register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="643" column="23" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaff483f5ecd4fa1b992b2ba5592abcdfc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_configure_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint8_t timeout)</argsstring>
        <name>sdxc_configure_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Configure SDXC data timeout internal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC data timeout option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="653" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d4e5053397f64274b6ad9afde77ed1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_interrupt_at_block_gap</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_interrupt_at_block_gap</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC interrupt at block gap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable Interrupt_at_Block_Gap flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="663" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="663" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga492ca47ee6c0c903da015b616f636556" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_read_wait_control</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_read_wait_control</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or Disable SDXC Read Wait. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable SDXC Read Wait flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="677" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="677" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga51791a8fdb9db034f738c19b43dddf08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_continue_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_continue_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC continue request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC continue request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="691" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="691" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3107d1d7214dce827591fcbcaf4883d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_at_block_gap_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_at_block_gap_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC StopAtBlockGap request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable StopAtBlockGap request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="705" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="705" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga50a563ab166f03d39b1b379481c4fc4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_high_speed</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_high_speed</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC high-speed support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to Enable/disable SDXC high-speed support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="719" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="719" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaf9ce4642c1fb04f99d3101843a5a135f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_power</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_power</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC power pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control the SDXC power pin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="734" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="734" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gafd15f2b1cdc9b57770b041218f972144" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_async_interrupt</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_async_interrupt</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC asynchronous interrupt support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC asynchronous interrupt support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="748" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="748" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga25db603d644a01c54b96186aea01ae59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_preset</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_preset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC Preset support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC Preset support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="762" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="762" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga22a261f70ff82aaad9b35f034f05954f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_host_version4</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_host_version4</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SD Host version 4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SD Host version 4 support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="776" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="776" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gadb40d63aa02717f3fe73a6ffd6810d0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_execute_tuning</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_execute_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start SDXC tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="789" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="789" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d5b2c208949f978dda169044aeba9dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_software_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC software tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC software tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="799" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="799" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga7c8bd9eb9c354d64b4c077c2ceac19de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_reset_tuning_engine</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_reset_tuning_engine</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Reset SDXC tuning engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="812" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="812" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab793ff643ea3292caa77fe1a2245ea3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_switch_to_1v8_signal</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_switch_to_1v8_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Switch SDXC to 1.8V signaling mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to switch to 1.8v signaling mode/stay at 3.0v signaling mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="822" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="822" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ce6f46d4554c5bfbd577412387976b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_internal_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_internal_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC internal clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC internal clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="836" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="836" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga536766b6ca11b4ab78d4707b5e825ccd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_present_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_present_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get Present status register value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>PRESENT register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="850" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="850" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8516180256eda9668d972e08b7d262b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_writable</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_writable</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the Data Buffer is writable or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer is writeable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer write is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="861" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="861" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa37872e3ede28f4e16e29cd13f6a4581" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_readable</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_readable</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the data buffer is readable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>There are data available in data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>there is no data available in data buffer, read is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="872" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="872" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga21ce97388c5a36966fca710f71b11d86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_read_data</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_read_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Read data from SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>read from SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="882" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad883aa5e051210de894123000a3ae605" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_write_data</definition>
        <argsstring>(SDXC_Type *base, uint32_t data)</argsstring>
        <name>sdxc_write_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write data to SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be written to SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="892" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae07bfaee8e23e7cabef01f69826c3815" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_data3_0_level</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_data3_0_level</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC DATA3-DATA0 IO level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>data3-data0 IO level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="902" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="902" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga71d673cde5fabb5f94f1aae4e6a38afa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC auto tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC auto tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="912" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="912" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga071c2cb3e37f57d6097b7e859628b0a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_clock_during_phase_code_change</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_clock_during_phase_code_change</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Stop Clock During Phase Code Change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to determine whether stopping clock during phase code change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="927" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="927" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga012eafdabf4041f05edb741a3c4c2707" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_post_change_delay</definition>
        <argsstring>(SDXC_Type *base, uint8_t delay_cnt)</argsstring>
        <name>sdxc_set_post_change_delay</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>delay_cnt</declname>
        </param>
        <briefdescription>
<para>Set The delay cycles during phase switching and stable clock out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="942" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="942" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8686b0521dce6c61c57a63c599c8f3a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_emmc_support</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_emmc_support</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable EMMC support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable EMMC support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="953" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="953" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae2fc7bf986b78a4965d2f6ccf8e24833" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_mmc_boot</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_mmc_boot</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC MMC boot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>FLag to enable/disable SDXC MMC boot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="967" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="967" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad8ba9664b2f00c65b810403cafe6301b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_force_event</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask)</argsstring>
        <name>sdxc_force_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set SDXC force event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC event mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="981" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="981" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga30fb0c706288794a858068263426da6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_sd_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_sd_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/disable SDXC SD clock output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC SD clock output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="991" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="991" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa81097ebdf516fd8afb5ea38f4eee14e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_center_phase_code</definition>
        <argsstring>(SDXC_Type *base, uint32_t value)</argsstring>
        <name>sdxc_set_center_phase_code</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SDXC center phase code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC center phase value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1009" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1009" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6957049b45df15722a34d76a6a765630" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_enhanced_strobe</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_enhanced_strobe</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC enhanced strobe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC enhanced strobe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1020" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1020" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa9ce2278139e0437c932acc51ea606cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_mmc_boot_config</definition>
        <argsstring>(SDXC_Type *base, const sdxc_boot_config_t *config)</argsstring>
        <name>sdxc_set_mmc_boot_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" kindref="member">sdxc_boot_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Set MMC boot configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC boot configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1034" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="550" bodyend="569" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1034" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga30197db1d82678f456626bb6f47d3e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_send_command</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_send_command</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send Command via SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Sending command timed out </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Command was sent out successfully </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1043" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="289" bodyend="352" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1043" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gadbd59858bc0a4299da544b32645d77c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_receive_cmd_response</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_receive_cmd_response</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Receive command response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1051" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="106" bodyend="143" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1051" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab72d27dc5881670acade5fa1d938675c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_parse_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_parse_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Parse the SDXC interrupt status to HPM encoded status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1058" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="355" bodyend="410" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1058" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gabeae58ec5cd7899ec0c8b91afdfc94e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_wait_cmd_done</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd, bool polling_cmd_done)</argsstring>
        <name>sdxc_wait_cmd_done</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>polling_cmd_done</declname>
        </param>
        <briefdescription>
<para>Wait until SDXC command completes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">polling_cmd_done</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to determine whether to use blocking wait </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>command execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1067" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="412" bodyend="433" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1067" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga0d82d3656ba9b1dc07ac67b2405b735d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_xfer_direction_t data_dir, uint32_t block_cnt, uint32_t block_size)</argsstring>
        <name>sdxc_set_data_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" kindref="member">sdxc_xfer_direction_t</ref></type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_cnt</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Set Data transfer configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Data transfer direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Block count for data transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Block size for data transfer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1076" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="571" bodyend="584" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1076" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga17142e754b982beb82fb3ea0fc72ed57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma_table_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_cfg, sdxc_data_t *data_cfg, uint32_t flags)</argsstring>
        <name>sdxc_set_adma_table_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref> *</type>
          <declname>data_cfg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set ADMA table configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Data configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for AMDA transfer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1086" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="696" bodyend="735" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1086" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga25c19b7d0a9702e43203693f9620a9df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma2_desc</definition>
        <argsstring>(uint32_t *adma_tbl, uint32_t adma_table_words, const uint32_t *data_buf, uint32_t data_bytes, uint32_t flags)</argsstring>
        <name>sdxc_set_adma2_desc</name>
        <param>
          <type>uint32_t *</type>
          <declname>adma_tbl</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>adma_table_words</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data_buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data_bytes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adma_tbl</parametername>
</parameternamelist>
<parameterdescription>
<para>ADMA2 table </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adma_table_words</parametername>
</parameternamelist>
<parameterdescription>
<para>ADMA2 table size in words </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the Data to be transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Data size for transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for ADMA2 descriptor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1100" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="611" bodyend="694" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1100" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga5440d0ca74e525554894a86a9cdda088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_dma_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_cfg, const uint32_t *data_addr, bool enable_auto_cmd23)</argsstring>
        <name>sdxc_set_dma_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data_addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_auto_cmd23</declname>
        </param>
        <briefdescription>
<para>Set DMA configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer holds incoming/outgoing data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_auto_cmd23</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to determine whether to enable auto CMD23 or not </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1114" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="586" bodyend="608" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1114" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab8a5e4767ee4378088c66aadea3b1fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_init</definition>
        <argsstring>(SDXC_Type *base, const sdxc_config_t *config)</argsstring>
        <name>sdxc_init</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize SDXC controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1124" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="488" bodyend="522" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1124" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga73feb9897b8f5cf319e847a99e156a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint32_t timeout_in_ms, uint32_t *actual_timeout_ms)</argsstring>
        <name>sdxc_set_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_in_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>actual_timeout_ms</declname>
        </param>
        <briefdescription>
<para>Set the Data Timeout Counter value for an SD/eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_in_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Required timeout value in milliseconds, maximum value is 131,072ms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">actual_timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Actual timeout in milliseconds, reported by this API </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1132" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="524" bodyend="548" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gac5fb3d55059ad32729acbb387f34b6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_speed_mode</definition>
        <argsstring>(SDXC_Type *base, sdxc_speed_mode_t mode)</argsstring>
        <name>sdxc_set_speed_mode</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" kindref="member">sdxc_speed_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set SDXC speed mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC speed mode option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1139" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="824" bodyend="835" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1139" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ae9522477d9e42e05bb8ffc2550bce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_bus_width</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_width_t width)</argsstring>
        <name>sdxc_set_data_bus_width</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" kindref="member">sdxc_bus_width_t</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC bus width option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1147" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="791" bodyend="807" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae6f2e82b50fd078a88a5278c1ef22ba7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdxc_get_data_bus_width</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_data_bus_width</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual bus width, valid value: 1 / 4 / 8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1154" column="10" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="809" bodyend="822" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1154" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae0635c97cad9b873abe5b7607193c08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_select_voltage</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_voltage_option_t option)</argsstring>
        <name>sdxc_select_voltage</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" kindref="member">sdxc_bus_voltage_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Set SDXC IO voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[option]</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC voltage option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1161" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="766" bodyend="778" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9b2e7b33139a03435fef1a3d189c6d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdxc_reset</definition>
        <argsstring>(SDXC_Type *base, sdxc_sw_reset_type_t reset_type, uint32_t timeout)</argsstring>
        <name>sdxc_reset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" kindref="member">sdxc_sw_reset_type_t</ref></type>
          <declname>reset_type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Reset SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset_type</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC reset type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>reset result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1170" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="737" bodyend="764" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1170" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga4e6a818f8216a57938fd3b117b589103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_enable_wakeup_event</definition>
        <argsstring>(SDXC_Type *base, sdxc_wakeup_event_t evt, bool enable)</argsstring>
        <name>sdxc_enable_wakeup_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" kindref="member">sdxc_wakeup_event_t</ref></type>
          <declname>evt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC wakeup interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC wakeup interrupt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control whether to enable SDXC wakeup event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1178" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="780" bodyend="789" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1178" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gafa155b89ce0f4d2145046ac8741f5436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_blocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_blocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1187" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="892" bodyend="914" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1187" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gac11989ec620ff7b92909fd56ff289200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_nonblocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_nonblocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in nonblocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1196" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="837" bodyend="890" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1196" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9c4e2b433f70fe082bee6ce95b1f6d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_error_recovery</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_error_recovery</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>SDXC Error recovery. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>error recovery status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1203" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="916" bodyend="968" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1203" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga96500ce7256b9bcdc3850d55bf1afad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_tuning_flow_sequence</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_tuning_flow_sequence</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC tuning flow sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1211" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="979" bodyend="1009" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1211" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga849cf571dee804c559d6b8036572e304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_software_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC software tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1219" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1011" bodyend="1093" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1219" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae7626db5bce2a5a4ada6dbcd1da3d7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC auto tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1227" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1095" bodyend="1105" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1227" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__sdxc__interface_1ga006b38b2434ce421355378bf83e10d4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_1V8</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
<para>Generic Definitions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>: If the Host support 1.8V, it means:<orderedlist>
<listitem><para>For SD card, it supports:<itemizedlist>
<listitem><para>SDR12</para>
</listitem><listitem><para>SDR25</para>
</listitem><listitem><para>SDR50</para>
</listitem><listitem><para>SDR104</para>
</listitem><listitem><para>DDR50</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>For eMMC, it supports:<itemizedlist>
<listitem><para>DDR50</para>
</listitem><listitem><para>HS200</para>
</listitem><listitem><para>HS400 (if 8-bit is supported as well) SDXC Host support 1.8v </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7c14a95dd77b6bf6acb873b4d8b2a55" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_4BIT</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 4bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="40" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga20335b1697b81181a8d81239eb22ae4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_8BIT</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 8bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf650710ac363e246304710aec5566a87" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_EMMC</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support EMMC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="42" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_CD</name>
        <initializer>(1UL &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC Pin features. </para>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Card detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="47" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_VSEL</name>
        <initializer>(1UL &lt;&lt; 17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Voltage Selection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_PWR</name>
        <initializer>(1UL &lt;&lt; 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Power Switch </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_WP</name>
        <initializer>(1UL &lt;&lt; 19)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Write Protection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_RST</name>
        <initializer>(1UL &lt;&lt; 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Reset Pin </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_DS</name>
        <initializer>(1UL &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Data Strobe </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaac2935f5fcc64b462d72e7e3f8a3f688" prot="public" static="no">
        <name>SDXC_HOST_CD_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
<para>SDXC Pin is native or from GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para>Card detection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" prot="public" static="no">
        <name>SDXC_HOST_VSEL_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" kindref="member">SDXC_HOST_SUPPORT_VSEL</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voltage selection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac106c1376ca161529911999810426072" prot="public" static="no">
        <name>SDXC_HOST_PWR_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power switch is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="59" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0e7a8d79a42703adb78c0f00d139ace8" prot="public" static="no">
        <name>SDXC_HOST_WP_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write protection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga8103583416d13e6f5391abb139724f8b" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" kindref="member">SDXC_HOST_SUPPORT_RST</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset Pin is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7329858e7a9e804ca805dc32b3158ba" prot="public" static="no">
        <name>SDXC_HOST_VSEL_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC GPIO pin polarity If polarity is 0, it means: GPIO level 0 means disabled, 1 means enabled If polarity is 1, it meansL: GPIO level 0 means enabled, 1 means disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafb190f447137d842504d5a8c379f4c17" prot="public" static="no">
        <name>SDXC_HOST_CD_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" kindref="member">SDXC_HOST_VSEL_IN_IP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6fd53657d00937708246cf3955de44c0" prot="public" static="no">
        <name>SDXC_HOST_PWR_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="72" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0c5545567839318577cea1c4a478c101" prot="public" static="no">
        <name>SDXC_HOST_WP_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="73" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5a9136b6c722657e0e9415f6d4119170" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" kindref="member">SDXC_HOST_SUPPORT_DS</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="74" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6d9acf45eb1d5ee4b809304ce521dc8a" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_NO_RESP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Command Response Type Selection. </para>
        </briefdescription>
        <detaileddescription>
<para>No Response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="79" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a68f63f56a45a423dd3627a305502bc" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_136</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 136 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf40b0ff4605bae4c0f81c91312a64996" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga87fd5eef5eeb051a068cb273f6d013ed" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48B</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48; Check busy after response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" prot="public" static="no">
        <name>SDXC_STS_CMD_ERR</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="85" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="85" bodyend="86"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" prot="public" static="no">
        <name>SDXC_STS_DATA_ERR</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="87" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" prot="public" static="no">
        <name>SDXC_STS_CARD_ERR</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="89" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gadec3ce578445887ea4db534983a02c19" prot="public" static="no">
        <name>SDXC_STS_ERROR</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" kindref="member">SDXC_STS_DATA_ERR</ref> | <ref refid="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" kindref="member">SDXC_STS_CARD_ERR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="90" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0b409a1003769ad28ebb04d117e49e9d" prot="public" static="no">
        <name>SDXC_STS_CMD_FLAGS</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="91" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gab059dd8331b722cdb50a215527a99288" prot="public" static="no">
        <name>SDXC_STS_ALL_FLAGS</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aad46a06ffce19aaa84e795ec79743dc8" kindref="member">SDXC_INT_STAT_CQE_EVENT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7067c53a61002838d3a9587017b6310d" kindref="member">SDXC_INT_STAT_FX_EVENT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a1e260471133904ae3ac8c886ed7168a1" kindref="member">SDXC_INT_STAT_RE_TUNE_EVENT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abd5b34a64c92b7c535d16d8eb65999af" kindref="member">SDXC_INT_STAT_CARD_INTERRUPT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae7bb0b2bdeece792f4b00583feb32c2a" kindref="member">SDXC_INT_STAT_CARD_INSERTION_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae9a9bba65ad61701d18330a4062f5f2d" kindref="member">SDXC_INT_STAT_BUF_RD_READY_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a4af3aed338adc11e4eb170df95c8afef" kindref="member">SDXC_INT_STAT_BUF_WR_READY_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abd29fba0e4752221ce06e5c50b5380b1" kindref="member">SDXC_INT_STAT_DMA_INTERRUPT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a6a270132e8a546da1071a290aee6e729" kindref="member">SDXC_INT_STAT_BGAP_EVENT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abc38bd15f6a07660c7434b916ac26aba" kindref="member">SDXC_INT_STAT_XFER_COMPLETE_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a4117cdfb077297e964622dcff8ccc3b8" kindref="member">SDXC_INT_STAT_BOOT_ACK_ERR_MASK</ref> |  \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a74b80d2e801b08c4776c7316b6ee4362" kindref="member">SDXC_INT_STAT_RESP_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a6a4d4c6b5f1941db1e1b3335ef055e52" kindref="member">SDXC_INT_STAT_TUNING_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a03041abb73166580a23176b26ec416ca" kindref="member">SDXC_INT_STAT_ADMA_ERR_MASK</ref> |   \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab06912c3ab32bb5f6627b03bdcfcda25" kindref="member">SDXC_INT_STAT_CUR_LMT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="93" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga4efada8c8222039e8f2044fd672296a4" prot="public" static="no">
        <name>SDXC_CMD_TYPE_NORMAL</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
<para>Command Type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="205" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1b9942bb3b52a563a5831c3a75edff66" prot="public" static="no">
        <name>SDXC_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="206" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5e477711a76882f6ef5bff57a7fc858b" prot="public" static="no">
        <name>SDXC_CMD_TYPE_RESUME</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="207" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga21af6614c131e19e74a0e678eaed3d75" prot="public" static="no">
        <name>SDXC_CMD_TYPE_ABORT</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="208" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga64d02f62564b5fa6fba4c65bc5e70401" prot="public" static="no">
        <name>SDXC_CMD_RESP_NO_RESPONSE</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="228" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bdcf83e8c7aaf668abac399c7d3a47" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_136</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="229" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gada92f05c73de87d517a4fe7c7bb83ff5" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="230" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gae246187d7d4173f1ccab65ef86729ea9" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48B</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="231" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga14e5870194b62fad53c4dce75306b8bb" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_MAIN_CMD</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="233" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga991e88691462743d1ce6d69eb955ae9b" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_SUB_CMD</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa38fa76e2c08f9edd887c4f11181ec8d" kindref="member">SDXC_CMD_XFER_SUB_CMD_FLAG_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="234" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga931a51100df4fcc10de6e033b74cf66b" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_EN</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aacd7d756bb56ae648a23591209d816bf" kindref="member">SDXC_CMD_XFER_CMD_CRC_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="236" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd081c049f84762e644d9b1594243064" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="237" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga9584623075b1db44def7e6a7e7b67440" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_EN</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ad961e15d8931ae4f7e73ab7b0f84b132" kindref="member">SDXC_CMD_XFER_CMD_IDX_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="239" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81d2b7235cc57723b0c3b3a418f78f8f" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="240" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafbc52a6bc518d8dde79a28a65ce22e29" prot="public" static="no">
        <name>SDXC_CMD_DATA_PRESENT</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a457a728c0d09629d913f3f45df746b58" kindref="member">SDXC_CMD_XFER_DATA_PRESENT_SEL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="242" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaefb2cbea8db6714781802020d7b49cab" prot="public" static="no">
        <name>SDXC_CMD_DATA_NO_PRESENT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="243" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaa1e70e684b9fa1a3251081b5e5b06a87" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="245" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd2f50334b995ac0f0b82e5e791d964b" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="246" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga34d636f06665bd558a8ce5bdcd05b2de" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_RESUME</name>
        <initializer>(2U &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="247" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf71c3a04f5d222dcfe44473ff5faf87a" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_ABORT</name>
        <initializer>(3U &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="248" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga2a8d7b0f163fa13e3f3f01381f924b81" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_VALID_FLAG</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="473" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga38ee4cea133045eb496ed1fa16a0c885" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_END_FLAG</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="474" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga09a08fdbc357e9c902e70c363028cd8e" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_INTERRUPT_FLAG</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="475" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1f0809860a826aa3be10b2101ba3aa7b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT0_FLAG</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="476" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac6fadd687de744297397f0d475bb2cda" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT1_FLAG</name>
        <initializer>(1UL &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="477" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga638615101471c0cbe1d094d8c5e5e53b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT2_FLAG</name>
        <initializer>(1UL &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="478" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafcd87a47ab359ae2bfbfcbe1d836eb26" prot="public" static="no">
        <name>SDXC_ADMA2_ADDR_LEN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="480" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga67c183f4215f7c98f0498365c454d19b" prot="public" static="no">
        <name>SDXC_ADMA2_LEN_ALIGN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="481" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3a88bd55f11c72a61bf8d4f358815245" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_NOP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="483" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaba1b34f20140319b0524b61718e64533" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_TRANS</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="484" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81dc0a42b65e90019306bda00a702268" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_LINK</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="485" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacf79311a57db9034c266c0aed82408c7" prot="public" static="no">
        <name>SDXC_ADMA3_DESC_TYPE_FOR_SD_MODE</name>
        <initializer>(0x1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="486" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5f4abb15cc243673fcd064053fbd0517" prot="public" static="no">
        <name>SDXC_AMDA3_DESC_TYPE_INTEGRATED_LINKER</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="487" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0d84d27f4539a473744cceb256a7ab16" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_FOR_SD_DESC_ATTR</name>
        <initializer>(0x09U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="489" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga475a115f9a3b06d7dd2a7a25898354e6" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_DESC_ATTR</name>
        <initializer>(0x39U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="490" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac9154c04122dc30ced6975e522efec4f" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_32BIT_BLK_CNT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="492" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0fd2a10aaf6e9886daebf890350afea8" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_BLK_SIZE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="493" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gabfcedd6e8401f08fc105d7ffcde83417" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_ARG</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="494" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a316ceba92d4dbf063fe305bed61164" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_CMD_XFER</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="495" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="495" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SDXC driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
