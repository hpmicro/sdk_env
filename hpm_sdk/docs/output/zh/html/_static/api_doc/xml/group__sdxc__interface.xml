<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__sdxc__interface" kind="group">
    <compoundname>sdxc_interface</compoundname>
    <title>SDXC driver APIs</title>
    <innerclass refid="structsdxc__capabilities__t" prot="public">sdxc_capabilities_t</innerclass>
    <innerclass refid="structsdxc__xfer__callback__t" prot="public">sdxc_xfer_callback_t</innerclass>
    <innerclass refid="structsdxc__handle__t" prot="public">sdxc_handle_t</innerclass>
    <innerclass refid="structsdxc__host__t" prot="public">sdxc_host_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sdxc__interface_1ga37ecf42cac48e5cca9b5615ec8882beb" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba0d3ed7978bcf00ac97000a033e24737c" prot="public">
          <name>status_sdxc_busy</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC is busy </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba90a101d6f4c68eba057f5e7dfddff13e" prot="public">
          <name>status_sdxc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba5d9ed478629b49bd06b978e7841de0c8" prot="public">
          <name>status_sdxc_send_cmd_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebab2a9c2fa4c7ae0234e1ea374dd99bbfe" prot="public">
          <name>status_sdxc_cmd_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebab8d9155beb3e069555bd203e9d485045" prot="public">
          <name>status_sdxc_cmd_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebaadbaf10ea7030dd7b044f56c34bc01f0" prot="public">
          <name>status_sdxc_cmd_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(5))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba8ffa3c3732649bc348f81b96b05e9260" prot="public">
          <name>status_sdxc_cmd_index_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(6))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC command index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba1a7bebe571cca56a17cd01e8e2764b09" prot="public">
          <name>status_sdxc_data_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(7))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data timeout error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba58e1427f43d8e630168b698a2e64cadc" prot="public">
          <name>status_sdxc_data_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(8))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba7fef9211d246f475e32944a8185d99f3" prot="public">
          <name>status_sdxc_data_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(9))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC data end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebad7400f529550c82c85ad43a0b107abb8" prot="public">
          <name>status_sdxc_auto_cmd_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(10))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC auto command error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba4191c30d551d9bd5f5ffcad8c4783c13" prot="public">
          <name>status_sdxc_adma_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(11))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC ADMA error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba58b51de0f2d44a61b0abbfc6188104e0" prot="public">
          <name>status_sdxc_tuning_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(12))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba4ba77233f0090055390d7c9b75985d0b" prot="public">
          <name>status_sdxc_response_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(13))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebaca505cb4baae0011c885cab106a414dc" prot="public">
          <name>status_sdxc_boot_ack_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(14))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC boot ack error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba6d045106d67a8803bcf2825126a47cfe" prot="public">
          <name>status_sdxc_retuning_request</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(15))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC retuning request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba8d6c70d2367c09cf71e8841034732bb8" prot="public">
          <name>status_sdxc_autocmd_cmd12_not_exec</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(16))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba630138954e3b1a47749401fabd1b0089" prot="public">
          <name>status_sdxc_autocmd_cmd_timeout_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(17))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD timed out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba795dbdfae54266142c777b6cd9f31afc" prot="public">
          <name>status_sdxc_autocmd_cmd_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(18))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD crc error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba293bc0f5d4a80d6b26ae6a62b1185cc1" prot="public">
          <name>status_sdxc_autocmd_end_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(19))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD end bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba04d86e8b11e32a689d30bcebb4f53f62" prot="public">
          <name>status_sdxc_autocmd_cmd_index_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(20))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD index error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba7eb07985533706de43d29ada59565fed" prot="public">
          <name>status_sdxc_autocmd_cmd_response_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(21))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Auto CMD response error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba6fd382dc4ad27dd293653a4ddf2cc140" prot="public">
          <name>status_sdxc_autocmd_cmd_not_issued_auto_cmd12</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(22))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC unsupported operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba922e482934f1906dce3bd5341bf1c0b4" prot="public">
          <name>status_sdxc_unsupported</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(23))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba21a5057961c4408e63e3f485fc3eebee" prot="public">
          <name>status_sdxc_transfer_data_completed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(24))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba33c64d4046bd3ef323a83ed45a9059d1" prot="public">
          <name>status_sdxc_send_cmd_successful</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(25))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC send command succeeded </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba962556472b7895e218f4cc47ea13ba9b" prot="public">
          <name>status_sdxc_transfer_dma_completed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(26))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer DMA completed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba95bf0c3245ac266184cffa6a737ca4d8" prot="public">
          <name>status_sdxc_transfer_data_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(27))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC transfer data failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba6f00f0fbce2ae6d74f35ad54422345c0" prot="public">
          <name>status_sdxc_dma_addr_or_len_unaligned</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(28))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC DMA address/length unaligned </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebaba4a732221da48321d3372d0f5bd4830" prot="public">
          <name>status_sdxc_tuning_failed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(29))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC tuning failed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba47c025118075e92dbe27bc668b3a3ab3" prot="public">
          <name>status_sdxc_card_removed</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(30))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Card removed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba2d394f15d7e0b451a401ba24c07bd514" prot="public">
          <name>status_sdxc_non_recoverable_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(31))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC non-recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba8ba3bc94de999f14ac9a2b806ac21ca9" prot="public">
          <name>status_sdxc_recoverable_error</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(32))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC recoverable error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882bebacf163a8da1d75aa778a164a1b3da8c5a" prot="public">
          <name>status_sdxc_adma_table_not_enough</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(33))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ADMA table size not enough </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga37ecf42cac48e5cca9b5615ec8882beba5ac6340d67a5e4a0f1d35a223d4b56ff" prot="public">
          <name>status_sdxc_xfer_size_exceeds_max_limit</name>
          <initializer>=  ((uint32_t)(status_group_sdxc)*1000U + (uint32_t)(34))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SDXC Transfer size too large </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="254" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="254" bodyend="293"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1gaf0f33d9f32558db502d799cd8e927301" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1ggaf0f33d9f32558db502d799cd8e927301aee467041660608bc02e9cdd601be9bf2" prot="public">
          <name>sdxc_xfer_data_normal</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer normal read/write data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1ggaf0f33d9f32558db502d799cd8e927301ab8387c9c070610e53f7e18ed8248e541" prot="public">
          <name>sdxc_xfer_data_boot</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1ggaf0f33d9f32558db502d799cd8e927301a5a4b9f0510d3398611f785a3bfe8fc9f" prot="public">
          <name>sdxc_xfer_data_boot_continuous</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer boot data continuously </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDXC transfer data type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="431" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="431" bodyend="435"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdxc__interface_1ga58f483d78a7b7fbd740be9bbd8f0be5a" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__sdxc__interface_1gga58f483d78a7b7fbd740be9bbd8f0be5aa89e9d880ccd9f305c773af3e38926301" prot="public">
          <name>sdxc_adma_desc_single_flag</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdxc__interface_1gga58f483d78a7b7fbd740be9bbd8f0be5aa803b0b7d09e2149f4e9b58c338959f36" prot="public">
          <name>sdxc_adma_desc_multi_flag</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="455" column="1" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="455" bodyend="458"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" prot="public" static="no">
        <type>enum _sdxc_software_reset</type>
        <definition>typedef enum _sdxc_software_reset sdxc_sw_reset_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_sw_reset_type_t</name>
        <briefdescription>
<para>Software reset flag definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="112" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" prot="public" static="no">
        <type>enum _sdxc_bus_voltage_option</type>
        <definition>typedef enum _sdxc_bus_voltage_option sdxc_bus_voltage_option_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_voltage_option_t</name>
        <briefdescription>
<para>SDXC Bus voltage options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="122" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" prot="public" static="no">
        <type>enum _sdxc_wakeup_event</type>
        <definition>typedef enum _sdxc_wakeup_event sdxc_wakeup_event_t</definition>
        <argsstring></argsstring>
        <name>sdxc_wakeup_event_t</name>
        <briefdescription>
<para>SDXC wakeup events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="131" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" prot="public" static="no">
        <type>enum _sdxc_dma_type</type>
        <definition>typedef enum _sdxc_dma_type sdxc_dma_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dma_type_t</name>
        <briefdescription>
<para>SDXC DMA types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="141" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" prot="public" static="no">
        <type>enum _sdxc_bus_width</type>
        <definition>typedef enum _sdxc_bus_width sdxc_bus_width_t</definition>
        <argsstring></argsstring>
        <name>sdxc_bus_width_t</name>
        <briefdescription>
<para>SDXC Bus width options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" prot="public" static="no">
        <type>enum _sdxc_speed_mode</type>
        <definition>typedef enum _sdxc_speed_mode sdxc_speed_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_speed_mode_t</name>
        <briefdescription>
<para>SDXC Speed mode options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="172" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1e05f721758271a748c54c7f78408af5" prot="public" static="no">
        <type>enum _sdxc_auto_cmd_sel</type>
        <definition>typedef enum _sdxc_auto_cmd_sel sdxc_auto_cmd_sel_t</definition>
        <argsstring></argsstring>
        <name>sdxc_auto_cmd_sel_t</name>
        <briefdescription>
<para>SDXC auto command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="182" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" prot="public" static="no">
        <type>enum _sdxc_xfer_direction</type>
        <definition>typedef enum _sdxc_xfer_direction sdxc_xfer_direction_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_direction_t</name>
        <briefdescription>
<para>SDXC transfer direction options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="190" column="23"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga1543c014abbb97dc5e873dbef7092297" prot="public" static="no">
        <type>enum _sdxc_command_type</type>
        <definition>typedef enum _sdxc_command_type sdxc_command_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_type_t</name>
        <briefdescription>
<para>SDXC Command types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="201" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad7dfc4c7d2c345d659ce3a1db254f7e5" prot="public" static="no">
        <type>enum _sdxc_boot_mode</type>
        <definition>typedef enum _sdxc_boot_mode sdxc_boot_mode_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_mode_t</name>
        <briefdescription>
<para>SDXC boot mode types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="217" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf6b1d2191e32aab10f798ed7fcbd7002" prot="public" static="no">
        <type>enum _sdxc_response_type</type>
        <definition>typedef enum _sdxc_response_type sdxc_response_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_response_type_t</name>
        <briefdescription>
<para>SDXC response types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="227" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gace11ac40e88550ca7b89d30584247543" prot="public" static="no">
        <type>enum _sdxc_dev_resp_type</type>
        <definition>typedef enum _sdxc_dev_resp_type sdxc_dev_resp_type_t</definition>
        <argsstring></argsstring>
        <name>sdxc_dev_resp_type_t</name>
        <briefdescription>
<para>SDXC Device response type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="380" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" prot="public" static="no">
        <type>struct _sdxc_command</type>
        <definition>typedef struct _sdxc_command sdxc_command_t</definition>
        <argsstring></argsstring>
        <name>sdxc_command_t</name>
        <briefdescription>
<para>SDXC command structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="395" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaa724f349a37ce2a3e63b1f73a6ef19f0" prot="public" static="no">
        <type>struct _sdxc_data_list</type>
        <definition>typedef struct _sdxc_data_list sdxc_data_list_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_list_t</name>
        <briefdescription>
<para>SDXC data list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="404" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" prot="public" static="no">
        <type>struct _sdxc_data</type>
        <definition>typedef struct _sdxc_data sdxc_data_t</definition>
        <argsstring></argsstring>
        <name>sdxc_data_t</name>
        <briefdescription>
<para>SDXC data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="426" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" prot="public" static="no">
        <type>struct _sdxc_xfer</type>
        <definition>typedef struct _sdxc_xfer sdxc_xfer_t</definition>
        <argsstring></argsstring>
        <name>sdxc_xfer_t</name>
        <briefdescription>
<para>SDXC transfer context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="443" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" prot="public" static="no">
        <type>struct _sdxc_adma_config</type>
        <definition>typedef struct _sdxc_adma_config sdxc_adma_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma_config_t</name>
        <briefdescription>
<para>SDXC ADMA configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="453" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" prot="public" static="no">
        <type>struct _sdxc_config</type>
        <definition>typedef struct _sdxc_config sdxc_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_config_t</name>
        <briefdescription>
<para>SDXC configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="465" column="15"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" prot="public" static="no">
        <type>struct _sdxc_adma2_descriptor</type>
        <definition>typedef struct _sdxc_adma2_descriptor sdxc_adma2_descriptor_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma2_descriptor_t</name>
        <briefdescription>
<para>SDXC ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="483" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" prot="public" static="no">
        <type>struct _sdxc_adma3_cmd_sd_desc</type>
        <definition>typedef struct _sdxc_adma3_cmd_sd_desc sdxc_adma3_cmd_sd_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_cmd_sd_desc_t</name>
        <briefdescription>
<para>ADMA3 command descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="529" column="26"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" prot="public" static="no">
        <type>struct _sdxc_adma3_integrated_desc</type>
        <definition>typedef struct _sdxc_adma3_integrated_desc sdxc_adma3_integrated_desc_t</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_integrated_desc_t</name>
        <briefdescription>
<para>SDXC ADMA3 Integrated Descriptor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="537" column="30"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gafd2487f6db682ae2aa71581f8418bcc4" prot="public" static="no">
        <type>struct _sdxc_adma3_xfer_list</type>
        <definition>typedef struct _sdxc_adma3_xfer_list sdxc_adma3_xfer_list</definition>
        <argsstring></argsstring>
        <name>sdxc_adma3_xfer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="547" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" prot="public" static="no">
        <type>struct _sdxc_boot_config</type>
        <definition>typedef struct _sdxc_boot_config sdxc_boot_config_t</definition>
        <argsstring></argsstring>
        <name>sdxc_boot_config_t</name>
        <briefdescription>
<para>SDXC Boot configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="559" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__sdxc__interface_1gaf58fbe511d15f703692541782f387cdf" prot="public" static="no">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>(*</type>
        <definition>typedef hpm_stat_t(* sdxc_xfer_func_t) (SDXC_Type *base, sdxc_xfer_t *content)</definition>
        <argsstring>)(SDXC_Type *base, sdxc_xfer_t *content)</argsstring>
        <name>sdxc_xfer_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="577" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="577" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__sdxc__interface_1ga6a826eb5ed7075f21da7f3ce0ec51af4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="597" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="597" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6aa22c0a720da12e1e0debbf02dc34a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_card_inserted</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_is_card_inserted</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is inserted. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card insertion status <itemizedlist>
<listitem><para>true SD Card is inserted </para>
</listitem>
<listitem><para>false SD card is not inserted </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="608" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga2cd65d92334979621857583a4acd848e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_write_protected</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_is_write_protected</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SD card is Write Protected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SD</parametername>
</parameternamelist>
<parameterdescription>
<para>Card Write Protection status <itemizedlist>
<listitem><para>true SD Card is Write protected </para>
</listitem>
<listitem><para>false SD card is not Write Protected </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="619" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="619" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa391eb3d08898c6ba7355a52b4c60003" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_clear_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t status_mask)</argsstring>
        <name>sdxc_clear_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>status_mask</declname>
        </param>
        <briefdescription>
<para>Clear SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the status mask to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="629" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="629" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae5f0710dfc49f88f2329f2344b7f9f93" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_status</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt status mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt status enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="640" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="640" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3b728a911debd78741f3a610632aece3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_interrupt_signal</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask, bool enable)</argsstring>
        <name>sdxc_enable_interrupt_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC interrupt signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC interrupt signal mask </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt signal enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="655" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="655" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga4ec89586f8b87862a0da4f121397b9b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_interrupt_signal</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_get_interrupt_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the SDXC interrupt Signal Enable Register. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the value of INT_SIGNAL_EN register </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="668" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga0804d7c8dd5c9e3f872703ee69f198e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_get_capabilities</definition>
        <argsstring>(const SDXC_Type *base, sdxc_capabilities_t *capabilities)</argsstring>
        <name>sdxc_get_capabilities</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref> *</type>
          <declname>capabilities</declname>
        </param>
        <briefdescription>
<para>Get SDXC capabilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">capabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="678" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="253" bodyend="268" declfile="drivers/inc/hpm_sdxc_drv.h" declline="678" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa703651ad1f34a7d89713920c69daec8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdxc_get_adma_error_status</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_get_adma_error_status</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC ADMA error status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>AMDA</parametername>
</parameternamelist>
<parameterdescription>
<para>error status register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="686" column="23" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="686" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaff483f5ecd4fa1b992b2ba5592abcdfc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_configure_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint8_t timeout)</argsstring>
        <name>sdxc_configure_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Configure SDXC data timeout internal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC data timeout option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="696" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="696" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d4e5053397f64274b6ad9afde77ed1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_interrupt_at_block_gap</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_interrupt_at_block_gap</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC interrupt at block gap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable Interrupt_at_Block_Gap flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="706" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="706" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga492ca47ee6c0c903da015b616f636556" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_read_wait_control</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_read_wait_control</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or Disable SDXC Read Wait. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable SDXC Read Wait flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="720" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="720" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga51791a8fdb9db034f738c19b43dddf08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_continue_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_continue_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC continue request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC continue request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="734" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="734" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3107d1d7214dce827591fcbcaf4883d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_at_block_gap_request</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_at_block_gap_request</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Configure SDXC StopAtBlockGap request. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable StopAtBlockGap request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="748" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="748" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga50a563ab166f03d39b1b379481c4fc4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_high_speed</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_high_speed</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC high-speed support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to Enable/disable SDXC high-speed support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="762" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="762" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaf9ce4642c1fb04f99d3101843a5a135f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_power</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_power</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Control the SDXC power pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control the SDXC power pin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="777" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="777" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gafd15f2b1cdc9b57770b041218f972144" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_async_interrupt</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_async_interrupt</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC asynchronous interrupt support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC asynchronous interrupt support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="791" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="791" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga25db603d644a01c54b96186aea01ae59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_preset</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_preset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC Preset support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC Preset support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="805" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="805" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga22a261f70ff82aaad9b35f034f05954f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_host_version4</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_host_version4</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SD Host version 4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SD Host version 4 support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="819" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="819" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gadb40d63aa02717f3fe73a6ffd6810d0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_execute_tuning</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_execute_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start SDXC tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="832" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="832" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6d5b2c208949f978dda169044aeba9dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_software_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC software tuning process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC software tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="842" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="842" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga7c8bd9eb9c354d64b4c077c2ceac19de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_reset_tuning_engine</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_reset_tuning_engine</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Reset SDXC tuning engine. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="855" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="855" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab793ff643ea3292caa77fe1a2245ea3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_switch_to_1v8_signal</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_switch_to_1v8_signal</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Switch SDXC to 1.8V signaling mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to switch to 1.8v signaling mode/stay at 3.0v signaling mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="865" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="865" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ce6f46d4554c5bfbd577412387976b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_internal_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_internal_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC internal clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC internal clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="879" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="879" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaec8948c2b133bd7bfad7903ab207e47e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_present_status</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_get_present_status</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get Present status register value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>PRESENT register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="893" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="893" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga44625012ebf96dee73c45cb40809f661" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_writable</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_writable</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the Data Buffer is writable or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer is writeable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer write is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="904" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="904" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9f02de147eab480f1e2de46537ea8205" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdxc_is_data_buf_readable</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_is_data_buf_readable</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the data buffer is readable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>There are data available in data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>there is no data available in data buffer, read is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="915" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="915" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga21ce97388c5a36966fca710f71b11d86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_read_data</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_read_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Read data from SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Data</parametername>
</parameternamelist>
<parameterdescription>
<para>read from SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="925" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad883aa5e051210de894123000a3ae605" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_write_data</definition>
        <argsstring>(SDXC_Type *base, uint32_t data)</argsstring>
        <name>sdxc_write_data</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write data to SDXC using non-DMA mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be written to SDXC </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="935" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6fdaa31c2ea94b81fe8df2660b008677" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_data3_0_level</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_get_data3_0_level</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC DATA3-DATA0 IO level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>data3-data0 IO level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="945" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga0e577e17f400b13ed8440aeff78b37a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdxc_get_data7_4_level</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_get_data7_4_level</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC DATA7-DATA4 IO level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>data7-data4 IO level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="955" column="24" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="955" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga71d673cde5fabb5f94f1aae4e6a38afa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC auto tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC auto tuning </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="965" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="965" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga071c2cb3e37f57d6097b7e859628b0a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_stop_clock_during_phase_code_change</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_stop_clock_during_phase_code_change</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Stop Clock During Phase Code Change. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to determine whether stopping clock during phase code change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="980" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="980" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga012eafdabf4041f05edb741a3c4c2707" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_post_change_delay</definition>
        <argsstring>(SDXC_Type *base, uint8_t delay_cnt)</argsstring>
        <name>sdxc_set_post_change_delay</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>delay_cnt</declname>
        </param>
        <briefdescription>
<para>Set The delay cycles during phase switching and stable clock out. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="995" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="995" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8686b0521dce6c61c57a63c599c8f3a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_emmc_support</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_emmc_support</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable EMMC support. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable EMMC support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1006" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1006" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae2fc7bf986b78a4965d2f6ccf8e24833" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_mmc_boot</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_mmc_boot</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable SDXC MMC boot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>FLag to enable/disable SDXC MMC boot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1020" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1020" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad8ba9664b2f00c65b810403cafe6301b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_force_event</definition>
        <argsstring>(SDXC_Type *base, uint32_t mask)</argsstring>
        <name>sdxc_force_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set SDXC force event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC event mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1034" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1034" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga30fb0c706288794a858068263426da6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_sd_clock</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_sd_clock</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/disable SDXC SD clock output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable/disable SDXC SD clock output </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1044" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1044" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa81097ebdf516fd8afb5ea38f4eee14e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_set_center_phase_code</definition>
        <argsstring>(SDXC_Type *base, uint32_t value)</argsstring>
        <name>sdxc_set_center_phase_code</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SDXC center phase code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC center phase value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1062" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1062" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga6957049b45df15722a34d76a6a765630" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_enable_enhanced_strobe</definition>
        <argsstring>(SDXC_Type *base, bool enable)</argsstring>
        <name>sdxc_enable_enhanced_strobe</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC enhanced strobe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to enable/disable SDXC enhanced strobe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1073" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1073" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab5675ed33381e81b53c6551fc1d3f383" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdxc_select_dma_type</definition>
        <argsstring>(SDXC_Type *base, sdxc_dma_type_t dma_type)</argsstring>
        <name>sdxc_select_dma_type</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga3523112a8d468ca2333d5299b420bd70" kindref="member">sdxc_dma_type_t</ref></type>
          <declname>dma_type</declname>
        </param>
        <briefdescription>
<para>Select DMA type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_type</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1087" column="20" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="1087" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga718ebac138d35e50f16d7864c2a36628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdxc_is_bus_idle</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_is_bus_idle</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether SDXC Bus is idle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC bus state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1099" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="246" bodyend="251" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1099" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaa9ce2278139e0437c932acc51ea606cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_mmc_boot_config</definition>
        <argsstring>(SDXC_Type *base, const sdxc_boot_config_t *config)</argsstring>
        <name>sdxc_set_mmc_boot_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga8ba1b1dbff8c251b15d95d37c2dd7abd" kindref="member">sdxc_boot_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Set MMC boot configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>MMC boot configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1106" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="531" bodyend="550" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1106" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaecd62eab0806df227626cd482e6d5888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_send_command</definition>
        <argsstring>(SDXC_Type *base, const sdxc_command_t *cmd)</argsstring>
        <name>sdxc_send_command</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send Command via SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Sending command timed out </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Command was sent out successfully </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1115" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="319" bodyend="329" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1115" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaaa075603a91b8d0d8787dd0657a640ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_receive_cmd_response</definition>
        <argsstring>(const SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_receive_cmd_response</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Receive command response. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1123" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="85" bodyend="122" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1123" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab72d27dc5881670acade5fa1d938675c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_parse_interrupt_status</definition>
        <argsstring>(SDXC_Type *base)</argsstring>
        <name>sdxc_parse_interrupt_status</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Parse the SDXC interrupt status to HPM encoded status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if no error happened </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1130" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="332" bodyend="387" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1130" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gabeae58ec5cd7899ec0c8b91afdfc94e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_wait_cmd_done</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd, bool polling_cmd_done)</argsstring>
        <name>sdxc_wait_cmd_done</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>polling_cmd_done</declname>
        </param>
        <briefdescription>
<para>Wait until SDXC command completes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">polling_cmd_done</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to determine whether to use blocking wait </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>SDXC</parametername>
</parameternamelist>
<parameterdescription>
<para>command execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1139" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="389" bodyend="410" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1139" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga0d82d3656ba9b1dc07ac67b2405b735d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_xfer_direction_t data_dir, uint32_t block_cnt, uint32_t block_size)</argsstring>
        <name>sdxc_set_data_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga450d8407e143800f7ae0664e5adcec3e" kindref="member">sdxc_xfer_direction_t</ref></type>
          <declname>data_dir</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_cnt</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Set Data transfer configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Data transfer direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Block count for data transfer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Block size for data transfer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1148" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="552" bodyend="565" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1148" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gaabc37784a8f2663144ba389ea3174e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma_table_config</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_cfg, sdxc_data_t *data_cfg, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_set_adma_table_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref> *</type>
          <declname>data_cfg</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Set ADMA table configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Data configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC command context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1158" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="775" bodyend="810" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1158" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga8937ae8ac7ee460467dc1b4607a56fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma2_desc</definition>
        <argsstring>(sdxc_adma_config_t *dma_config, const sdxc_data_t *xfer_data, uint32_t *num_entries)</argsstring>
        <name>sdxc_set_adma2_desc</name>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref> *</type>
          <declname>xfer_data</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>num_entries</declname>
        </param>
        <briefdescription>
<para>Set ADMA2 descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the Data to be transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">num_entries</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ADMA2 Table entries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>API execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1170" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="682" bodyend="773" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1170" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga07181d3b4f4fac5975fffdbe6bc7c7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_adma3_desc</definition>
        <argsstring>(sdxc_adma_config_t *dma_config, sdxc_adma3_xfer_list *adma3_xfer_list)</argsstring>
        <name>sdxc_set_adma3_desc</name>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gafd2487f6db682ae2aa71581f8418bcc4" kindref="member">sdxc_adma3_xfer_list</ref> *</type>
          <declname>adma3_xfer_list</declname>
        </param>
        <briefdescription>
<para>Configures and sets up the ADMA3 descriptor for a transfer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function initializes and sets up the ADMA3 (Advanced DMA 3) descriptor based on the provided configuration and transfer list. It ensures that the ADMA table has enough space to accommodate the descriptors and integrates them into the ADMA table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ADMA configuration structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adma3_xfer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the ADMA3 transfer list. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of the operation, indicating success or failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1187" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="591" bodyend="680" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1187" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae6a373bd774d08f23f487eb094e7640d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_set_dma_config</definition>
        <argsstring>(SDXC_Type *base, const sdxc_adma_config_t *dma_cfg, const uint32_t *data_addr)</argsstring>
        <name>sdxc_set_dma_config</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_cfg</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data_addr</declname>
        </param>
        <briefdescription>
<para>Set DMA configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dma_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA configuration data structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer holds incoming/outgoing data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1196" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="567" bodyend="589" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1196" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gab8a5e4767ee4378088c66aadea3b1fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_init</definition>
        <argsstring>(SDXC_Type *base, const sdxc_config_t *config)</argsstring>
        <name>sdxc_init</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1ga3d92b894abf506070f8c933b3ac06c94" kindref="member">sdxc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize SDXC controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1203" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="469" bodyend="503" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1203" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga73feb9897b8f5cf319e847a99e156a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_timeout</definition>
        <argsstring>(SDXC_Type *base, uint32_t timeout_in_ms, uint32_t *actual_timeout_ms)</argsstring>
        <name>sdxc_set_data_timeout</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_in_ms</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>actual_timeout_ms</declname>
        </param>
        <briefdescription>
<para>Set the Data Timeout Counter value for an SD/eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_in_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Required timeout value in milliseconds, maximum value is 131,072ms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">actual_timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Actual timeout in milliseconds, reported by this API </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1211" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="505" bodyend="529" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1211" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gac5fb3d55059ad32729acbb387f34b6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_speed_mode</definition>
        <argsstring>(SDXC_Type *base, sdxc_speed_mode_t mode)</argsstring>
        <name>sdxc_set_speed_mode</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae78c116c8128539ed4fdf8b1793d4f22" kindref="member">sdxc_speed_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set SDXC speed mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC speed mode option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1218" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="899" bodyend="910" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1218" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3ae9522477d9e42e05bb8ffc2550bce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_set_data_bus_width</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_width_t width)</argsstring>
        <name>sdxc_set_data_bus_width</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga941f114fc357db2e037b077829030011" kindref="member">sdxc_bus_width_t</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC bus width option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1226" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="866" bodyend="882" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1226" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga5b6961920d56412823ce21602eef943f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdxc_get_data_bus_width</definition>
        <argsstring>(const SDXC_Type *base)</argsstring>
        <name>sdxc_get_data_bus_width</name>
        <param>
          <type>const <ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get SDXC Data bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual bus width, valid value: 1 / 4 / 8 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1233" column="10" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="884" bodyend="897" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1233" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae0635c97cad9b873abe5b7607193c08b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_select_voltage</definition>
        <argsstring>(SDXC_Type *base, sdxc_bus_voltage_option_t option)</argsstring>
        <name>sdxc_select_voltage</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga57c56ca19536aaf71de97e946f9cc820" kindref="member">sdxc_bus_voltage_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Set SDXC IO voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC voltage option </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1240" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="841" bodyend="853" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1240" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga9b2e7b33139a03435fef1a3d189c6d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdxc_reset</definition>
        <argsstring>(SDXC_Type *base, sdxc_sw_reset_type_t reset_type, uint32_t timeout)</argsstring>
        <name>sdxc_reset</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gadf0e883ba6f05e487a7951245c8ffd92" kindref="member">sdxc_sw_reset_type_t</ref></type>
          <declname>reset_type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Reset SDXC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset_type</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC reset type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout ticks </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC reset result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1249" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="812" bodyend="839" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1249" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga4e6a818f8216a57938fd3b117b589103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdxc_enable_wakeup_event</definition>
        <argsstring>(SDXC_Type *base, sdxc_wakeup_event_t evt, bool enable)</argsstring>
        <name>sdxc_enable_wakeup_event</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gac2e995290e2f58d42e4e3f65ece1210b" kindref="member">sdxc_wakeup_event_t</ref></type>
          <declname>evt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable SDXC wakeup interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">evt</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC wakeup interrupt </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to control whether to enable SDXC wakeup event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1257" column="6" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="855" bodyend="864" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1257" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gad22123d9c9fb7609e1392d83f2feaf6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_blocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, const sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_blocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in blocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC transfer status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1266" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="995" bodyend="1024" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1266" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga3e4271117d01b54466ae2d2dd6c91ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_adma3_transfer_nonblocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, sdxc_adma3_xfer_list *adma3_xfer_list)</argsstring>
        <name>sdxc_adma3_transfer_nonblocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gafd2487f6db682ae2aa71581f8418bcc4" kindref="member">sdxc_adma3_xfer_list</ref> *</type>
          <declname>adma3_xfer_list</declname>
        </param>
        <briefdescription>
<para>SDXC ADMA3 nonblocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adma3_xfer_list</parametername>
</parameternamelist>
<parameterdescription>
<para>ADMA3 transfer list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC transfer status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1275" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="974" bodyend="993" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1275" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gacc7f62d557dbb93af804b07dda3efab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_transfer_nonblocking</definition>
        <argsstring>(SDXC_Type *base, sdxc_adma_config_t *dma_config, const sdxc_xfer_t *xfer)</argsstring>
        <name>sdxc_transfer_nonblocking</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1gae6d375f36b682792289d9be721fa1ca7" kindref="member">sdxc_adma_config_t</ref> *</type>
          <declname>dma_config</declname>
        </param>
        <param>
          <type>const <ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref> *</type>
          <declname>xfer</declname>
        </param>
        <briefdescription>
<para>Start SDXC transfer in nonblocking way. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dma_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC DMA configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC transfer context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC transfer status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1286" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="912" bodyend="972" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1286" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga769e8c49a906c0ca2c6074e3f74610e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_error_recovery</definition>
        <argsstring>(SDXC_Type *base, sdxc_command_t *cmd)</argsstring>
        <name>sdxc_error_recovery</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>SDXC Error recovery. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC command context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDXC error recovering status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1294" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1078" bodyend="1143" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1294" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga96500ce7256b9bcdc3850d55bf1afad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_tuning_flow_sequence</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_tuning_flow_sequence</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC tuning flow sequence. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1302" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1154" bodyend="1184" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1302" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1ga849cf571dee804c559d6b8036572e304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_software_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_software_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC software tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1310" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1186" bodyend="1268" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1310" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdxc__interface_1gae7626db5bce2a5a4ada6dbcd1da3d7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdxc_perform_auto_tuning</definition>
        <argsstring>(SDXC_Type *base, uint8_t tuning_cmd)</argsstring>
        <name>sdxc_perform_auto_tuning</name>
        <param>
          <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tuning_cmd</declname>
        </param>
        <briefdescription>
<para>Perform SDXC auto-tuning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SDXC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tuning_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>tuning command </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Tuning</parametername>
</parameternamelist>
<parameterdescription>
<para>status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="1318" column="12" bodyfile="drivers/src/hpm_sdxc_drv.c" bodystart="1270" bodyend="1280" declfile="drivers/inc/hpm_sdxc_drv.h" declline="1318" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__sdxc__interface_1ga006b38b2434ce421355378bf83e10d4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_1V8</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
<para>Generic Definitions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>: If the Host support 1.8V, it means:<orderedlist>
<listitem><para>For SD card, it supports:<itemizedlist>
<listitem><para>SDR12</para>
</listitem><listitem><para>SDR25</para>
</listitem><listitem><para>SDR50</para>
</listitem><listitem><para>SDR104</para>
</listitem><listitem><para>DDR50</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>For eMMC, it supports:<itemizedlist>
<listitem><para>DDR50</para>
</listitem><listitem><para>HS200</para>
</listitem><listitem><para>HS400 (if 8-bit is supported as well) SDXC Host support 1.8v </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7c14a95dd77b6bf6acb873b4d8b2a55" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_4BIT</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 4bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="40" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga20335b1697b81181a8d81239eb22ae4a" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_8BIT</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support 8bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf650710ac363e246304710aec5566a87" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_EMMC</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support EMMC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="42" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_CD</name>
        <initializer>(1UL &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC Pin features. </para>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Card detection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="47" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_VSEL</name>
        <initializer>(1UL &lt;&lt; 17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Voltage Selection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_PWR</name>
        <initializer>(1UL &lt;&lt; 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Power Switch </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_WP</name>
        <initializer>(1UL &lt;&lt; 19)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Write Protection </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_RST</name>
        <initializer>(1UL &lt;&lt; 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Reset Pin </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" prot="public" static="no">
        <name>SDXC_HOST_SUPPORT_DS</name>
        <initializer>(1UL &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDXC Host support Data Strobe </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaac2935f5fcc64b462d72e7e3f8a3f688" prot="public" static="no">
        <name>SDXC_HOST_CD_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
<para>SDXC Pin is native or from GPIO. </para>
        </briefdescription>
        <detaileddescription>
<para>Card detection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" prot="public" static="no">
        <name>SDXC_HOST_VSEL_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga3bea319a46960b07d4f7418318cef35f" kindref="member">SDXC_HOST_SUPPORT_VSEL</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Voltage selection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac106c1376ca161529911999810426072" prot="public" static="no">
        <name>SDXC_HOST_PWR_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power switch is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="59" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0e7a8d79a42703adb78c0f00d139ace8" prot="public" static="no">
        <name>SDXC_HOST_WP_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write protection is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga8103583416d13e6f5391abb139724f8b" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_IP</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga30ab51d728b67f9e3bca6ed67c83f7f6" kindref="member">SDXC_HOST_SUPPORT_RST</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset Pin is controlled by IP </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gad7329858e7a9e804ca805dc32b3158ba" prot="public" static="no">
        <name>SDXC_HOST_VSEL_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga56bf82e6dc82165b64361b03edf3159b" kindref="member">SDXC_HOST_SUPPORT_CD</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
<para>SDXC GPIO pin polarity If polarity is 0, it means: GPIO level 0 means disabled, 1 means enabled If polarity is 1, it meansL: GPIO level 0 means enabled, 1 means disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafb190f447137d842504d5a8c379f4c17" prot="public" static="no">
        <name>SDXC_HOST_CD_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga1c5cabf98880472496c811380ab59bab" kindref="member">SDXC_HOST_VSEL_IN_IP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6fd53657d00937708246cf3955de44c0" prot="public" static="no">
        <name>SDXC_HOST_PWR_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga5431b092b9419fdd1fdc9ce9c5df0f02" kindref="member">SDXC_HOST_SUPPORT_PWR</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="72" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0c5545567839318577cea1c4a478c101" prot="public" static="no">
        <name>SDXC_HOST_WP_PIN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga154257ca25ee80b0e282e614df5868df" kindref="member">SDXC_HOST_SUPPORT_WP</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="73" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5a9136b6c722657e0e9415f6d4119170" prot="public" static="no">
        <name>SDXC_HOST_RST_IN_POLARITY</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga120e6e6d06cf4f3c7367b459c2633702" kindref="member">SDXC_HOST_SUPPORT_DS</ref> &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="74" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga6d9acf45eb1d5ee4b809304ce521dc8a" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_NO_RESP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Command Response Type Selection. </para>
        </briefdescription>
        <detaileddescription>
<para>No Response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="79" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a68f63f56a45a423dd3627a305502bc" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_136</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 136 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf40b0ff4605bae4c0f81c91312a64996" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga87fd5eef5eeb051a068cb273f6d013ed" prot="public" static="no">
        <name>SDXC_CMD_RESP_TYPE_RESP_LEN_48B</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Response Length 48; Check busy after response </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" prot="public" static="no">
        <name>SDXC_STS_CMD_ERR</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a74b80d2e801b08c4776c7316b6ee4362" kindref="member">SDXC_INT_STAT_RESP_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="85" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" prot="public" static="no">
        <name>SDXC_STS_DATA_ERR</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a03041abb73166580a23176b26ec416ca" kindref="member">SDXC_INT_STAT_ADMA_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="88" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="88" bodyend="89"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" prot="public" static="no">
        <name>SDXC_STS_CARD_ERR</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="90" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gadec3ce578445887ea4db534983a02c19" prot="public" static="no">
        <name>SDXC_STS_ERROR</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="group__sdxc__interface_1gaf25560ebeea21fc82ead7277826653bc" kindref="member">SDXC_STS_DATA_ERR</ref> | <ref refid="group__sdxc__interface_1ga3d1ecfbb9e6e8295c08e2dd36cef4fdd" kindref="member">SDXC_STS_CARD_ERR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="91" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0b409a1003769ad28ebb04d117e49e9d" prot="public" static="no">
        <name>SDXC_STS_CMD_FLAGS</name>
        <initializer>(<ref refid="group__sdxc__interface_1ga625e915f71738d802e37fee8d8723541" kindref="member">SDXC_STS_CMD_ERR</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="92" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gab059dd8331b722cdb50a215527a99288" prot="public" static="no">
        <name>SDXC_STS_ALL_FLAGS</name>
        <initializer>            (<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae14eddddff2c0b9089d113dc49373330" kindref="member">SDXC_INT_STAT_ERR_INTERRUPT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aad46a06ffce19aaa84e795ec79743dc8" kindref="member">SDXC_INT_STAT_CQE_EVENT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7067c53a61002838d3a9587017b6310d" kindref="member">SDXC_INT_STAT_FX_EVENT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a1e260471133904ae3ac8c886ed7168a1" kindref="member">SDXC_INT_STAT_RE_TUNE_EVENT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abd5b34a64c92b7c535d16d8eb65999af" kindref="member">SDXC_INT_STAT_CARD_INTERRUPT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a094b4d815982b6e5118dc7f77c8e02eb" kindref="member">SDXC_INT_STAT_CARD_REMOVAL_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae7bb0b2bdeece792f4b00583feb32c2a" kindref="member">SDXC_INT_STAT_CARD_INSERTION_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae9a9bba65ad61701d18330a4062f5f2d" kindref="member">SDXC_INT_STAT_BUF_RD_READY_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a4af3aed338adc11e4eb170df95c8afef" kindref="member">SDXC_INT_STAT_BUF_WR_READY_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abd29fba0e4752221ce06e5c50b5380b1" kindref="member">SDXC_INT_STAT_DMA_INTERRUPT_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a6a270132e8a546da1071a290aee6e729" kindref="member">SDXC_INT_STAT_BGAP_EVENT_MASK</ref> | \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abc38bd15f6a07660c7434b916ac26aba" kindref="member">SDXC_INT_STAT_XFER_COMPLETE_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a86f4809b08406fa29e93ba604844625a" kindref="member">SDXC_INT_STAT_CMD_COMPLETE_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a4117cdfb077297e964622dcff8ccc3b8" kindref="member">SDXC_INT_STAT_BOOT_ACK_ERR_MASK</ref> |  \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a74b80d2e801b08c4776c7316b6ee4362" kindref="member">SDXC_INT_STAT_RESP_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a6a4d4c6b5f1941db1e1b3335ef055e52" kindref="member">SDXC_INT_STAT_TUNING_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a03041abb73166580a23176b26ec416ca" kindref="member">SDXC_INT_STAT_ADMA_ERR_MASK</ref> |   \
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab235191ad795f045025ffabc7a7e7847" kindref="member">SDXC_INT_STAT_AUTO_CMD_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ab06912c3ab32bb5f6627b03bdcfcda25" kindref="member">SDXC_INT_STAT_CUR_LMT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ae353c1f5e99dc167c8f204668bfec8d4" kindref="member">SDXC_INT_STAT_DATA_END_BIT_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a46a49175b5f1eccdd8364c1f420f7c0a" kindref="member">SDXC_INT_STAT_DATA_CRC_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a2eed2875d5c81559ee018c5d4ea6858b" kindref="member">SDXC_INT_STAT_DATA_TOUT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1afc95e3571b909b6e3858b7ad66de814e" kindref="member">SDXC_INT_STAT_CMD_IDX_ERR_MASK</ref> |\
            <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1abde39b95c6e6f8308ffebb4f0c199573" kindref="member">SDXC_INT_STAT_CMD_END_BIT_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a29db956b5dbf778ceb8f6f65ad6b429c" kindref="member">SDXC_INT_STAT_CMD_CRC_ERR_MASK</ref> | <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1af759e6193b3a5704a8dcfd65095656e5" kindref="member">SDXC_INT_STAT_CMD_TOUT_ERR_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="94" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga4efada8c8222039e8f2044fd672296a4" prot="public" static="no">
        <name>SDXC_CMD_TYPE_NORMAL</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
<para>Command Type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="206" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1b9942bb3b52a563a5831c3a75edff66" prot="public" static="no">
        <name>SDXC_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="207" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5e477711a76882f6ef5bff57a7fc858b" prot="public" static="no">
        <name>SDXC_CMD_TYPE_RESUME</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="208" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga21af6614c131e19e74a0e678eaed3d75" prot="public" static="no">
        <name>SDXC_CMD_TYPE_ABORT</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="209" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga64d02f62564b5fa6fba4c65bc5e70401" prot="public" static="no">
        <name>SDXC_CMD_RESP_NO_RESPONSE</name>
        <initializer>(0UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="229" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga56bdcf83e8c7aaf668abac399c7d3a47" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_136</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="230" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gada92f05c73de87d517a4fe7c7bb83ff5" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48</name>
        <initializer>(2UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="231" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gae246187d7d4173f1ccab65ef86729ea9" prot="public" static="no">
        <name>SDXC_CMD_RESP_LEN_48B</name>
        <initializer>(3UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a9a6b72a55e26a8b086beeaeebde5b0c0" kindref="member">SDXC_CMD_XFER_RESP_TYPE_SELECT_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="232" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga14e5870194b62fad53c4dce75306b8bb" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_MAIN_CMD</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="234" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga991e88691462743d1ce6d69eb955ae9b" prot="public" static="no">
        <name>SDXC_CMD_CMD_IS_SUB_CMD</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aa38fa76e2c08f9edd887c4f11181ec8d" kindref="member">SDXC_CMD_XFER_SUB_CMD_FLAG_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="235" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga931a51100df4fcc10de6e033b74cf66b" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_EN</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1aacd7d756bb56ae648a23591209d816bf" kindref="member">SDXC_CMD_XFER_CMD_CRC_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="237" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd081c049f84762e644d9b1594243064" prot="public" static="no">
        <name>SDXC_CMD_CMD_CRC_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="238" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga9584623075b1db44def7e6a7e7b67440" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_EN</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1ad961e15d8931ae4f7e73ab7b0f84b132" kindref="member">SDXC_CMD_XFER_CMD_IDX_CHK_ENABLE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="240" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81d2b7235cc57723b0c3b3a418f78f8f" prot="public" static="no">
        <name>SDXC_CMD_CMD_IDX_CHK_DIS</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="241" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafbc52a6bc518d8dde79a28a65ce22e29" prot="public" static="no">
        <name>SDXC_CMD_DATA_PRESENT</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a457a728c0d09629d913f3f45df746b58" kindref="member">SDXC_CMD_XFER_DATA_PRESENT_SEL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="243" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaefb2cbea8db6714781802020d7b49cab" prot="public" static="no">
        <name>SDXC_CMD_DATA_NO_PRESENT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="244" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaa1e70e684b9fa1a3251081b5e5b06a87" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="246" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacd2f50334b995ac0f0b82e5e791d964b" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_SUSPEND</name>
        <initializer>(1UL &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="247" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga34d636f06665bd558a8ce5bdcd05b2de" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_RESUME</name>
        <initializer>(2U &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="248" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaf71c3a04f5d222dcfe44473ff5faf87a" prot="public" static="no">
        <name>SDXC_CMD_CMD_TYPE_ABORT</name>
        <initializer>(3U &lt;&lt; <ref refid="HPM6300_2ip_2hpm__sdxc__regs_8h_1a7ad19edf4e02aae68e879f66d90c6389" kindref="member">SDXC_CMD_XFER_CMD_TYPE_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="249" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga2a8d7b0f163fa13e3f3f01381f924b81" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_VALID_FLAG</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="488" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga38ee4cea133045eb496ed1fa16a0c885" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_END_FLAG</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="489" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga09a08fdbc357e9c902e70c363028cd8e" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_INTERRUPT_FLAG</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="490" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga1f0809860a826aa3be10b2101ba3aa7b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT0_FLAG</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="491" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac6fadd687de744297397f0d475bb2cda" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT1_FLAG</name>
        <initializer>(1UL &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="492" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga638615101471c0cbe1d094d8c5e5e53b" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_ACT2_FLAG</name>
        <initializer>(1UL &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="493" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gafcd87a47ab359ae2bfbfcbe1d836eb26" prot="public" static="no">
        <name>SDXC_ADMA2_ADDR_LEN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="495" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga67c183f4215f7c98f0498365c454d19b" prot="public" static="no">
        <name>SDXC_ADMA2_LEN_ALIGN</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="496" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga3a88bd55f11c72a61bf8d4f358815245" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_NOP</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="498" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gaba1b34f20140319b0524b61718e64533" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_TRANS</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="499" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga81dc0a42b65e90019306bda00a702268" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_TYPE_LINK</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="500" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacf79311a57db9034c266c0aed82408c7" prot="public" static="no">
        <name>SDXC_ADMA3_DESC_TYPE_FOR_SD_MODE</name>
        <initializer>(0x1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="501" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5f4abb15cc243673fcd064053fbd0517" prot="public" static="no">
        <name>SDXC_AMDA3_DESC_TYPE_INTEGRATED_LINKER</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="502" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gacb0a442e29bb092e6685226727f33361" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_ATTR_VALID</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="503" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga9a337dd1bfa70fe243c97ae5c06f8e41" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_ATTR_END</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="504" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac5e585c3d1ef7d9eb681a072d0b17cbb" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_ATTR_INT</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="505" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0d84d27f4539a473744cceb256a7ab16" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_FOR_SD_DESC_ATTR</name>
        <initializer>(0x09U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="506" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga475a115f9a3b06d7dd2a7a25898354e6" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_DESC_ATTR</name>
        <initializer>(0x39U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="507" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga11ffd24c9b32d681a8478bb4c06a55f8" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_ATTR_END</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="509" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac9154c04122dc30ced6975e522efec4f" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_32BIT_BLK_CNT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="511" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga0fd2a10aaf6e9886daebf890350afea8" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_BLK_SIZE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="512" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gabfcedd6e8401f08fc105d7ffcde83417" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_ARG</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="513" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga7a316ceba92d4dbf063fe305bed61164" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_IDX_CMD_XFER</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="514" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gadbc258e6d7746af3ef035c43f502aabd" prot="public" static="no">
        <name>SDXC_ADMA3_INTEGRATED_DESC_WORDS</name>
        <initializer>(sizeof(<ref refid="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" kindref="member">sdxc_adma3_integrated_desc_t</ref>) / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="516" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga5fdb36cddcfe435891e9b3ddc5b20e35" prot="public" static="no">
        <name>SDXC_ADMA3_CMD_DESC_WORDS</name>
        <initializer>(sizeof(<ref refid="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" kindref="member">sdxc_adma3_cmd_sd_desc_t</ref>) / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="517" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga115785f04e271349187867172d39d155" prot="public" static="no">
        <name>SDXC_ADMA2_DESC_WORDS</name>
        <initializer>(sizeof(<ref refid="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" kindref="member">sdxc_adma2_descriptor_t</ref>) / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="518" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1ga4689c8784f944d5c0ba38e6afa628a68" prot="public" static="no">
        <name>SDXC_IS_DMA_ALIGNED</name>
        <param><defname>value</defname></param>
        <initializer>(((uint32_t)(value) % 4UL) == 0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="520" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdxc__interface_1gac83bd1782648cdf1fd8c2f464724141f" prot="public" static="no">
        <name>SDXC_AMDA3_DESC_MIN_WORDS</name>
        <initializer>                                    ((sizeof(<ref refid="group__sdxc__interface_1ga86c1afe2694d759dfa2a6d6920f69629" kindref="member">sdxc_adma3_integrated_desc_t</ref>) + \
                                    sizeof(<ref refid="group__sdxc__interface_1gad098c3eefea878ad5bafff00e23edb88" kindref="member">sdxc_adma3_cmd_sd_desc_t</ref>) + \
                                    sizeof(<ref refid="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" kindref="member">sdxc_adma2_descriptor_t</ref>)) / sizeof(uint32_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdxc_drv.h" line="539" column="9" bodyfile="drivers/inc/hpm_sdxc_drv.h" bodystart="539" bodyend="541"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SDXC driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
