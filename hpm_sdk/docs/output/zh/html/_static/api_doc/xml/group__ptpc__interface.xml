<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__ptpc__interface" kind="group">
    <compoundname>ptpc_interface</compoundname>
    <title>PTPC driver APIs</title>
    <innerclass refid="structptpc__config__t" prot="public">ptpc_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ptpc__interface_1ga7e0e0af3677e005f88cd98f6d7564bb4" prot="public" static="no" strong="no">
        <type></type>
        <name>ptpc_ns_counter_rollover_type</name>
        <enumvalue id="group__ptpc__interface_1gga7e0e0af3677e005f88cd98f6d7564bb4aa8d0641dc889e50e876ef2ade7a89b0a" prot="public">
          <name>ptpc_ns_counter_rollover_binary</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>binary mode, resolution ~0.466ns, overflow at 0x7FFFFFFF </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ptpc__interface_1gga7e0e0af3677e005f88cd98f6d7564bb4ad59fe340696bf3e30be66640a20bf5eb" prot="public">
          <name>ptpc_ns_counter_rollover_digital</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>digital mode, resolution 1ns, overflow at 0x3B9ACA00 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Counter types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="33" column="1" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="enum" id="group__ptpc__interface_1ga52bc63d9211970f820d0dd438313f139" prot="public" static="no" strong="no">
        <type></type>
        <name>ptpc_capture_trigger_type</name>
        <enumvalue id="group__ptpc__interface_1gga52bc63d9211970f820d0dd438313f139a31abfe662c982e882922dee873bf5f41" prot="public">
          <name>ptpc_capture_trigger_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ptpc__interface_1gga52bc63d9211970f820d0dd438313f139ad52ce8b9a2476fc9bb9e2f93bde7cf30" prot="public">
          <name>ptpc_capture_trigger_on_rising_edge</name>
          <initializer>= PTPC_PTPC_CTRL0_CAPT_SNAP_POS_EN_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ptpc__interface_1gga52bc63d9211970f820d0dd438313f139a3f25c520f6d05660069e1350f60da698" prot="public">
          <name>ptpc_capture_trigger_on_failing_edge</name>
          <initializer>= PTPC_PTPC_CTRL0_CAPT_SNAP_NEG_EN_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ptpc__interface_1gga52bc63d9211970f820d0dd438313f139af14a27070e97a39f1f309c60f09856af" prot="public">
          <name>ptpc_capture_trigger_on_both_edges</name>
          <initializer>= PTPC_PTPC_CTRL0_CAPT_SNAP_POS_EN_MASK
                                        | PTPC_PTPC_CTRL0_CAPT_SNAP_NEG_EN_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture trigger types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="41" column="1" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" prot="public" static="no" strong="no">
        <type></type>
        <name>ptpc_counting_mode</name>
        <enumvalue id="group__ptpc__interface_1gga48dde6b422dd02578a4320e2988b6eddaba7f18ff94d935fe2bbc03aff5b814ad" prot="public">
          <name>ptpc_counting_increment</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Increment the counter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ptpc__interface_1gga48dde6b422dd02578a4320e2988b6edda568b5f2cd43605cdfe74904e8dc491bb" prot="public">
          <name>ptpc_counting_decrement</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Decrement the counter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture trigger types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="52" column="1" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="52" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ptpc__interface_1gaa906d54ff55592357d29a82000551db5" prot="public" static="no">
        <type>enum <ref refid="group__ptpc__interface_1ga7e0e0af3677e005f88cd98f6d7564bb4" kindref="member">ptpc_ns_counter_rollover_type</ref></type>
        <definition>typedef enum ptpc_ns_counter_rollover_type ptpc_ns_counter_rollover_type_t</definition>
        <argsstring></argsstring>
        <name>ptpc_ns_counter_rollover_type_t</name>
        <briefdescription>
<para>Counter types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="36" column="33"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ptpc__interface_1ga82915ef8c16f5cbb5d51bdcd7201cb7d" prot="public" static="no">
        <type>enum <ref refid="group__ptpc__interface_1ga52bc63d9211970f820d0dd438313f139" kindref="member">ptpc_capture_trigger_type</ref></type>
        <definition>typedef enum ptpc_capture_trigger_type ptpc_capture_trigger_type_t</definition>
        <argsstring></argsstring>
        <name>ptpc_capture_trigger_type_t</name>
        <briefdescription>
<para>Capture trigger types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="47" column="29"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ptpc__interface_1ga2c158b8903ba293c9e98b1be30f4a7be" prot="public" static="no">
        <type>enum <ref refid="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" kindref="member">ptpc_counting_mode</ref></type>
        <definition>typedef enum ptpc_counting_mode ptpc_counting_mode</definition>
        <argsstring></argsstring>
        <name>ptpc_counting_mode</name>
        <briefdescription>
<para>Capture trigger types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="55" column="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__ptpc__interface_1ga66776d516b3fd8b4b30d455abe08b411" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_set_ns_counter_rollover</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, ptpc_ns_counter_rollover_type_t rollover)</argsstring>
        <name>ptpc_set_ns_counter_rollover</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1gaa906d54ff55592357d29a82000551db5" kindref="member">ptpc_ns_counter_rollover_type_t</ref></type>
          <declname>rollover</declname>
        </param>
        <briefdescription>
<para>Configure ns counter rollover mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of target counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rollover</parametername>
</parameternamelist>
<parameterdescription>
<para>Rollover type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="79" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga5cbc461ecde7b26d414feba2a8b60190" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_enable_capture_keep</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_enable_capture_keep</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Enable capture keep. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="92" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gab746a4e91fc00fda18839355cb13d56b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_disable_capture_keep</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_disable_capture_keep</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Disable capture keep. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="103" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gab1bda66b31437e3eb6747dd178fbad77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_set_ns_counter_update_type</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, bool coarse_update)</argsstring>
        <name>ptpc_set_ns_counter_update_type</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>coarse_update</declname>
        </param>
        <briefdescription>
<para>Update ns counter update type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of target counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coarse_update</parametername>
</parameternamelist>
<parameterdescription>
<para>Counter will be increment by 1 on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="115" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga7c196858e8550ba9740c4fbabfec2f4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_set_ns_counter_step</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t ns_step)</argsstring>
        <name>ptpc_set_ns_counter_step</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns_step</declname>
        </param>
        <briefdescription>
<para>Set ns counter increment step. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns_step</parametername>
</parameternamelist>
<parameterdescription>
<para>Increment step </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="128" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga58fc86388c075333193e5760fcbd9518" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_set_second_update</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t sec)</argsstring>
        <name>ptpc_set_second_update</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Set Second portion update value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Second value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="140" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gab12f94c7d201249911e9f5921d3f7669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_set_ns_update</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t ns, ptpc_counting_mode mode)</argsstring>
        <name>ptpc_set_ns_update</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" kindref="member">ptpc_counting_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set ns portion update value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>Ns value (31 bits, 0x3B9ACA00 max) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Counting mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="155" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="60" bodyend="68" declfile="drivers/inc/hpm_ptpc_drv.h" declline="155" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga89d7be66fd0e38e2e914cc985846b813" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ptpc_get_timestamp_second</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_get_timestamp_second</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get current timestamp Second portion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Seconds value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="165" column="24" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gad09a8c29a3e2e40506cab10cfe63856f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ptpc_get_timestamp_ns</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_get_timestamp_ns</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get timestamp ns portion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ns value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="178" column="24" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gadc4ac79b9d6e007d7c75861a184cd03a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_config_compare</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t sec, uint32_t ns)</argsstring>
        <name>ptpc_config_compare</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
<para>Config compare. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Target second </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>Target ns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="191" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="191" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gafebf15e80f70413702b4354b857e7ffb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_update_timestamp_second</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t sec)</argsstring>
        <name>ptpc_update_timestamp_second</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Update Second portion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Target second </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="205" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gab007084811f1a524ee416518906c8aeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_update_timestamp_ns</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t ns, ptpc_counting_mode mode)</argsstring>
        <name>ptpc_update_timestamp_ns</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" kindref="member">ptpc_counting_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Update Ns portion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>Target ns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Counting mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="218" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga44a1896905a1acec1a6c927f7b21764b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_enable_timer</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_enable_timer</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Enable timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="229" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gac1757c88d47c58b18063da50fdd788bd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_disable_timer</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_disable_timer</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Disable timer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="240" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gacb8e816ad39a576c94aab0f149222813" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_config_capture</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, ptpc_capture_trigger_type_t trigger)</argsstring>
        <name>ptpc_config_capture</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1ga82915ef8c16f5cbb5d51bdcd7201cb7d" kindref="member">ptpc_capture_trigger_type_t</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Config capture trigger event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture trigger type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="252" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="252" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gadd7cf2b41c09e429e0dbbf91e0671244" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ptpc_get_capture_ns</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_get_capture_ns</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get snapped ns value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ns portion on capture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="267" column="24" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gaf8418c3f9f05cfcf37e886cb400e4e72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ptpc_get_capture_second</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_get_capture_second</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get captured second. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>second portion on capture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="280" column="24" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gae820be6da83447360bcb8e1216301e32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_clear_irq_status</definition>
        <argsstring>(PTPC_Type *ptr, uint32_t mask)</argsstring>
        <name>ptpc_clear_irq_status</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="291" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gaf05ff7838cc688406a47697376260a8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ptpc_get_irq_status</definition>
        <argsstring>(PTPC_Type *ptr)</argsstring>
        <name>ptpc_get_irq_status</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>interrupt status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="303" column="24" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gafc4037ca14d6e8d8ebbf8ccc3fc10a49" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_irq_disable</definition>
        <argsstring>(PTPC_Type *ptr, uint32_t mask)</argsstring>
        <name>ptpc_irq_disable</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupt with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="314" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gae6ac1dbc9eccf16cd0ebf9f9b05f43e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ptpc_irq_enable</definition>
        <argsstring>(PTPC_Type *ptr, uint32_t mask)</argsstring>
        <name>ptpc_irq_enable</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupt with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="325" column="20" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga480611fd80d45a377f24576869e3caf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_init</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, ptpc_config_t *config)</argsstring>
        <name>ptpc_init</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structptpc__config__t" kindref="compound">ptpc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize PTPC module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to configuration struct</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="339" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="23" bodyend="49" declfile="drivers/inc/hpm_ptpc_drv.h" declline="339" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gad8cde812c9774e7d6ca58f882d3c66cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_set_timer_output</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t can_index, bool use_ptpc1)</argsstring>
        <name>ptpc_set_timer_output</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>can_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_ptpc1</declname>
        </param>
        <briefdescription>
<para>Set PTPC output destination. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">can_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target CAN instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_ptpc1</parametername>
</parameternamelist>
<parameterdescription>
<para>Use PTPC1 if set to true, otherwise PTPC0</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="350" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="51" bodyend="58" declfile="drivers/inc/hpm_ptpc_drv.h" declline="350" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga2baf663b8c19cb997ae748ca1ba608e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ptpc_get_default_config</definition>
        <argsstring>(PTPC_Type *ptr, ptpc_config_t *config)</argsstring>
        <name>ptpc_get_default_config</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structptpc__config__t" kindref="compound">ptpc_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer of config struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="358" column="6" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="13" bodyend="21" declfile="drivers/inc/hpm_ptpc_drv.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga682ba8d89682252d549eb4bcda9e7052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ptpc_init_timer</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index)</argsstring>
        <name>ptpc_init_timer</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Initialize timer to count from 0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="367" column="6" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="80" bodyend="85" declfile="drivers/inc/hpm_ptpc_drv.h" declline="367" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1ga596451689571f9717f429c15330835fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_init_timer_with_initial</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t sec, uint32_t ns, ptpc_counting_mode mode)</argsstring>
        <name>ptpc_init_timer_with_initial</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" kindref="member">ptpc_counting_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Initialize timer with initial values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>Ns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Counting mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="380" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="87" bodyend="95" declfile="drivers/inc/hpm_ptpc_drv.h" declline="380" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gabdf23a867ee51463878e4cd3ba364051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_update_timer</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint32_t sec, uint32_t ns, ptpc_counting_mode mode)</argsstring>
        <name>ptpc_update_timer</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <param>
          <type><ref refid="group__ptpc__interface_1ga48dde6b422dd02578a4320e2988b6edd" kindref="member">ptpc_counting_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Update timestamp counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>Ns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Counting mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="392" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="70" bodyend="78" declfile="drivers/inc/hpm_ptpc_drv.h" declline="392" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ptpc__interface_1gab2aaf2674bfd68796bdb0a7d1540e777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ptpc_set_pps</definition>
        <argsstring>(PTPC_Type *ptr, uint8_t index, uint8_t p)</argsstring>
        <name>ptpc_set_pps</name>
        <param>
          <type><ref refid="structPTPC__Type" kindref="compound">PTPC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Set period of pulse generated per second. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PTPC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>(2^power Hz, from [0 - 15])</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if requested frequency can be set </para>
</simplesect>
<simplesect kind="return"><para>false if requested frequency can not be set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="404" column="12" bodyfile="drivers/src/hpm_ptpc_drv.c" bodystart="97" bodyend="117" declfile="drivers/inc/hpm_ptpc_drv.h" declline="404" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__ptpc__interface_1ga3e127c5359b9fd8f4bc27bc3874867c5" prot="public" static="no">
        <name>PTPC_EVENT_COMPARE0_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1ad5055e7b138e06f81d38a18ff64d0f64" kindref="member">PTPC_INT_STS_COMP_INT_STS0_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="21" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1gac12e7df562e656d4340bc52618d723ae" prot="public" static="no">
        <name>PTPC_EVENT_CAPTURE0_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1af3c1b4c34b44b4bf19711c516daa4c0f" kindref="member">PTPC_INT_STS_CAPTURE_INT_STS0_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="22" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1ga6f953eafaff70f7886c5b1223b3a13b3" prot="public" static="no">
        <name>PTPC_EVENT_PPS0_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1af5d9c23ba00ae5a0c4b2700f4690f55c" kindref="member">PTPC_INT_STS_PPS_INT_STS0_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1ga6127282920eafc696bb0b25311abf2b0" prot="public" static="no">
        <name>PTPC_EVENT_COMPARE1_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1a20e4173d2afeecb3b42a37f31cd561d3" kindref="member">PTPC_INT_STS_COMP_INT_STS1_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1ga508789ef654243aa4fd5e49748c8e7e1" prot="public" static="no">
        <name>PTPC_EVENT_CAPTURE1_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1a0ec1d2b80c965d5672724f1ada369fc1" kindref="member">PTPC_INT_STS_CAPTURE_INT_STS1_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1ga3ded3cd5bc3e9638c70d030f5f495ab3" prot="public" static="no">
        <name>PTPC_EVENT_PPS1_MASK</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__ptpc__regs_8h_1a2d7a8fe9cf4bda90978d8bd347050174" kindref="member">PTPC_INT_STS_PPS_INT_STS1_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ptpc__interface_1ga589b1cb5b621dc251dddf8a69fadfcf9" prot="public" static="no">
        <name>PTPC_MAX_NS_COUNTER</name>
        <initializer>(0x3B9ACA00UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ptpc_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_ptpc_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PTPC driver  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
