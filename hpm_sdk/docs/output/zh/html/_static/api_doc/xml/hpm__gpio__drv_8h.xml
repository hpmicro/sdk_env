<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__gpio__drv_8h" kind="file" language="C++">
    <compoundname>hpm_gpio_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_gpio_regs.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includedby refid="hpm__touch__gt9xx_8c" local="yes">components/touch/gt9xx/hpm_touch_gt9xx.c</includedby>
    <includedby refid="hpm__uart__lin_8h" local="yes">components/uart_lin/hpm_uart_lin.h</includedby>
    <includedby refid="hpm__gpio__drv_8c" local="yes">drivers/src/hpm_gpio_drv.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_gpio_drv.h</label>
        <link refid="hpm__gpio__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_gpio_regs.h</label>
      </node>
      <node id="9">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>components/touch/gt9xx/hpm_touch_gt9xx.c</label>
        <link refid="hpm__touch__gt9xx_8c"/>
      </node>
      <node id="4">
        <label>components/uart_lin/hpm_uart_lin.c</label>
        <link refid="hpm__uart__lin_8c"/>
      </node>
      <node id="3">
        <label>components/uart_lin/hpm_uart_lin.h</label>
        <link refid="hpm__uart__lin_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_gpio_drv.h</label>
        <link refid="hpm__gpio__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>drivers/src/hpm_gpio_drv.c</label>
        <link refid="hpm__gpio__drv_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__gpio__drv_8h_1abd173241c3a00a6b93daed19cd906abe" prot="public" static="no">
        <name>PORT_PIN_COUNT</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="16" column="9" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__gpio__drv_8h_1a0c821147e78d11124b1d0d5c00999243" prot="public" static="no">
        <name>GPIO_GET_PORT_INDEX</name>
        <param><defname>x</defname></param>
        <initializer>(x / <ref refid="hpm__gpio__drv_8h_1abd173241c3a00a6b93daed19cd906abe" kindref="member">PORT_PIN_COUNT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="18" column="10" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__gpio__drv_8h_1a91f872fbfbf7bb97ef12f2d6258eedce" prot="public" static="no">
        <name>GPIO_GET_PIN_INDEX</name>
        <param><defname>x</defname></param>
        <initializer>(x % <ref refid="hpm__gpio__drv_8h_1abd173241c3a00a6b93daed19cd906abe" kindref="member">PORT_PIN_COUNT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="19" column="9" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <member refid="group__gpio__interface_1ga027ed1423986f66573a6f676734f181d" kind="enum"><name>gpio_interrupt_trigger</name></member>
    </sectiondef>
    <sectiondef kind="typedef">
      <member refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" kind="typedef"><name>gpio_interrupt_trigger_t</name></member>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__gpio__interface_1gab3eab86f611cf6a27f2eedbd5acd19fe" kind="function"><name>gpio_read_pin</name></member>
      <member refid="group__gpio__interface_1ga40d887a85a9b9723f018f985252af467" kind="function"><name>gpio_get_pin_output_status</name></member>
      <member refid="group__gpio__interface_1ga7b7ae7d787377291837de59fcb6faee2" kind="function"><name>gpio_toggle_pin</name></member>
      <member refid="group__gpio__interface_1gac271dd94419de97de2ca71302c4ba8d1" kind="function"><name>gpio_write_pin</name></member>
      <member refid="group__gpio__interface_1ga259476313474ac0ffa504a70320c92fa" kind="function"><name>gpio_set_pin_input</name></member>
      <member refid="group__gpio__interface_1ga15189c20b55f537ab9de013d9bb0c2f0" kind="function"><name>gpio_set_pin_output</name></member>
      <member refid="group__gpio__interface_1ga9a166919df03e1bf8aa95b3d63d11e28" kind="function"><name>gpio_set_pin_output_with_initial</name></member>
      <member refid="group__gpio__interface_1ga7b46a53c3b41c26ba0ab1ec603feb35a" kind="function"><name>gpio_check_pin_interrupt_flag</name></member>
      <member refid="group__gpio__interface_1gab1bfd3ce0d7ca55d73d79da916f5207e" kind="function"><name>gpio_clear_pin_interrupt_flag</name></member>
      <member refid="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" kind="function"><name>gpio_check_pin_interrupt_enabled</name></member>
      <member refid="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" kind="function"><name>gpio_enable_pin_interrupt</name></member>
      <member refid="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" kind="function"><name>gpio_disable_pin_interrupt</name></member>
      <member refid="group__gpio__interface_1ga8789029751858d5ef69d8586dea81ca8" kind="function"><name>gpio_check_clear_interrupt_flag</name></member>
      <member refid="group__gpio__interface_1gaeab55fd6ebb722ae6991cb44a0930825" kind="function"><name>gpio_read_port</name></member>
      <member refid="group__gpio__interface_1ga718acee6ef5db95ecfd18b017be53d4d" kind="function"><name>gpio_toggle_port_with_mask</name></member>
      <member refid="group__gpio__interface_1ga7173a1a773fdeda69f96a7bbe84f3413" kind="function"><name>gpio_write_port</name></member>
      <member refid="group__gpio__interface_1ga1dbd0e8cb3c3888823605cbe74f260f8" kind="function"><name>gpio_set_port_low_with_mask</name></member>
      <member refid="group__gpio__interface_1ga8740a25605d8d23d49ddbd995104ffbe" kind="function"><name>gpio_set_port_high_with_mask</name></member>
      <member refid="group__gpio__interface_1ga2f04729a2e192f161d2b2f138b7b25e3" kind="function"><name>gpio_enable_port_output_with_mask</name></member>
      <member refid="group__gpio__interface_1ga04704cce5da40c201f2f40a1b638ea61" kind="function"><name>gpio_disable_port_output_with_mask</name></member>
      <member refid="group__gpio__interface_1ga88bfa1a7e4f8ddc297ea3ac3ca0bda8e" kind="function"><name>gpio_get_port_interrupt_flags</name></member>
      <member refid="group__gpio__interface_1ga7f026a6f6561e2740473364aa4f15d92" kind="function"><name>gpio_clear_port_interrupt_flags_with_mask</name></member>
      <member refid="group__gpio__interface_1gab118a289275cd260dd12eaa305b76d69" kind="function"><name>gpio_enable_port_interrupt_with_mask</name></member>
      <member refid="group__gpio__interface_1gacb2ec608123be63485bfdc0d70a9be45" kind="function"><name>gpio_disable_port_interrupt_with_mask</name></member>
      <member refid="group__gpio__interface_1ga517c1fcab62cae38d01fc3f40229b834" kind="function"><name>gpio_config_pin_interrupt</name></member>
      <member refid="group__gpio__interface_1gaf185361a636543b887884d4181a38567" kind="function"><name>gpio_toggle_pin_interrupt_trigger_polarity</name></member>
      <member refid="group__gpio__interface_1gacd9a8d88162c584100917b404b4a1562" kind="function"><name>gpio_toggle_pin_interrupt_trigger_type</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_GPIO_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_GPIO_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_gpio_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PORT_PIN_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="hpm__gpio__drv_8h_1abd173241c3a00a6b93daed19cd906abe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORT_PIN_COUNT<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="hpm__gpio__drv_8h_1a0c821147e78d11124b1d0d5c00999243" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPIO_GET_PORT_INDEX(x)<sp/>(x<sp/>/<sp/>PORT_PIN_COUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="hpm__gpio__drv_8h_1a91f872fbfbf7bb97ef12f2d6258eedce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPIO_GET_PIN_INDEX(x)<sp/><sp/>(x<sp/>%<sp/>PORT_PIN_COUNT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="group__gpio__interface_1ga027ed1423986f66573a6f676734f181d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga027ed1423986f66573a6f676734f181d" kindref="member">gpio_interrupt_trigger</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da846270f87fce1489f24140683fee771c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da846270f87fce1489f24140683fee771c" kindref="member">gpio_interrupt_trigger_level_high</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="34" refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da023cccdb0b3a0fc552f6342b2dc75284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da023cccdb0b3a0fc552f6342b2dc75284" kindref="member">gpio_interrupt_trigger_level_low</ref>,</highlight></codeline>
<codeline lineno="35" refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181dafa6a62aa9f4720df68df630bb9396dbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181dafa6a62aa9f4720df68df630bb9396dbd" kindref="member">gpio_interrupt_trigger_edge_rising</ref>,</highlight></codeline>
<codeline lineno="36" refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da804174609c618d98a66cce32a45b0216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da804174609c618d98a66cce32a45b0216" kindref="member">gpio_interrupt_trigger_edge_falling</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT)<sp/>&amp;&amp;<sp/>(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_interrupt_trigger_edge_both,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" kindref="member">gpio_interrupt_trigger_t</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__gpio__interface_1gab3eab86f611cf6a27f2eedbd5acd19fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__gpio__interface_1gab3eab86f611cf6a27f2eedbd5acd19fe" kindref="member">gpio_read_pin</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structGPIO__Type_1a660a8c974e75d9e40484f90e05986942" kindref="member">DI</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>pin))<sp/>&gt;&gt;<sp/>pin;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__gpio__interface_1ga40d887a85a9b9723f018f985252af467" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__gpio__interface_1ga40d887a85a9b9723f018f985252af467" kindref="member">gpio_get_pin_output_status</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>pin))<sp/>&gt;&gt;<sp/>pin;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="group__gpio__interface_1ga7b7ae7d787377291837de59fcb6faee2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga7b7ae7d787377291837de59fcb6faee2" kindref="member">gpio_toggle_pin</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a780e6b7163dffe82bc1594543e8d1d17" kindref="member">TOGGLE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__gpio__interface_1gac271dd94419de97de2ca71302c4ba8d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gac271dd94419de97de2ca71302c4ba8d1" kindref="member">gpio_write_pin</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin,<sp/>uint8_t<sp/>high)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(high)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group__gpio__interface_1ga259476313474ac0ffa504a70320c92fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga259476313474ac0ffa504a70320c92fa" kindref="member">gpio_set_pin_input</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9d729ed4cf913544857465d1a1dca9b6" kindref="member">OE</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="group__gpio__interface_1ga15189c20b55f537ab9de013d9bb0c2f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga15189c20b55f537ab9de013d9bb0c2f0" kindref="member">gpio_set_pin_output</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9d729ed4cf913544857465d1a1dca9b6" kindref="member">OE</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga9a166919df03e1bf8aa95b3d63d11e28" kindref="member">gpio_set_pin_output_with_initial</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin,<sp/>uint8_t<sp/>initial);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="group__gpio__interface_1ga7b46a53c3b41c26ba0ab1ec603feb35a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga7b46a53c3b41c26ba0ab1ec603feb35a" kindref="member">gpio_check_pin_interrupt_flag</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structGPIO__Type_1af2e79a2d6130358ef94385266427ff5e" kindref="member">IF</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>pin);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="group__gpio__interface_1gab1bfd3ce0d7ca55d73d79da916f5207e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gab1bfd3ce0d7ca55d73d79da916f5207e" kindref="member">gpio_clear_pin_interrupt_flag</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1af2e79a2d6130358ef94385266427ff5e" kindref="member">IF</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" kindref="member">gpio_check_pin_interrupt_enabled</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structGPIO__Type_1a9a2edfb9d48b5c953d338c840ba4322a" kindref="member">IE</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>pin))<sp/>==<sp/>(uint32_t)<sp/>(1<sp/>&lt;&lt;<sp/>pin);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" kindref="member">gpio_enable_pin_interrupt</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9a2edfb9d48b5c953d338c840ba4322a" kindref="member">IE</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" kindref="member">gpio_disable_pin_interrupt</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9a2edfb9d48b5c953d338c840ba4322a" kindref="member">IE</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="group__gpio__interface_1ga8789029751858d5ef69d8586dea81ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga8789029751858d5ef69d8586dea81ca8" kindref="member">gpio_check_clear_interrupt_flag</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__gpio__interface_1ga7b46a53c3b41c26ba0ab1ec603feb35a" kindref="member">gpio_check_pin_interrupt_flag</ref>(ptr,<sp/>port,<sp/>pin))<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gab1bfd3ce0d7ca55d73d79da916f5207e" kindref="member">gpio_clear_pin_interrupt_flag</ref>(ptr,<sp/>port,<sp/>pin);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="group__gpio__interface_1gaeab55fd6ebb722ae6991cb44a0930825" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__gpio__interface_1gaeab55fd6ebb722ae6991cb44a0930825" kindref="member">gpio_read_port</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a660a8c974e75d9e40484f90e05986942" kindref="member">DI</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="group__gpio__interface_1ga718acee6ef5db95ecfd18b017be53d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga718acee6ef5db95ecfd18b017be53d4d" kindref="member">gpio_toggle_port_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a780e6b7163dffe82bc1594543e8d1d17" kindref="member">TOGGLE</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="group__gpio__interface_1ga7173a1a773fdeda69f96a7bbe84f3413" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga7173a1a773fdeda69f96a7bbe84f3413" kindref="member">gpio_write_port</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>value)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="group__gpio__interface_1ga1dbd0e8cb3c3888823605cbe74f260f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga1dbd0e8cb3c3888823605cbe74f260f8" kindref="member">gpio_set_port_low_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="group__gpio__interface_1ga8740a25605d8d23d49ddbd995104ffbe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga8740a25605d8d23d49ddbd995104ffbe" kindref="member">gpio_set_port_high_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a646f83a630d733c97d8c0e594727b08d" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="group__gpio__interface_1ga2f04729a2e192f161d2b2f138b7b25e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga2f04729a2e192f161d2b2f138b7b25e3" kindref="member">gpio_enable_port_output_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9d729ed4cf913544857465d1a1dca9b6" kindref="member">OE</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="group__gpio__interface_1ga04704cce5da40c201f2f40a1b638ea61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga04704cce5da40c201f2f40a1b638ea61" kindref="member">gpio_disable_port_output_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9d729ed4cf913544857465d1a1dca9b6" kindref="member">OE</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="group__gpio__interface_1ga88bfa1a7e4f8ddc297ea3ac3ca0bda8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__gpio__interface_1ga88bfa1a7e4f8ddc297ea3ac3ca0bda8e" kindref="member">gpio_get_port_interrupt_flags</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port)</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structGPIO__Type_1af2e79a2d6130358ef94385266427ff5e" kindref="member">IF</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="group__gpio__interface_1ga7f026a6f6561e2740473364aa4f15d92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga7f026a6f6561e2740473364aa4f15d92" kindref="member">gpio_clear_port_interrupt_flags_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1af2e79a2d6130358ef94385266427ff5e" kindref="member">IF</ref>[port].<ref refid="structGPIO__Type_1a5deabd76ef36e708323232bd7409ce2f" kindref="member">VALUE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="group__gpio__interface_1gab118a289275cd260dd12eaa305b76d69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gab118a289275cd260dd12eaa305b76d69" kindref="member">gpio_enable_port_interrupt_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>mask)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9a2edfb9d48b5c953d338c840ba4322a" kindref="member">IE</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="group__gpio__interface_1gacb2ec608123be63485bfdc0d70a9be45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gacb2ec608123be63485bfdc0d70a9be45" kindref="member">gpio_disable_port_interrupt_with_mask</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>mask)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a9a2edfb9d48b5c953d338c840ba4322a" kindref="member">IE</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga517c1fcab62cae38d01fc3f40229b834" kindref="member">gpio_config_pin_interrupt</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin,<sp/><ref refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" kindref="member">gpio_interrupt_trigger_t</ref><sp/>trigger);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gaf185361a636543b887884d4181a38567" kindref="member">gpio_toggle_pin_interrupt_trigger_polarity</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gacd9a8d88162c584100917b404b4a1562" kindref="member">gpio_toggle_pin_interrupt_trigger_type</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_GPIO_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_gpio_drv.h"/>
  </compounddef>
</doxygen>
