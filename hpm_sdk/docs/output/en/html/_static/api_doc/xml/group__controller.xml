<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__controller" kind="group">
    <compoundname>controller</compoundname>
    <title>DSP Controller Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__controller_1ga9fb6ad9be5a088ca73f2da2a9f468598" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clarke_f32</definition>
        <argsstring>(float32_t a, float32_t b, float32_t *alpha, float32_t *beta)</argsstring>
        <name>hpm_dsp_clarke_f32</name>
        <param>
          <type>float32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Clarke transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2741" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2741" bodyend="2746"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gacee02f319732b6480a20c9cab339b48d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_clarke_q31</definition>
        <argsstring>(q31_t a, q31_t b, q31_t *alpha, q31_t *beta)</argsstring>
        <name>hpm_dsp_clarke_q31</name>
        <param>
          <type>q31_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Clarke transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vector axis beta.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2757" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2757" bodyend="2762"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6bb47dbe724993fec899450d50c7604a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_clarke_f32</definition>
        <argsstring>(float32_t alpha, float32_t beta, float32_t *a, float32_t *b)</argsstring>
        <name>hpm_dsp_inv_clarke_f32</name>
        <param>
          <type>float32_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Inverse Clarke transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate b. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2772" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2772" bodyend="2777"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6a2b3cdeb0c9389655c3a335061a2e6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_clarke_q31</definition>
        <argsstring>(q31_t alpha, q31_t beta, q31_t *a, q31_t *b)</argsstring>
        <name>hpm_dsp_inv_clarke_q31</name>
        <param>
          <type>q31_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Inverse Clarke transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase orthogonal vector axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output three-phase coordinate b.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2788" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2788" bodyend="2793"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga5fe2822268f4b84653c61a3ae6ec38ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_park_f32</definition>
        <argsstring>(float32_t alpha, float32_t beta, float32_t *a, float32_t *b, float32_t sin, float32_t cos)</argsstring>
        <name>hpm_dsp_park_f32</name>
        <param>
          <type>float32_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Park transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2805" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2805" bodyend="2810"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga3d7d1b07ba8809cd226d719aff0e0485" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_park_q31</definition>
        <argsstring>(q31_t alpha, q31_t beta, q31_t *a, q31_t *b, q31_t sin, q31_t cos)</argsstring>
        <name>hpm_dsp_park_q31</name>
        <param>
          <type>q31_t</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Park transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">beta</parametername>
</parameternamelist>
<parameterdescription>
<para>input two-phase coordinate beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>output rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2824" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2824" bodyend="2829"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gaa6924b7118d38d3a621a37ca767b9191" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_park_f32</definition>
        <argsstring>(float32_t a, float32_t b, float32_t *alpha, float32_t *beta, float32_t sin, float32_t cos)</argsstring>
        <name>hpm_dsp_inv_park_f32</name>
        <param>
          <type>float32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Inverse Park transform of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2841" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2841" bodyend="2846"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga2fbf750b4987751910662d1fec2640a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_inv_park_q31</definition>
        <argsstring>(q31_t a, q31_t b, q31_t *alpha, q31_t *beta, q31_t sin, q31_t cos)</argsstring>
        <name>hpm_dsp_inv_park_q31</name>
        <param>
          <type>q31_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>sin</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>cos</declname>
        </param>
        <briefdescription>
<para>Inverse Park transform of q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>input coordinate of rotor frame b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis alpha. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*beta</parametername>
</parameternamelist>
<parameterdescription>
<para>output two-phase orthogonal vec axis beta. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sin</parametername>
</parameternamelist>
<parameterdescription>
<para>sine value of rotation angle . </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cos</parametername>
</parameternamelist>
<parameterdescription>
<para>cosine value of rotation angle .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The internal 32-bit accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multiplication in 2.62 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2859" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2859" bodyend="2864"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1gab9ea056f3d22196ba8547a48b8e885bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float32_t</type>
        <definition>static float32_t hpm_dsp_pid_f32</definition>
        <argsstring>(riscv_dsp_pid_f32_t *instance, float32_t src)</argsstring>
        <name>hpm_dsp_pid_f32</name>
        <param>
          <type>riscv_dsp_pid_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>PID control of floating-point input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>output data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2872" column="25" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2872" bodyend="2877"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga43e41afb00bdbc95a29e6af6fec55711" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_f32</definition>
        <argsstring>(riscv_dsp_pid_f32_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_f32</name>
        <param>
          <type>riscv_dsp_pid_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of floating-point formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2890" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2890" bodyend="2895"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga92efef20292a4c98663930a88c307be3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q31_t</type>
        <definition>static q31_t hpm_dsp_pid_q31</definition>
        <argsstring>(riscv_dsp_pid_q31_t *instance, q31_t src)</argsstring>
        <name>hpm_dsp_pid_q31</name>
        <param>
          <type>riscv_dsp_pid_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>PID control of Q31 input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>output data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2904" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2904" bodyend="2909"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga6b1c10c89ae007fd8988b63f48c751d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_q31</definition>
        <argsstring>(riscv_dsp_pid_q31_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_q31</name>
        <param>
          <type>riscv_dsp_pid_q31_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of Q31 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2923" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2923" bodyend="2928"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga1c3de0c7b4e2047ed22bc185b1b0773f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>q15_t</type>
        <definition>static q15_t hpm_dsp_pid_q15</definition>
        <argsstring>(riscv_dsp_pid_q15_t *instance, q15_t src)</argsstring>
        <name>hpm_dsp_pid_q15</name>
        <param>
          <type>riscv_dsp_pid_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2930" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2930" bodyend="2935"/>
      </memberdef>
      <memberdef kind="function" id="group__controller_1ga1f305b87a9bdd5984d557818590d09f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_init_pid_q15</definition>
        <argsstring>(riscv_dsp_pid_q15_t *instance, int32_t set)</argsstring>
        <name>hpm_dsp_init_pid_q15</name>
        <param>
          <type>riscv_dsp_pid_q15_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>PID initializatopn control function of Q15 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">*instance</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID controliler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">set</parametername>
</parameternamelist>
<parameterdescription>
<para>for 1 will clear the state to all zeros 0 will not.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function will calculate the PID control structure gain <computeroutput>gain1</computeroutput>, <computeroutput>gain2</computeroutput> and <computeroutput>gain3</computeroutput> by seting the variable <computeroutput>Kp</computeroutput>, <computeroutput>Ki</computeroutput> and <computeroutput>Kd</computeroutput>. The state variable will set to all zeros. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2948" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2948" bodyend="2953"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
