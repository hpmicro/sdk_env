<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__nnconcatenation" kind="group">
    <compoundname>nnconcatenation</compoundname>
    <title>NN Concatenation Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__nnconcatenation_1gac482d9b3bd28f3f5f7f5a6be1d8367b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_w</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint32_t out_offset_w)</argsstring>
        <name>hpm_nn_concate_s8_w</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_w</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the w-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_w</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the w axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, y and z dimension of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7429" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7429" bodyend="7444"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1ga647b8909aef5526efef7c01d530094ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_x</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_x, const uint32_t out_offset_x)</argsstring>
        <name>hpm_nn_concate_s8_x</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_x</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_x</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the x-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the x axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The y, z and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7464" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7464" bodyend="7480"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1gab70f453cbcb29ea754c10f11563c763b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_y</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_y, const uint32_t out_offset_y)</argsstring>
        <name>hpm_nn_concate_s8_y</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_y</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_y</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the y-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the y axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, z and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7499" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7499" bodyend="7515"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconcatenation_1ga0d92b806c0ec613df97185ce6ba8156f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_concate_s8_z</definition>
        <argsstring>(const int8_t *in_tensor, const uint16_t in_tensor_x, const uint16_t in_tensor_y, const uint16_t in_tensor_z, const uint16_t in_tensor_w, int8_t *out_tensor, const uint16_t out_tensor_z, const uint32_t out_offset_z)</argsstring>
        <name>hpm_nn_concate_s8_z</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_z</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_w</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_z</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>out_offset_z</declname>
        </param>
        <briefdescription>
<para>This function concatenates the int8_t/uint8_t input tensor along the z-axis with the output tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_w</parametername>
</parameternamelist>
<parameterdescription>
<para>w dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_z</parametername>
</parameternamelist>
<parameterdescription>
<para>z dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset_z</parametername>
</parameternamelist>
<parameterdescription>
<para>offset value to be added to the z axis of the output tensor before the concatenation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The x, y and w dimensions of the output tensor will be the same as those of the input tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7534" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7534" bodyend="7550"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The concatenation functions are used to concatenate the tensor along the specified axis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
