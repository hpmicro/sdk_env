<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__debug_8c" kind="file" language="C++">
    <compoundname>hpm_mcl_debug.c</compoundname>
    <includes refid="hpm__mcl__debug_8h" local="yes">hpm_mcl_debug.h</includes>
    <incdepgraph>
      <node id="4">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c</label>
        <link refid="hpm__mcl__debug_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="3">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_mcl_debug.h</label>
        <link refid="hpm__mcl__debug_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hpm__mcl__debug_8c_1a56547ffad9f33393f78ac039180e9456" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t mcl_debug_fifo[MCL_DEBUG_FIFO+2]</definition>
        <argsstring>[MCL_DEBUG_FIFO+2]</argsstring>
        <name>mcl_debug_fifo</name>
        <initializer>= {0xaa, 0xbb}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" line="9" column="9" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="9" bodyend="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__debug_8c_1a9348fca53d386788e54460997d7121fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_init</definition>
        <argsstring>(mcl_debug_t *debug)</argsstring>
        <name>hpm_mcl_debug_init</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
<para>init debug data struct </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" line="11" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__debug_8c_1a93c4c96570761ce414b1b96c18bd35b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_send_scope</definition>
        <argsstring>(mcl_debug_t *debug)</argsstring>
        <name>hpm_mcl_debug_send_scope</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
<para>Sends data in the buffer to the outside, Depending on how the callback function works, this function could potentially hang the application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" line="16" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__debug_8c_1abde92ef38ce1fdc7e26d051a827b2325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_update_data</definition>
        <argsstring>(mcl_debug_t *debug, uint8_t chn, void *data, mcl_debug_data_type_t type)</argsstring>
        <name>hpm_mcl_debug_update_data</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>chn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Update debug data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para>channel number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" line="21" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="21" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__debug_8h" kindref="compound">hpm_mcl_debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">uint8_t<sp/><ref refid="hpm__mcl__debug_8c_1a56547ffad9f33393f78ac039180e9456" kindref="member">mcl_debug_fifo</ref>[<ref refid="hpm__mcl__debug_8h_1a0e822e17af26ce0533c4ea375318574d" kindref="member">MCL_DEBUG_FIFO</ref><sp/>+<sp/>2]<sp/>=<sp/>{0xaa,<sp/>0xbb};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8c_1a9348fca53d386788e54460997d7121fd" kindref="member">hpm_mcl_debug_init</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" kindref="member">data</ref>.<ref refid="structmcl__debug__cfg__t_1aa44a32ef8353eb31dc378b601f7f4cb5" kindref="member">addr</ref><sp/>=<sp/>&amp;<ref refid="hpm__mcl__debug_8c_1a56547ffad9f33393f78ac039180e9456" kindref="member">mcl_debug_fifo</ref>[2];</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8c_1a93c4c96570761ce414b1b96c18bd35b1" kindref="member">hpm_mcl_debug_send_scope</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a354543a51458b45e7a975aed691f0365" kindref="member">callback</ref>.<ref refid="structmcl__debug__callback__t_1a534702b438d30f24c4afb1d7fab493f0" kindref="member">write_buf</ref>(<ref refid="hpm__mcl__debug_8c_1a56547ffad9f33393f78ac039180e9456" kindref="member">mcl_debug_fifo</ref>,<sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a90dc9aadd3520618b7fd3963d02da077" kindref="member">cnt</ref><sp/>*<sp/><ref refid="hpm__mcl__debug_8h_1ac6d9a54130884c119a3abd2b74df5174" kindref="member">MCL_DEBUG_DATA_TYPE_GET_SIZE</ref>(debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1aa8ddbb76584e736306279a81b07b2af1" kindref="member">data_type</ref>)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8c_1abde92ef38ce1fdc7e26d051a827b2325" kindref="member">hpm_mcl_debug_update_data</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug,<sp/>uint8_t<sp/>chn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref><sp/>type)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7ae3d91fac68163c4e379b2a251a0da384" kindref="member">mcl_debug_data_i8</ref>:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" kindref="member">data</ref>.<ref refid="structmcl__debug__cfg__t_1af6ce050989c4e9bba8762db4ee91b2cb" kindref="member">i8</ref>[chn]<sp/>=<sp/>*(int8_t<sp/>*)data;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a64f7aeadcce1ee084d946863784c5c45" kindref="member">mcl_debug_data_i16</ref>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" kindref="member">data</ref>.<ref refid="structmcl__debug__cfg__t_1aea2067ac5d0e4f862c059838cba77f20" kindref="member">i16</ref>[chn]<sp/>=<sp/>*(int16_t<sp/>*)data;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a7546acd37d876b6bb1f859d9b6a12362" kindref="member">mcl_debug_data_i32</ref>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" kindref="member">data</ref>.<ref refid="structmcl__debug__cfg__t_1aaa853eda033b0896116e6fa235e2e30f" kindref="member">i32</ref>[chn]<sp/>=<sp/>*(int32_t<sp/>*)data;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a8955b5d7f65c821fb06a004c5faf0aa8" kindref="member">mcl_debug_data_f32</ref>:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug-&gt;<ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>.<ref refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" kindref="member">data</ref>.<ref refid="structmcl__debug__cfg__t_1adee12765f651b7a3aa9f27599f475f24" kindref="member">f32</ref>[chn]<sp/>=<sp/>*(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c"/>
  </compounddef>
</doxygen>
