<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__gpio__interface" kind="group">
    <compoundname>gpio_interface</compoundname>
    <title>GPIO driver APIs</title>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__gpio__interface_1ga027ed1423986f66573a6f676734f181d" prot="public" static="no" strong="no">
        <type></type>
        <name>gpio_interrupt_trigger</name>
        <enumvalue id="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da846270f87fce1489f24140683fee771c" prot="public">
          <name>gpio_interrupt_trigger_level_high</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da023cccdb0b3a0fc552f6342b2dc75284" prot="public">
          <name>gpio_interrupt_trigger_level_low</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gpio__interface_1gga027ed1423986f66573a6f676734f181dafa6a62aa9f4720df68df630bb9396dbd" prot="public">
          <name>gpio_interrupt_trigger_edge_rising</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da804174609c618d98a66cce32a45b0216" prot="public">
          <name>gpio_interrupt_trigger_edge_falling</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Interrupt trigger type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="32" column="1" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="32" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" prot="public" static="no">
        <type>enum <ref refid="group__gpio__interface_1ga027ed1423986f66573a6f676734f181d" kindref="member">gpio_interrupt_trigger</ref></type>
        <definition>typedef enum gpio_interrupt_trigger gpio_interrupt_trigger_t</definition>
        <argsstring></argsstring>
        <name>gpio_interrupt_trigger_t</name>
        <briefdescription>
<para>Interrupt trigger type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="40" column="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__gpio__interface_1gab3eab86f611cf6a27f2eedbd5acd19fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t gpio_read_pin</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_read_pin</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Read target pin level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pin status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="55" column="23" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga40d887a85a9b9723f018f985252af467" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gpio_get_pin_output_status</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_get_pin_output_status</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Read target pin output state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pin output state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="69" column="24" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga7b7ae7d787377291837de59fcb6faee2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_toggle_pin</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_toggle_pin</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Toggle pin level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="81" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gac271dd94419de97de2ca71302c4ba8d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_write_pin</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin, uint8_t high)</argsstring>
        <name>gpio_write_pin</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Write pin level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin level set to high when it is set to true </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="94" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga259476313474ac0ffa504a70320c92fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_set_pin_input</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_set_pin_input</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Set pin to input mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="110" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga15189c20b55f537ab9de013d9bb0c2f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_set_pin_output</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_set_pin_output</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Set pin to output mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="122" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga9a166919df03e1bf8aa95b3d63d11e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpio_set_pin_output_with_initial</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin, uint8_t initial)</argsstring>
        <name>gpio_set_pin_output_with_initial</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>initial</declname>
        </param>
        <briefdescription>
<para>Set pin to output mode with initial value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="135" column="6" bodyfile="drivers/src/hpm_gpio_drv.c" bodystart="67" bodyend="75" declfile="drivers/inc/hpm_gpio_drv.h" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga7b46a53c3b41c26ba0ab1ec603feb35a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gpio_check_pin_interrupt_flag</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_check_pin_interrupt_flag</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Check specific pin interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if interrupt flag is set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="146" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gab1bfd3ce0d7ca55d73d79da916f5207e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_clear_pin_interrupt_flag</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_clear_pin_interrupt_flag</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Clear specific pin interrupt flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="158" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gpio_check_pin_interrupt_enabled</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_check_pin_interrupt_enabled</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Check if specific pin interrupt is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if interrupt is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="172" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_enable_pin_interrupt</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_enable_pin_interrupt</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Enable interrupt for specific pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="184" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_disable_pin_interrupt</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_disable_pin_interrupt</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Disable interrupt for specific pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="196" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga8789029751858d5ef69d8586dea81ca8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gpio_check_clear_interrupt_flag</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_check_clear_interrupt_flag</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Check interrupt flag of specific pin and clear if it is set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the interrupt flag is set and cleared </para>
</simplesect>
<simplesect kind="return"><para>false if the interrupt flag is not set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="211" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="211" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gaeab55fd6ebb722ae6991cb44a0930825" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gpio_read_port</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port)</argsstring>
        <name>gpio_read_port</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Read all pins level on specific port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Port pin level status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="229" column="24" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga718acee6ef5db95ecfd18b017be53d4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_toggle_port_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_toggle_port_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Toggle port with specific pin mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask pins to be toggled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="241" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga7173a1a773fdeda69f96a7bbe84f3413" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_write_port</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t value)</argsstring>
        <name>gpio_write_port</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write specific port with value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to be written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="253" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga1dbd0e8cb3c3888823605cbe74f260f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_set_port_low_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_set_port_low_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set spcific port pin high according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of pins to be set to low </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="265" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga8740a25605d8d23d49ddbd995104ffbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_set_port_high_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_set_port_high_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Set spcific port pin high according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of pins to be set to high </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="277" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga2f04729a2e192f161d2b2f138b7b25e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_enable_port_output_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_enable_port_output_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable pins output of specific port according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of pins to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="289" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga04704cce5da40c201f2f40a1b638ea61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_disable_port_output_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_disable_port_output_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable pins output of specific port according to the given mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of pins to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="301" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga88bfa1a7e4f8ddc297ea3ac3ca0bda8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t gpio_get_port_interrupt_flags</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port)</argsstring>
        <name>gpio_get_port_interrupt_flags</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Get current interrupt flags on specific port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Current interrupt flags on specific port </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="314" column="24" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga7f026a6f6561e2740473364aa4f15d92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_clear_port_interrupt_flags_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint32_t mask)</argsstring>
        <name>gpio_clear_port_interrupt_flags_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear interrupt flags with given mask on specific port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="327" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gab118a289275cd260dd12eaa305b76d69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_enable_port_interrupt_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t mask)</argsstring>
        <name>gpio_enable_port_interrupt_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupts with given mask on specific port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="339" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gacb2ec608123be63485bfdc0d70a9be45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gpio_disable_port_interrupt_with_mask</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t mask)</argsstring>
        <name>gpio_disable_port_interrupt_with_mask</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupts with given mask on specific port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of interrupts to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="351" column="20" bodyfile="drivers/inc/hpm_gpio_drv.h" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1ga517c1fcab62cae38d01fc3f40229b834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpio_config_pin_interrupt</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin, gpio_interrupt_trigger_t trigger)</argsstring>
        <name>gpio_config_pin_interrupt</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <param>
          <type><ref refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" kindref="member">gpio_interrupt_trigger_t</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
<para>Config pin interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>Trigger type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="365" column="6" bodyfile="drivers/src/hpm_gpio_drv.c" bodystart="32" bodyend="65" declfile="drivers/inc/hpm_gpio_drv.h" declline="365" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gaf185361a636543b887884d4181a38567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpio_toggle_pin_interrupt_trigger_polarity</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_toggle_pin_interrupt_trigger_polarity</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Toggle pin interrupt trigger polarity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="375" column="6" bodyfile="drivers/src/hpm_gpio_drv.c" bodystart="11" bodyend="19" declfile="drivers/inc/hpm_gpio_drv.h" declline="375" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__gpio__interface_1gacd9a8d88162c584100917b404b4a1562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpio_toggle_pin_interrupt_trigger_type</definition>
        <argsstring>(GPIO_Type *ptr, uint32_t port, uint8_t pin)</argsstring>
        <name>gpio_toggle_pin_interrupt_trigger_type</name>
        <param>
          <type><ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Toggle pin interrupt trigger type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>GPIO base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pin index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_gpio_drv.h" line="384" column="6" bodyfile="drivers/src/hpm_gpio_drv.c" bodystart="21" bodyend="29" declfile="drivers/inc/hpm_gpio_drv.h" declline="384" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>GPIO driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
