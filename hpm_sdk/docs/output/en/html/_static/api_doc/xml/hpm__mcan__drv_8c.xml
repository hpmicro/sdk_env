<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__mcan__drv_8c" kind="file" language="C++">
    <compoundname>hpm_mcan_drv.c</compoundname>
    <includes refid="hpm__mcan__drv_8h" local="yes">hpm_mcan_drv.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_mcan_drv.h</label>
        <link refid="hpm__mcan__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_mcan_drv.c</label>
        <link refid="hpm__mcan__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>hpm_mcan_regs.h</label>
      </node>
      <node id="10">
        <label>hpm_mcan_soc.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmcan__bit__timing__table__struct" prot="public">mcan_bit_timing_table_struct</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__mcan__drv_8c_1acedb10d1704d3f47ec3c81f85e8293fd" prot="public" static="no">
        <name>MCAN_CAN_BAUDRATE_DEFAULT</name>
        <initializer>(500UL * 1000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default CAN2.0 baudrate:500 kbps </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="17" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a722ad85a3f99beb225c896bb29467b78" prot="public" static="no">
        <name>MCAN_CANFD_BAUDRATE_DEFAULT</name>
        <initializer>(2UL * 1000UL * 1000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default CANFD baudrate: 2 Mbps </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="18" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a3a6e02bcd316fc8d7e49da995196c587" prot="public" static="no">
        <name>MCAN_STD_FILTER_ELEM_CNT_MAX</name>
        <initializer>(128U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="21" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a388fed252b81bbf592a6e3370a26a123" prot="public" static="no">
        <name>MCAN_EXT_FILTER_ELEM_CNT_MAX</name>
        <initializer>(64U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="22" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a37a26a600c9f63eafd5096020f85c727" prot="public" static="no">
        <name>MCAN_RXFIFO_ELEM_CNT_MAX</name>
        <initializer>(64U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="23" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ab1e649d2248877165f1f0a456503b718" prot="public" static="no">
        <name>MCAN_RXBUF_ELEM_CNT_MAX</name>
        <initializer>(64U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="24" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1aa2886b10f4d7b995306985c1ed0f98be" prot="public" static="no">
        <name>MCAN_TXEVT_FIFO_ELEM_CNT_MAX</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="25" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a8147fa88888e03792804185b04a98830" prot="public" static="no">
        <name>MCAN_TXBUF_ELEM_CNT_MAX</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="26" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a658a8854331293ba92625a9a33f47a31" prot="public" static="no">
        <name>NUM_TQ_SYNC_SEG</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="29" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a3c8ced3500393e7789ad282fb24b71c8" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CAN2_0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>CAN2.0 Timing related definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="34" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CAN2_0</name>
        <initializer>(256U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="35" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a9a94e7591e32eee8cca0177370b014d3" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CAN2_0</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="36" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CAN2_0</name>
        <initializer>(128U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="37" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a3ed4c7f6c07f6ab6152b4304b60abab4" prot="public" static="no">
        <name>TSJW_MIN_FOR_CAN2_0</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="38" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1afbb30f7d2539d15b0d9cc4982e8f3471" prot="public" static="no">
        <name>TSJW_MAX_FOR_CAN2_0</name>
        <initializer>(128U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="39" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a10a0b4d25e8ff1b589795f150e48e183" prot="public" static="no">
        <name>PRESCALER_MIN_FOR_CAN2_0</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="40" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a45d9e4fb5cb7c4295ad73106cd1e4306" prot="public" static="no">
        <name>PRESCALER_MAX_FOR_CAN2_0</name>
        <initializer>(512U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="41" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1aa7c447e3ed657f71771b4c985ace827e" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CAN2_0</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="42" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a7f82c52fb990df48dc02e3b7e5f6633f" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CAN2_0</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" kindref="member">TSEG1_MAX_FOR_CAN2_0</ref> + <ref refid="hpm__can__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" kindref="member">TSEG2_MAX_FOR_CAN2_0</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="43" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a359764c23c8d51368902dff711ba344c" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>CANFD Nominal Timing related definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="48" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(256U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="49" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ae7206fe575f15b97663d14e638662389" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="50" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a12760041a59c3ae354925d02b03a0798" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="51" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a2ca376d6b4cbb68da3c6e41cc79746c1" prot="public" static="no">
        <name>TSJW_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="52" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a023db0c30d8b6275bffb86038f59e4bb" prot="public" static="no">
        <name>TSJW_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(128U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="53" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1afef0b3ffad46a89ff59f2f8fbd100976" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="54" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ac514cc2897243c1556d03906779cdb58" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" kindref="member">TSEG1_MAX_FOR_CANFD_NOMINAL</ref> + <ref refid="hpm__can__drv_8c_1a12760041a59c3ae354925d02b03a0798" kindref="member">TSEG2_MAX_FOR_CANFD_NOMINAL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="55" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a24750afbfe2211295dfc1e1d2a967d23" prot="public" static="no">
        <name>PRESCALER_MIN_FOR_CANFD_NOMINAL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="56" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a4afbbeef95fc853e1bc2942f6cf74d75" prot="public" static="no">
        <name>PRESCALER_MAX_FOR_CANFD_NOMINAL</name>
        <initializer>(512U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="57" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a9524617ed8aa43c68ec32a720dc4d4e9" prot="public" static="no">
        <name>TSEG1_MIN_FOR_CANFD_DATA</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>CANFD Data Timing related definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="62" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ad963a76008f23791fd360172f11bfbf6" prot="public" static="no">
        <name>TSEG1_MAX_FOR_CANFD_DATA</name>
        <initializer>(31U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="63" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a760c18c6342bcfe4ed97820a754cb0de" prot="public" static="no">
        <name>TSEG2_MIN_FOR_CANFD_DATA</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="64" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" prot="public" static="no">
        <name>TSEG2_MAX_FOR_CANFD_DATA</name>
        <initializer>(15U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="65" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a7766d34f7b7a21edf8be4b6ec7acc01a" prot="public" static="no">
        <name>TSJW_MIN_FOR_CANFD_DATA</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="66" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a0c165ae36a475cb008acd66eb446e8fb" prot="public" static="no">
        <name>TSJW_MAX_FOR_CANFD_DATA</name>
        <initializer>(15U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="67" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1aaabda59704670193a64b3a5a2ffdee27" prot="public" static="no">
        <name>PRESCALER_MIN_FOR_CANFD_DATA</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="68" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a4102676dd4257db8e706439fc7441c60" prot="public" static="no">
        <name>PRESCALER_MAX_FOR_CANFD_DATA</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="69" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a66a569d6175fdd4f8b9dd293174741b8" prot="public" static="no">
        <name>NUM_TQ_MIN_FOR_CANFD_DATA</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="71" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ae577dcab491583f8d47eda13c4945718" prot="public" static="no">
        <name>NUM_TQ_MAX_FOR_CANFD_DATA</name>
        <initializer>(<ref refid="hpm__can__drv_8c_1ad963a76008f23791fd360172f11bfbf6" kindref="member">TSEG1_MAX_FOR_CANFD_DATA</ref> + <ref refid="hpm__can__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" kindref="member">TSEG2_MAX_FOR_CANFD_DATA</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="72" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a985e40899866d1d3497a844bbf88e4b0" prot="public" static="no">
        <name>MIN_TQ_MUL_PRESCALE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="74" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ab49b989fcef70917fce305249fe4fffe" prot="public" static="no">
        <name>NUM_PRESCALE_MAX</name>
        <initializer>(256U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="75" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" prot="public" static="no">
        <name>CAN_SAMPLEPOINT_MIN</name>
        <initializer>(750U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="77" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" prot="public" static="no">
        <name>CAN_SAMPLEPOINT_MAX</name>
        <initializer>(875U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="78" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" prot="public" static="no">
        <name>MCAN_RAM_ADDR_INVALID</name>
        <initializer>((1UL &lt;&lt; 16) - 1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="81" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a3465375baf4ae4ccbe651acc90f37eff" prot="public" static="no">
        <name>MCAN_MAX_TDC_OFFSET</name>
        <initializer>((uint32_t)(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab8b813725472ddc1b3e3b1bc16f918e1" kindref="member">MCAN_TDCR_TDCO_MASK</ref> &gt;&gt; <ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af3ad40d6798d086655502e375e388bc3" kindref="member">MCAN_TDCR_TDCO_SHIFT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="84" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcan__drv_8c_1a8f6d4b53f36aaea10cd8353531d8277b" prot="public" static="no">
        <name>MCAN_MAX_TDC_FILTER_WIN</name>
        <initializer>((uint32_t)(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1ea01e406447a65aa45cfde0e3495012" kindref="member">MCAN_TDCR_TDCF_MASK</ref> &gt;&gt; <ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a890b3128da29f61bc403ac72b7172367" kindref="member">MCAN_TDCR_TDCF_SHIFT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="86" column="9" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hpm__mcan__drv_8c_1af50a055f830cb262922ac6ff1184c0cc" prot="public" static="no">
        <type>struct <ref refid="structmcan__bit__timing__table__struct" kindref="compound">mcan_bit_timing_table_struct</ref></type>
        <definition>typedef struct mcan_bit_timing_table_struct mcan_bit_timing_table_t</definition>
        <argsstring></argsstring>
        <name>mcan_bit_timing_table_t</name>
        <briefdescription>
<para>MCAN bit timing table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="103" column="25"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hpm__mcan__drv_8c_1ad934d59dd9dff6a3fe8c71a5461ee27d" prot="public" static="yes" mutable="no">
        <type>const <ref refid="hpm__mcan__drv_8c_1af50a055f830cb262922ac6ff1184c0cc" kindref="member">mcan_bit_timing_table_t</ref></type>
        <definition>const mcan_bit_timing_table_t k_mcan_bit_timing_tbl[3]</definition>
        <argsstring>[3]</argsstring>
        <name>k_mcan_bit_timing_tbl</name>
        <initializer>= {
    
    {
        
        .tq_min = (8U) , .tq_max = ( (256U) + (128U) ),
        
        .seg1_min = (2U) , .seg1_max = (256U) ,
        
        .seg2_min = (2U) , .seg2_max = (128U) ,
        
        .sjw_min = (1U) , .sjw_max = (128U) , .min_diff_seg1_minus_seg2 = 2,
        
        .prescaler_min = (1U) , .prescaler_max = (512U) ,
    },
    
    {
        
        .tq_min = (8U) , .tq_max = ( (256U) + (32U) ),
        
        .seg1_min = (2U) , .seg1_max = (256U) ,
        
        .seg2_min = (1U) , .seg2_max = (32U) ,
        
        .sjw_min = (1U) , .sjw_max = (128U) , .min_diff_seg1_minus_seg2 = 2,
        
        .prescaler_min = (1U) , .prescaler_max = (512U) 
    },
    
    {
        
        .tq_min = (8U) , .tq_max = ( (31U) + (15U) ),
        
        .seg1_min = (2U) , .seg1_max = (31U) ,
        
        .seg2_min = (0U) , .seg2_max = (15U) ,
        
        .sjw_min = (0U) , .sjw_max = (15U) , .min_diff_seg1_minus_seg2 = 1,
        
        .prescaler_min = (1U) , .prescaler_max = (32U) 
    }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="115" column="38" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="115" bodyend="155"/>
      </memberdef>
      <memberdef kind="variable" id="hpm__mcan__drv_8c_1add07f1873fe37a46b7ec457f267160d0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" kindref="member">mcan_filter_elem_t</ref></type>
        <definition>const mcan_filter_elem_t k_default_std_id_filter</definition>
        <argsstring></argsstring>
        <name>k_default_std_id_filter</name>
        <initializer>= {
    
    .filter_type = (2U)  ,
    
    .filter_config = (1U)  ,
    
    .can_id_type = (0U)  ,
    
    .sync_message = 0U,
    
    .filter_id = 0U,
    
    .filter_mask = 0x7FFU,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="157" column="33" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="157" bodyend="170"/>
      </memberdef>
      <memberdef kind="variable" id="hpm__mcan__drv_8c_1a3bd3efd47fc479448e0c53688f6bb93a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="group__mcan__interface_1ga980dcb116ce6583e40dc0b407b72cd54" kindref="member">mcan_filter_elem_t</ref></type>
        <definition>const mcan_filter_elem_t k_default_ext_id_filter</definition>
        <argsstring></argsstring>
        <name>k_default_ext_id_filter</name>
        <initializer>= {
    
    .filter_type = (2U)  ,
    
    .filter_config = (1U)  ,
    
    .can_id_type = (1U)  ,
    
    .sync_message = 0,
    
    .filter_id = 0,
    
    .filter_mask = 0x1FFFFFFFUL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="172" column="33" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="172" bodyend="185"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_set_can_nominal_bit_timing</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_bit_timing_param_t *bit_timing)</argsstring>
        <name>mcan_set_can_nominal_bit_timing</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" kindref="member">mcan_bit_timing_param_t</ref> *</type>
          <declname>bit_timing</declname>
        </param>
        <briefdescription>
<para>Set Nominal Bit timing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit_timing</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit timing parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="300" column="13" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="300" bodyend="304" declfile="drivers/src/hpm_mcan_drv.c" declline="198" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1a24be5c629a6e27a6f423d2f06548fb79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_set_can_data_bit_timing</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_bit_timing_param_t *bit_timing)</argsstring>
        <name>mcan_set_can_data_bit_timing</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" kindref="member">mcan_bit_timing_param_t</ref> *</type>
          <declname>bit_timing</declname>
        </param>
        <briefdescription>
<para>Set CANFD Data Bit timing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bit_timing</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit timing parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="306" column="13" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="306" bodyend="311" declfile="drivers/src/hpm_mcan_drv.c" declline="207" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1a4b44610bc1ebee7ba15481e48c861f08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_find_optimal_prescaler</definition>
        <argsstring>(uint32_t num_tq_mul_prescaler, uint32_t start_prescaler, uint32_t max_tq, uint32_t min_tq)</argsstring>
        <name>mcan_find_optimal_prescaler</name>
        <param>
          <type>uint32_t</type>
          <declname>num_tq_mul_prescaler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_prescaler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_tq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_tq</declname>
        </param>
        <briefdescription>
<para>Calculate the closest prescaler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">num_tq_mul_prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of TQ * Prescaler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>Start of Prescaler value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_tq</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum Timing Quantum </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min_tq</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum Timing Quantum</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Calculated prescaler value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="313" column="17" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="313" bodyend="341" declfile="drivers/src/hpm_mcan_drv.c" declline="219" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1a99534476ebb9bb8d98338cf085b49fec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t mcan_calc_bit_timing_from_baudrate</definition>
        <argsstring>(uint32_t src_clk_freq, mcan_bit_timing_option_t option, uint32_t baudrate, uint16_t samplepoint_min, uint16_t samplepoint_max, mcan_bit_timing_param_t *timing_param)</argsstring>
        <name>mcan_calc_bit_timing_from_baudrate</name>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_min</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_max</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" kindref="member">mcan_bit_timing_param_t</ref> *</type>
          <declname>timing_param</declname>
        </param>
        <briefdescription>
<para>Calculate Bit timing from baudrate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN IP clock used for generating bit timing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit timing option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN baudrate in bps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum sample point, value = actual sample point * 1000 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum sample point, value = actual sample point * 1000 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timing_param</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated Bit timing parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if the timing parameters cannot be calculated from specified baudrate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="343" column="19" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="343" bodyend="418" declfile="drivers/src/hpm_mcan_drv.c" declline="237" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t mcan_set_bit_timing_from_baudrate</definition>
        <argsstring>(MCAN_Type *ptr, mcan_bit_timing_option_t option, uint32_t src_clk_freq, uint32_t baudrate, uint16_t samplepoint_min, uint16_t samplepoint_max)</argsstring>
        <name>mcan_set_bit_timing_from_baudrate</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_min</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_max</declname>
        </param>
        <briefdescription>
<para>Set MCAN bit timing from Baudrate. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN bit timing option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN IP clock used for generating bit timing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>Baudrate in bps </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum sample point, value = actual sample point * 1000 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum sample point, value = actual sample point * 1000</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if the timing parameters cannot be calculated from specified baudrate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="420" column="19" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="420" bodyend="454" declfile="drivers/src/hpm_mcan_drv.c" declline="257" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aeff3fdded097c644d85dad856b5668fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t mcan_set_tsu</definition>
        <argsstring>(MCAN_Type *ptr, mcan_tsu_config_t *config)</argsstring>
        <name>mcan_set_tsu</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1ga4a8dbf0ef0c52e686298e5c60697d350" kindref="member">mcan_tsu_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure MCAN TSU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>TSU configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="983" column="19" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="983" bodyend="1020" declfile="drivers/src/hpm_mcan_drv.c" declline="273" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1ac38a0bd5a0a9e5b7e0e8e7a17d4f2c0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t mcan_set_internal_timestamp</definition>
        <argsstring>(MCAN_Type *ptr, mcan_internal_timestamp_config_t *config)</argsstring>
        <name>mcan_set_internal_timestamp</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__mcan__interface_1gafba16d528afcb037dc30093ef09c6993" kindref="member">mcan_internal_timestamp_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure MCAN internal timestamp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal Timestamp Configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if no errors happened</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameters are invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; External Timestamp value used</para>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="1022" column="19" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1022" bodyend="1038" declfile="drivers/src/hpm_mcan_drv.c" declline="284" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool is_mcan_bit_timing_param_valid</definition>
        <argsstring>(mcan_bit_timing_option_t option, const mcan_bit_timing_param_t *param)</argsstring>
        <name>is_mcan_bit_timing_param_valid</name>
        <param>
          <type><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>const <ref refid="group__mcan__interface_1ga43f12b734008c4c4fb2fa32237b3535a" kindref="member">mcan_bit_timing_param_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Check whether the MCAN bit timing parameter is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN bit timing option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN bit timing parameter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN bit timing parameter is valid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN bit timing parameter is invalid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="456" column="13" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="456" bodyend="478" declfile="drivers/src/hpm_mcan_drv.c" declline="294" declcolumn="13"/>
      </memberdef>
      <member refid="group__mcan__interface_1ga74db618200ed3aff26f33ec8a5a866fd" kind="function"><name>mcan_get_default_ram_config</name></member>
      <member refid="group__mcan__interface_1ga7b20defc9668892b847e4ce6d34b5378" kind="function"><name>mcan_get_default_ram_flexible_config</name></member>
      <member refid="group__mcan__interface_1gadc564b2fcb5eccf11bdaf320f00329e1" kind="function"><name>mcan_get_default_config</name></member>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aee23ff7caf6334fc69b9a76e142bf27b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_config_rxfifo</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index, uint32_t reg_val)</argsstring>
        <name>mcan_config_rxfifo</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="697" column="13" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="697" bodyend="704"/>
      </memberdef>
      <member refid="group__mcan__interface_1gab8ad6b212bae07e5d39f91ea951afe1d" kind="function"><name>mcan_config_ram</name></member>
      <member refid="group__mcan__interface_1gaa34c1ee772743eac0a49d4f06a35ac7c" kind="function"><name>mcan_config_ram_with_flexible_config</name></member>
      <member refid="group__mcan__interface_1gafe271d717a5c5dd76933b5a978b64501" kind="function"><name>mcan_config_all_filters</name></member>
      <member refid="group__mcan__interface_1gabfdfeceaa07dd86c05aaf08ecd4f5d53" kind="function"><name>mcan_init</name></member>
      <member refid="group__mcan__interface_1gaec2dd32a680959baaa299a6e2b192aa6" kind="function"><name>mcan_deinit</name></member>
      <member refid="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" kind="function"><name>mcan_set_filter_element</name></member>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1a18dd2d9fbf92ab79b965834e79503965" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_rxfifo0_base</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_rxfifo0_base</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="1360" column="17" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1360" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aa3de645ac9b54cc2936e46f656478ecb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_rxfifo1_base</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_rxfifo1_base</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="1367" column="17" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1367" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1aff813c4585a2b51f353d1285669240a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_rxbuf_elem_addr</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_get_rxbuf_elem_addr</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="1374" column="17" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1374" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcan__drv_8c_1a26b50e6f0a4fdd2cbd688c1cc13f6475" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_txbuf_elem_addr</definition>
        <argsstring>(MCAN_Type *ptr, uint32_t index)</argsstring>
        <name>mcan_get_txbuf_elem_addr</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_mcan_drv.c" line="1394" column="17" bodyfile="drivers/src/hpm_mcan_drv.c" bodystart="1394" bodyend="1412"/>
      </memberdef>
      <member refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kind="function"><name>mcan_get_message_size_from_dlc</name></member>
      <member refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kind="function"><name>mcan_get_data_field_size</name></member>
      <member refid="group__mcan__interface_1gaa00d784c51619ed23c18c481cd02d832" kind="function"><name>mcan_write_txbuf</name></member>
      <member refid="group__mcan__interface_1ga34ad967d2654ed7e8ae292f0ede0f366" kind="function"><name>mcan_write_txfifo</name></member>
      <member refid="group__mcan__interface_1ga733d69672dc906bb842443e000cd4d0c" kind="function"><name>mcan_read_rxbuf</name></member>
      <member refid="group__mcan__interface_1ga6b399ea25c0f023763d9e68b96c321ec" kind="function"><name>mcan_read_rxfifo</name></member>
      <member refid="group__mcan__interface_1gaabf29bb4d2f272dfdf47b5b17db55260" kind="function"><name>mcan_read_tx_evt_fifo</name></member>
      <member refid="group__mcan__interface_1ga62b0b399e3dbe5bf1d4f267a4b812c71" kind="function"><name>mcan_transmit_via_txbuf_nonblocking</name></member>
      <member refid="group__mcan__interface_1ga42c8096c180aaabb0297ea064cc8c759" kind="function"><name>mcan_transmit_blocking</name></member>
      <member refid="group__mcan__interface_1ga7a6b624afafa50747d7379ab61a3709f" kind="function"><name>mcan_request_and_fill_txfifo</name></member>
      <member refid="group__mcan__interface_1gae2e8f0a4ae18e98f0179c8549734723a" kind="function"><name>mcan_transmit_via_txfifo_nonblocking</name></member>
      <member refid="group__mcan__interface_1ga565cf484bf1e734d74bb080a6ab0bff3" kind="function"><name>mcan_receive_from_buf_blocking</name></member>
      <member refid="group__mcan__interface_1ga32469e034fd973f008c57da0157b2775" kind="function"><name>mcan_receive_from_fifo_blocking</name></member>
      <member refid="group__mcan__interface_1gada13053691ef2263116896520fde6518" kind="function"><name>mcan_get_high_priority_message_status</name></member>
      <member refid="group__mcan__interface_1ga42b95618ae33789d7ba7259ce687cede" kind="function"><name>mcan_set_global_filter_config</name></member>
      <member refid="group__mcan__interface_1gad9322d36f5000f99ccfd471bb782732d" kind="function"><name>mcan_config_transmitter_delay_compensation</name></member>
      <member refid="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" kind="function"><name>mcan_read_32bit_tsu_timestamp</name></member>
      <member refid="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" kind="function"><name>mcan_read_64bit_tsu_timestamp</name></member>
      <member refid="group__mcan__interface_1ga205f6812136a27ccd7b770e4a8f10238" kind="function"><name>mcan_get_timestamp_from_tx_event</name></member>
      <member refid="group__mcan__interface_1gaae71f784ff4cc139ad5822f3ccc4d8d2" kind="function"><name>mcan_get_timestamp_from_received_message</name></member>
      <member refid="group__mcan__interface_1ga22454dabbe3fec1d195954afa5e48b7e" kind="function"><name>mcan_parse_protocol_status</name></member>
      <member refid="group__mcan__interface_1ga66b35d60c257a5170fa3e50aa5105165" kind="function"><name>mcan_get_protocol_status</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcan__drv_8h" kindref="compound">hpm_mcan_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Definitions</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_CAN_BAUDRATE_DEFAULT<sp/>(500UL<sp/>*<sp/>1000UL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_CANFD_BAUDRATE_DEFAULT<sp/>(2UL<sp/>*<sp/>1000UL<sp/>*<sp/>1000UL)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Hardware<sp/>restriction<sp/>of<sp/>each<sp/>types<sp/>of<sp/>element<sp/>for<sp/>MCAN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_STD_FILTER_ELEM_CNT_MAX<sp/>(128U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_EXT_FILTER_ELEM_CNT_MAX<sp/>(64U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXFIFO_ELEM_CNT_MAX<sp/><sp/><sp/><sp/><sp/>(64U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RXBUF_ELEM_CNT_MAX<sp/><sp/><sp/><sp/><sp/><sp/>(64U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXEVT_FIFO_ELEM_CNT_MAX<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TXBUF_ELEM_CNT_MAX<sp/><sp/><sp/><sp/><sp/><sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_SYNC_SEG<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CAN2_0<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CAN2_0<sp/>(256U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CAN2_0<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CAN2_0<sp/>(128U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CAN2_0<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CAN2_0<sp/>(128U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MIN_FOR_CAN2_0<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MAX_FOR_CAN2_0<sp/>(512U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CAN2_0<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CAN2_0<sp/>(TSEG1_MAX_FOR_CAN2_0<sp/>+<sp/>TSEG2_MAX_FOR_CAN2_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CANFD_NOMINAL<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CANFD_NOMINAL<sp/>(256U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CANFD_NOMINAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CANFD_NOMINAL<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CANFD_NOMINAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CANFD_NOMINAL<sp/>(128U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CANFD_NOMINAL<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CANFD_NOMINAL<sp/>(TSEG1_MAX_FOR_CANFD_NOMINAL<sp/>+<sp/>TSEG2_MAX_FOR_CANFD_NOMINAL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MIN_FOR_CANFD_NOMINAL<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MAX_FOR_CANFD_NOMINAL<sp/>(512U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MIN_FOR_CANFD_DATA<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG1_MAX_FOR_CANFD_DATA<sp/>(31U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MIN_FOR_CANFD_DATA<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSEG2_MAX_FOR_CANFD_DATA<sp/>(15U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MIN_FOR_CANFD_DATA<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSJW_MAX_FOR_CANFD_DATA<sp/>(15U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MIN_FOR_CANFD_DATA<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRESCALER_MAX_FOR_CANFD_DATA<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MIN_FOR_CANFD_DATA<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TQ_MAX_FOR_CANFD_DATA<sp/>(TSEG1_MAX_FOR_CANFD_DATA<sp/>+<sp/>TSEG2_MAX_FOR_CANFD_DATA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_TQ_MUL_PRESCALE<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_PRESCALE_MAX<sp/>(256U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_SAMPLEPOINT_MIN<sp/>(750U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAN_SAMPLEPOINT_MAX<sp/>(875U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Invalid<sp/>start<sp/>address<sp/>of<sp/>MCAN<sp/>RAM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_RAM_ADDR_INVALID<sp/><sp/><sp/>((1UL<sp/>&lt;&lt;<sp/>16)<sp/>-<sp/>1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>CAN<sp/>TDC<sp/>offset<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MAX_TDC_OFFSET<sp/><sp/><sp/><sp/><sp/>((uint32_t)(MCAN_TDCR_TDCO_MASK<sp/>&gt;&gt;<sp/>MCAN_TDCR_TDCO_SHIFT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Maximum<sp/>CAN<sp/>TDC<sp/>Filter<sp/>Window<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MAX_TDC_FILTER_WIN<sp/>((uint32_t)(MCAN_TDCR_TDCF_MASK<sp/>&gt;&gt;<sp/>MCAN_TDCR_TDCF_SHIFT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structmcan__bit__timing__table__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmcan__bit__timing__table__struct" kindref="compound">mcan_bit_timing_table_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__table__struct_1ad2a0c531b5b7e95a78f4d703916aacf5" kindref="member">tq_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a035445b0a0831d64594546a4ff1dadbd" kindref="member">tq_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__table__struct_1aaf0feb3b1a83babe857dce89acfdc2ec" kindref="member">seg1_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a600b2bb5631285c005742211edca20d7" kindref="member">seg1_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a1316482dc81fdba5dd78ed843452422f" kindref="member">seg2_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a6481473aeda7b30c237e52aab2f77cc5" kindref="member">seg2_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1aea0e7642967ad260185f24355ec35fc5" kindref="member">sjw_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1ae0ac8e001129bc5fe13d1e76d5e031bc" kindref="member">sjw_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a9cc8bf3bcf7874a8fe93762c8bf55239" kindref="member">min_diff_seg1_minus_seg2</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcan__bit__timing__table__struct_1a78bc1c5e3252db6438ccaf0e051713b4" kindref="member">prescaler_min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="structmcan__bit__timing__table__struct_1af0e47fdcd5ce604092dc68d2e2d1ebbe" kindref="member">prescaler_max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="hpm__mcan__drv_8c_1af50a055f830cb262922ac6ff1184c0cc" kindref="member">mcan_bit_timing_table_t</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>Variables</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCAN_SOC_MSG_BUF_IN_AHB_RAM)<sp/>&amp;&amp;<sp/>(MCAN_SOC_MSG_BUF_IN_AHB_RAM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a2fcd7e40ef05fadc360b0f8e7989338b" kindref="member">ATTR_PLACE_AT</ref>(</highlight><highlight class="stringliteral">&quot;.ahb_sram&quot;</highlight><highlight class="normal">)<sp/>uint32_t<sp/>mcan_soc_msg_buf[<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac55f4c4fe77de41a229b950d6d98b23e" kindref="member">MCAN_MSG_BUF_SIZE_IN_WORDS</ref><sp/>*<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a0ddb2da93c7bb386377b6210604b6a01" kindref="member">MCAN_SOC_MAX_COUNT</ref>];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__table__struct" kindref="compound">mcan_bit_timing_table_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1ad934d59dd9dff6a3fe8c71a5461ee27d" kindref="member">k_mcan_bit_timing_tbl</ref>[3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CAN2.0<sp/>bit<sp/>timing<sp/>requirement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TQ<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aa7c447e3ed657f71771b4c985ace827e" kindref="member">NUM_TQ_MIN_FOR_CAN2_0</ref>,<sp/>.tq_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a7f82c52fb990df48dc02e3b7e5f6633f" kindref="member">NUM_TQ_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG1<sp/>range(Including<sp/>Sync_Seg<sp/>+<sp/><sp/>Prop_Seg<sp/>+<sp/>Phase_Seg1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a3c8ced3500393e7789ad282fb24b71c8" kindref="member">TSEG1_MIN_FOR_CAN2_0</ref>,<sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aca275f5ec436573fcfb4aadf3b0f3207" kindref="member">TSEG1_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG2<sp/>Range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a9a94e7591e32eee8cca0177370b014d3" kindref="member">TSEG2_MIN_FOR_CAN2_0</ref>,<sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a713ef061cf67fee964f7a38f95cf08fe" kindref="member">TSEG2_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SJW<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a3ed4c7f6c07f6ab6152b4304b60abab4" kindref="member">TSJW_MIN_FOR_CAN2_0</ref>,<sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1afbb30f7d2539d15b0d9cc4982e8f3471" kindref="member">TSJW_MAX_FOR_CAN2_0</ref>,<sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prescaler_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a10a0b4d25e8ff1b589795f150e48e183" kindref="member">PRESCALER_MIN_FOR_CAN2_0</ref>,<sp/>.prescaler_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a45d9e4fb5cb7c4295ad73106cd1e4306" kindref="member">PRESCALER_MAX_FOR_CAN2_0</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CANFD<sp/>Nominal<sp/>Bit<sp/>timing<sp/>requirement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TQ<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1afef0b3ffad46a89ff59f2f8fbd100976" kindref="member">NUM_TQ_MIN_FOR_CANFD_NOMINAL</ref>,<sp/>.tq_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ac514cc2897243c1556d03906779cdb58" kindref="member">NUM_TQ_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG1<sp/>range(Including<sp/>Sync_Seg<sp/>+<sp/><sp/>Prop_Seg<sp/>+<sp/>Phase_Seg1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a359764c23c8d51368902dff711ba344c" kindref="member">TSEG1_MIN_FOR_CANFD_NOMINAL</ref>,<sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a6e3555cec142ed5507f077f8e430ed5d" kindref="member">TSEG1_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG2<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ae7206fe575f15b97663d14e638662389" kindref="member">TSEG2_MIN_FOR_CANFD_NOMINAL</ref>,<sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a12760041a59c3ae354925d02b03a0798" kindref="member">TSEG2_MAX_FOR_CANFD_NOMINAL</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SJW<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a2ca376d6b4cbb68da3c6e41cc79746c1" kindref="member">TSJW_MIN_FOR_CANFD_NOMINAL</ref>,<sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a023db0c30d8b6275bffb86038f59e4bb" kindref="member">TSJW_MAX_FOR_CANFD_NOMINAL</ref>,<sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prescaler_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a24750afbfe2211295dfc1e1d2a967d23" kindref="member">PRESCALER_MIN_FOR_CANFD_NOMINAL</ref>,<sp/>.prescaler_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a4afbbeef95fc853e1bc2942f6cf74d75" kindref="member">PRESCALER_MAX_FOR_CANFD_NOMINAL</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CANFD<sp/>Data<sp/>Bit<sp/>timing<sp/>requirement<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TQ<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tq_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a66a569d6175fdd4f8b9dd293174741b8" kindref="member">NUM_TQ_MIN_FOR_CANFD_DATA</ref>,<sp/>.tq_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ae577dcab491583f8d47eda13c4945718" kindref="member">NUM_TQ_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG1<sp/>range(Including<sp/>Sync_Seg<sp/>+<sp/><sp/>Prop_Seg<sp/>+<sp/>Phase_Seg2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg1_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a9524617ed8aa43c68ec32a720dc4d4e9" kindref="member">TSEG1_MIN_FOR_CANFD_DATA</ref>,<sp/>.seg1_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad963a76008f23791fd360172f11bfbf6" kindref="member">TSEG1_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SEG2<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.seg2_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a760c18c6342bcfe4ed97820a754cb0de" kindref="member">TSEG2_MIN_FOR_CANFD_DATA</ref>,<sp/>.seg2_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aae6e636e2e7e5a7c3e6fd8b79d073b17" kindref="member">TSEG2_MAX_FOR_CANFD_DATA</ref>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SJW<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.sjw_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a7766d34f7b7a21edf8be4b6ec7acc01a" kindref="member">TSJW_MIN_FOR_CANFD_DATA</ref>,<sp/>.sjw_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a0c165ae36a475cb008acd66eb446e8fb" kindref="member">TSJW_MAX_FOR_CANFD_DATA</ref>,<sp/>.min_diff_seg1_minus_seg2<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prescaler<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.prescaler_min<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aaabda59704670193a64b3a5a2ffdee27" kindref="member">PRESCALER_MIN_FOR_CANFD_DATA</ref>,<sp/>.prescaler_max<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a4102676dd4257db8e706439fc7441c60" kindref="member">PRESCALER_MAX_FOR_CANFD_DATA</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1add07f1873fe37a46b7ec457f267160d0" kindref="member">k_default_std_id_filter</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>classic<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_type<sp/>=<sp/><ref refid="group__mcan__interface_1gaa27b937448fe2ed18091fac7b4ff4ed7" kindref="member">MCAN_FILTER_TYPE_CLASSIC_FILTER</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>message<sp/>into<sp/>RXFIFO0<sp/>if<sp/>matching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_config<sp/>=<sp/><ref refid="group__mcan__interface_1ga37557c65749255e5998681a274326c1c" kindref="member">MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO0_IF_MATCH</ref>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Standard<sp/>Identify<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>.can_id_type<sp/>=<sp/><ref refid="group__mcan__interface_1ga8c15fb63ba3d2d3064d20fd33843719e" kindref="member">MCAN_CAN_ID_TYPE_STANDARD</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>Message,<sp/>only<sp/>evaluated<sp/>when<sp/>&quot;CCCR.UTSU&quot;<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>.sync_message<sp/>=<sp/>0U,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>care<sp/>if<sp/>mask<sp/>is<sp/>set<sp/>to<sp/>all<sp/>1s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_id<sp/>=<sp/>0U,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Accept<sp/>all<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_mask<sp/>=<sp/>0x7FFU,</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1a3bd3efd47fc479448e0c53688f6bb93a" kindref="member">k_default_ext_id_filter</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>classic<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_type<sp/>=<sp/><ref refid="group__mcan__interface_1gaa27b937448fe2ed18091fac7b4ff4ed7" kindref="member">MCAN_FILTER_TYPE_CLASSIC_FILTER</ref>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Store<sp/>message<sp/>into<sp/>RXFIFO0<sp/>if<sp/>matching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_config<sp/>=<sp/><ref refid="group__mcan__interface_1ga37557c65749255e5998681a274326c1c" kindref="member">MCAN_FILTER_ELEM_CFG_STORE_IN_RX_FIFO0_IF_MATCH</ref>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>For<sp/>Standard<sp/>Identify<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>.can_id_type<sp/>=<sp/><ref refid="group__mcan__interface_1gae51f96d3420870c9446758cabf9e8bee" kindref="member">MCAN_CAN_ID_TYPE_EXTENDED</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>Message,<sp/>only<sp/>evaluated<sp/>when<sp/>&quot;CCCR.UTSU&quot;<sp/>is<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>.sync_message<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>care<sp/>if<sp/>mask<sp/>is<sp/>set<sp/>to<sp/>all<sp/>1s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_id<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Accept<sp/>all<sp/>messages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>.filter_mask<sp/>=<sp/>0x1FFFFFFFUL,</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/><sp/>Prototypes</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>**********************************************************************************************************************/</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" kindref="member">mcan_set_can_nominal_bit_timing</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*bit_timing);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1a24be5c629a6e27a6f423d2f06548fb79" kindref="member">mcan_set_can_data_bit_timing</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*bit_timing);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1a4b44610bc1ebee7ba15481e48c861f08" kindref="member">mcan_find_optimal_prescaler</ref>(uint32_t<sp/>num_tq_mul_prescaler,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_prescaler,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_tq,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>min_tq);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1a99534476ebb9bb8d98338cf085b49fec" kindref="member">mcan_calc_bit_timing_from_baudrate</ref>(uint32_t<sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_max,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*timing_param);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" kindref="member">mcan_set_bit_timing_from_baudrate</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_max);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1aeff3fdded097c644d85dad856b5668fe" kindref="member">mcan_set_tsu</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1ac38a0bd5a0a9e5b7e0e8e7a17d4f2c0d" kindref="member">mcan_set_internal_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" kindref="member">is_mcan_bit_timing_param_valid</ref>(<ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*param);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************************************************************</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/><sp/>Codes</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" kindref="member">mcan_set_can_nominal_bit_timing</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*bit_timing)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a304ed36fc12e899af3e6b4b3e683851e" kindref="member">NBTP</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a9cd057aa836aa2c5d9e1db70833e6065" kindref="member">MCAN_NBTP_NBRP_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a59f4ae285c08c9eb7828f7987524e6c0" kindref="member">MCAN_NBTP_NTSEG1_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" kindref="member">num_seg1</ref><sp/>-<sp/>1U)<sp/>|</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a7dd67c587fa3efceb8eaf3d9c8491824" kindref="member">MCAN_NBTP_NTSEG2_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a7685dbb7040c6aa3f2228905965465b4" kindref="member">MCAN_NBTP_NSJW_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref><sp/>-<sp/>1U);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1a24be5c629a6e27a6f423d2f06548fb79" kindref="member">mcan_set_can_data_bit_timing</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*bit_timing)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a0cbaf7a5bb3b670b88650838bb19a433" kindref="member">DBTP</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a66b92031c58941dfc96b9a4051b5fd84" kindref="member">MCAN_DBTP_DBRP_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5cc632c8ca30180475f95261ce00cf4c" kindref="member">MCAN_DBTP_DTSEG1_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" kindref="member">num_seg1</ref><sp/>-<sp/>1U)<sp/>|</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1f0ece1b712c3e0a927b4f52599fe461" kindref="member">MCAN_DBTP_DTSEG2_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a144733df6a5f34f2ab30e3ed689cacd7" kindref="member">MCAN_DBTP_DSJW_SET</ref>(bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref><sp/>-<sp/>1U)<sp/>|</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aaf8b14e1229d25bdb501fe7ee8826952" kindref="member">MCAN_DBTP_TDC_SET</ref>((uint32_t)<sp/>bit_timing-&gt;<ref refid="structmcan__bit__timing__param__struct_1af92ee5ec94fb20b986c61451fd0bf26b" kindref="member">enable_tdc</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1a4b44610bc1ebee7ba15481e48c861f08" kindref="member">mcan_find_optimal_prescaler</ref>(uint32_t<sp/>num_tq_mul_prescaler,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_prescaler,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>max_tq,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>min_tq)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prescaler<sp/>=<sp/>start_prescaler;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!has_found)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_tq_mul_prescaler<sp/>/<sp/>prescaler<sp/>&gt;<sp/>max_tq)<sp/>||<sp/>(num_tq_mul_prescaler<sp/>%<sp/>prescaler<sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++prescaler;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tq<sp/>=<sp/>num_tq_mul_prescaler<sp/>/<sp/>prescaler;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tq<sp/>*<sp/>prescaler<sp/>==<sp/>num_tq_mul_prescaler)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tq<sp/>&lt;<sp/>min_tq)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++prescaler;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_found<sp/>?<sp/>prescaler<sp/>:<sp/>0U;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1a99534476ebb9bb8d98338cf085b49fec" kindref="member">mcan_calc_bit_timing_from_baudrate</ref>(uint32_t<sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_max,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*timing_param)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((option<sp/>&gt;<sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" kindref="member">mcan_bit_timing_canfd_data</ref>)<sp/>||<sp/>(baudrate<sp/>==<sp/>0U)<sp/>||</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(src_clk_freq<sp/>/<sp/>baudrate<sp/>&lt;<sp/><ref refid="hpm__mcan__drv_8c_1a985e40899866d1d3497a844bbf88e4b0" kindref="member">MIN_TQ_MUL_PRESCALE</ref>)<sp/>||<sp/>(timing_param<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__table__struct" kindref="compound">mcan_bit_timing_table_t</ref><sp/>*tbl<sp/>=<sp/>&amp;<ref refid="hpm__mcan__drv_8c_1ad934d59dd9dff6a3fe8c71a5461ee27d" kindref="member">k_mcan_bit_timing_tbl</ref>[(uint8_t)<sp/>option];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>According<sp/>to<sp/>the<sp/>CAN<sp/>specification<sp/>2.0,</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>Tq<sp/>must<sp/>be<sp/>in<sp/>range<sp/>specified<sp/>in<sp/>the<sp/>above<sp/>CAN<sp/>bit-timing<sp/>table</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_clk_freq<sp/>/<sp/>baudrate<sp/>&lt;<sp/>tbl-&gt;tq_min)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_tq_mul_prescaler<sp/>=<sp/>src_clk_freq<sp/>/<sp/>baudrate;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_prescaler<sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_seg1,<sp/>num_seg2;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>out<sp/>the<sp/>minimum<sp/>prescaler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!has_found)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_prescaler<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a4b44610bc1ebee7ba15481e48c861f08" kindref="member">mcan_find_optimal_prescaler</ref>(num_tq_mul_prescaler,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_prescaler,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a035445b0a0831d64594546a4ff1dadbd" kindref="member">tq_max</ref>,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1ad2a0c531b5b7e95a78f4d703916aacf5" kindref="member">tq_min</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_prescaler<sp/>&lt;<sp/>start_prescaler)<sp/>||<sp/>(current_prescaler<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1ab49b989fcef70917fce305249fe4fffe" kindref="member">NUM_PRESCALE_MAX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_tq<sp/>=<sp/>num_tq_mul_prescaler<sp/>/<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg2<sp/>=<sp/>(num_tq<sp/>-<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a9cc8bf3bcf7874a8fe93762c8bf55239" kindref="member">min_diff_seg1_minus_seg2</ref>)<sp/>/<sp/>2U;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg1<sp/>=<sp/>num_tq<sp/>-<sp/>num_seg2;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_seg2<sp/>&gt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a6481473aeda7b30c237e52aab2f77cc5" kindref="member">seg2_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg2--;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_seg1++;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recommended<sp/>sample<sp/>point<sp/>is<sp/>75%<sp/>-<sp/>87.5%<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((num_seg1<sp/>*<sp/>1000U)<sp/>/<sp/>num_tq<sp/>&lt;<sp/>samplepoint_min)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_seg1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--num_seg2;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_seg1<sp/>*<sp/>1000U)<sp/>/<sp/>num_tq<sp/>&gt;<sp/>samplepoint_max)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((num_seg2<sp/>&gt;=<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a1316482dc81fdba5dd78ed843452422f" kindref="member">seg2_min</ref>)<sp/>&amp;&amp;<sp/>(num_seg1<sp/>&lt;=<sp/>tbl-&gt;seg1_max))<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_prescaler<sp/>=<sp/>current_prescaler<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_found)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>num_sjw<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1ae0ac8e001129bc5fe13d1e76d5e031bc" kindref="member">sjw_max</ref>,<sp/>num_seg2);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" kindref="member">num_seg1</ref><sp/>=<sp/>num_seg1<sp/>-<sp/><ref refid="hpm__mcan__drv_8c_1a658a8854331293ba92625a9a33f47a31" kindref="member">NUM_TQ_SYNC_SEG</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Should<sp/>exclude<sp/>the<sp/>Sync_Reg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref><sp/>=<sp/>num_seg2;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref><sp/>=<sp/>num_sjw;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timing_param-&gt;<ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref><sp/>=<sp/>current_prescaler;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" kindref="member">mcan_set_bit_timing_from_baudrate</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>baudrate,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_min,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>samplepoint_max)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>timing_param<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a99534476ebb9bb8d98338cf085b49fec" kindref="member">mcan_calc_bit_timing_from_baudrate</ref>(src_clk_freq,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>option,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baudrate,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplepoint_min,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplepoint_max,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;timing_param);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(option<sp/>&lt;<sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" kindref="member">mcan_bit_timing_canfd_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" kindref="member">mcan_set_can_nominal_bit_timing</ref>(ptr,<sp/>&amp;timing_param);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1a24be5c629a6e27a6f423d2f06548fb79" kindref="member">mcan_set_can_data_bit_timing</ref>(ptr,<sp/>&amp;timing_param);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" kindref="member">is_mcan_bit_timing_param_valid</ref>(<ref refid="group__mcan__interface_1ga142724288666fa1b21a2348a4ca68b39" kindref="member">mcan_bit_timing_option_t</ref><sp/>option,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__param__struct" kindref="compound">mcan_bit_timing_param_t</ref><sp/>*param)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__bit__timing__table__struct" kindref="compound">mcan_bit_timing_table_t</ref><sp/>*tbl<sp/>=<sp/>&amp;<ref refid="hpm__mcan__drv_8c_1ad934d59dd9dff6a3fe8c71a5461ee27d" kindref="member">k_mcan_bit_timing_tbl</ref>[(uint8_t)<sp/>option];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>actual_num_seg1<sp/>=<sp/>param-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1eaf2adf7ce1cebb83d4e9c0abd7cf4" kindref="member">num_seg1</ref><sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((actual_num_seg1<sp/>&lt;<sp/>tbl-&gt;seg1_min)<sp/>||<sp/>(actual_num_seg1<sp/>&gt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a600b2bb5631285c005742211edca20d7" kindref="member">seg1_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a1316482dc81fdba5dd78ed843452422f" kindref="member">seg2_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structmcan__bit__timing__param__struct_1a2d31072584d960c536adcf7cc1c6661f" kindref="member">num_seg2</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a6481473aeda7b30c237e52aab2f77cc5" kindref="member">seg2_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1aea0e7642967ad260185f24355ec35fc5" kindref="member">sjw_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structmcan__bit__timing__param__struct_1ad1452bcdb5e343c5f46148c5690afb4b" kindref="member">num_sjw</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1ae0ac8e001129bc5fe13d1e76d5e031bc" kindref="member">sjw_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((param-&gt;<ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref><sp/>&lt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1a78bc1c5e3252db6438ccaf0e051713b4" kindref="member">prescaler_min</ref>)<sp/>||<sp/>(param-&gt;<ref refid="structmcan__bit__timing__param__struct_1aff56539f1e9438e4de26014aea6fa785" kindref="member">prescaler</ref><sp/>&gt;<sp/>tbl-&gt;<ref refid="structmcan__bit__timing__table__struct_1af0e47fdcd5ce604092dc68d2e2d1ebbe" kindref="member">prescaler_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga74db618200ed3aff26f33ec8a5a866fd" kindref="member">mcan_get_default_ram_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/>*simple_config,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_canfd)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(simple_config,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref>));</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enable_canfd)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a2db993b8cd7c36c592ea79d912474beb" kindref="member">enable_std_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1ab882c0053db6a0e74f4c6e675ad1b727" kindref="member">enable_ext_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" kindref="member">ext_filter_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a2b8a44e572f2720f547f1d074ee82df9" kindref="member">enable_txbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a714ed84fcfe72da0b3c3e66da1bc3aab" kindref="member">txfifo_or_txqueue_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" kindref="member">MCAN_TXBUF_OPERATION_MODE_FIFO</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" kindref="member">txbuf_data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" kindref="member">MCAN_DATA_FIELD_SIZE_8BYTES</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1ae860950b53ebc77727916ff44fa73df6" kindref="member">enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a92d6aa6c0a29a174399a0dc5e87cb9b0" kindref="member">elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a87de9a2700e740f80c542f8f187315d9" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a024e8b2ac12e6fd9475e23f6c715f51e" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" kindref="member">MCAN_DATA_FIELD_SIZE_8BYTES</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1abc3249ae3465ecfbdb64d4fb336a78ac" kindref="member">enable_rxbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a27c387c78dd882718e70d12689ebfa50" kindref="member">rxbuf_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaf6a741961533265ecdb425fd77cc9ae9" kindref="member">MCAN_RXBUF_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" kindref="member">rxbuf_data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" kindref="member">MCAN_DATA_FIELD_SIZE_8BYTES</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1gaf6a741961533265ecdb425fd77cc9ae9" kindref="member">MCAN_RXBUF_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a2db993b8cd7c36c592ea79d912474beb" kindref="member">enable_std_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1ab882c0053db6a0e74f4c6e675ad1b727" kindref="member">enable_ext_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" kindref="member">ext_filter_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a2b8a44e572f2720f547f1d074ee82df9" kindref="member">enable_txbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" kindref="member">MCAN_TXBUF_SIZE_CANFD_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" kindref="member">MCAN_TXBUF_SIZE_CANFD_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a714ed84fcfe72da0b3c3e66da1bc3aab" kindref="member">txfifo_or_txqueue_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" kindref="member">MCAN_TXBUF_OPERATION_MODE_FIFO</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" kindref="member">txbuf_data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" kindref="member">MCAN_DATA_FIELD_SIZE_64BYTES</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" kindref="member">MCAN_TXBUF_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1ae860950b53ebc77727916ff44fa73df6" kindref="member">enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a92d6aa6c0a29a174399a0dc5e87cb9b0" kindref="member">elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a87de9a2700e740f80c542f8f187315d9" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a024e8b2ac12e6fd9475e23f6c715f51e" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" kindref="member">MCAN_DATA_FIELD_SIZE_64BYTES</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1abc3249ae3465ecfbdb64d4fb336a78ac" kindref="member">enable_rxbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a27c387c78dd882718e70d12689ebfa50" kindref="member">rxbuf_elem_count</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga70b761a43c3e5044c4981c098b044b20" kindref="member">MCAN_RXBUF_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" kindref="member">rxbuf_data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" kindref="member">MCAN_DATA_FIELD_SIZE_64BYTES</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga70b761a43c3e5044c4981c098b044b20" kindref="member">MCAN_RXBUF_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a5cd46c9bb1dee840f76e6d207cf4124b" kindref="member">enable_tx_evt_fifo</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_fifo_elem_count<sp/>=</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref><sp/>+<sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1ac62af07197df64eeb3af99063b6b898d" kindref="member">tx_evt_fifo_elem_count</ref><sp/>=<sp/>tx_fifo_elem_count;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>simple_config-&gt;<ref refid="structmcan__ram__config__struct_1a86bf16c31f58dffa8be1db6507c6b083" kindref="member">tx_evt_fifo_watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga5046037b45ae3883a9ec5bd66cdd5178" kindref="member">MCAN_TXEVT_ELEM_SIZE</ref><sp/>*<sp/>tx_fifo_elem_count;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((start_addr<sp/>-<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr))<sp/>&lt;=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" kindref="member">mcan_get_ram_size</ref>(ptr));</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga7b20defc9668892b847e4ce6d34b5378" kindref="member">mcan_get_default_ram_flexible_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_t</ref><sp/>*ram_config,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_canfd)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(ram_config,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref>));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!enable_canfd)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a8e944f811537804e9eb44a19fd8d6afa" kindref="member">enable_std_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3528ad98699a02494326d3c18c585d2e" kindref="member">enable_ext_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1gaea3ee2ea625a6c1c091c7a7f4de4c4f7" kindref="member">MCAN_FILTER_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1a9adbf71432b665745474c04354aeb5" kindref="member">enable_txbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1aaeb15cb3c24dcd8f226bba5056e7136a" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a5759bf151bcb244976eeae36a75034ba" kindref="member">tx_fifo_queue_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" kindref="member">MCAN_TXBUF_OPERATION_MODE_FIFO</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3ee180edde6972e11b83a5c3c0c334f3" kindref="member">txbuf_elem_config</ref>.<ref refid="structmcan__txbuf__elem__config__struct_1a8ca16d799722c7f160619f5023e71ed1" kindref="member">data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" kindref="member">MCAN_DATA_FIELD_SIZE_8BYTES</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1adaaeb5a31cc176a94fbebad3fc57e069" kindref="member">enable_rxfifo0</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aeeecde928e842d4c436fb4eb2b12fee6" kindref="member">enable_rxfifo1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga8b3995f31bda7580a3f40062daf59b4a" kindref="member">MCAN_RXFIFO_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1b5e088482285241548d4187956a4e8a" kindref="member">enable_rxbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a0cd47ebf5b28d0797ab5e744a55a72bb" kindref="member">rxbuf_config</ref>.<ref refid="structmcan__rxbuf__config__t_1a44f0655beccc1579903802d4a1445da2" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1gaf6a741961533265ecdb425fd77cc9ae9" kindref="member">MCAN_RXBUF_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a8e944f811537804e9eb44a19fd8d6afa" kindref="member">enable_std_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3528ad98699a02494326d3c18c585d2e" kindref="member">enable_ext_filter</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga2c6864afba778312687913c1e8e793b1" kindref="member">MCAN_FILTER_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1a9adbf71432b665745474c04354aeb5" kindref="member">enable_txbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1aaeb15cb3c24dcd8f226bba5056e7136a" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" kindref="member">MCAN_TXBUF_SIZE_CANFD_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga6565285b4c135fb12a192bcc739e058f" kindref="member">MCAN_TXBUF_SIZE_CANFD_DEFAULT</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a5759bf151bcb244976eeae36a75034ba" kindref="member">tx_fifo_queue_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gad53838321215f998ab4117b3cd7a18be" kindref="member">MCAN_TXBUF_OPERATION_MODE_FIFO</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3ee180edde6972e11b83a5c3c0c334f3" kindref="member">txbuf_elem_config</ref>.<ref refid="structmcan__txbuf__elem__config__struct_1a8ca16d799722c7f160619f5023e71ed1" kindref="member">data_field_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" kindref="member">MCAN_DATA_FIELD_SIZE_64BYTES</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga139dac7f737cf87371bb85c71a10e3fb" kindref="member">MCAN_TXBUF_SIZE_CAN_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga0c635b1b27cff41be41a310952890099" kindref="member">MCAN_TXRX_ELEM_SIZE_CAN_MAX</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1adaaeb5a31cc176a94fbebad3fc57e069" kindref="member">enable_rxfifo0</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aeeecde928e842d4c436fb4eb2b12fee6" kindref="member">enable_rxfifo1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gab242ef50a19f608dee89fed9c131eb82" kindref="member">MCAN_FIFO_OPERATION_MODE_BLOCKING</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga775bcbf0151ecdea49a0eb8f0f878501" kindref="member">MCAN_RXFIFO_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1b5e088482285241548d4187956a4e8a" kindref="member">enable_rxbuf</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a0cd47ebf5b28d0797ab5e744a55a72bb" kindref="member">rxbuf_config</ref>.<ref refid="structmcan__rxbuf__config__t_1a44f0655beccc1579903802d4a1445da2" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga70b761a43c3e5044c4981c098b044b20" kindref="member">MCAN_RXBUF_SIZE_CANFD_DEFAULT</ref><sp/>*<sp/><ref refid="group__mcan__interface_1ga67be209abcb9fa85ec59fd843e501d41" kindref="member">MCAN_TXRX_ELEM_SIZE_CANFD_MAX</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a0e5d67e63cd97b6bcb26f033b158c0c8" kindref="member">enable_tx_evt_fifo</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>.<ref refid="unionmcan__tx__evt__fifo__config__t_1ac30484de7311be6b51551c94fb8b0b60" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_fifo_size<sp/>=<sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref><sp/>+<sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>.<ref refid="unionmcan__tx__evt__fifo__config__t_1ab7c81cba431e7a7bf1f1eb4a2846e9f6" kindref="member">fifo_size</ref><sp/>=<sp/>tx_fifo_size;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>ram_config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>.<ref refid="unionmcan__tx__evt__fifo__config__t_1ac9045787656b907a05674047d51ea70e" kindref="member">fifo_watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga5046037b45ae3883a9ec5bd66cdd5178" kindref="member">MCAN_TXEVT_ELEM_SIZE</ref><sp/>*<sp/>tx_fifo_size;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>requested<sp/>MCAN<sp/>RAM<sp/>size<sp/>is<sp/>less<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>total<sp/>MCAN<sp/>RAM<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((start_addr<sp/>-<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr))<sp/>&lt;=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" kindref="member">mcan_get_ram_size</ref>(ptr));</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gadc564b2fcb5eccf11bdaf320f00329e1" kindref="member">mcan_get_default_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__config__struct" kindref="compound">mcan_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>memset(config,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__config__struct" kindref="compound">mcan_config_t</ref>));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a2c2e6d4cace535e28cb434fc85c590dc" kindref="member">baudrate</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1acedb10d1704d3f47ec3c81f85e8293fd" kindref="member">MCAN_CAN_BAUDRATE_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a00ad47a139f4d095b42379f3582a0273" kindref="member">baudrate_fd</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a722ad85a3f99beb225c896bb29467b78" kindref="member">MCAN_CANFD_BAUDRATE_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a9087351cb9a2ce9a8d73a0841509333c" kindref="member">can20_samplepoint_max</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" kindref="member">CAN_SAMPLEPOINT_MAX</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1ab202fab33e68db4729686b2c2b8fae40" kindref="member">can20_samplepoint_min</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" kindref="member">CAN_SAMPLEPOINT_MIN</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1ab1b2fcc99d240d6d605bae65a5ea2b67" kindref="member">canfd_samplepoint_max</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad20aa3c76e1cca05af4eeb1154eb3209" kindref="member">CAN_SAMPLEPOINT_MAX</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1aed53af67443e0e04a8d5a0b5a321c2a0" kindref="member">canfd_samplepoint_min</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a91583f8d50f419e36a50ce914ca2395b" kindref="member">CAN_SAMPLEPOINT_MIN</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1abefde0b18ab688a345702b0d21e689a7" kindref="member">mode</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea17b2edd341a219975a6938cd19d32494" kindref="member">mcan_mode_normal</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" kindref="member">enable_canfd</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>Filter<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_t</ref><sp/>*filters_config<sp/>=<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1afd7f4cad27ad7ab5eeee0a3a56629c22" kindref="member">all_filters_config</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1a5e5543ef45c2ba0bdff968c6048c3324" kindref="member">reject_remote_ext_frame</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1a58d303c0277e5fbfe3764f91e2987794" kindref="member">reject_remote_std_frame</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1ad11daaec2c85e481f4217026dbe6a0aa" kindref="member">accept_non_matching_std_frame_option</ref><sp/>=</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga51cf75d4a4d1ea24ccd25dcc7aba7fd4" kindref="member">MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO0</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1ab1f22218f9c731b12d917be6ef90dfee" kindref="member">accept_non_matching_ext_frame_option</ref><sp/>=</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga51cf75d4a4d1ea24ccd25dcc7aba7fd4" kindref="member">MCAN_ACCEPT_NON_MATCHING_FRAME_OPTION_IN_RXFIFO0</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1acd37a5772a3955749c07a769b17fbfdd" kindref="member">ext_id_mask</ref><sp/>=<sp/>0x1FFFFFFFUL;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" kindref="member">filter_elem_list</ref><sp/>=<sp/>&amp;<ref refid="hpm__mcan__drv_8c_1add07f1873fe37a46b7ec457f267160d0" kindref="member">k_default_std_id_filter</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" kindref="member">filter_elem_list</ref><sp/>=<sp/>&amp;<ref refid="hpm__mcan__drv_8c_1a3bd3efd47fc479448e0c53688f6bb93a" kindref="member">k_default_ext_id_filter</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>filters_config-&gt;<ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>MCAN<sp/>RAM<sp/>Configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/>*ram_config<sp/>=<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a247db2e48995db6455b8a2390ecfd07a" kindref="member">ram_config</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga74db618200ed3aff26f33ec8a5a866fd" kindref="member">mcan_get_default_ram_config</ref>(ptr,<sp/>ram_config,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>Internal<sp/>Timestamp<sp/>Configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_t</ref><sp/>*ts_config<sp/>=<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a2c5f9976969eefea00bc0efca24a8767" kindref="member">timestamp_cfg</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>ts_config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" kindref="member">counter_prescaler</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>ts_config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a06f927502ef9e08c72b717fd607a79f1" kindref="member">timestamp_selection</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ga2fe695863ba95530aa5c8b3ae3bbf8d8" kindref="member">MCAN_TIMESTAMP_SEL_VALUE_ALWAYS_ZERO</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Default<sp/>TSU<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_t</ref><sp/>*tsu_config<sp/>=<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a03b30735f04507262407d2efe9e542d6" kindref="member">tsu_config</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" kindref="member">prescaler</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCAN_SOC_TSU_SRC_TWO_STAGES)<sp/>&amp;&amp;<sp/>(MCAN_SOC_TSU_SRC_TWO_STAGES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a594c573a2a8fe599fb14949951b0a053" kindref="member">MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_0</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a88fed68cdf6e28be07823c88a2b8acdc" kindref="member">tbsel_option</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a54a9729e08c65ee426144b3ed90463ef" kindref="member">MCAN_TSU_TBSEL_PTPC0</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref><sp/>=<sp/><ref refid="HPM6200_2HPM6280_2hpm__mcan__soc_8h_1a9ff7c1fcb5f374a1cf7455e116d1a785" kindref="member">MCAN_TSU_EXT_TIMEBASE_SRC_PTPC</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a48b279a028ceb3bf575b12d12f4cca4a" kindref="member">use_ext_timebase</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a994bfe747f8b6c8a243df6c723473d57" kindref="member">capture_on_sof</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>tsu_config-&gt;<ref refid="structmcan__tsu__config__struct_1a9c75c6c99a7d2d16ac9c5c94e90d41a9" kindref="member">enable_tsu</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" kindref="member">timeout_cfg</ref>.<ref refid="structmcan__timeout__config__struct_1ab70d2d61eb344bb4bf7e3fb8ecb16f8e" kindref="member">enable_timeout_counter</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" kindref="member">timeout_cfg</ref>.<ref refid="structmcan__timeout__config__struct_1a534237042df3b9eab3f649777b74d799" kindref="member">timeout_period</ref><sp/>=<sp/>0xFFFFU;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" kindref="member">timeout_cfg</ref>.<ref refid="structmcan__timeout__config__struct_1afc419244b9d064a010f13ccfe8b6715e" kindref="member">timeout_sel</ref><sp/>=<sp/><ref refid="group__mcan__interface_1ggae8f3abd4b8e9156cbf8e6e454aa825a6a8906a5c3724c85571be8f74cb9e6f4c1" kindref="member">mcan_timeout_continuous_operation</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcan__drv_8c_1aee23ff7caf6334fc69b9a76e142bf27b" kindref="member">mcan_config_rxfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/>uint32_t<sp/>reg_val)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a2785ed40064a5dd19afb5139e1c53554" kindref="member">RXF0C</ref><sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad931b8d0f6c8aeb14d06e3f74fb840d7" kindref="member">RXF1C</ref><sp/>=<sp/>reg_val;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gab8ad6b212bae07e5d39f91ea951afe1d" kindref="member">mcan_config_ram</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__config__struct" kindref="compound">mcan_ram_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_bytes;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_count;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a2db993b8cd7c36c592ea79d912474beb" kindref="member">enable_std_filter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a3a6e02bcd316fc8d7e49da995196c587" kindref="member">MCAN_STD_FILTER_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_t</ref><sp/>filter_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref><sp/>=<sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref><sp/>*<sp/>(uint32_t)<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1ab882c0053db6a0e74f4c6e675ad1b727" kindref="member">enable_ext_filter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" kindref="member">ext_filter_elem_count</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a388fed252b81bbf592a6e3370a26a123" kindref="member">MCAN_EXT_FILTER_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__filter__config__struct" kindref="compound">mcan_filter_config_t</ref><sp/>filter_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a4dfb5ba95abe3a463e2b489c963826f3" kindref="member">ext_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1af800b30c296bf84feec000d183b4f5c0" kindref="member">list_start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref><sp/>=<sp/>filter_config.<ref refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref><sp/>*<sp/>(uint32_t)<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a1a8754285aaa5704c355b70f6cc55ebc" kindref="member">std_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct" kindref="compound">mcan_rx_fifo_or_buf_elem_config_t</ref><sp/>rx_fifo_buf_elem_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0U<sp/>};</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1ae860950b53ebc77727916ff44fa73df6" kindref="member">enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_bytes<sp/>=<sp/><ref refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kindref="member">mcan_get_data_field_size</ref>(config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref>)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a92d6aa6c0a29a174399a0dc5e87cb9b0" kindref="member">elem_count</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_count<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a37a26a600c9f63eafd5096020f85c727" kindref="member">MCAN_RXFIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__rxfifo__config__struct" kindref="compound">mcan_rxfifo_config_t</ref><sp/>rxfifo_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_config.<ref refid="unionmcan__rxfifo__config__struct_1a0d0ee795e21d63b0a36aa3117e49f59c" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_config.<ref refid="unionmcan__rxfifo__config__struct_1a02dfd75487f77fa06df87f9391858696" kindref="member">watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_config.<ref refid="unionmcan__rxfifo__config__struct_1a17fca9e02ec26169bc9697bdcad1e89e" kindref="member">operation_mode</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a87de9a2700e740f80c542f8f187315d9" kindref="member">operation_mode</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_config.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>=<sp/>elem_count;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1aee23ff7caf6334fc69b9a76e142bf27b" kindref="member">mcan_config_rxfifo</ref>(ptr,<sp/>i,<sp/>rxfifo_config.<ref refid="unionmcan__rxfifo__config__struct_1ac0bb77c07cc3e624911c5787b1c49d01" kindref="member">reg_val</ref>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a51698b8c50f537cd44dff2478bd14933" kindref="member">fifo0_data_field_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1acec766ec696a9d6ec7dfb383ff9759df" kindref="member">fifo1_data_field_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a69d362b6a7e61dc3e45c095fb392c2b8" kindref="member">rxfifos</ref>[i].<ref refid="structmcan__ram__config__struct_1a16c4b1e23a1cf66c85cc1255809dfb53" kindref="member">data_field_size</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/>elem_bytes<sp/>*<sp/>elem_count;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1aee23ff7caf6334fc69b9a76e142bf27b" kindref="member">mcan_config_rxfifo</ref>(ptr,<sp/>i,<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a51698b8c50f537cd44dff2478bd14933" kindref="member">fifo0_data_field_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1acec766ec696a9d6ec7dfb383ff9759df" kindref="member">fifo1_data_field_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1abc3249ae3465ecfbdb64d4fb336a78ac" kindref="member">enable_rxbuf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_bytes<sp/>=<sp/><ref refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kindref="member">mcan_get_data_field_size</ref>(config-&gt;<ref refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" kindref="member">rxbuf_data_field_size</ref>)<sp/>+<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a27c387c78dd882718e70d12689ebfa50" kindref="member">rxbuf_elem_count</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_count<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a37a26a600c9f63eafd5096020f85c727" kindref="member">MCAN_RXFIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a26bec1cd13e9ba313453469696877fcf" kindref="member">buf_data_field_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1af321237fe68d3931da1d30813c051ec7" kindref="member">rxbuf_data_field_size</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/>elem_bytes<sp/>*<sp/>elem_count;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a26bec1cd13e9ba313453469696877fcf" kindref="member">buf_data_field_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref><sp/>=<sp/>rx_fifo_buf_elem_config.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a2c71d7e2e782003ff1041298d9e2eb73" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__txbuf__config__struct" kindref="compound">mcan_txbuf_config_t</ref><sp/>txbuf_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a2b8a44e572f2720f547f1d074ee82df9" kindref="member">enable_txbuf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txbuf_config.<ref refid="unionmcan__txbuf__config__struct_1aaeb15cb3c24dcd8f226bba5056e7136a" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txbuf_config.<ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txbuf_config.<ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txbuf_config.<ref refid="unionmcan__txbuf__config__struct_1a5759bf151bcb244976eeae36a75034ba" kindref="member">tx_fifo_queue_mode</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a714ed84fcfe72da0b3c3e66da1bc3aab" kindref="member">txfifo_or_txqueue_mode</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1af2c838de931810046cb20c5b9ae131c2" kindref="member">txbuf_fifo_or_queue_elem_count</ref><sp/>+<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a329f3ec712a83358c310412d36d41625" kindref="member">txbuf_dedicated_txbuf_elem_count</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_count<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1aa2886b10f4d7b995306985c1ed0f98be" kindref="member">MCAN_TXEVT_FIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_bytes<sp/>=<sp/><ref refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kindref="member">mcan_get_data_field_size</ref>(config-&gt;<ref refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" kindref="member">txbuf_data_field_size</ref>)<sp/>+<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/>elem_count<sp/>*<sp/>elem_bytes;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref><sp/>=<sp/>(uint32_t)<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1a03d6ee54f64c45787492db131ef2c834" kindref="member">txbuf_data_field_size</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a881585802b55392a6d7b749833179121" kindref="member">TXBC</ref><sp/>=<sp/>txbuf_config.<ref refid="unionmcan__txbuf__config__struct_1a462a73fd8373ee39d9480bc286e8f917" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionmcan__tx__evt__fifo__config__t" kindref="compound">mcan_tx_evt_fifo_config_t</ref><sp/>txevt_fifo_config<sp/>=<sp/>{<sp/>.reg_val<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__config__struct_1a5cd46c9bb1dee840f76e6d207cf4124b" kindref="member">enable_tx_evt_fifo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" kindref="member">mcan_tx_event_fifo_elem_t</ref>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__config__struct_1ac62af07197df64eeb3af99063b6b898d" kindref="member">tx_evt_fifo_elem_count</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_count<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1aa2886b10f4d7b995306985c1ed0f98be" kindref="member">MCAN_TXEVT_FIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txevt_fifo_config.<ref refid="unionmcan__tx__evt__fifo__config__t_1ac30484de7311be6b51551c94fb8b0b60" kindref="member">start_addr</ref><sp/>=<sp/>start_addr;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txevt_fifo_config.<ref refid="unionmcan__tx__evt__fifo__config__t_1ab7c81cba431e7a7bf1f1eb4a2846e9f6" kindref="member">fifo_size</ref><sp/>=<sp/>elem_count;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txevt_fifo_config.<ref refid="unionmcan__tx__evt__fifo__config__t_1ac9045787656b907a05674047d51ea70e" kindref="member">fifo_watermark</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref><sp/>=<sp/>txevt_fifo_config.<ref refid="unionmcan__tx__evt__fifo__config__t_1aaf8c2c7c151be68e5940a00ab15eeece" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_addr<sp/>+=<sp/>elem_bytes<sp/>*<sp/>elem_count;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>whether<sp/>the<sp/>requested<sp/>RAM<sp/>space<sp/>exceeds<sp/>the<sp/>valid<sp/>RAM<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>requested_ram_size<sp/>=<sp/>start_addr<sp/>-<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(requested_ram_size<sp/>&gt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" kindref="member">mcan_get_ram_size</ref>(ptr))<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a910feb3ca68c6381e7923559fdaf9f30" kindref="member">status_mcan_ram_out_of_range</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaa34c1ee772743eac0a49d4f06a35ac7c" kindref="member">mcan_config_ram_with_flexible_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__ram__flexible__config__struct" kindref="compound">mcan_ram_flexible_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a8e944f811537804e9eb44a19fd8d6afa" kindref="member">enable_std_filter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a3a6e02bcd316fc8d7e49da995196c587" kindref="member">MCAN_STD_FILTER_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3528ad98699a02494326d3c18c585d2e" kindref="member">enable_ext_filter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aed666599f10a12c91415e0de35a4773b" kindref="member">std_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a4d63506ed96311b74740c3dae28cc6a1" kindref="member">list_size</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a388fed252b81bbf592a6e3370a26a123" kindref="member">MCAN_EXT_FILTER_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1acddc92a506ba0337241363e4b164ce91" kindref="member">ext_filter_config</ref>.<ref refid="unionmcan__filter__config__struct_1a98b6364a0bcfb2f7c65457ac4c3bebe1" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1adaaeb5a31cc176a94fbebad3fc57e069" kindref="member">enable_rxfifo0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a37a26a600c9f63eafd5096020f85c727" kindref="member">MCAN_RXFIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a2785ed40064a5dd19afb5139e1c53554" kindref="member">RXF0C</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1abda62877174e532bcd9ed95ba2c7fa06" kindref="member">rxfifo0_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1ac0bb77c07cc3e624911c5787b1c49d01" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a2785ed40064a5dd19afb5139e1c53554" kindref="member">RXF0C</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aeeecde928e842d4c436fb4eb2b12fee6" kindref="member">enable_rxfifo1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1a7f1123177942f92ea9ed79614b26caf6" kindref="member">fifo_size</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a37a26a600c9f63eafd5096020f85c727" kindref="member">MCAN_RXFIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad931b8d0f6c8aeb14d06e3f74fb840d7" kindref="member">RXF1C</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1aa52111a3c54ea1bb1b9562dea05b828b" kindref="member">rxfifo1_config</ref>.<ref refid="unionmcan__rxfifo__config__struct_1ac0bb77c07cc3e624911c5787b1c49d01" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad931b8d0f6c8aeb14d06e3f74fb840d7" kindref="member">RXF1C</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1b5e088482285241548d4187956a4e8a" kindref="member">enable_rxbuf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>There<sp/>is<sp/>no<sp/>register<sp/>field<sp/>for<sp/>SW<sp/>to<sp/>validate<sp/>the<sp/>rxbuf<sp/>element<sp/>count,</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>users<sp/>should<sp/>ensure<sp/>the<sp/>parameters<sp/>are<sp/>in<sp/>valid<sp/>range.</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a0cd47ebf5b28d0797ab5e744a55a72bb" kindref="member">rxbuf_config</ref>.<ref refid="structmcan__rxbuf__config__t_1a44f0655beccc1579903802d4a1445da2" kindref="member">start_addr</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ae36edcfa8592d830d152d888490f270e" kindref="member">rx_elem_config</ref>.<ref refid="unionmcan__rx__fifo__or__buf__elem__config__struct_1a2c71d7e2e782003ff1041298d9e2eb73" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a1a9adbf71432b665745474c04354aeb5" kindref="member">enable_txbuf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_fifo_size<sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a0069780afd802f5051892d6ee51bafb8" kindref="member">fifo_queue_size</ref><sp/>+<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a6df7ec33890f89f4785f84f1565f2c67" kindref="member">dedicated_tx_buf_size</ref>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_fifo_size<sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1a8147fa88888e03792804185b04a98830" kindref="member">MCAN_TXBUF_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a3ee180edde6972e11b83a5c3c0c334f3" kindref="member">txbuf_elem_config</ref>.<ref refid="structmcan__txbuf__elem__config__struct_1a8ca16d799722c7f160619f5023e71ed1" kindref="member">data_field_size</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a881585802b55392a6d7b749833179121" kindref="member">TXBC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1ac2c76f85ad448d2eb19b684a36f8baf6" kindref="member">txbuf_config</ref>.<ref refid="unionmcan__txbuf__config__struct_1a462a73fd8373ee39d9480bc286e8f917" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a0e5d67e63cd97b6bcb26f033b158c0c8" kindref="member">enable_tx_evt_fifo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>.<ref refid="unionmcan__tx__evt__fifo__config__t_1ab7c81cba431e7a7bf1f1eb4a2846e9f6" kindref="member">fifo_size</ref><sp/>&gt;<sp/><ref refid="hpm__mcan__drv_8c_1aa2886b10f4d7b995306985c1ed0f98be" kindref="member">MCAN_TXEVT_FIFO_ELEM_CNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__ram__flexible__config__struct_1a908d62e3d6116e99632fe7d91d601258" kindref="member">tx_evt_fifo_config</ref>.<ref refid="unionmcan__tx__evt__fifo__config__t_1aaf8c2c7c151be68e5940a00ab15eeece" kindref="member">reg_val</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref><sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a73c23510392cfe5d59bfb3b8816f79b8" kindref="member">MCAN_RAM_ADDR_INVALID</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gafe271d717a5c5dd76933b5a978b64501" kindref="member">mcan_config_all_filters</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__all__filters__config__struct" kindref="compound">mcan_all_filters_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(config<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a85e5d12df85e332c9593db04357e979b" kindref="member">XIDAM</ref><sp/>=<sp/>config-&gt;<ref refid="structmcan__all__filters__config__struct_1acd37a5772a3955749c07a769b17fbfdd" kindref="member">ext_id_mask</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae137ebc0152cb31dbc6c7d95df5a3b6d" kindref="member">GFC</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3811114bde4efd48e3f3fffc7d7a16a3" kindref="member">MCAN_GFC_RRFE_SET</ref>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1a5e5543ef45c2ba0bdff968c6048c3324" kindref="member">reject_remote_ext_frame</ref>)<sp/>|</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a63f6081b59c3e8d6bb378bd5cdbc9043" kindref="member">MCAN_GFC_RRFS_SET</ref>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1a58d303c0277e5fbfe3764f91e2987794" kindref="member">reject_remote_std_frame</ref>)<sp/>|</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ac122955a011d0ef4cd8a58164e6a9bd1" kindref="member">MCAN_GFC_ANFE_SET</ref>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1ab1f22218f9c731b12d917be6ef90dfee" kindref="member">accept_non_matching_ext_frame_option</ref>)<sp/>|</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0ed045c501bff2069f79962da4ae2aea" kindref="member">MCAN_GFC_ANFS_SET</ref>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a76823786797d3aabc7795fd032915479" kindref="member">global_filter_config</ref>.<ref refid="structmcan__global__filter__config__struct_1ad11daaec2c85e481f4217026dbe6a0aa" kindref="member">accept_non_matching_std_frame_option</ref>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/>*elem<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>config-&gt;<ref refid="structmcan__all__filters__config__struct_1a84ea0e9f7a12194c90effb457acbff1f" kindref="member">ext_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" kindref="member">filter_elem_list</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elem_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a1631f6f090569d39ba14a2b16381a12a" kindref="member">can_id_type</ref><sp/>!=<sp/><ref refid="group__mcan__interface_1gae51f96d3420870c9446758cabf9e8bee" kindref="member">MCAN_CAN_ID_TYPE_EXTENDED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" kindref="member">mcan_set_filter_element</ref>(ptr,<sp/>elem,<sp/>i);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++elem;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_count<sp/>=<sp/>config-&gt;<ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1ab8a3414679fb63d24093c9e507265e48" kindref="member">mcan_filter_elem_count</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/>=<sp/>config-&gt;<ref refid="structmcan__all__filters__config__struct_1a0177293747474d962e88ef1175af4439" kindref="member">std_id_filter_list</ref>.<ref refid="structmcan__filter__elem__list__struct_1a306fd656d8cb5b7ddb79d1f903cc9852" kindref="member">filter_elem_list</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elem_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a1631f6f090569d39ba14a2b16381a12a" kindref="member">can_id_type</ref><sp/>!=<sp/><ref refid="group__mcan__interface_1ga8c15fb63ba3d2d3064d20fd33843719e" kindref="member">MCAN_CAN_ID_TYPE_STANDARD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" kindref="member">mcan_set_filter_element</ref>(ptr,<sp/>elem,<sp/>i);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++elem;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1aeff3fdded097c644d85dad856b5668fe" kindref="member">mcan_set_tsu</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tsu__config__struct" kindref="compound">mcan_tsu_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tscfg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((config-&gt;<ref refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" kindref="member">prescaler</ref><sp/>&lt;<sp/>1U)<sp/>||<sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" kindref="member">prescaler</ref><sp/>&gt;<sp/>256U)<sp/>||</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref><sp/>&gt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a84f8ad5491195a8069b79a4fba47ea9c" kindref="member">MCAN_TSU_EXT_TIMEBASE_SRC_MAX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1a9c75c6c99a7d2d16ac9c5c94e90d41a9" kindref="member">enable_tsu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscfg<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0f699f9dcc1ff13596e465344939561b" kindref="member">MCAN_TSCFG_TSUE_MASK</ref>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1a994bfe747f8b6c8a243df6c723473d57" kindref="member">capture_on_sof</ref>)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscfg<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a34bfb5e597c1972237456d1c53aba187" kindref="member">MCAN_TSCFG_SCP_MASK</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1a48b279a028ceb3bf575b12d12f4cca4a" kindref="member">use_ext_timebase</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscfg<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab81fbdc21480597a28f037e1939aebb5" kindref="member">MCAN_TSCFG_TBCS_MASK</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1abccf7fddc6cf0e9e7fa450a97efe2dde" kindref="member">mcan_set_tsu_ext_timebase_src</ref>(ptr,<sp/>config-&gt;<ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCAN_SOC_TSU_SRC_TWO_STAGES)<sp/>&amp;&amp;<sp/>(MCAN_SOC_TSU_SRC_TWO_STAGES<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a32033448a163dce095ae7af7d51833aa" kindref="member">mcan_set_tsu_tbsel_option</ref>(ptr,<sp/>config-&gt;<ref refid="structmcan__tsu__config__struct_1a58a0fe547dbb28f1d1e8f160cc152078" kindref="member">ext_timebase_src</ref>,<sp/>config-&gt;<ref refid="structmcan__tsu__config__struct_1a88fed68cdf6e28be07823c88a2b8acdc" kindref="member">tbsel_option</ref>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__tsu__config__struct_1a954c127d22f73085fbe86fbd566111b8" kindref="member">enable_64bit_timestamp</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscfg<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6cadd05059091e6e92321af663ffac8a" kindref="member">MCAN_TSCFG_EN64_MASK</ref>;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tscfg<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad3ccb61e9ee877daa13cf9d98bec9e99" kindref="member">MCAN_TSCFG_TBPRE_SET</ref>(config-&gt;<ref refid="structmcan__tsu__config__struct_1af376a2bcf5ad78e9bfde210818852be8" kindref="member">prescaler</ref><sp/>-<sp/>1U);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7f3cc4b797c3ef198baa2ddf7f0c4085" kindref="member">TSCFG</ref><sp/>=<sp/>tscfg;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__mcan__drv_8c_1ac38a0bd5a0a9e5b7e0e8e7a17d4f2c0d" kindref="member">mcan_set_internal_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__internal__timestamp__config__struct" kindref="compound">mcan_internal_timestamp_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" kindref="member">counter_prescaler</ref><sp/>&lt;<sp/>1U)<sp/>||<sp/>(config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" kindref="member">counter_prescaler</ref><sp/>&gt;<sp/>16)<sp/>||</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a06f927502ef9e08c72b717fd607a79f1" kindref="member">timestamp_selection</ref><sp/>&gt;<sp/><ref refid="group__mcan__interface_1ga13979fcab78c18dc9b18dc46a51cdb4f" kindref="member">MCAN_TIMESTAMP_SEL_MAX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a641bc6bba44be6ee0aea48949d714971" kindref="member">TSCC</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1addb2a040af40104460fe3d348411a9aa" kindref="member">MCAN_TSCC_TCP_SET</ref>(config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a351c53597bcebf31f6029c8b54bc0069" kindref="member">counter_prescaler</ref><sp/>-<sp/>1U)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa3b14883acd2e562fec77d0835d8db54" kindref="member">MCAN_TSCC_TSS_SET</ref>(config-&gt;<ref refid="structmcan__internal__timestamp__config__struct_1a06f927502ef9e08c72b717fd607a79f1" kindref="member">timestamp_selection</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gabfdfeceaa07dd86c05aaf08ecd4f5d53" kindref="member">mcan_init</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__config__struct" kindref="compound">mcan_config_t</ref><sp/>*config,<sp/>uint32_t<sp/>src_clk_freq)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(config<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga10f768fae4615fb09ebed09994b70eb8" kindref="member">mcan_enable_clock</ref>(ptr);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>retry_cnt<sp/>=<sp/>10000UL;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt--;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>==<sp/>0UL)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1gaf873e91eadc315ac5e98c01593fc6535" kindref="member">mcan_is_clock_enabled</ref>(ptr));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>==<sp/>0UL)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt<sp/>=<sp/>10000UL;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>)<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt--;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>==<sp/>0UL)<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>==<sp/>0UL)<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5e4a9f93b78310e75e3d3f46e26ffd2a" kindref="member">MCAN_CCCR_CCE_MASK</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!config-&gt;<ref refid="structmcan__config__struct_1ae8f37b2ad4d57c0d21d24b36b8eefc92" kindref="member">use_lowlevel_timing_setting</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" kindref="member">enable_canfd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" kindref="member">mcan_set_bit_timing_from_baudrate</ref>(ptr,</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a3fd22011a94564e5ae16638903ecdb7f" kindref="member">mcan_bit_timing_canfd_nominal</ref>,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a2c2e6d4cace535e28cb434fc85c590dc" kindref="member">baudrate</ref>,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1ab202fab33e68db4729686b2c2b8fae40" kindref="member">can20_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a9087351cb9a2ce9a8d73a0841509333c" kindref="member">can20_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" kindref="member">mcan_set_bit_timing_from_baudrate</ref>(ptr,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" kindref="member">mcan_bit_timing_canfd_data</ref>,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a00ad47a139f4d095b42379f3582a0273" kindref="member">baudrate_fd</ref>,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1aed53af67443e0e04a8d5a0b5a321c2a0" kindref="member">canfd_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1ab1b2fcc99d240d6d605bae65a5ea2b67" kindref="member">canfd_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ad14d819f3b79614798c42d66f9ef3f99" kindref="member">mcan_set_bit_timing_from_baudrate</ref>(ptr,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a872a880dbed647ee424bbb2536e2fe78" kindref="member">mcan_bit_timing_can2_0</ref>,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_clk_freq,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a2c2e6d4cace535e28cb434fc85c590dc" kindref="member">baudrate</ref>,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1ab202fab33e68db4729686b2c2b8fae40" kindref="member">can20_samplepoint_min</ref>,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structmcan__config__struct_1a9087351cb9a2ce9a8d73a0841509333c" kindref="member">can20_samplepoint_max</ref>);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>param_valid;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" kindref="member">enable_canfd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_valid<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" kindref="member">is_mcan_bit_timing_param_valid</ref>(<ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a3fd22011a94564e5ae16638903ecdb7f" kindref="member">mcan_bit_timing_canfd_nominal</ref>,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" kindref="member">status_mcan_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_valid<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" kindref="member">is_mcan_bit_timing_param_valid</ref>(<ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62ad30324941b1a6a80e9247d5c5861761e" kindref="member">mcan_bit_timing_canfd_data</ref>,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a452ffa673da6e95aa1158419282e6fc1" kindref="member">canfd_timing</ref>);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" kindref="member">status_mcan_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" kindref="member">mcan_set_can_nominal_bit_timing</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1a24be5c629a6e27a6f423d2f06548fb79" kindref="member">mcan_set_can_data_bit_timing</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a452ffa673da6e95aa1158419282e6fc1" kindref="member">canfd_timing</ref>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_valid<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aaf73990e224838288e0305ae93a6cc47" kindref="member">is_mcan_bit_timing_param_valid</ref>(<ref refid="group__mcan__interface_1gga16e55b7e0b6dca264533e100e1567e62a872a880dbed647ee424bbb2536e2fe78" kindref="member">mcan_bit_timing_can2_0</ref>,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!param_valid)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a4c7c7709402198955e7eed762db1c126" kindref="member">status_mcan_invalid_bit_timing</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcan__drv_8c_1aa2ef91e110d15ffc1124f9cb36f74da9" kindref="member">mcan_set_can_nominal_bit_timing</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a3d2a1efe18907aabb1da3979519431cd" kindref="member">can_timing</ref>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1abefde0b18ab688a345702b0d21e689a7" kindref="member">mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea17b2edd341a219975a6938cd19d32494" kindref="member">mcan_mode_normal</ref>:</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af6633cf42e6274840ee2abe1a7bbc681" kindref="member">MCAN_CCCR_MON_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1acca81ed3b34ed2d21da874423d970a06" kindref="member">MCAN_CCCR_TEST_MASK</ref>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea4020de624af6113b400b72b6efa16547" kindref="member">mcan_mode_loopback_internal</ref>:</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af6633cf42e6274840ee2abe1a7bbc681" kindref="member">MCAN_CCCR_MON_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1acca81ed3b34ed2d21da874423d970a06" kindref="member">MCAN_CCCR_TEST_MASK</ref>;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1aa893745b329f197a57d501dd28e884ba" kindref="member">TEST</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a41b9d501a1ee7e32e0743764ac6653db" kindref="member">MCAN_TEST_LBCK_MASK</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932ea5b9acf45c49d4988a267500f0f04720d" kindref="member">mcan_mode_loopback_external</ref>:</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1acca81ed3b34ed2d21da874423d970a06" kindref="member">MCAN_CCCR_TEST_MASK</ref>;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1aa893745b329f197a57d501dd28e884ba" kindref="member">TEST</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a41b9d501a1ee7e32e0743764ac6653db" kindref="member">MCAN_TEST_LBCK_MASK</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ggaf55077f151a7b54491a518d3a7e5932eaf01b5ed8a81437b6fbc94714ff98a3b5" kindref="member">mcan_mode_listen_only</ref>:</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af6633cf42e6274840ee2abe1a7bbc681" kindref="member">MCAN_CCCR_MON_MASK</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a0008f6c80f12cc7e2c2cdcf69c55d120" kindref="member">enable_canfd</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6d7d093987dcf9b8ec2853f62b656be7" kindref="member">MCAN_CCCR_FDOE_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a82a1fe2e3985b9c79444b126aacfaffb" kindref="member">MCAN_CCCR_BRSE_MASK</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6d7d093987dcf9b8ec2853f62b656be7" kindref="member">MCAN_CCCR_FDOE_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a82a1fe2e3985b9c79444b126aacfaffb" kindref="member">MCAN_CCCR_BRSE_MASK</ref>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a2d45408c6eee4a952c31d154797c9b1e" kindref="member">enable_non_iso_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a68fecf6b9cbf2eb45affadd0ddd2dd33" kindref="member">MCAN_CCCR_NISO_MASK</ref>;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_NISO_MASK;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1af3b754b114bc151eb8141e5403ad62fa" kindref="member">enable_transmit_pause</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8edd064bba5e6da11f466c255a36641c" kindref="member">MCAN_CCCR_TXP_MASK</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_TXP_MASK;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1ad46cfc929a18252b6997ca96a4720df7" kindref="member">disable_protocol_exception_handling</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ace113a0e6c40d71818334c5903ddfbf4" kindref="member">MCAN_CCCR_PXHD_MASK</ref>;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_PXHD_MASK;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a053c3a92fc5b024774a8c3d2e5f5f525" kindref="member">enable_wide_message_marker</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a473bd737e56ae40d0f36655e7e1e0455" kindref="member">MCAN_CCCR_WMM_MASK</ref>;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_WMM_MASK;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1ac65911843274788dad0af70288b22430" kindref="member">enable_edge_filtering</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad71963c566871490c2439a9f0d1a4d69" kindref="member">MCAN_CCCR_EFBI_MASK</ref>;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_EFBI_MASK;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a72fb70555e55a6a470371d09dee8826f" kindref="member">disable_auto_retransmission</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3b2753c8a97b0b3db222d93ba54d9878" kindref="member">MCAN_CCCR_DAR_MASK</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_DAR_MASK;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1aaad7bcd6d2ba4e41b23bcd92904cc83e" kindref="member">enable_restricted_operation_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa254bf638b25cd87ddcd831bd2df7338" kindref="member">MCAN_CCCR_ASM_MASK</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_ASM_MASK;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>Transmitter<sp/>Delay<sp/>Compensation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a4ecbc06003e6e2518508cebc7bd4097f" kindref="member">enable_tdc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tdc_offset;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tdc_filter;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1a9fc99752d901f05d34a7ee1d560e0c2e" kindref="member">tdc_config</ref>.<ref refid="structmcan__tdc__config__t_1a840b20697c1e253a22eb71ed6c23d9b2" kindref="member">ssp_offset</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>default<sp/>TDC<sp/>Offset<sp/>to<sp/>the<sp/>Data<sp/>Seg1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a881bd8edd773d099b752f6e8aaaa8ea5" kindref="member">MCAN_DBTP_DTSEG1_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a0cbaf7a5bb3b670b88650838bb19a433" kindref="member">DBTP</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_filter<sp/>=<sp/>tdc_offset;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_offset<sp/>=<sp/>config-&gt;<ref refid="structmcan__config__struct_1a9fc99752d901f05d34a7ee1d560e0c2e" kindref="member">tdc_config</ref>.<ref refid="structmcan__tdc__config__t_1a840b20697c1e253a22eb71ed6c23d9b2" kindref="member">ssp_offset</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_filter<sp/>=<sp/>config-&gt;<ref refid="structmcan__config__struct_1a9fc99752d901f05d34a7ee1d560e0c2e" kindref="member">tdc_config</ref>.<ref refid="structmcan__tdc__config__t_1a4299fb266fe825910e48515905373858" kindref="member">filter_window_length</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_offset<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(tdc_offset,<sp/><ref refid="hpm__mcan__drv_8c_1a3465375baf4ae4ccbe651acc90f37eff" kindref="member">MCAN_MAX_TDC_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tdc_filter<sp/>=<sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(tdc_filter,<sp/><ref refid="hpm__mcan__drv_8c_1a8f6d4b53f36aaea10cd8353531d8277b" kindref="member">MCAN_MAX_TDC_FILTER_WIN</ref>);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae37457307d899cfc45738b1fca11cb18" kindref="member">TDCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8146121b629f36502b57f19670eb18cb" kindref="member">MCAN_TDCR_TDCF_SET</ref>(tdc_filter)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a2c299c023f0d6b6268dce206127270ea" kindref="member">MCAN_TDCR_TDCO_SET</ref>(tdc_offset);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a0cbaf7a5bb3b670b88650838bb19a433" kindref="member">DBTP</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a53475ab7fa788d54c7819b90872cd583" kindref="member">MCAN_DBTP_TDC_MASK</ref>;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a0cbaf7a5bb3b670b88650838bb19a433" kindref="member">DBTP</ref><sp/>&amp;=<sp/>~MCAN_DBTP_TDC_MASK;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>TSU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structmcan__config__struct_1af74457b06327fc03ec22a6b1754111f2" kindref="member">use_timestamping_unit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0a757018495b07b06af77a0736315f2c" kindref="member">MCAN_CCCR_UTSU_MASK</ref>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aeff3fdded097c644d85dad856b5668fe" kindref="member">mcan_set_tsu</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a03b30735f04507262407d2efe9e542d6" kindref="member">tsu_config</ref>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_UTSU_MASK;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>Internal<sp/>Timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1ac38a0bd5a0a9e5b7e0e8e7a17d4f2c0d" kindref="member">mcan_set_internal_timestamp</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a2c5f9976969eefea00bc0efca24a8767" kindref="member">timestamp_cfg</ref>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>CAN<sp/>RAM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_ram_size<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" kindref="member">mcan_get_ram_size</ref>(ptr);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*ram_base<sp/>=<sp/>(uint32_t<sp/>*)<sp/>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(ptr));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>can_ram_size<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_base[i]<sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gab8ad6b212bae07e5d39f91ea951afe1d" kindref="member">mcan_config_ram</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a247db2e48995db6455b8a2390ecfd07a" kindref="member">ram_config</ref>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>Filters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gafe271d717a5c5dd76933b5a978b64501" kindref="member">mcan_config_all_filters</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1afd7f4cad27ad7ab5eeee0a3a56629c22" kindref="member">all_filters_config</ref>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>by<sp/>default<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga38c3a8ac8acebad5458fada97d626c7a" kindref="member">mcan_disable_interrupts</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gacaa7a89e8f63e90bc09d1260105325ec" kindref="member">mcan_disable_txbuf_transmission_interrupt</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga4647f5a17ab621d68dec223fd58e9d4a" kindref="member">mcan_disable_txbuf_cancel_finish_interrupt</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>interrupts<sp/>on<sp/>demand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gae3fd9674f06ba1f031b514690a60c31f" kindref="member">mcan_enable_interrupts</ref>(ptr,<sp/>config-&gt;<ref refid="structmcan__config__struct_1a936b7f1689819aee441e08e4f7f0ee63" kindref="member">interrupt_mask</ref>);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga163fd0dc5861518a6986d15b02f33dbe" kindref="member">mcan_enable_txbuf_transmission_interrupt</ref>(ptr,<sp/>config-&gt;<ref refid="structmcan__config__struct_1a8305bec95251b4eb8673dca9f169deff" kindref="member">txbuf_trans_interrupt_mask</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga774ee5999a30150b91fa421f1a646957" kindref="member">mcan_enable_txbuf_cancel_finish_interrupt</ref>(ptr,<sp/>config-&gt;<ref refid="structmcan__config__struct_1a2737d7ff0e82011f8b29b7dfc3477a9b" kindref="member">txbuf_cancel_finish_interrupt_mask</ref>);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>all<sp/>Interrupt<sp/>Flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" kindref="member">mcan_clear_interrupt_flags</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__timeout__config__struct" kindref="compound">mcan_timeout_config_t</ref><sp/>*timeout_cfg<sp/>=<sp/>&amp;config-&gt;<ref refid="structmcan__config__struct_1a3eb5a4d7ed612d547ebb8ed73619e3c3" kindref="member">timeout_cfg</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ab2585a559e9ac905221ed16aad5d98a1" kindref="member">TOCC</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a183d0123194ee4082a435e7da7cfe79b" kindref="member">MCAN_TOCC_RP_SET</ref>(timeout_cfg-&gt;<ref refid="structmcan__timeout__config__struct_1ab70d2d61eb344bb4bf7e3fb8ecb16f8e" kindref="member">enable_timeout_counter</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad1c3446b3a2e2bd32399a2de6d63c73e" kindref="member">MCAN_TOCC_TOP_SET</ref>(timeout_cfg-&gt;<ref refid="structmcan__timeout__config__struct_1a534237042df3b9eab3f649777b74d799" kindref="member">timeout_period</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab8a773e96f1e6d64e1559ddcea5bf4fb" kindref="member">MCAN_TOCC_TOS_SET</ref>(timeout_cfg-&gt;<ref refid="structmcan__timeout__config__struct_1afc419244b9d064a010f13ccfe8b6715e" kindref="member">timeout_sel</ref>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;=<sp/>~MCAN_CCCR_INIT_MASK;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaec2dd32a680959baaa299a6e2b192aa6" kindref="member">mcan_deinit</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga325ecf9d01fc40fe16c6a940af55b174" kindref="member">mcan_enter_init_mode</ref>(ptr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stop<sp/>MCAN<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>write<sp/>access<sp/>to<sp/>protected<sp/>configuration<sp/>registers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga5bc433d62c8dc50e944d4bcff2475160" kindref="member">mcan_enable_write_to_prot_config_registers</ref>(ptr);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>critical<sp/>registers<sp/>to<sp/>default<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad37652ddc2db06516ff0e132050edac6" kindref="member">RWD</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a641bc6bba44be6ee0aea48949d714971" kindref="member">TSCC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae137ebc0152cb31dbc6c7d95df5a3b6d" kindref="member">GFC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a85e5d12df85e332c9593db04357e979b" kindref="member">XIDAM</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a85e5d12df85e332c9593db04357e979b" kindref="member">XIDAM</ref><sp/>=<sp/>0x1FFFFFFFUL;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad931b8d0f6c8aeb14d06e3f74fb840d7" kindref="member">RXF1C</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a881585802b55392a6d7b749833179121" kindref="member">TXBC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7f3cc4b797c3ef198baa2ddf7f0c4085" kindref="member">TSCFG</ref><sp/>=<sp/>0UL;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>all<sp/>interrupts<sp/>and<sp/>clear<sp/>all<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga38c3a8ac8acebad5458fada97d626c7a" kindref="member">mcan_disable_interrupts</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" kindref="member">mcan_clear_interrupt_flags</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1gacaa7a89e8f63e90bc09d1260105325ec" kindref="member">mcan_disable_txbuf_transmission_interrupt</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga4647f5a17ab621d68dec223fd58e9d4a" kindref="member">mcan_disable_txbuf_cancel_finish_interrupt</ref>(ptr,<sp/>~0UL);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>CCCR<sp/>to<sp/>default<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a24dbd9d7101d28c6b18f65a8d937840d" kindref="member">CCCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a1d0d1569f8dd443546ec8c6954ac38ff" kindref="member">MCAN_CCCR_INIT_MASK</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga1de58381c613c978338219f3a2418dd9" kindref="member">mcan_set_filter_element</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__std__id__filter__elem__struct" kindref="compound">mcan_filter_elem_t</ref><sp/>*filter_elem,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(filter_elem<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_ext_id<sp/>=<sp/>(filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a1631f6f090569d39ba14a2b16381a12a" kindref="member">can_id_type</ref><sp/>==<sp/><ref refid="group__mcan__interface_1gae51f96d3420870c9446758cabf9e8bee" kindref="member">MCAN_CAN_ID_TYPE_EXTENDED</ref>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ram_offset;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>filter_elem_size;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>size_max;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_ext_id)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1afec6f4f1e118bb64aca163d3277dc8c1" kindref="member">MCAN_XIDFC_FLESA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref>)<sp/>&lt;&lt;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a71291771182a91c6f6e2cad670961889" kindref="member">MCAN_XIDFC_FLESA_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_elem_size<sp/>=<sp/><ref refid="group__mcan__interface_1ga36b395305b0b79397e84d1b6bb510453" kindref="member">MCAN_FILTER_ELEM_EXT_ID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_max<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a06f6b242289a72928c18f7d89f5d4728" kindref="member">MCAN_XIDFC_LSE_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1ad0da9772817edd7f8f2d32f689097dd8" kindref="member">XIDFC</ref>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ram_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1acc7e75d50e7f599228ccb6a010b2fd9d" kindref="member">MCAN_SIDFC_FLSSA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref>)<sp/>&lt;&lt;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af14c038405604155a74aa88882c59b60" kindref="member">MCAN_SIDFC_FLSSA_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_elem_size<sp/>=<sp/><ref refid="group__mcan__interface_1ga35c37a139fec3ae150b1cd96d411921e" kindref="member">MCAN_FILTER_ELEM_STD_ID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_max<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1adb49c79f3c09153f5c2eef87420b174a" kindref="member">MCAN_SIDFC_LSS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a014e0a00a3315cea91208e776421f256" kindref="member">SIDFC</ref>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>size_max)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a126b2e91fa25aaee1ca5dbeb1dd72297" kindref="member">status_mcan_filter_index_out_of_range</ref>;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*config_start;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_start<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>ram_offset<sp/>+<sp/>filter_elem_size<sp/>*<sp/>index);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>config_words[2]<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_ext_id)<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EFEC<sp/>+<sp/>EFID1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[0]<sp/>=<sp/>((uint32_t)<sp/>(filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1ae791285afe78c5258b86b584a37abf7a" kindref="member">filter_config</ref>)<sp/>&lt;&lt;<sp/>29)<sp/>|<sp/>filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1ada997ff601b95dcda5258c62807398d7" kindref="member">id1</ref>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>EFT<sp/>+<sp/>ESYNC<sp/>+<sp/>EFFID2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[1]<sp/>=<sp/>filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a98e726d4bd2ed1416ed200d8ebb8ad19" kindref="member">id2</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[1]<sp/>|=<sp/>(filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a4713f6267c14c01f124fcdac22794b54" kindref="member">sync_message</ref><sp/>!=<sp/>0)<sp/>?<sp/>(1UL<sp/>&lt;&lt;<sp/>29)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[1]<sp/>|=<sp/>((uint32_t)<sp/>filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a1c6d26b947f305258cde72d473935468" kindref="member">filter_type</ref>)<sp/>&lt;&lt;<sp/>30;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_start[0]<sp/>=<sp/>config_words[0];</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_start[1]<sp/>=<sp/>config_words[1];</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[0]<sp/>=<sp/>(filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a98e726d4bd2ed1416ed200d8ebb8ad19" kindref="member">id2</ref><sp/>&amp;<sp/>0x7FFUL)<sp/>|<sp/>((filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1ada997ff601b95dcda5258c62807398d7" kindref="member">id1</ref><sp/>&amp;<sp/>0x7FFU)<sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[0]<sp/>|=<sp/>(filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a4713f6267c14c01f124fcdac22794b54" kindref="member">sync_message</ref><sp/>!=<sp/>0)<sp/>?<sp/>(1UL<sp/>&lt;&lt;<sp/>15)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[0]<sp/>|=<sp/>((uint32_t)<sp/>filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1ae791285afe78c5258b86b584a37abf7a" kindref="member">filter_config</ref>)<sp/>&lt;&lt;<sp/>27;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_words[0]<sp/>|=<sp/>((uint32_t)<sp/>filter_elem-&gt;<ref refid="structmcan__std__id__filter__elem__struct_1a1c6d26b947f305258cde72d473935468" kindref="member">filter_type</ref>)<sp/>&lt;&lt;<sp/>30;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_start[0]<sp/>=<sp/>config_words[0];</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1a18dd2d9fbf92ab79b965834e79503965" kindref="member">mcan_get_rxfifo0_base</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxfifo0_buf_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0483f9dd629efdd67efa1a762f26efec" kindref="member">MCAN_RXF0C_F0SA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a2785ed40064a5dd19afb5139e1c53554" kindref="member">RXF0C</ref>)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fifo_addr_base<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>rxfifo0_buf_offset;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_addr_base;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1aa3de645ac9b54cc2936e46f656478ecb" kindref="member">mcan_get_rxfifo1_base</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxfifo1_buf_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a039568422390882bb42e4d4370e42871" kindref="member">MCAN_RXF1C_F1SA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1ad931b8d0f6c8aeb14d06e3f74fb840d7" kindref="member">RXF1C</ref>)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fifo_addr_base<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>rxfifo1_buf_offset;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fifo_addr_base;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1aff813c4585a2b51f353d1285669240a1" kindref="member">mcan_get_rxbuf_elem_addr</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size_option<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5e5379e33a4b58df1c8de245395c54ff" kindref="member">MCAN_RXESC_RBDS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_size_option<sp/>&lt;<sp/>5U)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>8U<sp/>+<sp/>4U<sp/>*<sp/>elem_size_option;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>32U<sp/>+<sp/>(elem_size_option<sp/>-<sp/>5U)<sp/>*<sp/>16U;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>elem_size<sp/>+=<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxbuf_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa15dd8d80ddfd771abac3adc6a51e846" kindref="member">MCAN_RXBC_RBSA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1adf37d82c2e6a5d0440d3cd92dd831f85" kindref="member">RXBC</ref>)<sp/>&lt;&lt;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1abe5a2363b903d823f08c4d693277dda7" kindref="member">MCAN_RXBC_RBSA_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxbuf_addr_base<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>rxbuf_offset;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_addr<sp/>=<sp/>rxbuf_addr_base<sp/>+<sp/>elem_size<sp/>*<sp/>index;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem_addr;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcan__drv_8c_1a26b50e6f0a4fdd2cbd688c1cc13f6475" kindref="member">mcan_get_txbuf_elem_addr</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size_option<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a269150f3ec08461e42c8c02258b87431" kindref="member">MCAN_TXESC_TBDS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1ad7f242ef95765c313176215fe92f64c3" kindref="member">TXESC</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_size_option<sp/>&lt;<sp/>5U)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>8U<sp/>+<sp/>4U<sp/>*<sp/>elem_size_option;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>32U<sp/>+<sp/>(elem_size_option<sp/>-<sp/>5U)<sp/>*<sp/>16U;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>elem_size<sp/>+=<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>txbuf_offset<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aedafabd678aabf4024da94119209f57b" kindref="member">MCAN_TXBC_TBSA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a881585802b55392a6d7b749833179121" kindref="member">TXBC</ref>)<sp/>&lt;&lt;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ad6271b89ab61088dcc93c238382586bf" kindref="member">MCAN_TXBC_TBSA_SHIFT</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>txbuf_addr_base<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>txbuf_offset;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_addr<sp/>=<sp/>txbuf_addr_base<sp/>+<sp/>elem_size<sp/>*<sp/>index;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem_addr;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal">uint8_t<sp/><ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(uint8_t<sp/>dlc)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>msg_size;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlc<sp/>&lt;=<sp/>8U)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_size<sp/>=<sp/>dlc;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlc<sp/>&lt;=<sp/>12U)<sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_size<sp/>=<sp/>8<sp/>+<sp/>(dlc<sp/>-<sp/>8)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_size<sp/>=<sp/>32<sp/>+<sp/>(dlc<sp/>-<sp/>13)<sp/>*<sp/>16U;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg_size;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal">uint8_t<sp/><ref refid="group__mcan__interface_1ga9b6267f7692c9e6fb6d3ff46def5e505" kindref="member">mcan_get_data_field_size</ref>(uint8_t<sp/>data_field_size_option)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>size_in_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_field_size_option)<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gace3d4933dbe3dfbd720578f05b1e534a" kindref="member">MCAN_DATA_FIELD_SIZE_8BYTES</ref>:</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>8U;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga37b23c93ef81ea6ca8150053fae905bb" kindref="member">MCAN_DATA_FIELD_SIZE_12BYTES</ref>:</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>12U;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaff4f91816c182e2b58bb31b3b0d42af9" kindref="member">MCAN_DATA_FIELD_SIZE_16BYTES</ref>:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>16U;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gac53ed46f103fefe78333884e1ece53df" kindref="member">MCAN_DATA_FIELD_SIZE_20BYTES</ref>:</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>20U;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga63e2645c1d55fad06c8e6aaed5612426" kindref="member">MCAN_DATA_FIELD_SIZE_24BYTES</ref>:</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>24U;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1ga541112be859cf166067b6a8a2c8d056c" kindref="member">MCAN_DATA_FIELD_SIZE_32BYTES</ref>:</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>32U;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaae4ba919b25b76af4a17b2cdbdd4571e" kindref="member">MCAN_DATA_FIELD_SIZE_48BYTES</ref>:</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>48U;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gaa738e5bad0344cec9fac63d943a623d9" kindref="member">MCAN_DATA_FIELD_SIZE_64BYTES</ref>:</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_in_bytes<sp/>=<sp/>64U;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Invalid<sp/>option<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_in_bytes;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaa00d784c51619ed23c18c481cd02d832" kindref="member">mcan_write_txbuf</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame)</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>txbuf_index_max<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a43ea1768af854dedc4058fd00d8f1dd1" kindref="member">MCAN_TXBC_NDTB_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a881585802b55392a6d7b749833179121" kindref="member">TXBC</ref>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>txbuf_index_max)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a0c977d9bfceeeb9d2c65b702a384b311" kindref="member">status_mcan_txbuf_index_out_of_range</ref>;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1gad6e0b24e44956c6428a30be89ad2a25e" kindref="member">mcan_is_transmit_request_pending</ref>(ptr,<sp/>index))<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_hdr<sp/>=<sp/>(uint32_t<sp/>*)<sp/><ref refid="hpm__mcan__drv_8c_1a26b50e6f0a4fdd2cbd688c1cc13f6475" kindref="member">mcan_get_txbuf_elem_addr</ref>(ptr,<sp/>index);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_data<sp/>=<sp/>msg_hdr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>msg_size_words<sp/>=<sp/>(<ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(tx_frame-&gt;<ref refid="structmcan__tx__message__struct_1a072f90f61ac83f85b108d7d02c403b4a" kindref="member">dlc</ref>)<sp/>+<sp/>3U)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*tx_frame_u32<sp/>=<sp/>(uint32_t<sp/>*)<sp/>tx_frame;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_hdr[0]<sp/>=<sp/>tx_frame_u32[0];</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_hdr[1]<sp/>=<sp/>tx_frame_u32[1];</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg_size_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_data[i]<sp/>=<sp/>tx_frame-&gt;<ref refid="structmcan__tx__message__struct_1ade8140a5ad4d6dc0bd0f23fb0983dc0a" kindref="member">data_32</ref>[i];</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga34ad967d2654ed7e8ae292f0ede0f366" kindref="member">mcan_write_txfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1ga575a48ca07bcf3727e0d20812167b930" kindref="member">mcan_is_txfifo_full</ref>(ptr))<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>put_index<sp/>=<sp/><ref refid="group__mcan__interface_1ga58f207d21722e47fcf3cb69b1014cdd4" kindref="member">mcan_get_txfifo_put_index</ref>(ptr);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_hdr<sp/>=<sp/>(uint32_t<sp/>*)<sp/><ref refid="hpm__mcan__drv_8c_1a26b50e6f0a4fdd2cbd688c1cc13f6475" kindref="member">mcan_get_txbuf_elem_addr</ref>(ptr,<sp/>put_index);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_data<sp/>=<sp/>msg_hdr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>msg_size_words<sp/>=<sp/>(<ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(tx_frame-&gt;<ref refid="structmcan__tx__message__struct_1a072f90f61ac83f85b108d7d02c403b4a" kindref="member">dlc</ref>)<sp/>+<sp/>3U)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*tx_frame_u32<sp/>=<sp/>(uint32_t<sp/>*)<sp/>tx_frame;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_hdr[0]<sp/>=<sp/>tx_frame_u32[0];</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_hdr[1]<sp/>=<sp/>tx_frame_u32[1];</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg_size_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_data[i]<sp/>=<sp/>tx_frame-&gt;<ref refid="structmcan__tx__message__struct_1ade8140a5ad4d6dc0bd0f23fb0983dc0a" kindref="member">data_32</ref>[i];</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a6aaf40b543c918584b0df36484e00035" kindref="member">status_mcan_txfifo_full</ref>;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga733d69672dc906bb842443e000cd4d0c" kindref="member">mcan_read_rxbuf</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(rx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1ga215634d628791ef221f6750a7018e70b" kindref="member">mcan_is_rxbuf_data_available</ref>(ptr,<sp/>index))<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aac004ed1011243a53db5ffc94d355dd3" kindref="member">status_mcan_rxbuf_empty</ref>;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_hdr<sp/>=<sp/>(uint32_t<sp/>*)<sp/><ref refid="hpm__mcan__drv_8c_1aff813c4585a2b51f353d1285669240a1" kindref="member">mcan_get_rxbuf_elem_addr</ref>(ptr,<sp/>index);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_data<sp/>=<sp/>msg_hdr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*rx_frame_u32<sp/>=<sp/>(uint32_t<sp/>*)<sp/>rx_frame;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame_u32[0]<sp/>=<sp/>msg_hdr[0];</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame_u32[1]<sp/>=<sp/>msg_hdr[1];</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>msg_size_words<sp/>=<sp/>(<ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(rx_frame-&gt;<ref refid="structmcan__rx__message__struct_1adc8976664ea996174ae76a3758c05c3f" kindref="member">dlc</ref>)<sp/>+<sp/>3)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg_size_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame-&gt;<ref refid="structmcan__rx__message__struct_1a2e429495bc75eca551e46771098a8a77" kindref="member">data_32</ref>[i]<sp/>=<sp/>msg_data[i];</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga6b399ea25c0f023763d9e68b96c321ec" kindref="member">mcan_read_rxfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>fifo_index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame)</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(rx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>base_addr;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_index;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size_option;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fifo_index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxf0s<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a1d79421dfc1b0448cfae15299d84896f" kindref="member">RXF0S</ref>;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aafddeec1736c476df1305c2085c571b7" kindref="member">MCAN_RXF0S_F0FL_GET</ref>(rxf0s)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aa34e223659b1f7b6be15e91198fe7f49" kindref="member">status_mcan_rxfifo_empty</ref>;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_addr<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1a18dd2d9fbf92ab79b965834e79503965" kindref="member">mcan_get_rxfifo0_base</ref>(ptr);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size_option<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa0b051d884d5efde104b4519c7392b3e" kindref="member">MCAN_RXESC_F0DS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref>);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_index<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1af02ad7cf7eaff2ba4444d7031bd8c4a0" kindref="member">MCAN_RXF0S_F0GI_GET</ref>(rxf0s);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxf1s<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a3b670ed40b08eb1274f1e80591290ebf" kindref="member">RXF1S</ref>;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8da1153a19835829525f1fbbd4071f25" kindref="member">MCAN_RXF1S_F1FL_GET</ref>(rxf1s)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80aa34e223659b1f7b6be15e91198fe7f49" kindref="member">status_mcan_rxfifo_empty</ref>;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_addr<sp/>=<sp/><ref refid="hpm__mcan__drv_8c_1aa3de645ac9b54cc2936e46f656478ecb" kindref="member">mcan_get_rxfifo1_base</ref>(ptr);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size_option<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a4402b4ee898b91cb31be11d8e7d9cd5b" kindref="member">MCAN_RXESC_F1DS_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a3f131c88e4ecf2202eb537a07a5aa5f1" kindref="member">RXESC</ref>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_index<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1adb5d7e67cd9990d7473f4236c50e3983" kindref="member">MCAN_RXF1S_F1GI_GET</ref>(rxf1s);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(elem_size_option<sp/>&lt;<sp/>5U)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>8U<sp/>+<sp/>4U<sp/>*<sp/>elem_size_option;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>=<sp/>32U<sp/>+<sp/>(elem_size_option<sp/>-<sp/>5U)<sp/>*<sp/>16U;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem_size<sp/>+=<sp/><ref refid="group__mcan__interface_1gad10599ebb9be53be0943ec3776c15c34" kindref="member">MCAN_MESSAGE_HEADER_SIZE_IN_BYTES</ref>;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_addr<sp/>=<sp/>base_addr<sp/>+<sp/>elem_size<sp/>*<sp/>elem_index;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_hdr<sp/>=<sp/>(uint32_t<sp/>*)<sp/>elem_addr;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*msg_data<sp/>=<sp/>msg_hdr<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*rx_frame_u32<sp/>=<sp/>(uint32_t<sp/>*)<sp/>rx_frame;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame_u32[0]<sp/>=<sp/>msg_hdr[0];</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame_u32[1]<sp/>=<sp/>msg_hdr[1];</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>msg_size_words<sp/>=<sp/>(<ref refid="group__mcan__interface_1ga0d17d2c373f727ac4dd4f8318a9ef1ac" kindref="member">mcan_get_message_size_from_dlc</ref>(rx_frame-&gt;<ref refid="structmcan__rx__message__struct_1adc8976664ea996174ae76a3758c05c3f" kindref="member">dlc</ref>)<sp/>+<sp/>3)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>msg_size_words;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_frame-&gt;<ref refid="structmcan__rx__message__struct_1a2e429495bc75eca551e46771098a8a77" kindref="member">data_32</ref>[i]<sp/>=<sp/>msg_data[i];</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fifo_index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1adb83cadd4af9c2c648a4952812a77dc5" kindref="member">RXF0A</ref><sp/>=<sp/>elem_index;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7b9aba67c29ccb508fa7ebe5b41592a6" kindref="member">RXF1A</ref><sp/>=<sp/>elem_index;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaabf29bb4d2f272dfdf47b5b17db55260" kindref="member">mcan_read_tx_evt_fifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_t</ref><sp/>*tx_evt)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_evt<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>txefs<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae68320c54cc168128410e0456bd4fa25" kindref="member">TXEFS</ref>;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a9385abc0b6630e8e6defb83e7b432d0d" kindref="member">MCAN_TXEFS_EFFL_GET</ref>(txefs)<sp/>==<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a5efd04a451d99de9aa20282915399dc6" kindref="member">status_mcan_tx_evt_fifo_empty</ref>;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>base_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(ptr)<sp/>+<sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a32192f655cdce5b3ca59c17142113556" kindref="member">MCAN_TXEFC_EFSA_GET</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a8db468b0a9b8fad85b396f3fd62c95f8" kindref="member">TXEFC</ref>)<sp/>&lt;&lt;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a28f4354fa5a4178d6601ea252b86c6a3" kindref="member">MCAN_TXEFC_EFSA_SHIFT</ref>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="group__mcan__interface_1gac727e3406aaf84fc73738cca1176fd24" kindref="member">mcan_tx_event_fifo_elem_t</ref>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_index<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a84fd49c7013449c0060040cbf118121c" kindref="member">MCAN_TXEFS_EFGI_GET</ref>(txefs);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>elem_addr<sp/>=<sp/>base_addr<sp/>+<sp/>elem_size<sp/>*<sp/>elem_index;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*tx_evt_buf<sp/>=<sp/>(uint32_t<sp/>*)<sp/>elem_addr;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_evt-&gt;<ref refid="unionmcan__tx__event__fifo__elem__struct_1ab256d653ecb7dca4779375723466624e" kindref="member">words</ref>[0]<sp/>=<sp/>tx_evt_buf[0];</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_evt-&gt;<ref refid="unionmcan__tx__event__fifo__elem__struct_1ab256d653ecb7dca4779375723466624e" kindref="member">words</ref>[1]<sp/>=<sp/>tx_evt_buf[1];</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a46140e54f130551d5fba2f402eeb83f0" kindref="member">TXEFA</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a7dc997dd8e3b909a342a456df5246935" kindref="member">MCAN_TXEFA_EFAI_SET</ref>(elem_index);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga62b0b399e3dbe5bf1d4f267a4b812c71" kindref="member">mcan_transmit_via_txbuf_nonblocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gaa00d784c51619ed23c18c481cd02d832" kindref="member">mcan_write_txbuf</ref>(ptr,<sp/>index,<sp/>tx_frame);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CAN_SOC_TX_RX_BUFFER_ACCESS_WORKAROUND)<sp/>&amp;&amp;<sp/>(CAN_SOC_TX_RX_BUFFER_ACCESS_WORKAROUND<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>wait_cnt<sp/>=<sp/>1000000UL;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__mcan__interface_1ga1552da9d1c902ac3ae1969c9b13d709c" kindref="member">mcan_get_activity</ref>(ptr)<sp/>==<sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a4cc5899efd2e02270f530e1af44ae340" kindref="member">mcan_activity_receiver</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait_cnt--;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_cnt<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga701847488fce9bca3f06a7dab84f4cf5" kindref="member">mcan_send_add_request</ref>(ptr,<sp/>index);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga42c8096c180aaabb0297ea064cc8c759" kindref="member">mcan_transmit_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame)</highlight></codeline>
<codeline lineno="1687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>put_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gae2e8f0a4ae18e98f0179c8549734723a" kindref="member">mcan_transmit_via_txfifo_nonblocking</ref>(ptr,<sp/>tx_frame,<sp/>&amp;put_index);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>retry_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1ga18717f3b92e0f81dfca18aa8869a4203" kindref="member">mcan_is_transmit_occurred</ref>(ptr,<sp/>put_index))<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt++;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>&gt;=<sp/><ref refid="group__mcan__interface_1gad005d5796e4ff0654c2dab1d54a7c2e6" kindref="member">MCAN_TX_RETRY_COUNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>&gt;=<sp/><ref refid="group__mcan__interface_1gad005d5796e4ff0654c2dab1d54a7c2e6" kindref="member">MCAN_TX_RETRY_COUNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga7a6b624afafa50747d7379ab61a3709f" kindref="member">mcan_request_and_fill_txfifo</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame,<sp/>uint32_t<sp/>*fifo_index)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_frame<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__mcan__interface_1ga575a48ca07bcf3727e0d20812167b930" kindref="member">mcan_is_txfifo_full</ref>(ptr))<sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80a6aaf40b543c918584b0df36484e00035" kindref="member">status_mcan_txfifo_full</ref>;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga34ad967d2654ed7e8ae292f0ede0f366" kindref="member">mcan_write_txfifo</ref>(ptr,<sp/>tx_frame);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>put_index<sp/>=<sp/><ref refid="group__mcan__interface_1ga58f207d21722e47fcf3cb69b1014cdd4" kindref="member">mcan_get_txfifo_put_index</ref>(ptr);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fifo_index<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fifo_index<sp/>=<sp/>put_index;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gae2e8f0a4ae18e98f0179c8549734723a" kindref="member">mcan_transmit_via_txfifo_nonblocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tx__message__struct" kindref="compound">mcan_tx_frame_t</ref><sp/>*tx_frame,<sp/>uint32_t<sp/>*fifo_index)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>put_index;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga7a6b624afafa50747d7379ab61a3709f" kindref="member">mcan_request_and_fill_txfifo</ref>(ptr,<sp/>tx_frame,<sp/>&amp;put_index);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>(status<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CAN_SOC_TX_RX_BUFFER_ACCESS_WORKAROUND)<sp/>&amp;&amp;<sp/>(CAN_SOC_TX_RX_BUFFER_ACCESS_WORKAROUND<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>wait_cnt<sp/>=<sp/>1000000UL;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__mcan__interface_1ga1552da9d1c902ac3ae1969c9b13d709c" kindref="member">mcan_get_activity</ref>(ptr)<sp/>==<sp/><ref refid="group__mcan__interface_1ggae5adf8a9892bbf21ccfda5bbe7845fc6a4cc5899efd2e02270f530e1af44ae340" kindref="member">mcan_activity_receiver</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wait_cnt--;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_cnt<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga701847488fce9bca3f06a7dab84f4cf5" kindref="member">mcan_send_add_request</ref>(ptr,<sp/>put_index);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fifo_index<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fifo_index<sp/>=<sp/>put_index;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga565cf484bf1e734d74bb080a6ab0bff3" kindref="member">mcan_receive_from_buf_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>retry_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1ga215634d628791ef221f6750a7018e70b" kindref="member">mcan_is_rxbuf_data_available</ref>(ptr,<sp/>index))<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt++;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>&gt;=<sp/><ref refid="group__mcan__interface_1ga3dea7eae649ca71c8207f911863d40ed" kindref="member">MCAN_RX_RETRY_COUNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga284cd07adeb5b341451a872e217f646a" kindref="member">mcan_clear_rxbuf_data_available_flag</ref>(ptr,<sp/>index);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga733d69672dc906bb842443e000cd4d0c" kindref="member">mcan_read_rxbuf</ref>(ptr,<sp/>index,<sp/>rx_frame);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga32469e034fd973f008c57da0157b2775" kindref="member">mcan_receive_from_fifo_blocking</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>fifo_index,<sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_frame)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>retry_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>interrupt_flag<sp/>=<sp/>(fifo_index<sp/>==<sp/>0U)<sp/>?<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3830dacba7a26cd6ad0ebe6efd12f679" kindref="member">MCAN_IR_RF0N_MASK</ref><sp/>:<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a402fbe5b855220ade1e379096d61113d" kindref="member">MCAN_IR_RF1N_MASK</ref>;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__mcan__interface_1gaf19a405afbe4c5295f58e9c7154ed22f" kindref="member">mcan_is_interrupt_flag_set</ref>(ptr,<sp/>interrupt_flag))<sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_cnt++;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry_cnt<sp/>&gt;=<sp/><ref refid="group__mcan__interface_1ga3dea7eae649ca71c8207f911863d40ed" kindref="member">MCAN_RX_RETRY_COUNT_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__mcan__interface_1ga2a7398d932d483877b7dc722f42ca054" kindref="member">mcan_clear_interrupt_flags</ref>(ptr,<sp/>interrupt_flag);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga6b399ea25c0f023763d9e68b96c321ec" kindref="member">mcan_read_rxfifo</ref>(ptr,<sp/>fifo_index,<sp/>rx_frame);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mcan__interface_1gada13053691ef2263116896520fde6518" kindref="member">mcan_get_high_priority_message_status</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__high__priority__message__status__struct" kindref="compound">mcan_high_priority_message_status_t</ref><sp/>*status)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hpms<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a7a49f10e517af930448fadf982ca87f0" kindref="member">HPMS</ref>;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>status-&gt;<ref refid="structmcan__high__priority__message__status__struct_1a01313e98a7bcdb5bc1f851e20ff78fa1" kindref="member">buffer_index</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a99a122b94b50a3aa48c7ca827e6e3c2e" kindref="member">MCAN_HPMS_BIDX_GET</ref>(hpms);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>status-&gt;<ref refid="structmcan__high__priority__message__status__struct_1a004eae29204ce2b828025d2d32423997" kindref="member">filter_index</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3ea39c47524c5cd8269dc4d5135ad59d" kindref="member">MCAN_HPMS_FIDX_GET</ref>(hpms);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>status-&gt;<ref refid="structmcan__high__priority__message__status__struct_1a20eba4ee5eb7dbf4f5c904eecf5452bc" kindref="member">filter_list_type</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1afd73c514c1978cbd8be5b13b0db0f704" kindref="member">MCAN_HPMS_FLST_GET</ref>(hpms);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>status-&gt;<ref refid="structmcan__high__priority__message__status__struct_1af25e96662b9c40702e0563eef65dc270" kindref="member">message_storage_indicator</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a5a789b8cf38c53b5786cfff2c5349bed" kindref="member">MCAN_HPMS_MSI_GET</ref>(hpms);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga42b95618ae33789d7ba7259ce687cede" kindref="member">mcan_set_global_filter_config</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__global__filter__config__struct" kindref="compound">mcan_global_filter_config_t</ref><sp/>*filter_config)</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(filter_config<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae137ebc0152cb31dbc6c7d95df5a3b6d" kindref="member">GFC</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ac122955a011d0ef4cd8a58164e6a9bd1" kindref="member">MCAN_GFC_ANFE_SET</ref>(filter_config-&gt;<ref refid="structmcan__global__filter__config__struct_1ab1f22218f9c731b12d917be6ef90dfee" kindref="member">accept_non_matching_ext_frame_option</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a0ed045c501bff2069f79962da4ae2aea" kindref="member">MCAN_GFC_ANFS_SET</ref>(filter_config-&gt;<ref refid="structmcan__global__filter__config__struct_1ad11daaec2c85e481f4217026dbe6a0aa" kindref="member">accept_non_matching_std_frame_option</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a63f6081b59c3e8d6bb378bd5cdbc9043" kindref="member">MCAN_GFC_RRFS_SET</ref>(filter_config-&gt;<ref refid="structmcan__global__filter__config__struct_1a58d303c0277e5fbfe3764f91e2987794" kindref="member">reject_remote_std_frame</ref>)<sp/>|</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a3811114bde4efd48e3f3fffc7d7a16a3" kindref="member">MCAN_GFC_RRFE_SET</ref>(filter_config-&gt;<ref refid="structmcan__global__filter__config__struct_1a5e5543ef45c2ba0bdff968c6048c3324" kindref="member">reject_remote_ext_frame</ref>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gad9322d36f5000f99ccfd471bb782732d" kindref="member">mcan_config_transmitter_delay_compensation</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__tdc__config__t" kindref="compound">mcan_tdc_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(config<sp/>==<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1ae37457307d899cfc45738b1fca11cb18" kindref="member">TDCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a2c299c023f0d6b6268dce206127270ea" kindref="member">MCAN_TDCR_TDCO_SET</ref>(config-&gt;<ref refid="structmcan__tdc__config__t_1a840b20697c1e253a22eb71ed6c23d9b2" kindref="member">ssp_offset</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a8146121b629f36502b57f19670eb18cb" kindref="member">MCAN_TDCR_TDCF_SET</ref>(config-&gt;<ref refid="structmcan__tdc__config__t_1a4299fb266fe825910e48515905373858" kindref="member">filter_window_length</ref>);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal">uint32_t<sp/><ref refid="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" kindref="member">mcan_read_32bit_tsu_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ts_val<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts_val<sp/>=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>[index];</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts_val;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal">uint64_t<sp/><ref refid="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" kindref="member">mcan_read_64bit_tsu_timestamp</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>index)</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>ts_val<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>real_index<sp/>=<sp/>index<sp/>&amp;<sp/>0x7U;<sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>bit3<sp/>according<sp/>to<sp/>IP<sp/>design<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts_val<sp/>=<sp/>((uint64_t)<sp/>(ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>[2U<sp/>*<sp/>real_index<sp/>+<sp/>1])<sp/>&lt;&lt;<sp/>32U);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts_val<sp/>|=<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>[2U<sp/>*<sp/>real_index];</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Workaround:<sp/>dummy<sp/>read<sp/>to<sp/>clear<sp/>the<sp/>corresponding<sp/>bits<sp/>in<sp/>TSS1<sp/>if<sp/>the<sp/>index<sp/>is<sp/>equal<sp/>to/greater<sp/>than<sp/>8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>8U)<sp/>{</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>ptr-&gt;<ref refid="structMCAN__Type_1a91fed3f21b465cf3120417fe1a69a598" kindref="member">TS_SEL</ref>[index];</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ts_val;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga205f6812136a27ccd7b770e4a8f10238" kindref="member">mcan_get_timestamp_from_tx_event</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionmcan__tx__event__fifo__elem__struct" kindref="compound">mcan_tx_event_fifo_elem_t</ref><sp/>*tx_evt,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref><sp/>*timestamp)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(tx_evt<sp/>==<sp/>NULL)<sp/>||<sp/>(timestamp<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(timestamp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref>));</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_tsu_used<sp/>=<sp/><ref refid="group__mcan__interface_1gac8d9f1cfdba479e7576f34c9204a9781" kindref="member">mcan_is_tsu_used</ref>(ptr);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_tsu_used)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1afef280304c6f7a2a0a2574cead3d4bca" kindref="member">is_16bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a315c85d12c72edd65ec700093394c235" kindref="member">ts_16bit</ref><sp/>=<sp/>tx_evt-&gt;<ref refid="unionmcan__tx__event__fifo__elem__struct_1a0159fa2b1073c30d67af7399886f37ac" kindref="member">tx_timestamp</ref>;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_evt-&gt;<ref refid="unionmcan__tx__event__fifo__elem__struct_1a4633ff16689c7c0676c7b05678bfd875" kindref="member">tx_timestamp_captured</ref><sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_64bit_ts<sp/>=<sp/><ref refid="group__mcan__interface_1gaf5545f4ddc57341ba5252afc16adf032" kindref="member">mcan_is_64bit_tsu_timestamp_used</ref>(ptr);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ts_index<sp/>=<sp/>tx_evt-&gt;<ref refid="unionmcan__tx__event__fifo__elem__struct_1a5828ff8d505d7a5a80784d84c7ee2cb1" kindref="member">tx_timestamp_pointer</ref>;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_64bit_ts)<sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1aa9819288b85e5525eb29f2e01245f6cc" kindref="member">is_32bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a6202f50764fe72d496dd8755b2684e5f" kindref="member">ts_32bit</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" kindref="member">mcan_read_32bit_tsu_timestamp</ref>(ptr,<sp/>ts_index);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1abe0a61546e6bfbce16f27566fbff85f9" kindref="member">is_64bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a5bbb717c7995e4decf24b715e85afcd7" kindref="member">ts_64bit</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" kindref="member">mcan_read_64bit_tsu_timestamp</ref>(ptr,<sp/>ts_index);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad4408876cee3d5e932f93fe087b6675a" kindref="member">status_mcan_timestamp_not_exist</ref>;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1gaae71f784ff4cc139ad5822f3ccc4d8d2" kindref="member">mcan_get_timestamp_from_received_message</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__rx__message__struct" kindref="compound">mcan_rx_message_t</ref><sp/>*rx_msg,</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref><sp/>*timestamp)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(rx_msg<sp/>==<sp/>NULL)<sp/>||<sp/>(timestamp<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>memset(timestamp,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__timestamp__value__struct" kindref="compound">mcan_timestamp_value_t</ref>));</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_tsu_used<sp/>=<sp/><ref refid="group__mcan__interface_1gac8d9f1cfdba479e7576f34c9204a9781" kindref="member">mcan_is_tsu_used</ref>(ptr);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_tsu_used)<sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1afef280304c6f7a2a0a2574cead3d4bca" kindref="member">is_16bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a315c85d12c72edd65ec700093394c235" kindref="member">ts_16bit</ref><sp/>=<sp/>rx_msg-&gt;<ref refid="structmcan__rx__message__struct_1aed11c64264461cb01d5ee19a474474bd" kindref="member">rx_timestamp</ref>;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_msg-&gt;<ref refid="structmcan__rx__message__struct_1aafece64f91a4cc06b6e3661b8e8d9284" kindref="member">rx_timestamp_captured</ref><sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_64bit_ts<sp/>=<sp/><ref refid="group__mcan__interface_1gaf5545f4ddc57341ba5252afc16adf032" kindref="member">mcan_is_64bit_tsu_timestamp_used</ref>(ptr);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ts_index<sp/>=<sp/>rx_msg-&gt;<ref refid="structmcan__rx__message__struct_1a5daa74395150cfc960feb8ddc11a6cb9" kindref="member">rx_timestamp_pointer</ref>;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_64bit_ts)<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1aa9819288b85e5525eb29f2e01245f6cc" kindref="member">is_32bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a6202f50764fe72d496dd8755b2684e5f" kindref="member">ts_32bit</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaa7912db5a239c1df59490045feba3319" kindref="member">mcan_read_32bit_tsu_timestamp</ref>(ptr,<sp/>ts_index);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1abe0a61546e6bfbce16f27566fbff85f9" kindref="member">is_64bit</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp-&gt;<ref refid="structmcan__timestamp__value__struct_1a5bbb717c7995e4decf24b715e85afcd7" kindref="member">ts_64bit</ref><sp/>=<sp/><ref refid="group__mcan__interface_1gaeb9af0d86351870f149ac665af7d3e97" kindref="member">mcan_read_64bit_tsu_timestamp</ref>(ptr,<sp/>ts_index);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1gga4b4213b1f9d54da7c7e36bde32fc7c80ad4408876cee3d5e932f93fe087b6675a" kindref="member">status_mcan_timestamp_not_exist</ref>;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga22454dabbe3fec1d195954afa5e48b7e" kindref="member">mcan_parse_protocol_status</ref>(uint32_t<sp/>psr,<sp/><ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status_t</ref><sp/>*protocol_status)</highlight></codeline>
<codeline lineno="1958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(protocol_status<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(protocol_status,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status_t</ref>));</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>psr_val<sp/>=<sp/>psr;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab0fa4d34c9bed08e1b515e337e1c9f56" kindref="member">MCAN_PSR_PXE_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1aa980667023922e90227ed74caf3824d0" kindref="member">protocol_exception_evt_occurred</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a7899aedccf315a2670ca75222bea39a7" kindref="member">MCAN_PSR_RFDF_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a2e78633ba6d12b45145dcc8ab4656ba0" kindref="member">canfd_msg_received</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1afa9733fca22b9d74223f50f481055a64" kindref="member">MCAN_PSR_RBRS_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1ab1e7c90b4ecf6d30961177d2607baaa8" kindref="member">brs_flag_set_in_last_rcv_canfd_msg</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a66dd7e96dff754ef66716eecea53631a" kindref="member">MCAN_PSR_RESI_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a92d253a83d38c423d090c94e3054879d" kindref="member">esi_flag_set_in_last_rcv_canfd_msg</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a849ea04223890d146a8e273ee7dda741" kindref="member">MCAN_PSR_BO_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a2c540ad70e01fd24242b1eb68d26b4f2" kindref="member">in_bus_off_state</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aa5b87698b2d440abfa446d7a14a7c446" kindref="member">MCAN_PSR_EW_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a8a78f6f665d05056c40d3012947e61b1" kindref="member">in_warning_state</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a6c76a134b3ffc1d23a3d89adaf1c9228" kindref="member">MCAN_PSR_EP_GET</ref>(psr_val)<sp/>!=<sp/>0U)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a78b05bdbad890247af0160f8c289902e" kindref="member">in_error_passive_state</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1a21206f9bbd6630fff645123e2dca0592" kindref="member">activity</ref><sp/>=<sp/>(<ref refid="group__mcan__interface_1gae4d89731ae05f2ed5098ac4ac316444b" kindref="member">mcan_activity_state_t</ref>)<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1aaba1803d7dbdbf0c713b2dfc26c54664" kindref="member">MCAN_PSR_ACT_GET</ref>(psr_val);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1aa7de7b8c557b554019538a92662a7573" kindref="member">tdc_val</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a2c08d4b6119aa5188fd68da952f27238" kindref="member">MCAN_PSR_TDCV_GET</ref>(psr_val);</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(protocol_status-&gt;<ref refid="structmcan__protocol__status_1ab1e7c90b4ecf6d30961177d2607baaa8" kindref="member">brs_flag_set_in_last_rcv_canfd_msg</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1ab5b29cd3148e7f51b46e2295502ccfa3" kindref="member">last_error_code</ref><sp/>=<sp/>(<ref refid="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" kindref="member">mcan_last_err_code_t</ref>)<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab188fce09c14a1d6d79e6dd8667a359c" kindref="member">MCAN_PSR_DLEC_GET</ref>(psr_val);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protocol_status-&gt;<ref refid="structmcan__protocol__status_1ab5b29cd3148e7f51b46e2295502ccfa3" kindref="member">last_error_code</ref><sp/>=<sp/>(<ref refid="group__mcan__interface_1ga9232568012f41109b5bd87d55b8ce333" kindref="member">mcan_last_err_code_t</ref>)<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a97c8e14d6029619956004a6a5f3e16a3" kindref="member">MCAN_PSR_LEC_GET</ref>(psr_val);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__mcan__interface_1ga66b35d60c257a5170fa3e50aa5105165" kindref="member">mcan_get_protocol_status</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/><ref refid="structmcan__protocol__status" kindref="compound">mcan_protocol_status_t</ref><sp/>*protocol_status)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>status<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga6552192bf6d102d80777fc98a59811d9" kindref="member">HPM_BREAK_IF</ref>((ptr<sp/>==<sp/>NULL)<sp/>||<sp/>(protocol_status<sp/>==<sp/>NULL));</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__mcan__interface_1ga22454dabbe3fec1d195954afa5e48b7e" kindref="member">mcan_parse_protocol_status</ref>(ptr-&gt;<ref refid="structMCAN__Type_1a18159092e8ab4b6828109a55540884f6" kindref="member">PSR</ref>,<sp/>protocol_status);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_mcan_drv.c"/>
  </compounddef>
</doxygen>
