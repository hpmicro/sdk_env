<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__uart__drv_8c" kind="file" language="C++">
    <compoundname>hpm_uart_drv.c</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes refid="hpm__uart__drv_8h" local="yes">hpm_uart_drv.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hpm_uart_drv.h</label>
        <link refid="hpm__uart__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_uart_drv.c</label>
        <link refid="hpm__uart__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="9">
        <label>hpm_uart_regs.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" prot="public" static="no">
        <name>HPM_UART_DRV_RETRY_COUNT</name>
        <initializer>(5000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="11" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1a8648fa80b581c9a4e991572ac9febeec" prot="public" static="no">
        <name>HPM_UART_MINIMUM_BAUDRATE</name>
        <initializer>(200U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="12" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1a2e2762229e66f49bff71fc71b953187f" prot="public" static="no">
        <name>HPM_UART_BAUDRATE_TOLERANCE</name>
        <initializer>(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="15" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1ab7a8118eb855228ab639ce129ca4d269" prot="public" static="no">
        <name>HPM_UART_OSC_MAX</name>
        <initializer>(32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="18" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1a160dcee51cc023fd669ce7d892f9ead6" prot="public" static="no">
        <name>HPM_UART_OSC_MIN</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="19" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1ac83166efdd5547ac9f75dbc00739d26c" prot="public" static="no">
        <name>HPM_UART_BAUDRATE_DIV_MAX</name>
        <initializer>(0xFFFFU)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="20" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1aa277d57228b6bab103acaa058f0859eb" prot="public" static="no">
        <name>HPM_UART_BAUDRATE_DIV_MIN</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="21" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__uart__drv_8c_1a9593329d6a7881cc5df7ce5ae82db221" prot="public" static="no">
        <name>UART_SOC_OVERSAMPLE_MAX</name>
        <initializer><ref refid="hpm__uart__drv_8c_1ab7a8118eb855228ab639ce129ca4d269" kindref="member">HPM_UART_OSC_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="24" column="9" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__uart__interface_1gaa24fd5b844e63e6481f9dc564de9c2e7" kind="function"><name>uart_default_config</name></member>
      <memberdef kind="function" id="hpm__uart__drv_8c_1ab76ae273c72a7a1c2c3bc75bda23321a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool uart_calculate_baudrate</definition>
        <argsstring>(uint32_t freq, uint32_t baudrate, uint16_t *div_out, uint8_t *osc_out)</argsstring>
        <name>uart_calculate_baudrate</name>
        <param>
          <type>uint32_t</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>div_out</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>osc_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_uart_drv.c" line="59" column="13" bodyfile="drivers/src/hpm_uart_drv.c" bodystart="59" bodyend="94"/>
      </memberdef>
      <member refid="group__uart__interface_1ga1aea4fca34f2a53105c3326dda7aafc2" kind="function"><name>uart_init</name></member>
      <member refid="group__uart__interface_1ga2c8de76bae1caada7c302a05bb351083" kind="function"><name>uart_set_baudrate</name></member>
      <member refid="group__uart__interface_1ga768c24bffe679cf9a18c4b7a14deff3b" kind="function"><name>uart_send_byte</name></member>
      <member refid="group__uart__interface_1ga093b15f7a263041a2d7144f35b5ebdac" kind="function"><name>uart_flush</name></member>
      <member refid="group__uart__interface_1gac68249468a133a73a3c8889e6f47ca45" kind="function"><name>uart_receive_byte</name></member>
      <member refid="group__uart__interface_1ga2317b3b585782587c359f7fccfb6077d" kind="function"><name>uart_try_receive_byte</name></member>
      <member refid="group__uart__interface_1gad319f13e3e38f2852fa94df527c16d87" kind="function"><name>uart_set_signal_level</name></member>
      <member refid="group__uart__interface_1ga1c64e085c9c2d10f4fe8f9ca6e34fa38" kind="function"><name>uart_receive_data</name></member>
      <member refid="group__uart__interface_1ga44ab912005a3f999aa77c67eaa649ffd" kind="function"><name>uart_send_data</name></member>
      <member refid="group__uart__interface_1ga96692c0bbcf9d66476f5de2d2bced310" kind="function"><name>uart_init_rxline_idle_detection</name></member>
      <member refid="group__uart__interface_1ga323776742dda5bf3e3b43fc9304644a7" kind="function"><name>uart_init_txline_idle_detection</name></member>
      <member refid="group__uart__interface_1ga0928aa0e4f2f2a77d3f4c25db59fd0c5" kind="function"><name>uart_config_transfer_trig_mode</name></member>
      <member refid="group__uart__interface_1gad0a47c54b7355be64a015c9190f144ce" kind="function"><name>uart_config_fifo_ctrl</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__uart__drv_8h" kindref="compound">hpm_uart_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_DRV_RETRY_COUNT<sp/>(5000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_MINIMUM_BAUDRATE<sp/>(200U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_UART_BAUDRATE_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_BAUDRATE_TOLERANCE<sp/>(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_OSC_MAX<sp/>(32U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_OSC_MIN<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_BAUDRATE_DIV_MAX<sp/>(0xFFFFU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_UART_BAUDRATE_DIV_MIN<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UART_SOC_OVERSAMPLE_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UART_SOC_OVERSAMPLE_MAX<sp/>HPM_UART_OSC_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gaa24fd5b844e63e6481f9dc564de9c2e7" kindref="member">uart_default_config</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structhpm__uart__config" kindref="compound">uart_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>ptr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1ae5bf57289d9fcfe79881e721eeb7167d" kindref="member">baudrate</ref><sp/>=<sp/>115200;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a87ad5abc04ebba0cc9b2c74bb49203d0" kindref="member">word_length</ref><sp/>=<sp/><ref refid="group__uart__interface_1gga8e10134c44d58d5aaac6766dc3839470a76b3c9287233f889f62a2a473a10e681" kindref="member">word_length_8_bits</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a2486589a776b1fc44f084a6578177e60" kindref="member">parity</ref><sp/>=<sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdba04358fc59b50f56f91782b3fc27d3d59" kindref="member">parity_none</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a117ae5792d021773efa9dacd5a4951b9" kindref="member">num_of_stop_bits</ref><sp/>=<sp/><ref refid="group__uart__interface_1gga9e23a53453170c361033984d8b1a35d5aea231f5ce8b7fea0c8281f4d62bde700" kindref="member">stop_bits_1</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a583a81812c96b387c701feaca00fd2e9" kindref="member">fifo_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a24d879cc85dae9bfe93ff718e506867d" kindref="member">rx_fifo_level</ref><sp/>=<sp/><ref refid="group__uart__interface_1ggab9222e6dc6113fae53f22b2a9ff9d2c7a6f1cffe4ea6c19c9ae205d7be127a197" kindref="member">uart_rx_fifo_trg_not_empty</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a85c773f34a7923dd0d58977dc32907bc" kindref="member">tx_fifo_level</ref><sp/>=<sp/><ref refid="group__uart__interface_1ggab9222e6dc6113fae53f22b2a9ff9d2c7ac565e966f4fc5e46f4e5ccaf69048a03" kindref="member">uart_tx_fifo_trg_not_full</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1afd4a3764c0b9fe86eb51f5cb30335e0d" kindref="member">dma_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1adacd259970bdd4049e8e29bef8ef274a" kindref="member">modem_config</ref>.<ref refid="structuart__modem__config_1aa7f6143363adaabb7d8855fd9b3b4c45" kindref="member">auto_flow_ctrl_en</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1adacd259970bdd4049e8e29bef8ef274a" kindref="member">modem_config</ref>.<ref refid="structuart__modem__config_1a0bbb2a9877958680df52f699be2dea49" kindref="member">loop_back_en</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1adacd259970bdd4049e8e29bef8ef274a" kindref="member">modem_config</ref>.<ref refid="structuart__modem__config_1ad0a89ab19250a7b6eb7d0693e4d5f827" kindref="member">set_rts_high</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_RX_IDLE_DETECT)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_RX_IDLE_DETECT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1aa27d55715772dbf892ba98f0e7ae67db" kindref="member">rxidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1ae5ea10e82e39db0ac370cd541d4f630e" kindref="member">detect_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1aa27d55715772dbf892ba98f0e7ae67db" kindref="member">rxidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1a482090ac009e8d27aa35fe3e16585598" kindref="member">detect_irq_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1aa27d55715772dbf892ba98f0e7ae67db" kindref="member">rxidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1ac10be4ac05402fc825433b0777b3683e" kindref="member">idle_cond</ref><sp/>=<sp/><ref refid="group__uart__interface_1gga731be137b0fc694d12e1938d047caa09aee7f16d64a1502d6de94ae173a004c64" kindref="member">uart_rxline_idle_cond_rxline_logic_one</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1aa27d55715772dbf892ba98f0e7ae67db" kindref="member">rxidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1a7d1d82e05de29b063a12cc724cf56fa0" kindref="member">threshold</ref><sp/>=<sp/>10;<sp/></highlight><highlight class="comment">/*<sp/>10-bit<sp/>for<sp/>typical<sp/>UART<sp/>configuration<sp/>(8-N-1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>have<sp/>9bit_mode<sp/>function,<sp/>it&apos;s<sp/>has<sp/>be<sp/>tx_idle<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_9BIT_MODE)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_9BIT_MODE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1ace2e99cfe8957983b1e903136f250bb2" kindref="member">txidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1ae5ea10e82e39db0ac370cd541d4f630e" kindref="member">detect_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1ace2e99cfe8957983b1e903136f250bb2" kindref="member">txidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1a482090ac009e8d27aa35fe3e16585598" kindref="member">detect_irq_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1ace2e99cfe8957983b1e903136f250bb2" kindref="member">txidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1ac10be4ac05402fc825433b0777b3683e" kindref="member">idle_cond</ref><sp/>=<sp/><ref refid="group__uart__interface_1gga731be137b0fc694d12e1938d047caa09aee7f16d64a1502d6de94ae173a004c64" kindref="member">uart_rxline_idle_cond_rxline_logic_one</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1ace2e99cfe8957983b1e903136f250bb2" kindref="member">txidle_config</ref>.<ref refid="structhpm__uart__rxline__idle__detect__config_1a7d1d82e05de29b063a12cc724cf56fa0" kindref="member">threshold</ref><sp/>=<sp/>10;<sp/></highlight><highlight class="comment">/*<sp/>10-bit<sp/>for<sp/>typical<sp/>UART<sp/>configuration<sp/>(8-N-1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_RX_EN)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_RX_EN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structhpm__uart__config_1a55bb6bc7692d9e0ac8c8a35a32614007" kindref="member">rx_enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__uart__drv_8c_1ab76ae273c72a7a1c2c3bc75bda23321a" kindref="member">uart_calculate_baudrate</ref>(uint32_t<sp/>freq,<sp/>uint32_t<sp/>baudrate,<sp/>uint16_t<sp/>*div_out,<sp/>uint8_t<sp/>*osc_out)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>div,<sp/>osc,<sp/>delta;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((div_out<sp/>==<sp/>NULL)<sp/>||<sp/>(!freq)<sp/>||<sp/>(!baudrate)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(baudrate<sp/>&lt;<sp/><ref refid="hpm__uart__drv_8c_1a8648fa80b581c9a4e991572ac9febeec" kindref="member">HPM_UART_MINIMUM_BAUDRATE</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(freq<sp/>/<sp/><ref refid="hpm__uart__drv_8c_1aa277d57228b6bab103acaa058f0859eb" kindref="member">HPM_UART_BAUDRATE_DIV_MIN</ref><sp/>&lt;<sp/>baudrate<sp/>*<sp/><ref refid="hpm__uart__drv_8c_1a160dcee51cc023fd669ce7d892f9ead6" kindref="member">HPM_UART_OSC_MIN</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(freq<sp/>/<sp/><ref refid="hpm__uart__drv_8c_1ac83166efdd5547ac9f75dbc00739d26c" kindref="member">HPM_UART_BAUDRATE_DIV_MAX</ref><sp/>&gt;<sp/>(baudrate<sp/>*<sp/><ref refid="hpm__uart__drv_8c_1ab7a8118eb855228ab639ce129ca4d269" kindref="member">HPM_UART_OSC_MAX</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>(float)<sp/>freq<sp/>/<sp/>baudrate;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(osc<sp/>=<sp/><ref refid="hpm__uart__drv_8c_1a160dcee51cc023fd669ce7d892f9ead6" kindref="member">HPM_UART_OSC_MIN</ref>;<sp/>osc<sp/>&lt;=<sp/><ref refid="hpm__uart__drv_8c_1a9593329d6a7881cc5df7ce5ae82db221" kindref="member">UART_SOC_OVERSAMPLE_MAX</ref>;<sp/>osc<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>osc<sp/>range:<sp/>HPM_UART_OSC_MIN<sp/>-<sp/>UART_SOC_OVERSAMPLE_MAX,<sp/>even<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>(uint16_t)(tmp<sp/>/<sp/>osc);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div<sp/>&lt;<sp/><ref refid="hpm__uart__drv_8c_1aa277d57228b6bab103acaa058f0859eb" kindref="member">HPM_UART_BAUDRATE_DIV_MIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>div<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div<sp/>*<sp/>osc<sp/>&gt;<sp/>tmp)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(uint16_t)(div<sp/>*<sp/>osc<sp/>-<sp/>tmp);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div<sp/>*<sp/>osc<sp/>&lt;<sp/>tmp)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(uint16_t)(tmp<sp/>-<sp/>div<sp/>*<sp/>osc);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&amp;&amp;<sp/>((delta<sp/>*<sp/>100<sp/>/<sp/>tmp)<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1a2e2762229e66f49bff71fc71b953187f" kindref="member">HPM_UART_BAUDRATE_TOLERANCE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*div_out<sp/>=<sp/>div;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*osc_out<sp/>=<sp/>(osc<sp/>==<sp/><ref refid="hpm__uart__drv_8c_1ab7a8118eb855228ab639ce129ca4d269" kindref="member">HPM_UART_OSC_MAX</ref>)<sp/>?<sp/>0<sp/>:<sp/>osc;<sp/></highlight><highlight class="comment">/*<sp/>osc<sp/>==<sp/>0<sp/>in<sp/>bitfield,<sp/>oversample<sp/>rate<sp/>is<sp/>32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga1aea4fca34f2a53105c3326dda7aafc2" kindref="member">uart_init</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structhpm__uart__config" kindref="compound">uart_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tmp;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>osc;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>div;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>all<sp/>interrupts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1afb6192a7342ad146b7b6e20657e8558d" kindref="member">IER</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DLAB<sp/>to<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a03c1f1c191e1b95f761eb30fe6b412e5" kindref="member">LCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ad573ea24389bff13fd08fe4117570820" kindref="member">UART_LCR_DLAB_MASK</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hpm__uart__drv_8c_1ab76ae273c72a7a1c2c3bc75bda23321a" kindref="member">uart_calculate_baudrate</ref>(config-&gt;<ref refid="structhpm__uart__config_1aa8c83f1a49d33294fd054ebea2902f70" kindref="member">src_freq_in_hz</ref>,<sp/>config-&gt;<ref refid="structhpm__uart__config_1ae5bf57289d9fcfe79881e721eeb7167d" kindref="member">baudrate</ref>,<sp/>&amp;div,<sp/>&amp;osc))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1ggabd4fc2111b94dec34e056f8ef38c38e5adffac1505396eaee4888bd9ae472a6c7" kindref="member">status_uart_no_suitable_baudrate_parameter_found</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a947544870070a5119d2cf04195deb59e" kindref="member">OSCR</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUART__Type_1a947544870070a5119d2cf04195deb59e" kindref="member">OSCR</ref><sp/>&amp;<sp/>~UART_OSCR_OSC_MASK)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae28923e7cfa9797e7c20ee24861aceea" kindref="member">UART_OSCR_OSC_SET</ref>(osc);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1ac0040d4240f7e88d48e05f8ff2c572fa" kindref="member">DLL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a3f36f3229799fd7a06bb98a160d0d6d4" kindref="member">UART_DLL_DLL_SET</ref>(div<sp/>&gt;&gt;<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1ad4da956414a893801819c5a5ec0af470" kindref="member">DLM</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a32683d3a2782251d25723c5c146db548" kindref="member">UART_DLM_DLM_SET</ref>(div<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DLAB<sp/>bit<sp/>needs<sp/>to<sp/>be<sp/>cleared<sp/>once<sp/>baudrate<sp/>is<sp/>configured<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ptr-&gt;<ref refid="structUART__Type_1a03c1f1c191e1b95f761eb30fe6b412e5" kindref="member">LCR</ref><sp/>&amp;<sp/>(~UART_LCR_DLAB_MASK);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af0a995487d30a4926bca0942c0c24fd7" kindref="member">UART_LCR_SPS_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ade25cdf15a3ed1bcaabd5f9735ae6bf4" kindref="member">UART_LCR_EPS_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4f627ff2181915e00e24de42fad2bc9e" kindref="member">UART_LCR_PEN_MASK</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structhpm__uart__config_1a2486589a776b1fc44f084a6578177e60" kindref="member">parity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdba04358fc59b50f56f91782b3fc27d3d59" kindref="member">parity_none</ref>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdba78884e92b60a3165809a7154c43c7553" kindref="member">parity_odd</ref>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4f627ff2181915e00e24de42fad2bc9e" kindref="member">UART_LCR_PEN_MASK</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdba5cb4b75f894a3c676ad9e7b0c45ed8ab" kindref="member">parity_even</ref>:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4f627ff2181915e00e24de42fad2bc9e" kindref="member">UART_LCR_PEN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ade25cdf15a3ed1bcaabd5f9735ae6bf4" kindref="member">UART_LCR_EPS_MASK</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdba1b355283ef543f5e4c2075ca903fd343" kindref="member">parity_always_1</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4f627ff2181915e00e24de42fad2bc9e" kindref="member">UART_LCR_PEN_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af0a995487d30a4926bca0942c0c24fd7" kindref="member">UART_LCR_SPS_MASK</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga62d49d97117baa12d4ccc139f067ffdbab02f20d67445cf39cfa6be832fbc76bd" kindref="member">parity_always_0</ref>:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ade25cdf15a3ed1bcaabd5f9735ae6bf4" kindref="member">UART_LCR_EPS_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4f627ff2181915e00e24de42fad2bc9e" kindref="member">UART_LCR_PEN_MASK</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af0a995487d30a4926bca0942c0c24fd7" kindref="member">UART_LCR_SPS_MASK</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a6989782c3ebd565062550a12224ff056" kindref="member">UART_LCR_STB_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ab8da3088c8e4746648ce93d797e2a97e" kindref="member">UART_LCR_WLS_MASK</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structhpm__uart__config_1a117ae5792d021773efa9dacd5a4951b9" kindref="member">num_of_stop_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga9e23a53453170c361033984d8b1a35d5aea231f5ce8b7fea0c8281f4d62bde700" kindref="member">stop_bits_1</ref>:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga9e23a53453170c361033984d8b1a35d5a8e99e321c22e74f16dc2b8d015591cfc" kindref="member">stop_bits_1_5</ref>:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a6989782c3ebd565062550a12224ff056" kindref="member">UART_LCR_STB_MASK</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gga9e23a53453170c361033984d8b1a35d5acb65dd0546279d42bcecaaefeb5119fe" kindref="member">stop_bits_2</ref>:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structhpm__uart__config_1a87ad5abc04ebba0cc9b2c74bb49203d0" kindref="member">word_length</ref><sp/>&lt;<sp/><ref refid="group__uart__interface_1gga8e10134c44d58d5aaac6766dc3839470a6723f5f85ba7deb5bb26c4ce7a12bc26" kindref="member">word_length_6_bits</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a6989782c3ebd565062550a12224ff056" kindref="member">UART_LCR_STB_MASK</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a03c1f1c191e1b95f761eb30fe6b412e5" kindref="member">LCR</ref><sp/>=<sp/>tmp<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4a77156c280a619d49abd68927346e4f" kindref="member">UART_LCR_WLS_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a87ad5abc04ebba0cc9b2c74bb49203d0" kindref="member">word_length</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_FINE_FIFO_THRLD)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_FINE_FIFO_THRLD<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>TX<sp/>and<sp/>RX<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1acaad40dbd7bd724ce1dc5ad36553c8c3" kindref="member">FCRR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1acc3e3f606e21116506e24e098cc3b6b4" kindref="member">UART_FCRR_TFIFORST_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a1eea83f78c3ec8edba4cd6de1f88b180" kindref="member">UART_FCRR_RFIFORST_MASK</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>FIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1acaad40dbd7bd724ce1dc5ad36553c8c3" kindref="member">FCRR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aa414b08f03e8be40034d98970395a598" kindref="member">UART_FCRR_FIFOT4EN_MASK</ref></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a0b5e5ea9b8f86ad5d8afd5b10caf4c4c" kindref="member">UART_FCRR_FIFOE_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a583a81812c96b387c701feaca00fd2e9" kindref="member">fifo_enable</ref>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aa45570720db8e1bd2ed1a0f98e7d03a9" kindref="member">UART_FCRR_TFIFOT4_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a85c773f34a7923dd0d58977dc32907bc" kindref="member">tx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a3db6b87de6253bfba7b234977c1a7c64" kindref="member">UART_FCRR_RFIFOT4_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a24d879cc85dae9bfe93ff718e506867d" kindref="member">rx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_DISABLE_DMA_TIMEOUT)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_DISABLE_DMA_TIMEOUT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>UART_FCRR_TMOUT_RXDMA_DIS_MASK<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a995f227496d82fe65040a84baeafac48" kindref="member">UART_FCRR_DMAE_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1afd4a3764c0b9fe86eb51f5cb30335e0d" kindref="member">dma_enable</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>TX<sp/>and<sp/>RX<sp/>fifo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a297ffce9ce3d74a5a9359d709d238cd1" kindref="member">FCR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aa2a36b3204aa54ff0be11ea2f89486a2" kindref="member">UART_FCR_TFIFORST_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a9985231400dca192ecfadaa85c831fd0" kindref="member">UART_FCR_RFIFORST_MASK</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>FIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aee42c23116f3513950839eab9826aa92" kindref="member">UART_FCR_FIFOE_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a583a81812c96b387c701feaca00fd2e9" kindref="member">fifo_enable</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a9f03327e0e0ea32b7653379080c50a53" kindref="member">UART_FCR_TFIFOT_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a85c773f34a7923dd0d58977dc32907bc" kindref="member">tx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a26d10027d7a237661921b206f1e983c8" kindref="member">UART_FCR_RFIFOT_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1a24d879cc85dae9bfe93ff718e506867d" kindref="member">rx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ab9ae4bae5131c568a65b01859ec363c2" kindref="member">UART_FCR_DMAE_SET</ref>(config-&gt;<ref refid="structhpm__uart__config_1afd4a3764c0b9fe86eb51f5cb30335e0d" kindref="member">dma_enable</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a297ffce9ce3d74a5a9359d709d238cd1" kindref="member">FCR</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>FCR<sp/>register<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1aceeceed9ab5c1802b364016cb033de3c" kindref="member">GPR</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga9d993e929f5354b792af22346c4f849c" kindref="member">uart_modem_config</ref>(ptr,<sp/>&amp;config-&gt;<ref refid="structhpm__uart__config_1adacd259970bdd4049e8e29bef8ef274a" kindref="member">modem_config</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_RX_IDLE_DETECT)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_RX_IDLE_DETECT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga96692c0bbcf9d66476f5de2d2bced310" kindref="member">uart_init_rxline_idle_detection</ref>(ptr,<sp/>config-&gt;<ref refid="structhpm__uart__config_1aa27d55715772dbf892ba98f0e7ae67db" kindref="member">rxidle_config</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_RX_EN)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_RX_EN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structhpm__uart__config_1a55bb6bc7692d9e0ac8c8a35a32614007" kindref="member">rx_enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0d7e28ccbb9d7b4f4585a8229d054328" kindref="member">IDLE_CFG</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae4eea8555d02ffb1820ddf426aaa61d0" kindref="member">UART_IDLE_CFG_RXEN_MASK</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga2c8de76bae1caada7c302a05bb351083" kindref="member">uart_set_baudrate</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>baudrate,<sp/>uint32_t<sp/>src_clock_hz)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>osc;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>div;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>DLAB<sp/>to<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a03c1f1c191e1b95f761eb30fe6b412e5" kindref="member">LCR</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ad573ea24389bff13fd08fe4117570820" kindref="member">UART_LCR_DLAB_MASK</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="hpm__uart__drv_8c_1ab76ae273c72a7a1c2c3bc75bda23321a" kindref="member">uart_calculate_baudrate</ref>(src_clock_hz,<sp/>baudrate,<sp/>&amp;div,<sp/>&amp;osc))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1ggabd4fc2111b94dec34e056f8ef38c38e5adffac1505396eaee4888bd9ae472a6c7" kindref="member">status_uart_no_suitable_baudrate_parameter_found</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a947544870070a5119d2cf04195deb59e" kindref="member">OSCR</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUART__Type_1a947544870070a5119d2cf04195deb59e" kindref="member">OSCR</ref><sp/>&amp;<sp/>~UART_OSCR_OSC_MASK)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae28923e7cfa9797e7c20ee24861aceea" kindref="member">UART_OSCR_OSC_SET</ref>(osc);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1ac0040d4240f7e88d48e05f8ff2c572fa" kindref="member">DLL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a3f36f3229799fd7a06bb98a160d0d6d4" kindref="member">UART_DLL_DLL_SET</ref>(div<sp/>&gt;&gt;<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1ad4da956414a893801819c5a5ec0af470" kindref="member">DLM</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a32683d3a2782251d25723c5c146db548" kindref="member">UART_DLM_DLM_SET</ref>(div<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DLAB<sp/>bit<sp/>needs<sp/>to<sp/>be<sp/>cleared<sp/>once<sp/>baudrate<sp/>is<sp/>configured<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a03c1f1c191e1b95f761eb30fe6b412e5" kindref="member">LCR</ref><sp/>&amp;=<sp/>~UART_LCR_DLAB_MASK;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga768c24bffe679cf9a18c4b7a14deff3b" kindref="member">uart_send_byte</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>c)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>retry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structUART__Type_1a7744658d35ff5cb60fd9d452180f595c" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae7c8f038aa6af5ef3f8318fbe855357c" kindref="member">UART_LSR_THRE_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry++;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1aaf0136840a24456ad964c535aab00d28" kindref="member">THR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af42f37c9592f59b5c7d313f2d5aa1c18" kindref="member">UART_THR_THR_SET</ref>(c);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga093b15f7a263041a2d7144f35b5ebdac" kindref="member">uart_flush</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>retry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structUART__Type_1a7744658d35ff5cb60fd9d452180f595c" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ac9db32f7071cd8f9d009b67f37e321c6" kindref="member">UART_LSR_TEMT_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1gac68249468a133a73a3c8889e6f47ca45" kindref="member">uart_receive_byte</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>retry<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structUART__Type_1a7744658d35ff5cb60fd9d452180f595c" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a151737e83279175ee66de65cd655bd61" kindref="member">UART_LSR_DR_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry++;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retry<sp/>&gt;<sp/><ref refid="hpm__uart__drv_8c_1aec4c101c6e37af4862946296fb325c63" kindref="member">HPM_UART_DRV_RETRY_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>ptr-&gt;<ref refid="structUART__Type_1a5f4e5c9268ce70e111d6979d3193978c" kindref="member">RBR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aeab19e7b070e68a5a9e1b61a9d5c458b" kindref="member">UART_RBR_RBR_MASK</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga2317b3b585782587c359f7fccfb6077d" kindref="member">uart_try_receive_byte</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structUART__Type_1a7744658d35ff5cb60fd9d452180f595c" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a151737e83279175ee66de65cd655bd61" kindref="member">UART_LSR_DR_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>ptr-&gt;<ref refid="structUART__Type_1a5f4e5c9268ce70e111d6979d3193978c" kindref="member">RBR</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aeab19e7b070e68a5a9e1b61a9d5c458b" kindref="member">UART_RBR_RBR_MASK</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gad319f13e3e38f2852fa94df527c16d87" kindref="member">uart_set_signal_level</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="group__uart__interface_1gaabeb807de70635ecab1bc70dd6db895f" kindref="member">uart_signal_t</ref><sp/>signal,<sp/><ref refid="group__uart__interface_1ga9e7c512e46b16def679a98e7832818d9" kindref="member">uart_signal_level_t</ref><sp/>level)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="group__uart__interface_1gga8a6ae7a8f0fd961a78c29b21b0cba825a9a4e38f9e185706b833f04b1fe917c6d" kindref="member">uart_signal_level_low</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0dd1cf0979cfa189ca732accea97535c" kindref="member">MCR</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUART__Type_1a0dd1cf0979cfa189ca732accea97535c" kindref="member">MCR</ref><sp/>|<sp/>signal);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0dd1cf0979cfa189ca732accea97535c" kindref="member">MCR</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structUART__Type_1a0dd1cf0979cfa189ca732accea97535c" kindref="member">MCR</ref><sp/>&amp;<sp/>~signal);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga1c64e085c9c2d10f4fe8f9ca6e34fa38" kindref="member">uart_receive_data</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*source,<sp/>uint32_t<sp/>size_in_byte)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_in_byte;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref><sp/>!=<sp/><ref refid="group__uart__interface_1gac68249468a133a73a3c8889e6f47ca45" kindref="member">uart_receive_byte</ref>(ptr,<sp/>source<sp/>+<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga44ab912005a3f999aa77c67eaa649ffd" kindref="member">uart_send_data</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*source,<sp/>uint32_t<sp/>size_in_byte)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_in_byte;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref><sp/>!=<sp/><ref refid="group__uart__interface_1ga768c24bffe679cf9a18c4b7a14deff3b" kindref="member">uart_send_byte</ref>(ptr,<sp/>*(source<sp/>+<sp/>i)))<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_RX_IDLE_DETECT)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_RX_IDLE_DETECT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga96692c0bbcf9d66476f5de2d2bced310" kindref="member">uart_init_rxline_idle_detection</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structhpm__uart__rxline__idle__detect__config" kindref="compound">uart_rxline_idle_config_t</ref><sp/>rxidle_config)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0d7e28ccbb9d7b4f4585a8229d054328" kindref="member">IDLE_CFG</ref><sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a69d04e299334d9d04ef9e56d0e9257ad" kindref="member">UART_IDLE_CFG_RX_IDLE_EN_MASK</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a64fb957b80494d71272c4499c55a1583" kindref="member">UART_IDLE_CFG_RX_IDLE_THR_MASK</ref></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af00886a21d6714142ac00e6a91e69d23" kindref="member">UART_IDLE_CFG_RX_IDLE_COND_MASK</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0d7e28ccbb9d7b4f4585a8229d054328" kindref="member">IDLE_CFG</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a8456839735c0b60d6e443fb4a1608c95" kindref="member">UART_IDLE_CFG_RX_IDLE_EN_SET</ref>(rxidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1ae5ea10e82e39db0ac370cd541d4f630e" kindref="member">detect_enable</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aad8d649e04444f7c190ef11477c8a63c" kindref="member">UART_IDLE_CFG_RX_IDLE_THR_SET</ref>(rxidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1a7d1d82e05de29b063a12cc724cf56fa0" kindref="member">threshold</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a60500e125ac853634479cb5b44f45c74" kindref="member">UART_IDLE_CFG_RX_IDLE_COND_SET</ref>(rxidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1ac10be4ac05402fc825433b0777b3683e" kindref="member">idle_cond</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rxidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1a482090ac009e8d27aa35fe3e16585598" kindref="member">detect_irq_enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga9b33c14075109dff7e32eb2dc17b9cbf" kindref="member">uart_enable_irq</ref>(ptr,<sp/><ref refid="group__uart__interface_1ggafdf46ac9b8dcf832ba5df342c1b23c9baf2a0ccc5dc2d9677cb02232e07fa6517" kindref="member">uart_intr_rx_line_idle</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga3ff6515064223966e8a404afc86fd424" kindref="member">uart_disable_irq</ref>(ptr,<sp/><ref refid="group__uart__interface_1ggafdf46ac9b8dcf832ba5df342c1b23c9baf2a0ccc5dc2d9677cb02232e07fa6517" kindref="member">uart_intr_rx_line_idle</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>if<sp/>have<sp/>9bit_mode<sp/>function,<sp/>it&apos;s<sp/>has<sp/>be<sp/>tx_idle<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_9BIT_MODE)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_9BIT_MODE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__uart__interface_1ga323776742dda5bf3e3b43fc9304644a7" kindref="member">uart_init_txline_idle_detection</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structhpm__uart__rxline__idle__detect__config" kindref="compound">uart_rxline_idle_config_t</ref><sp/>txidle_config)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0d7e28ccbb9d7b4f4585a8229d054328" kindref="member">IDLE_CFG</ref><sp/>&amp;=<sp/>~(<ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a2fb53c6b245aae6379ea0b5834423431" kindref="member">UART_IDLE_CFG_TX_IDLE_EN_MASK</ref></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a0ee4160116789d0d04ca563c28fb25eb" kindref="member">UART_IDLE_CFG_TX_IDLE_THR_MASK</ref></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1af32b759b1e7bcca36543b12acc2418f8" kindref="member">UART_IDLE_CFG_TX_IDLE_COND_MASK</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a0d7e28ccbb9d7b4f4585a8229d054328" kindref="member">IDLE_CFG</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae8ac8d6d1cdfb4f3b262d5a8f3163b61" kindref="member">UART_IDLE_CFG_TX_IDLE_EN_SET</ref>(txidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1ae5ea10e82e39db0ac370cd541d4f630e" kindref="member">detect_enable</ref>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ad2c3587a1acb5bd8681859ef2679b127" kindref="member">UART_IDLE_CFG_TX_IDLE_THR_SET</ref>(txidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1a7d1d82e05de29b063a12cc724cf56fa0" kindref="member">threshold</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ab3cb87291b75db10f7cba4b20c3d0a6e" kindref="member">UART_IDLE_CFG_TX_IDLE_COND_SET</ref>(txidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1ac10be4ac05402fc825433b0777b3683e" kindref="member">idle_cond</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(txidle_config.<ref refid="structhpm__uart__rxline__idle__detect__config_1a482090ac009e8d27aa35fe3e16585598" kindref="member">detect_irq_enable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga9b33c14075109dff7e32eb2dc17b9cbf" kindref="member">uart_enable_irq</ref>(ptr,<sp/><ref refid="group__uart__interface_1ggafdf46ac9b8dcf832ba5df342c1b23c9bae6e53c9c7826369e8e676b951c9cefe4" kindref="member">uart_intr_tx_line_idle</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__uart__interface_1ga3ff6515064223966e8a404afc86fd424" kindref="member">uart_disable_irq</ref>(ptr,<sp/><ref refid="group__uart__interface_1ggafdf46ac9b8dcf832ba5df342c1b23c9bae6e53c9c7826369e8e676b951c9cefe4" kindref="member">uart_intr_tx_line_idle</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_TRIG_MODE)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_TRIG_MODE<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1ga0928aa0e4f2f2a77d3f4c25db59fd0c5" kindref="member">uart_config_transfer_trig_mode</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structuart__trig__config__t" kindref="compound">uart_trig_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1aec0d0055fcbb94612fdf9c0b3d2ca094" kindref="member">MOTO_CFG</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1adfec32730dbbe740749b4bc5d6321fc5" kindref="member">UART_MOTO_CFG_TXSTP_BITS_SET</ref>(config-&gt;<ref refid="structuart__trig__config__t_1ab4fffff2d52343d8284278ef927c33e7" kindref="member">stop_bit_len</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a2b2baaed7c0af0e419acf2dd8464aca8" kindref="member">UART_MOTO_CFG_HWTRG_EN_SET</ref>(config-&gt;<ref refid="structuart__trig__config__t_1abf0503a7cab0a1d1910326c141a6fbea" kindref="member">hardware_trig</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a70833f05746fe8ad3727c2637772e649" kindref="member">UART_MOTO_CFG_TRG_MODE_SET</ref>(config-&gt;<ref refid="structuart__trig__config__t_1ac782fda7af3a6721e65122fd1076cabc" kindref="member">trig_mode</ref>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a750013b4d88947ba28f68b278021d01b" kindref="member">UART_MOTO_CFG_TRG_CLR_RFIFO_SET</ref>(config-&gt;<ref refid="structuart__trig__config__t_1a450a48604bb332023f99196e053877f5" kindref="member">trig_clr_rxfifo</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1adebd0d784049053918f644e77200261b" kindref="member">UART_MOTO_CFG_TXSTOP_INSERT_SET</ref>(config-&gt;<ref refid="structuart__trig__config__t_1a0c5410b477f9f13dd9c66af8e535259b" kindref="member">en_stop_bit_insert</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fifo<sp/>control<sp/>register(FCR)<sp/>is<sp/>WO<sp/>access,<sp/>if<sp/>support<sp/>FCCR<sp/>register,<sp/>it<sp/>is<sp/>RW<sp/>access.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__uart__interface_1gad0a47c54b7355be64a015c9190f144ce" kindref="member">uart_config_fifo_ctrl</ref>(<ref refid="structUART__Type" kindref="compound">UART_Type</ref><sp/>*ptr,<sp/><ref refid="structuart__fifo__ctrl__t" kindref="compound">uart_fifo_ctrl_t</ref><sp/>*ctrl)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_FINE_FIFO_THRLD)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_FINE_FIFO_THRLD<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1acaad40dbd7bd724ce1dc5ad36553c8c3" kindref="member">FCRR</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aa414b08f03e8be40034d98970395a598" kindref="member">UART_FCRR_FIFOT4EN_MASK</ref></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aa45570720db8e1bd2ed1a0f98e7d03a9" kindref="member">UART_FCRR_TFIFOT4_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a7a7372dfe197ecee97d75236e7e14db9" kindref="member">tx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a3db6b87de6253bfba7b234977c1a7c64" kindref="member">UART_FCRR_RFIFOT4_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a06ac4bbdf15f5651d1745d9c77d5f459" kindref="member">rx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a995f227496d82fe65040a84baeafac48" kindref="member">UART_FCRR_DMAE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a549af0c4fd2f3e3b45e0c939eb153edd" kindref="member">dma_enable</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_UART_DISABLE_DMA_TIMEOUT)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_UART_DISABLE_DMA_TIMEOUT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>UART_FCRR_TMOUT_RXDMA_DIS_MASK<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ae124dc45af6151816a12203ada494007" kindref="member">UART_FCRR_TFIFORST_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a46a04e330f790808d83868a34ceb2b5e" kindref="member">reset_tx_fifo</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ac653a121148e44ed9fc752a1cfa02858" kindref="member">UART_FCRR_RFIFORST_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a4eddec0aac8bc2f7070a6fa9a8818959" kindref="member">reset_rx_fifo</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a0b5e5ea9b8f86ad5d8afd5b10caf4c4c" kindref="member">UART_FCRR_FIFOE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a21bd79488d9ae4c219870a83e011166b" kindref="member">fifo_enable</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1a297ffce9ce3d74a5a9359d709d238cd1" kindref="member">FCR</ref><sp/>=<sp/><sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a9f03327e0e0ea32b7653379080c50a53" kindref="member">UART_FCR_TFIFOT_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a7a7372dfe197ecee97d75236e7e14db9" kindref="member">tx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a26d10027d7a237661921b206f1e983c8" kindref="member">UART_FCR_RFIFOT_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a06ac4bbdf15f5651d1745d9c77d5f459" kindref="member">rx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a4366668dc915597c84f4ed8f6e4f8cf2" kindref="member">UART_FCR_TFIFORST_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a46a04e330f790808d83868a34ceb2b5e" kindref="member">reset_tx_fifo</ref>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a41f4be35db30f9385913c20621dd6546" kindref="member">UART_FCR_RFIFORST_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a4eddec0aac8bc2f7070a6fa9a8818959" kindref="member">reset_rx_fifo</ref>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ab9ae4bae5131c568a65b01859ec363c2" kindref="member">UART_FCR_DMAE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a549af0c4fd2f3e3b45e0c939eb153edd" kindref="member">dma_enable</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aee42c23116f3513950839eab9826aa92" kindref="member">UART_FCR_FIFOE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a21bd79488d9ae4c219870a83e011166b" kindref="member">fifo_enable</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>store<sp/>FCR<sp/>to<sp/>GPR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structUART__Type_1aceeceed9ab5c1802b364016cb033de3c" kindref="member">GPR</ref><sp/>=<sp/><sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a9f03327e0e0ea32b7653379080c50a53" kindref="member">UART_FCR_TFIFOT_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a7a7372dfe197ecee97d75236e7e14db9" kindref="member">tx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1a26d10027d7a237661921b206f1e983c8" kindref="member">UART_FCR_RFIFOT_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a06ac4bbdf15f5651d1745d9c77d5f459" kindref="member">rx_fifo_level</ref>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1ab9ae4bae5131c568a65b01859ec363c2" kindref="member">UART_FCR_DMAE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a549af0c4fd2f3e3b45e0c939eb153edd" kindref="member">dma_enable</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__uart__regs_8h_1aee42c23116f3513950839eab9826aa92" kindref="member">UART_FCR_FIFOE_SET</ref>(ctrl-&gt;<ref refid="structuart__fifo__ctrl__t_1a21bd79488d9ae4c219870a83e011166b" kindref="member">fifo_enable</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_uart_drv.c"/>
  </compounddef>
</doxygen>
