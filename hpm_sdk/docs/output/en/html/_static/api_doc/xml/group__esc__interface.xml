<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__esc__interface" kind="group">
    <compoundname>esc_interface</compoundname>
    <title>ESC driver APIs</title>
    <innerclass refid="structesc__eeprom__clock__config__t" prot="public">esc_eeprom_clock_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__esc__interface_1ga2f80701c36e79c0640d91c788feee0b3" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__esc__interface_1gga2f80701c36e79c0640d91c788feee0b3a615143de263ba9df39c1222356f097d2" prot="public">
          <name>status_esc_eeprom_ack_error</name>
          <initializer>=  ((uint32_t)(status_group_esc)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ESC EEPROM ack error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga2f80701c36e79c0640d91c788feee0b3abc27a7c058f4b013bdeb46229ba5b7cf" prot="public">
          <name>status_esc_eeprom_checksum_error</name>
          <initializer>=  ((uint32_t)(status_group_esc)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ESC EEPROM checksum error </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ESC error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="26" column="1" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="enum" id="group__esc__interface_1gad1df92c6cfbc9e350e70f202fceb83eb" prot="public" static="no" strong="no">
        <type></type>
        <name>esc_latch_source_t</name>
        <enumvalue id="group__esc__interface_1ggad1df92c6cfbc9e350e70f202fceb83ebaa6d28633b2d64cc0d70fa5cf5fe2da2b" prot="public">
          <name>latch_source_from_ntm</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1ggad1df92c6cfbc9e350e70f202fceb83ebab50413cb093bba7697efdb9077ea40d8" prot="public">
          <name>latch_source_from_trigger_mux</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="32" column="1" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="group__esc__interface_1ga3c7594a7a150bc5ba4aee21b6b54d1ee" prot="public" static="no" strong="no">
        <type></type>
        <name>esc_eeprom_cmd_t</name>
        <enumvalue id="group__esc__interface_1gga3c7594a7a150bc5ba4aee21b6b54d1eead90d4d84197a3062986327bb375ecc3d" prot="public">
          <name>esc_eeprom_idle_cmd</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga3c7594a7a150bc5ba4aee21b6b54d1eea61f8b589e38ea32c7deb0bf8a9207529" prot="public">
          <name>esc_eeprom_read_cmd</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga3c7594a7a150bc5ba4aee21b6b54d1eea20990a84c2e5469601c98b39831522bc" prot="public">
          <name>esc_eeprom_write_cmd</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga3c7594a7a150bc5ba4aee21b6b54d1eeafa401c033f0c400333c9bef4028e3acc" prot="public">
          <name>esc_eeprom_reload_cmd</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="37" column="1" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="group__esc__interface_1ga40fbe82036b22639e2d4c5e267688ad2" prot="public" static="no" strong="no">
        <type></type>
        <name>esc_ctrl_signal_function_t</name>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2abb09fabef7d116ce4ef97eef677f573b" prot="public">
          <name>esc_ctrl_signal_func_alt_nmii_link0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2afa1449468e3c19e0483ca9fddd89ddf3" prot="public">
          <name>esc_ctrl_signal_func_alt_nmii_link1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a714ffb215b918ac5ff2e4ef1d084743f" prot="public">
          <name>esc_ctrl_signal_func_alt_nmii_link2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a6b864462af9f3573301a91aad7802f96" prot="public">
          <name>esc_ctrl_signal_func_alt_link_act0</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a6209b674435657dee6555920eaea3000" prot="public">
          <name>esc_ctrl_signal_func_alt_link_act1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2aaa4548501ba52372f3bd3548fbbfd211" prot="public">
          <name>esc_ctrl_signal_func_alt_link_act2</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a7a81f9df03b8fc15aa8e69964f77f637" prot="public">
          <name>esc_ctrl_signal_func_alt_led_run</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a0837323cf99a5aad9ec5ea98cd1e178d" prot="public">
          <name>esc_ctrl_signal_func_alt_led_err</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__esc__interface_1gga40fbe82036b22639e2d4c5e267688ad2a4e00fe6b65d4c047f24e8660f29c4a5a" prot="public">
          <name>esc_ctrl_signal_func_alt_reset_out</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="44" column="1" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="44" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__esc__interface_1ga040f71322926310041001b700d02c05c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_core_enable_clock</definition>
        <argsstring>(ESC_Type *ptr, bool enable)</argsstring>
        <name>esc_core_enable_clock</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>ESC peripheral clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to enable or false to disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="75" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga9346b1daa6b1ef52492ea29fa82fd376" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_phy_enable_clock</definition>
        <argsstring>(ESC_Type *ptr, bool enable)</argsstring>
        <name>esc_phy_enable_clock</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>ESC PHY clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to enable or false to disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; enable PHY 25M refck</para>
<para>&lt; disable PHY 25M refck</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="90" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gabacb335a2e3a1c320369f11b4b0229f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_eeprom_and_clock</definition>
        <argsstring>(ESC_Type *ptr, esc_eeprom_clock_config_t *config)</argsstring>
        <name>esc_config_eeprom_and_clock</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structesc__eeprom__clock__config__t" kindref="compound">esc_eeprom_clock_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>ESC config eeprom attributes(emulation and size) and peripheral clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structesc__eeprom__clock__config__t" kindref="compound">esc_eeprom_clock_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="105" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="105" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gad8868589476747c2dc6d591dc8bc725b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_ctrl_signal_function</definition>
        <argsstring>(ESC_Type *ptr, uint8_t index, esc_ctrl_signal_function_t func, bool invert)</argsstring>
        <name>esc_config_ctrl_signal_function</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__esc__interface_1ga40fbe82036b22639e2d4c5e267688ad2" kindref="member">esc_ctrl_signal_function_t</ref></type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>invert</declname>
        </param>
        <briefdescription>
<para>ESC assign specific function to CTRL signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>CTRL signal index(0-8) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>specific function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">invert</parametername>
</parameternamelist>
<parameterdescription>
<para>invert signal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="134" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gaee64fee0f23e1038c998662071c055ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_nmii_link_source</definition>
        <argsstring>(ESC_Type *ptr, bool link0_from_io, bool link1_from_io, bool link2_from_io)</argsstring>
        <name>esc_config_nmii_link_source</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>link0_from_io</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>link1_from_io</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>link2_from_io</declname>
        </param>
        <briefdescription>
<para>ESC config nmii_link signal source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">link0_from_io</parametername>
</parameternamelist>
<parameterdescription>
<para>true for signal from configured IO; false for signal from register(GPR_CFG2) value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">link1_from_io</parametername>
</parameternamelist>
<parameterdescription>
<para>true for signal from configured IO; false for signal from register(GPR_CFG2) value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">link2_from_io</parametername>
</parameternamelist>
<parameterdescription>
<para>true for signal from configured IO; false for signal from register(GPR_CFG2) value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="147" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="147" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gab51f3dee517ea59cfd2f941b88ab5f1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_reset_source</definition>
        <argsstring>(ESC_Type *ptr, bool reset_from_ecat_core)</argsstring>
        <name>esc_config_reset_source</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset_from_ecat_core</declname>
        </param>
        <briefdescription>
<para>ESC config reset signal source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset_from_ecat_core</parametername>
</parameternamelist>
<parameterdescription>
<para>true for reset signal from ecat core; false for reset signal from register(GPR_CFG1) value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="178" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="178" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga724955559c1bab240e082878bbde7103" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_pdi_reset</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_pdi_reset</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC generate reset signal to ESC_RESET interrupt and RESET_OUT pin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the reset signal source should be configured in esc_config_reset_source before</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="193" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gaf0bbb8605ded5271e8a662a05b9e6219" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_set_phy_offset</definition>
        <argsstring>(ESC_Type *ptr, uint8_t offset)</argsstring>
        <name>esc_set_phy_offset</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>ESC set phy offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY register offset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="206" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga08d784ae70f4a75bafb915ce64f79e13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_enable_pdi_access_mii_management</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_enable_pdi_access_mii_management</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC enable PDI to access MII management. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="216" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gab8a603d045b3c34c88c2c8d2950e6ce9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_disable_pdi_access_mii_management</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_disable_pdi_access_mii_management</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC disable PDI to access MII management. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="226" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gaaeaf167df19c81d1f5fb0d0c361fd876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t esc_mdio_read</definition>
        <argsstring>(ESC_Type *ptr, uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)</argsstring>
        <name>esc_mdio_read</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>ESC read PHY register via ESC MII Management Interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY data returned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="239" column="12" bodyfile="drivers/src/hpm_esc_drv.c" bodystart="14" bodyend="64" declfile="drivers/inc/hpm_esc_drv.h" declline="239" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga34e62d5c1a185ea2af70471ff27541d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t esc_mdio_write</definition>
        <argsstring>(ESC_Type *ptr, uint8_t phy_addr, uint8_t reg_addr, uint16_t data)</argsstring>
        <name>esc_mdio_write</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>ESc write PHY register via ESC MII Management Interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Write to PHY register. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="249" column="12" bodyfile="drivers/src/hpm_esc_drv.c" bodystart="66" bodyend="111" declfile="drivers/inc/hpm_esc_drv.h" declline="249" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga83d77fb518b47b541050b5803e137a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t esc_check_eeprom_loading</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_check_eeprom_loading</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC check eeprom loading data status. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>EtherCAT communication is possible even if the EEPROM is blank</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>loding data successfully and correctlly. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_esc_eeprom_ack_error</parametername>
</parameternamelist>
<parameterdescription>
<para>loding data checksum error(eeprom blank). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_esc_eeprom_checksum_error</parametername>
</parameternamelist>
<parameterdescription>
<para>no ack error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>loding data timeout. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="261" column="12" bodyfile="drivers/src/hpm_esc_drv.c" bodystart="114" bodyend="145" declfile="drivers/inc/hpm_esc_drv.h" declline="261" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga80b2e17af6555921555fd46a7175c1d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t esc_get_eeprom_cmd</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_get_eeprom_cmd</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC get eeprom cmd, this using in eeprom emulation function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t esc_eeprom_cmd_t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="269" column="23" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1gadfcea55543bb1a71ec533d83b843077c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_eeprom_emulation_ack</definition>
        <argsstring>(ESC_Type *ptr, esc_eeprom_cmd_t cmd, bool ack_err, bool crc_err)</argsstring>
        <name>esc_eeprom_emulation_ack</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__esc__interface_1ga3c7594a7a150bc5ba4aee21b6b54d1ee" kindref="member">esc_eeprom_cmd_t</ref></type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ack_err</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>crc_err</declname>
        </param>
        <briefdescription>
<para>ESC ack eeprom cmd in eeprom emualtion function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>esc_eeprom_cmd_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ack_err</parametername>
</parameternamelist>
<parameterdescription>
<para>eeprom ack error occurrred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crc_err</parametername>
</parameternamelist>
<parameterdescription>
<para>eeprom checksum error occurrred </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="282" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="282" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga661950c9191d31a49ef357ad1637e4f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t esc_get_eeprom_byte_address</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_get_eeprom_byte_address</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC get eeprom byte address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>byte address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="301" column="24" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga456e385aad946c0ae7ba4d8d96c24482" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t esc_get_eeprom_word_address</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_get_eeprom_word_address</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC get eeprom word(2 bytes) address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>word address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="312" column="24" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga0830c7e2a6fe953a2b9d9f87d04c5253" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>static uint64_t esc_read_eeprom_data</definition>
        <argsstring>(ESC_Type *ptr)</argsstring>
        <name>esc_read_eeprom_data</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>ESC read eeprom data from register, this function is using in eeprom emulation function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>eeprom data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="323" column="24" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga9ee19c3ae2aef84992198eef81e77d28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_write_eeprom_data</definition>
        <argsstring>(ESC_Type *ptr, uint64_t data)</argsstring>
        <name>esc_write_eeprom_data</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>ESC write eeprom data to register, this function is using in eeprom emulation function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>eeprom data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="334" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga619c7090712e0b1a8cc12ea037a3531c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_latch0_source</definition>
        <argsstring>(ESC_Type *ptr, bool latch0_from_ntm)</argsstring>
        <name>esc_config_latch0_source</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>latch0_from_ntm</declname>
        </param>
        <briefdescription>
<para>ESC config latch0 signal source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">latch0_from_ntm</parametername>
</parameternamelist>
<parameterdescription>
<para>true for signal from ntm system, false for signal from IO </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="345" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="345" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="group__esc__interface_1ga665e5416c167f0643a13eae185619582" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void esc_config_latch1_source</definition>
        <argsstring>(ESC_Type *ptr, bool latch0_from_trigmux)</argsstring>
        <name>esc_config_latch1_source</name>
        <param>
          <type><ref refid="structESC__Type" kindref="compound">ESC_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>latch0_from_trigmux</declname>
        </param>
        <briefdescription>
<para>ESC config latch1 signal source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ESC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">latch0_from_trigmux</parametername>
</parameternamelist>
<parameterdescription>
<para>true for signal from trigmux system, false for signal from IO </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_esc_drv.h" line="360" column="20" bodyfile="drivers/inc/hpm_esc_drv.h" bodystart="360" bodyend="367"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ESC driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
