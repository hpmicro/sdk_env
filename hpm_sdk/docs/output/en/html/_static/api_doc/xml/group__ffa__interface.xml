<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__ffa__interface" kind="group">
    <compoundname>ffa_interface</compoundname>
    <title>FFA driver APIs</title>
    <innerclass refid="structffa__complex__q31__t" prot="public">ffa_complex_q31_t</innerclass>
    <innerclass refid="structffa__complex__q15__t" prot="public">ffa_complex_q15_t</innerclass>
    <innerclass refid="structfft__xfer__t" prot="public">fft_xfer_t</innerclass>
    <innerclass refid="structfir__xfer__t" prot="public">fir_xfer_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ffa__interface_1ga83e8bc15645f9d99ab91a152bb3dc8ce" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__ffa__interface_1gga83e8bc15645f9d99ab91a152bb3dc8ceae0247dc1bdeb1daef537a78c04dbe0ba" prot="public">
          <name>status_ffa_fir_overflow</name>
          <initializer>=  ((uint32_t)(status_group_ffa)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ffa__interface_1gga83e8bc15645f9d99ab91a152bb3dc8cea7b4e8b1e8e7aea7627952afc1cd4d6da" prot="public">
          <name>status_ffa_fft_overflow</name>
          <initializer>=  ((uint32_t)(status_group_ffa)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ffa__interface_1gga83e8bc15645f9d99ab91a152bb3dc8cea4492a81c778b9286d7d144fe084344ba" prot="public">
          <name>status_ffa_write_error</name>
          <initializer>=  ((uint32_t)(status_group_ffa)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ffa__interface_1gga83e8bc15645f9d99ab91a152bb3dc8cea78f561f808e778c73a9dd1ce33d38cf1" prot="public">
          <name>status_ffa_read_next_error</name>
          <initializer>=  ((uint32_t)(status_group_ffa)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ffa__interface_1gga83e8bc15645f9d99ab91a152bb3dc8ceaa42f437ec24ceab79d60132dbbc56c28" prot="public">
          <name>status_ffa_read_error</name>
          <initializer>=  ((uint32_t)(status_group_ffa)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FFA read error </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>FFA error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="100" column="1" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="100" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__ffa__interface_1gae2b31d5e5f249f1ef350b8600755291e" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t ffa_q31_t</definition>
        <argsstring></argsstring>
        <name>ffa_q31_t</name>
        <briefdescription>
<para>FFA Q31 data type definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="48" column="17" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__ffa__interface_1ga713aa90e8b057c1e8df3aa0ca6e2ba96" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t ffa_q15_t</definition>
        <argsstring></argsstring>
        <name>ffa_q15_t</name>
        <briefdescription>
<para>FFA Q15 data type definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="53" column="17" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__ffa__interface_1ga1f87a53ab913a04ed99a8fdfecad48e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ffa_enable</definition>
        <argsstring>(FFA_Type *ptr)</argsstring>
        <name>ffa_enable</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable FFA module and start an specified FFA operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="125" column="20" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1gaeae17c3ab0e8468d8c085de83d5fc538" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ffa_disable</definition>
        <argsstring>(FFA_Type *ptr)</argsstring>
        <name>ffa_disable</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Stop FFA module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="135" column="20" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga2a8fa9cdff894c25b4bb560ba2b713cb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ffa_get_status</definition>
        <argsstring>(FFA_Type *ptr)</argsstring>
        <name>ffa_get_status</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get FFA status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FFA status register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="146" column="24" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga2fdbac1ac58ed42e80ccde5b9c767af9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ffa_enable_interrupt</definition>
        <argsstring>(FFA_Type *ptr, uint32_t mask)</argsstring>
        <name>ffa_enable_interrupt</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable FFA Interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="157" column="20" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1gadbdc83615abeae95da837b621a230fbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ffa_disable_interrupt</definition>
        <argsstring>(FFA_Type *ptr, uint32_t mask)</argsstring>
        <name>ffa_disable_interrupt</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable FFA interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="168" column="20" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga5e56293311ea18ed803b77929d819b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ffa_start_fft</definition>
        <argsstring>(FFA_Type *ptr, fft_xfer_t *fft_xfer)</argsstring>
        <name>ffa_start_fft</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref> *</type>
          <declname>fft_xfer</declname>
        </param>
        <briefdescription>
<para>Start an FFT operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fft_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT transform context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="228" column="6" bodyfile="drivers/src/hpm_ffa_drv.c" bodystart="34" bodyend="62" declfile="drivers/inc/hpm_ffa_drv.h" declline="228" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga7f3e816e832db8390e5dd586317bb2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ffa_start_fir</definition>
        <argsstring>(FFA_Type *ptr, fir_xfer_t *fir_xfer)</argsstring>
        <name>ffa_start_fir</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structfir__xfer__t" kindref="compound">fir_xfer_t</ref> *</type>
          <declname>fir_xfer</declname>
        </param>
        <briefdescription>
<para>Start an FIR operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fir_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>FIR transform context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="236" column="6" bodyfile="drivers/src/hpm_ffa_drv.c" bodystart="64" bodyend="95" declfile="drivers/inc/hpm_ffa_drv.h" declline="236" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga77d761e7ed7aeabd0c567debde5e78b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ffa_calculate_fft_blocking</definition>
        <argsstring>(FFA_Type *ptr, fft_xfer_t *fft_xfer)</argsstring>
        <name>ffa_calculate_fft_blocking</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structfft__xfer__t" kindref="compound">fft_xfer_t</ref> *</type>
          <declname>fft_xfer</declname>
        </param>
        <briefdescription>
<para>Perform FFT transformation in blocking mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fft_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT transform context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FFT operation result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="245" column="12" bodyfile="drivers/src/hpm_ffa_drv.c" bodystart="118" bodyend="136" declfile="drivers/inc/hpm_ffa_drv.h" declline="245" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ffa__interface_1ga45e70f073a381048d0a19e3d31d1d775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ffa_calculate_fir_blocking</definition>
        <argsstring>(FFA_Type *ptr, fir_xfer_t *fir_xfer)</argsstring>
        <name>ffa_calculate_fir_blocking</name>
        <param>
          <type><ref refid="structFFA__Type" kindref="compound">FFA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structfir__xfer__t" kindref="compound">fir_xfer_t</ref> *</type>
          <declname>fir_xfer</declname>
        </param>
        <briefdescription>
<para>Perform FIR transform in blocking mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>FFA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fir_xfer</parametername>
</parameternamelist>
<parameterdescription>
<para>FIR transform context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FIR operation result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="254" column="12" bodyfile="drivers/src/hpm_ffa_drv.c" bodystart="138" bodyend="156" declfile="drivers/inc/hpm_ffa_drv.h" declline="254" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__ffa__interface_1ga444630c8186fcabcd0c2e9ff9f719889" prot="public" static="no">
        <name>FFA_OPCMD_FIR</name>
        <initializer>(0U)      /* !&lt; FIR operation command index */</initializer>
        <briefdescription>
<para>Operation commands supported by FFA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ffa__interface_1ga83fc31f2e1a4dd157e292a05736e5b6f" prot="public" static="no">
        <name>FFA_OPCMD_FFT</name>
        <initializer>(2U)      /* !&lt; FFT operation command index */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ffa__interface_1gae5d5d4ceb4204fe83a21d6a6e3e5d612" prot="public" static="no">
        <name>FFA_DATA_TYPE_REAL_Q31</name>
        <initializer>(0U)    /* !&lt; FFA Data type:  Real Q31 */</initializer>
        <briefdescription>
<para>Data type supported by FFA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="36" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ffa__interface_1ga7d8e9366db62955109fbe85cc375715e" prot="public" static="no">
        <name>FFA_DATA_TYPE_REAL_Q15</name>
        <initializer>(1U)    /* !&lt; FFA Data type: Real Q15 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="37" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ffa__interface_1ga606c07bcff8d952376e87009f7f27f4d" prot="public" static="no">
        <name>FFA_DATA_TYPE_COMPLEX_Q31</name>
        <initializer>(2U)    /* !&lt; FFA Data type: Complex Q31 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="38" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__ffa__interface_1ga96970b166721a9bc66dceb65e9466a34" prot="public" static="no">
        <name>FFA_DATA_TYPE_COMPLEX_Q15</name>
        <initializer>(3U)    /* !&lt; FFA Data type: Complex Q15 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ffa_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_ffa_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>FFA driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
