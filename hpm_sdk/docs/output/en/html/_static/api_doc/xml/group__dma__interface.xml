<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__dma__interface" kind="group">
    <compoundname>dma_interface</compoundname>
    <title>DMA driver APIs</title>
    <innerclass refid="structdma__linked__descriptor" prot="public">dma_linked_descriptor</innerclass>
    <innerclass refid="structdma__channel__config" prot="public">dma_channel_config</innerclass>
    <innerclass refid="structdma__handshake__config" prot="public">dma_handshake_config</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__dma__interface_1ga5bdf00ceaea2483170b4c54c2b7f9eaf" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__dma__interface_1gga5bdf00ceaea2483170b4c54c2b7f9eafa4718c849be41858cc9cda545d5d26873" prot="public">
          <name>status_dma_transfer_done</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga5bdf00ceaea2483170b4c54c2b7f9eafa78d5004cc123d96e10954eb1d51eab43" prot="public">
          <name>status_dma_transfer_error</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga5bdf00ceaea2483170b4c54c2b7f9eafa4221405f1248198974818178e0fb5c2a" prot="public">
          <name>status_dma_transfer_abort</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga5bdf00ceaea2483170b4c54c2b7f9eafa44d52e0d3b13a31df8fad84dc959c0e7" prot="public">
          <name>status_dma_transfer_ongoing</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga5bdf00ceaea2483170b4c54c2b7f9eafae7b72aef0fb575677f9a51c7028fd853" prot="public">
          <name>status_dma_alignment_error</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="139" column="1" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="group__dma__interface_1ga3cdea4030be8a2bdfc55239e633b058a" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aa390040817b588901c6e00585d39c75ad" prot="public">
          <name>dmav2_state_idle</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aa8acc9412e23de91f6f01d50d58e3eb80" prot="public">
          <name>dmav2_state_read</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aada81804fe4408cf35e4379189f2d8ab7" prot="public">
          <name>dmav2_state_read_ack</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aae01271c02f69094f4cb634f2dbd19636" prot="public">
          <name>dmav2_state_write</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aab39a46029b18fb5a64066f8260426f05" prot="public">
          <name>dmav2_state_write_ack</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aad3a9b8d5eefbc609d0b18fe019f353f7" prot="public">
          <name>dmav2_state_ll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aa4555333da6eb0a8e211a0ed1a84c5a6b" prot="public">
          <name>dmav2_state_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1gga3cdea4030be8a2bdfc55239e633b058aae2e26a4ad6a6b58767a3fe0dd6138bdb" prot="public">
          <name>dmav2_state_end_wait</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="92" column="1" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="92" bodyend="101"/>
      </memberdef>
      <memberdef kind="enum" id="group__dma__interface_1gaa3f36add817e4376cb639ceebffe39e6" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6a4718c849be41858cc9cda545d5d26873" prot="public">
          <name>status_dma_transfer_done</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6a78d5004cc123d96e10954eb1d51eab43" prot="public">
          <name>status_dma_transfer_error</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6a4221405f1248198974818178e0fb5c2a" prot="public">
          <name>status_dma_transfer_abort</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6a44d52e0d3b13a31df8fad84dc959c0e7" prot="public">
          <name>status_dma_transfer_ongoing</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6ae7b72aef0fb575677f9a51c7028fd853" prot="public">
          <name>status_dma_alignment_error</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__dma__interface_1ggaa3f36add817e4376cb639ceebffe39e6a6e790ecf2c7432cb7a1a076f16dc3380" prot="public">
          <name>status_dma_transfer_half_done</name>
          <initializer>=  ((uint32_t)(status_group_dma)*1000U + (uint32_t)(5))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="162" column="1" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="162" bodyend="169"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" prot="public" static="no">
        <type>struct <ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref></type>
        <definition>typedef struct dma_linked_descriptor dma_linked_descriptor_t</definition>
        <argsstring></argsstring>
        <name>dma_linked_descriptor_t</name>
        <briefdescription>
<para>Linked descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is consumed by DMA controlled directly </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="101" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" prot="public" static="no">
        <type>struct <ref refid="structdma__channel__config" kindref="compound">dma_channel_config</ref></type>
        <definition>typedef struct dma_channel_config dma_channel_config_t</definition>
        <argsstring></argsstring>
        <name>dma_channel_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="123" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" prot="public" static="no">
        <type>struct <ref refid="structdma__handshake__config" kindref="compound">dma_handshake_config</ref></type>
        <definition>typedef struct dma_handshake_config dma_handshake_config_t</definition>
        <argsstring></argsstring>
        <name>dma_handshake_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="135" column="24"/>
      </memberdef>
      <memberdef kind="typedef" id="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" prot="public" static="no">
        <type>struct <ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref></type>
        <definition>typedef struct dma_linked_descriptor dma_linked_descriptor_t</definition>
        <argsstring></argsstring>
        <name>dma_linked_descriptor_t</name>
        <briefdescription>
<para>Linked descriptor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is consumed by DMA controlled directly </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="117" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" prot="public" static="no">
        <type>struct <ref refid="structdma__channel__config" kindref="compound">dma_channel_config</ref></type>
        <definition>typedef struct dma_channel_config dma_channel_config_t</definition>
        <argsstring></argsstring>
        <name>dma_channel_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="145" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" prot="public" static="no">
        <type>struct <ref refid="structdma__handshake__config" kindref="compound">dma_handshake_config</ref></type>
        <definition>typedef struct dma_handshake_config dma_handshake_config_t</definition>
        <argsstring></argsstring>
        <name>dma_handshake_config_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="158" column="24"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__dma__interface_1ga608f09056827670ea6716d24575fa9e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_reset</definition>
        <argsstring>(DMA_Type *ptr)</argsstring>
        <name>dma_reset</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Reset DMA. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="156" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gad55a6133efdb23298830cdfd881ec8f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t dma_enable_channel</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_enable_channel</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Enable DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel to be enabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything&apos;s okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="169" column="26" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="169" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gafcbbf9231ea6ee738585b6b571f79671" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_disable_channel</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_disable_channel</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Disable DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="186" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gab9c6a3fd8f78f7bcc466c94a9c1559a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dma_channel_is_enable</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_channel_is_enable</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check whether DMA channel is enable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if DMA channel is enable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="200" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga2d45b9af00ab824d4d7766b12ea71f08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_priority</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t priority)</argsstring>
        <name>dma_set_priority</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Set DMA channel priority. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>dma priority <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaebef45648957c1a19c3d8f1e125de09a" kindref="member">DMA_CHANNEL_PRIORITY_LOW</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga44afe86d85ad9a888d3766c725b0b50e" kindref="member">DMA_CHANNEL_PRIORITY_HIGH</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="215" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga94392d8df64b1ab840ab8d2b40ed4c0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_work_mode</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t mode)</argsstring>
        <name>dma_set_source_work_mode</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>source work mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="230" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga1b4d0b18f314fad7530f8b3378e02857" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_work_mode</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t mode)</argsstring>
        <name>dma_set_destination_work_mode</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>destination work mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="245" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gad09aa853fe349fdf004e2e4e10b84cfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_burst_size</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t burstsize)</argsstring>
        <name>dma_set_source_burst_size</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>burstsize</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source burst size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burstsize</parametername>
</parameternamelist>
<parameterdescription>
<para>source burst size <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gaa4bd111d43568b12633dbada06b19acd" kindref="member">DMA_NUM_TRANSFER_PER_BURST_2T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad6aaad92934235088fea17ab45677325" kindref="member">DMA_NUM_TRANSFER_PER_BURST_4T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gacdde44169a21341f5db865bc0ea3a075" kindref="member">DMA_NUM_TRANSFER_PER_BURST_8T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga9bed51940d730c351dc256a0fb5f5f26" kindref="member">DMA_NUM_TRANSFER_PER_BURST_16T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga84c0885d0a35946a12c27335b7944b9a" kindref="member">DMA_NUM_TRANSFER_PER_BURST_32T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga06535b2599dd0621fb1112c561e18632" kindref="member">DMA_NUM_TRANSFER_PER_BURST_64T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadea081158ea5af4e43dff0fc66507636" kindref="member">DMA_NUM_TRANSFER_PER_BURST_128T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gaa6429d34a4c28a0212689dfe8117729e" kindref="member">DMA_NUM_TRANSFER_PER_BURST_256T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga02d3abe5ed9bce5cecf6ec543c15a36c" kindref="member">DMA_NUM_TRANSFER_PER_BURST_512T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga35e2285fd58fee66ee17af9334447d74" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1024T</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="269" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gadc12d6c1bba5a119c26144434a301288" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_get_remaining_transfer_size</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_get_remaining_transfer_size</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Get DMA channel remaining transfer size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remaining transfer size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="283" column="24" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga3aff72f78f31b573237d7b5da878ae7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_transfer_size</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint32_t size_in_width)</argsstring>
        <name>dma_set_transfer_size</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel transfer size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer size of the channel. The width is current dma channel configured source width. Transfer total bytes are (size_in_width * source width). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="297" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga6f3c7b6dd2e798b4a1c25e4e421f24af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_width</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t width)</argsstring>
        <name>dma_set_source_width</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer source width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="313" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaff960bedfca3a05d6200d71759d3dc43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_width</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t width)</argsstring>
        <name>dma_set_destination_width</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer destination width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="329" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gab99524d837a704b22a9df6b5c8c1996f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_transfer_src_width_byte_size</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t src_width, uint32_t size_in_byte)</argsstring>
        <name>dma_set_transfer_src_width_byte_size</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_byte</declname>
        </param>
        <briefdescription>
<para>Set DMA channel transfer width and size in byte. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer source width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer size in byte of the channel. The dma transfer size is (size_in_byte &gt;&gt; src_width). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="347" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="347" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga7aa44c35471feafcee8802c51a597a81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_address</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint32_t addr)</argsstring>
        <name>dma_set_source_address</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>source address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="364" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="364" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga8ec12f5e29bd677f5f66c19821f13d83" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_address</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint32_t addr)</argsstring>
        <name>dma_set_destination_address</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>destination address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="377" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga520f07a20ecef64076b9019bb93e13af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_address_ctrl</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t addr_ctrl)</argsstring>
        <name>dma_set_source_address_ctrl</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>addr_ctrl</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source address control mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>source address control mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" kindref="member">DMA_ADDRESS_CONTROL_DECREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="393" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaef3d39e27a6deb0bf7f07a677f6fa7a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_address_ctrl</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index, uint8_t addr_ctrl)</argsstring>
        <name>dma_set_destination_address_ctrl</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>addr_ctrl</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination address control mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>destination address control mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" kindref="member">DMA_ADDRESS_CONTROL_DECREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="409" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga82b72328810602c2be18508fbc3b9ffc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_abort_channel</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index_mask)</argsstring>
        <name>dma_abort_channel</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index_mask</declname>
        </param>
        <briefdescription>
<para>Abort channel transfer with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of channels to be aborted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="420" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gabf373eb89a9ed7b8413fc4ec7aa53890" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_enabled_channel</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index_mask)</argsstring>
        <name>dma_check_enabled_channel</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index_mask</declname>
        </param>
        <briefdescription>
<para>Check if channels are enabled with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of channels to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Enabled channel mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="433" column="24" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="433" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga039e493f1eaf6f489f6623d2f8fe53fb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dma_has_linked_pointer_configured</definition>
        <argsstring>(DMA_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_has_linked_pointer_configured</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check if linked pointer has been configured. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if linked pointer has been configured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="447" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="447" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gac04beeabb4ee9071ea056c86dd3e6bf9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_transfer_status</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_check_transfer_status</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check transfer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ONGOING</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is still ongoing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if any error occurred during transferring </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ABORT</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is aborted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_TC</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is finished without error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="463" column="24" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="463" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga56524d6ce8728d4f9c529f2ed3d2213c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_clear_transfer_status</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_clear_transfer_status</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Clear transfer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="498" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="498" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa9c3b81c8228a1c2f029b96d30599a29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_enable_channel_interrupt</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_index, int32_t interrupt_mask)</argsstring>
        <name>dma_enable_channel_interrupt</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Enable DMA Channel interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="510" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga815c97886bac31930f00eac312183af3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_disable_channel_interrupt</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_index, int32_t interrupt_mask)</argsstring>
        <name>dma_disable_channel_interrupt</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Disable DMA Channel interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="522" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="522" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga745d72153480ef961132c8ea99874e5e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_channel_interrupt_mask</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_check_channel_interrupt_mask</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check Channel interrupt master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Interrupt mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="535" column="24" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga271df872d11a113e6cd90e3caaf351ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_clear_irq_status</definition>
        <argsstring>(DMA_Type *ptr, uint32_t mask)</argsstring>
        <name>dma_clear_irq_status</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Get clear IRQ status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="546" column="20" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="546" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga427cd8a6fe137c2fb43c6f15ef68029a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_get_irq_status</definition>
        <argsstring>(DMA_Type *ptr)</argsstring>
        <name>dma_get_irq_status</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get IRQ status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="556" column="24" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga68a6913c8d41fc26a2da98874833badd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dma_default_channel_config</definition>
        <argsstring>(DMA_Type *ptr, dma_channel_config_t *ch)</argsstring>
        <name>dma_default_channel_config</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Get default channel config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel config </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="567" column="6" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="60" bodyend="74" declfile="drivers/inc/hpm_dma_drv.h" declline="567" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga4e06185c6cfab347b9bde8032bae380c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_setup_channel</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_num, dma_channel_config_t *ch, bool start_transfer)</argsstring>
        <name>dma_setup_channel</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_transfer</declname>
        </param>
        <briefdescription>
<para>Setup DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel config </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to start transfer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="579" column="12" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="10" bodyend="57" declfile="drivers/inc/hpm_dma_drv.h" declline="579" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_config_linked_descriptor</definition>
        <argsstring>(DMA_Type *ptr, dma_linked_descriptor_t *descriptor, uint8_t ch_num, dma_channel_config_t *config)</argsstring>
        <name>dma_config_linked_descriptor</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref> *</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Config linked descriptor function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>Linked descriptor pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor config pointer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="592" column="12" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="76" bodyend="121" declfile="drivers/inc/hpm_dma_drv.h" declline="592" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaca671e22616ff09fe52de24a09bbda4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_start_memcpy</definition>
        <argsstring>(DMA_Type *ptr, uint8_t ch_num, uint32_t dst, uint32_t src, uint32_t size_in_byte, uint32_t burst_len_in_byte)</argsstring>
        <name>dma_start_memcpy</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_byte</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>burst_len_in_byte</declname>
        </param>
        <briefdescription>
<para>Start DMA copy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source Address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in byte </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burst_len_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Burst length in byte</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everthing is okay </para>
</simplesect>
<simplesect kind="note"><para>: dst, src, size should be aligned with burst_len_in_byte </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="607" column="12" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="123" bodyend="183" declfile="drivers/inc/hpm_dma_drv.h" declline="607" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga58b2a7329e217e39a5787efa41f33e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dma_default_handshake_config</definition>
        <argsstring>(DMA_Type *ptr, dma_handshake_config_t *config)</argsstring>
        <name>dma_default_handshake_config</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default handshake config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>default config </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="617" column="6" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="185" bodyend="189" declfile="drivers/inc/hpm_dma_drv.h" declline="617" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gae3aa3d5d4812c36d6cbb138576053eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_setup_handshake</definition>
        <argsstring>(DMA_Type *ptr, dma_handshake_config_t *pconfig, bool start_transfer)</argsstring>
        <name>dma_setup_handshake</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref> *</type>
          <declname>pconfig</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_transfer</declname>
        </param>
        <briefdescription>
<para>config dma handshake function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>dma handshake config pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to start transfer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="628" column="12" bodyfile="drivers/src/hpm_dma_drv.c" bodystart="191" bodyend="222" declfile="drivers/inc/hpm_dma_drv.h" declline="628" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa79c4d50de390b839009934e4f10066a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_reset</definition>
        <argsstring>(DMAV2_Type *ptr)</argsstring>
        <name>dma_reset</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Reset DMA. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="180" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa5c5a2d7148698f43b7e0880bba36eff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t dma_enable_channel</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_enable_channel</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Enable DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel to be enabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything&apos;s okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="193" column="26" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga3f39e8113197d407be9ade4a95e397d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_disable_channel</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_disable_channel</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Disable DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel to be disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="210" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga8c35df668b160c29c60eb3adbed9b69b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dma_channel_is_enable</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_channel_is_enable</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check whether DMA channel is enable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if DMA channel is enable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="224" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gad395167d5930a308d402b5fe5e945a1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_priority</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t priority)</argsstring>
        <name>dma_set_priority</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Set DMA channel priority. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para>dma priority <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaebef45648957c1a19c3d8f1e125de09a" kindref="member">DMA_CHANNEL_PRIORITY_LOW</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga44afe86d85ad9a888d3766c725b0b50e" kindref="member">DMA_CHANNEL_PRIORITY_HIGH</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="239" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga1007aab6d3f9b640f78f3f28fb14c125" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_work_mode</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t mode)</argsstring>
        <name>dma_set_source_work_mode</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>source work mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="254" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga947e54a0bc5528d97dd78ef5f6920a4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_work_mode</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t mode)</argsstring>
        <name>dma_set_destination_work_mode</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>destination work mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="269" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga23c68525b74525c16439e09f3266891d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_burst_size</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t burstsize)</argsstring>
        <name>dma_set_source_burst_size</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>burstsize</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source burst size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burstsize</parametername>
</parameternamelist>
<parameterdescription>
<para>source burst size when BURSTOPT is 0, please reference follows: <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gaa4bd111d43568b12633dbada06b19acd" kindref="member">DMA_NUM_TRANSFER_PER_BURST_2T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad6aaad92934235088fea17ab45677325" kindref="member">DMA_NUM_TRANSFER_PER_BURST_4T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gacdde44169a21341f5db865bc0ea3a075" kindref="member">DMA_NUM_TRANSFER_PER_BURST_8T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga9bed51940d730c351dc256a0fb5f5f26" kindref="member">DMA_NUM_TRANSFER_PER_BURST_16T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga84c0885d0a35946a12c27335b7944b9a" kindref="member">DMA_NUM_TRANSFER_PER_BURST_32T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga06535b2599dd0621fb1112c561e18632" kindref="member">DMA_NUM_TRANSFER_PER_BURST_64T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadea081158ea5af4e43dff0fc66507636" kindref="member">DMA_NUM_TRANSFER_PER_BURST_128T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gaa6429d34a4c28a0212689dfe8117729e" kindref="member">DMA_NUM_TRANSFER_PER_BURST_256T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga02d3abe5ed9bce5cecf6ec543c15a36c" kindref="member">DMA_NUM_TRANSFER_PER_BURST_512T</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga35e2285fd58fee66ee17af9334447d74" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1024T</ref> when BURSTOPT is 1, burst size is (burstsize + 1). </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="295" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa03f23ce1a1b92c4d966ccc6330c21af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_get_remaining_transfer_size</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_get_remaining_transfer_size</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Get DMA channel remaining transfer size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remaining transfer size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="309" column="24" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gacac0289e118e336e56c906eef156466c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_transfer_size</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint32_t size_in_width)</argsstring>
        <name>dma_set_transfer_size</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel transfer size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer size of the channel. The width is current dma channel configured source width. Transfer total bytes are (size_in_width * source width). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="323" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gafa3d0389e017ced3fc3f6c7c58324b34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_width</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t width)</argsstring>
        <name>dma_set_source_width</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer source width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="339" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga636a8e7baa2f8d0fc9fbcef221234f98" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_width</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t width)</argsstring>
        <name>dma_set_destination_width</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer destination width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="355" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaff2a5fe052b14da5cfcefa832b5be478" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_transfer_src_width_byte_size</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t src_width, uint32_t size_in_byte)</argsstring>
        <name>dma_set_transfer_src_width_byte_size</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>src_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_byte</declname>
        </param>
        <briefdescription>
<para>Set DMA channel transfer width and size in byte. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_width</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer source width of the channel <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" kindref="member">DMA_TRANSFER_WIDTH_HALF_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" kindref="member">DMA_TRANSFER_WIDTH_DOUBLE_WORD</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer size in byte of the channel. The dma transfer size is (size_in_byte &gt;&gt; src_width). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="373" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="373" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga36c7e3c2fefe4a653e68d6379adac859" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_address</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint32_t addr)</argsstring>
        <name>dma_set_source_address</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>source address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="390" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga47a47155f345d4fd623d5819ded57f6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_address</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint32_t addr)</argsstring>
        <name>dma_set_destination_address</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>destination address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="403" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga084023569b1259dbb7dc2e19827752df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_source_address_ctrl</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t addr_ctrl)</argsstring>
        <name>dma_set_source_address_ctrl</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>addr_ctrl</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source address control mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>source address control mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" kindref="member">DMA_ADDRESS_CONTROL_DECREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="419" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga038e3f4d7d77daec3ad5f6e95dd410e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_destination_address_ctrl</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t addr_ctrl)</argsstring>
        <name>dma_set_destination_address_ctrl</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>addr_ctrl</declname>
        </param>
        <briefdescription>
<para>Set DMA channel destination address control mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>destination address control mode <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" kindref="member">DMA_ADDRESS_CONTROL_DECREMENT</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="435" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga9f5cb3eee2167f83e0e2d4af5de4ee46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_infinite_loop_mode</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, bool infinite_loop)</argsstring>
        <name>dma_set_infinite_loop_mode</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>infinite_loop</declname>
        </param>
        <briefdescription>
<para>Set DMA channel infinite loop mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">infinite_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>false - normal mode(single times mode); true - infinite loop mode(cycle mode) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="448" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gae3dc54ae25d1e7d335dc2bd0fa14830f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_src_busrt_option</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t burst_opt)</argsstring>
        <name>dma_set_src_busrt_option</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>burst_opt</declname>
        </param>
        <briefdescription>
<para>Set DMA channel source burst option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burst_opt</parametername>
</parameternamelist>
<parameterdescription>
<para>burst option <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1gaf5840c431031347bbac005bcf3ec1352" kindref="member">DMA_SRC_BURST_OPT_STANDAND_SIZE</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gab607c98377becb5c4d45cf90e102d1d4" kindref="member">DMA_SRC_BURST_OPT_CUSTOM_SIZE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="463" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga48af87daae168c43fa7b89fab7ff0ae0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_set_handshake_option</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index, uint8_t handshake_opt)</argsstring>
        <name>dma_set_handshake_option</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>handshake_opt</declname>
        </param>
        <briefdescription>
<para>Set DMA channel handshake option. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the channel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handshake_opt</parametername>
</parameternamelist>
<parameterdescription>
<para>handshake option <itemizedlist>
<listitem><para><ref refid="group__dma__interface_1ga107e70ebbbe5a3f98da7326f193923df" kindref="member">DMA_HANDSHAKE_OPT_ONE_BURST</ref> </para>
</listitem>
<listitem><para><ref refid="group__dma__interface_1gad253c810f5fcb6899871082f848b4585" kindref="member">DMA_HANDSHAKE_OPT_ALL_TRANSIZE</ref> </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="478" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga3066c0f32d32e11f627f1d6c0980b171" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_abort_channel</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index_mask)</argsstring>
        <name>dma_abort_channel</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index_mask</declname>
        </param>
        <briefdescription>
<para>Abort channel transfer with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of channels to be aborted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="549" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="549" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga752dab89c2f1da5bc6c3d47b79315db5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_enabled_channel</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index_mask)</argsstring>
        <name>dma_check_enabled_channel</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index_mask</declname>
        </param>
        <briefdescription>
<para>Check if channels are enabled with mask. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of channels to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Enabled channel mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="562" column="24" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="562" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gafc6b9dca281aae73b4cbf4623fead6df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dma_has_linked_pointer_configured</definition>
        <argsstring>(DMAV2_Type *ptr, uint32_t ch_index)</argsstring>
        <name>dma_has_linked_pointer_configured</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check if linked pointer has been configured. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if linked pointer has been configured </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="576" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="576" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga5065be8bf67f4cf9d24c14bd6de4c126" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_transfer_status</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_check_transfer_status</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check transfer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ONGOING</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is still ongoing </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ERROR</parametername>
</parameternamelist>
<parameterdescription>
<para>if any error occurred during transferring </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_ABORT</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is aborted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_TC</parametername>
</parameternamelist>
<parameterdescription>
<para>if transfer is finished without error </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>DMA_CHANNEL_STATUS_HALF_TC</parametername>
</parameternamelist>
<parameterdescription>
<para>if half transfer complete without error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="593" column="24" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="593" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa1495912f7bcdd98117adc67fee3957c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_clear_transfer_status</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_clear_transfer_status</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Clear transfer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="626" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="626" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaed4d1be78ca83254f03df2d48adc8fcd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_enable_channel_interrupt</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_index, int32_t interrupt_mask)</argsstring>
        <name>dma_enable_channel_interrupt</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Enable DMA Channel interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="642" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa3ee53b6a5f5dc095414d7f8a970d5f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dma_disable_channel_interrupt</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_index, int32_t interrupt_mask)</argsstring>
        <name>dma_disable_channel_interrupt</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>interrupt_mask</declname>
        </param>
        <briefdescription>
<para>Disable DMA Channel interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interrupt_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="654" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="654" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa2a7836f8b892cb6e12c969b15e99adb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t dma_check_channel_interrupt_mask</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_index)</argsstring>
        <name>dma_check_channel_interrupt_mask</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <briefdescription>
<para>Check Channel interrupt master. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be checked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Interrupt mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="667" column="24" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="667" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaea58c346a99374ecf05ece019fce8617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dma_default_channel_config</definition>
        <argsstring>(DMAV2_Type *ptr, dma_channel_config_t *ch)</argsstring>
        <name>dma_default_channel_config</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Get default channel config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel config </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="678" column="6" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="10" bodyend="32" declfile="drivers/inc/hpm_dmav2_drv.h" declline="678" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga303eba336030d83890b89a7b4c94fbd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_setup_channel</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_num, dma_channel_config_t *ch, bool start_transfer)</argsstring>
        <name>dma_setup_channel</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_transfer</declname>
        </param>
        <briefdescription>
<para>Setup DMA channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel config </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to start transfer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="690" column="12" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="34" bodyend="90" declfile="drivers/inc/hpm_dmav2_drv.h" declline="690" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga4d9b9e86e61178e7464692e8226051e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_config_linked_descriptor</definition>
        <argsstring>(DMAV2_Type *ptr, dma_linked_descriptor_t *descriptor, uint8_t ch_num, dma_channel_config_t *config)</argsstring>
        <name>dma_config_linked_descriptor</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref> *</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Config linked descriptor function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>Linked descriptor pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index to be configured </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor config pointer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="703" column="12" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="92" bodyend="145" declfile="drivers/inc/hpm_dmav2_drv.h" declline="703" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1ga0e9a20754a6a2304f4ce492010142331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_start_memcpy</definition>
        <argsstring>(DMAV2_Type *ptr, uint8_t ch_num, uint32_t dst, uint32_t src, uint32_t size_in_byte, uint32_t burst_len_in_byte)</argsstring>
        <name>dma_start_memcpy</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size_in_byte</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>burst_len_in_byte</declname>
        </param>
        <briefdescription>
<para>Start DMA copy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Target channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source Address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in byte </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">burst_len_in_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Burst length in byte</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everthing is okay </para>
</simplesect>
<simplesect kind="note"><para>: dst, src, size should be aligned with burst_len_in_byte </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="718" column="12" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="147" bodyend="207" declfile="drivers/inc/hpm_dmav2_drv.h" declline="718" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gabf425762e3fa85ed4b1ec738303dfdc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dma_default_handshake_config</definition>
        <argsstring>(DMAV2_Type *ptr, dma_handshake_config_t *config)</argsstring>
        <name>dma_default_handshake_config</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default handshake config. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>default config </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="728" column="6" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="209" bodyend="215" declfile="drivers/inc/hpm_dmav2_drv.h" declline="728" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaee56e6a33451e2047664091db3affb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t dma_setup_handshake</definition>
        <argsstring>(DMAV2_Type *ptr, dma_handshake_config_t *pconfig, bool start_transfer)</argsstring>
        <name>dma_setup_handshake</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref> *</type>
          <declname>pconfig</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>start_transfer</declname>
        </param>
        <briefdescription>
<para>config dma handshake function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>dma handshake config pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true to start transfer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="739" column="12" bodyfile="drivers/src/hpm_dmav2_drv.c" bodystart="217" bodyend="250" declfile="drivers/inc/hpm_dmav2_drv.h" declline="739" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__dma__interface_1gaa0b81f6369640563eddcde87f4243846" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dma_is_idle</definition>
        <argsstring>(DMAV2_Type *ptr)</argsstring>
        <name>dma_is_idle</name>
        <param>
          <type><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether DMA is idle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>DMA base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true DMA is idle </para>
</simplesect>
<simplesect kind="return"><para>false DMA is busy </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="747" column="20" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="747" bodyend="750"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__dma__interface_1gaebef45648957c1a19c3d8f1e125de09a" prot="public" static="no">
        <name>DMA_CHANNEL_PRIORITY_LOW</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga44afe86d85ad9a888d3766c725b0b50e" prot="public" static="no">
        <name>DMA_CHANNEL_PRIORITY_HIGH</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_1T</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa4bd111d43568b12633dbada06b19acd" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_2T</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad6aaad92934235088fea17ab45677325" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_4T</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gacdde44169a21341f5db865bc0ea3a075" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_8T</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga9bed51940d730c351dc256a0fb5f5f26" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_16T</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga84c0885d0a35946a12c27335b7944b9a" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_32T</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga06535b2599dd0621fb1112c561e18632" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_64T</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gadea081158ea5af4e43dff0fc66507636" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_128T</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="33" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa6429d34a4c28a0212689dfe8117729e" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_256T</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="34" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga02d3abe5ed9bce5cecf6ec543c15a36c" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_512T</name>
        <initializer>(9U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="35" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga35e2285fd58fee66ee17af9334447d74" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_1024T</name>
        <initializer>(10U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="36" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_BYTE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="38" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_HALF_WORD</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="39" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_WORD</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="40" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_DOUBLE_WORD</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga63e5c5079bd2c277a9ae852d4eb28bbe" prot="public" static="no">
        <name>DMA_ALIGN_HALF_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(1u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="43" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga8207b05bb8e403cd7dcc9623983902d8" prot="public" static="no">
        <name>DMA_ALIGN_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(3u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="44" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa41ffe1ffcdc6da31cbf79bc897a25a4" prot="public" static="no">
        <name>DMA_ALIGN_DOUBLE_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(7u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="45" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga8b54b46e2fe8f7e09becac962e03091c" prot="public" static="no">
        <name>DMA_STATUS_ERROR_SHIFT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="47" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gac89de362a51ce0aa7d1f00e2aa586c16" prot="public" static="no">
        <name>DMA_STATUS_ABORT_SHIFT</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa472d04c84790d449acf247c8289228c" prot="public" static="no">
        <name>DMA_STATUS_TC_SHIFT</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6d691395ca5489e8559d966ff6505324" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ONGOING</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga3bf53a10dde627d3aa70053bf80b3998" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ERROR</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga1dcf3fe7d1d0a9cc5986c2812f38d043" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ABORT</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="53" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaf3afb94d75d9980f947eb705e0e681d2" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_TC</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="54" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6a5d59c7c2bd1a99a5e92e048d3ce761" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_ERROR</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; (<ref refid="group__dma__interface_1ga8b54b46e2fe8f7e09becac962e03091c" kindref="member">DMA_STATUS_ERROR_SHIFT</ref> + x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="56" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaafa824a0121851c6e17e8bef9d9a51e9" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_ABORT</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; (<ref refid="group__dma__interface_1gac89de362a51ce0aa7d1f00e2aa586c16" kindref="member">DMA_STATUS_ABORT_SHIFT</ref> + x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga3b60523c6cf72219d9e30d50851784b3" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_TC</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; (<ref refid="group__dma__interface_1gaa472d04c84790d449acf247c8289228c" kindref="member">DMA_STATUS_TC_SHIFT</ref> + x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gab43869df6ae6fb7a67ef9744f2c8cf60" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS</name>
        <param><defname>x</defname></param>
        <initializer>                                                           (uint32_t)(<ref refid="group__dma__interface_1ga3b60523c6cf72219d9e30d50851784b3" kindref="member">DMA_CHANNEL_IRQ_STATUS_TC</ref>(x) | \
                                                           <ref refid="group__dma__interface_1gaafa824a0121851c6e17e8bef9d9a51e9" kindref="member">DMA_CHANNEL_IRQ_STATUS_ABORT</ref>(x) | \
                                                           <ref refid="group__dma__interface_1ga6a5d59c7c2bd1a99a5e92e048d3ce761" kindref="member">DMA_CHANNEL_IRQ_STATUS_ERROR</ref>(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="59" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6cad214b5b2320178f3a362899d7aedd" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_GET_ALL_TC</name>
        <param><defname>x</defname></param>
        <initializer>((x) &amp; (((0x01UL &lt;&lt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a656f45b6bf057f160f7d3d40c15bfd64" kindref="member">DMA_SOC_CHANNEL_NUM</ref>) - 1) &lt;&lt; <ref refid="group__dma__interface_1gaa472d04c84790d449acf247c8289228c" kindref="member">DMA_STATUS_TC_SHIFT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="63" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga8fce6d8f58a179f596ef150bb89a2eaa" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_GET_ALL_ABORT</name>
        <param><defname>x</defname></param>
        <initializer>((x) &amp; (((0x01UL &lt;&lt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a656f45b6bf057f160f7d3d40c15bfd64" kindref="member">DMA_SOC_CHANNEL_NUM</ref>) - 1) &lt;&lt; <ref refid="group__dma__interface_1gac89de362a51ce0aa7d1f00e2aa586c16" kindref="member">DMA_STATUS_ABORT_SHIFT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="64" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaea1a89e07d9c7febb2780c35235f98b3" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_GET_ALL_ERROR</name>
        <param><defname>x</defname></param>
        <initializer>((x) &amp; (((0x01UL &lt;&lt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a656f45b6bf057f160f7d3d40c15bfd64" kindref="member">DMA_SOC_CHANNEL_NUM</ref>) - 1) &lt;&lt; <ref refid="group__dma__interface_1ga8b54b46e2fe8f7e09becac962e03091c" kindref="member">DMA_STATUS_ERROR_SHIFT</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="65" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" prot="public" static="no">
        <name>DMA_HANDSHAKE_MODE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="67" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" prot="public" static="no">
        <name>DMA_HANDSHAKE_MODE_HANDSHAKE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="68" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_INCREMENT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_DECREMENT</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_FIXED</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="72" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga073e49f6f503e4e15d565d6d0b26af53" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_NONE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="74" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gae46787818417699652c7c4caf30c09a3" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ERROR</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__dma__regs_8h_1ab61e8d8a93ca2751832faaff9ace3e36" kindref="member">DMA_CHCTRL_CTRL_INTERRMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="75" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga91cfab2415d1e6a87064bde3620989a7" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ABORT</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__dma__regs_8h_1a62b82a2dea9bc55f3a5e24af5266d826" kindref="member">DMA_CHCTRL_CTRL_INTABTMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="76" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga5d455c3b6bea74289062a89e2b214ab6" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_TERMINAL_COUNT</name>
        <initializer><ref refid="HPM6200_2ip_2hpm__dma__regs_8h_1af6c2d323e0f16a9450acadb4d918c50a" kindref="member">DMA_CHCTRL_CTRL_INTTCMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="77" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga290abe53998f5b4f8614a169e7423342" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ALL</name>
        <initializer>    (uint8_t)(<ref refid="group__dma__interface_1ga5d455c3b6bea74289062a89e2b214ab6" kindref="member">DMA_INTERRUPT_MASK_TERMINAL_COUNT</ref> \
            | <ref refid="group__dma__interface_1ga91cfab2415d1e6a87064bde3620989a7" kindref="member">DMA_INTERRUPT_MASK_ABORT</ref> \
            | <ref refid="group__dma__interface_1gae46787818417699652c7c4caf30c09a3" kindref="member">DMA_INTERRUPT_MASK_ERROR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="78" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gac3673569e2d63b7d643b93b1517a345c" prot="public" static="no">
        <name>DMA_SUPPORT_64BIT_ADDR</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dma_drv.h" line="84" column="9" bodyfile="drivers/inc/hpm_dma_drv.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" prot="public" static="no">
        <name>DMA_Type</name>
        <initializer><ref refid="structDMAV2__Type" kindref="compound">DMAV2_Type</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaebef45648957c1a19c3d8f1e125de09a" prot="public" static="no">
        <name>DMA_CHANNEL_PRIORITY_LOW</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga44afe86d85ad9a888d3766c725b0b50e" prot="public" static="no">
        <name>DMA_CHANNEL_PRIORITY_HIGH</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_1T</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa4bd111d43568b12633dbada06b19acd" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_2T</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad6aaad92934235088fea17ab45677325" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_4T</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gacdde44169a21341f5db865bc0ea3a075" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_8T</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga9bed51940d730c351dc256a0fb5f5f26" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_16T</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga84c0885d0a35946a12c27335b7944b9a" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_32T</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="33" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga06535b2599dd0621fb1112c561e18632" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_64T</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="34" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gadea081158ea5af4e43dff0fc66507636" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_128T</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="35" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa6429d34a4c28a0212689dfe8117729e" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_256T</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="36" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga02d3abe5ed9bce5cecf6ec543c15a36c" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_512T</name>
        <initializer>(9U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="37" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga35e2285fd58fee66ee17af9334447d74" prot="public" static="no">
        <name>DMA_NUM_TRANSFER_PER_BURST_1024T</name>
        <initializer>(10U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="38" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_BYTE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="40" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad8d06c3e8fbc475fba6f4de642a86c04" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_HALF_WORD</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_WORD</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="42" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga65156e5cc18672529dd36d306232270a" prot="public" static="no">
        <name>DMA_TRANSFER_WIDTH_DOUBLE_WORD</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="43" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga63e5c5079bd2c277a9ae852d4eb28bbe" prot="public" static="no">
        <name>DMA_ALIGN_HALF_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(1u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="45" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga8207b05bb8e403cd7dcc9623983902d8" prot="public" static="no">
        <name>DMA_ALIGN_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(3u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="46" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaa41ffe1ffcdc6da31cbf79bc897a25a4" prot="public" static="no">
        <name>DMA_ALIGN_DOUBLE_WORD</name>
        <param><defname>x</defname></param>
        <initializer>(x &amp; ~(7u))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="47" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6d691395ca5489e8559d966ff6505324" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ONGOING</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga3bf53a10dde627d3aa70053bf80b3998" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ERROR</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga1dcf3fe7d1d0a9cc5986c2812f38d043" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_ABORT</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaf3afb94d75d9980f947eb705e0e681d2" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_TC</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga548673a27827068aa1076c1038f35c2d" prot="public" static="no">
        <name>DMA_CHANNEL_STATUS_HALF_TC</name>
        <initializer>(16U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="53" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6a5d59c7c2bd1a99a5e92e048d3ce761" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_ERROR</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="55" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaafa824a0121851c6e17e8bef9d9a51e9" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_ABORT</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="56" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga3b60523c6cf72219d9e30d50851784b3" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_TC</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="57" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gabb58e9a850af5efdb870aa3164d4cfcf" prot="public" static="no">
        <name>DMA_CHANNEL_IRQ_STATUS_HALF_TC</name>
        <param><defname>x</defname></param>
        <initializer>(uint32_t)(1 &lt;&lt; x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="58" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" prot="public" static="no">
        <name>DMA_HANDSHAKE_MODE_NORMAL</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" prot="public" static="no">
        <name>DMA_HANDSHAKE_MODE_HANDSHAKE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_INCREMENT</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="63" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad4eea9bc1c4b5c8034997750b6b52f26" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_DECREMENT</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="64" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" prot="public" static="no">
        <name>DMA_ADDRESS_CONTROL_FIXED</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="65" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaf5840c431031347bbac005bcf3ec1352" prot="public" static="no">
        <name>DMA_SRC_BURST_OPT_STANDAND_SIZE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="67" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gab607c98377becb5c4d45cf90e102d1d4" prot="public" static="no">
        <name>DMA_SRC_BURST_OPT_CUSTOM_SIZE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="68" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga107e70ebbbe5a3f98da7326f193923df" prot="public" static="no">
        <name>DMA_HANDSHAKE_OPT_ONE_BURST</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad253c810f5fcb6899871082f848b4585" prot="public" static="no">
        <name>DMA_HANDSHAKE_OPT_ALL_TRANSIZE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gaaf0e5e04140bb71d6ec5e217eb90e46a" prot="public" static="no">
        <name>DMA_SWAP_MODE_TABLE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="73" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gafe6d91b8081267829a371c5f79e3153c" prot="public" static="no">
        <name>DMA_SWAP_MODE_BYTE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="74" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga0f53ea0c82b2df263e12d940728fa1f7" prot="public" static="no">
        <name>DMA_SWAP_MODE_HALF_WORD</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="75" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gad5ffc9f288becc68dc72b8c35a5d37c0" prot="public" static="no">
        <name>DMA_SWAP_MODE_WORD</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="76" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga073e49f6f503e4e15d565d6d0b26af53" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_NONE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="78" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gae46787818417699652c7c4caf30c09a3" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ERROR</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__dmav2__regs_8h_1a21cbed4204d7d05e99e9dfe76ef427e7" kindref="member">DMAV2_CHCTRL_CTRL_INTERRMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="79" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga91cfab2415d1e6a87064bde3620989a7" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ABORT</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__dmav2__regs_8h_1ac0601d201a4f73ad8e8e3407a278c065" kindref="member">DMAV2_CHCTRL_CTRL_INTABTMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga5d455c3b6bea74289062a89e2b214ab6" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_TERMINAL_COUNT</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__dmav2__regs_8h_1a001c022fcca2342d332e4a3a05b5a11f" kindref="member">DMAV2_CHCTRL_CTRL_INTTCMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga6f10b91bcdf35cf7d03ccab0c2250442" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_HALF_TC</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__dmav2__regs_8h_1a9fce87c9261fbc527348f72608381470" kindref="member">DMAV2_CHCTRL_CTRL_INTHALFCNTMASK_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1ga290abe53998f5b4f8614a169e7423342" prot="public" static="no">
        <name>DMA_INTERRUPT_MASK_ALL</name>
        <initializer>    (uint8_t)(<ref refid="group__dma__interface_1ga5d455c3b6bea74289062a89e2b214ab6" kindref="member">DMA_INTERRUPT_MASK_TERMINAL_COUNT</ref> \
            | <ref refid="group__dma__interface_1ga91cfab2415d1e6a87064bde3620989a7" kindref="member">DMA_INTERRUPT_MASK_ABORT</ref> \
            | <ref refid="group__dma__interface_1gae46787818417699652c7c4caf30c09a3" kindref="member">DMA_INTERRUPT_MASK_ERROR</ref> \
            | <ref refid="group__dma__interface_1ga6f10b91bcdf35cf7d03ccab0c2250442" kindref="member">DMA_INTERRUPT_MASK_HALF_TC</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="83" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="define" id="group__dma__interface_1gac3673569e2d63b7d643b93b1517a345c" prot="public" static="no">
        <name>DMA_SUPPORT_64BIT_ADDR</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_dmav2_drv.h" line="89" column="9" bodyfile="drivers/inc/hpm_dmav2_drv.h" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>DMA driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
