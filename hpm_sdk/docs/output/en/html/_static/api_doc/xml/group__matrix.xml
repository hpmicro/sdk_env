<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__matrix" kind="group">
    <compoundname>matrix</compoundname>
    <title>DSP Matrix Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__matrix_1ga9c803c210d7ac4b76fb44924660482b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4098" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4098" bodyend="4107"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga8aca909dfb3559a8724b098613a616c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_f64</definition>
        <argsstring>(const float64_t *src1, const float64_t *src2, float64_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float64_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4117" column="21" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4117" bodyend="4126"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaa94129caac06a0bf0e755f3160f6ff57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4138" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4138" bodyend="4147"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga37263640ebdd852d21bb736a562cbdd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_add_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_add_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Addition of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4159" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4159" bodyend="4168"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga28939f8f448b65162dbe7b838443d04c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_inv_f32</definition>
        <argsstring>(float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_inv_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the inverse matrix of the floating-potint matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix row or column. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the inverse process success or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4178" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4178" bodyend="4187"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaf7d1195891303f68429f9aeacc527354" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_inv_f64</definition>
        <argsstring>(float64_t *src, float64_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_inv_f64</name>
        <param>
          <type>float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4188" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4188" bodyend="4197"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2694ba40e6702c8e09d75240e25e3b28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two floating-point matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4209" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4209" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga3ed426c85b8cd96dca5053caa6b51a45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_f64</definition>
        <argsstring>(const float64_t *src1, const float64_t *src2, float64_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float64_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4220" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4220" bodyend="4229"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2819c13d6a4ece1dde56f110538f12a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two floating-point complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4240" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4240" bodyend="4249"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gae839a9b987734e96b8fd51643cbc01d4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4267" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4267" bodyend="4276"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga7c65498af11d1d5a4936a1f47d3342ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_fast_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_fast_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4277" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4277" bodyend="4286"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga5ce2d2f57c1a36afdef01f60c81356ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q15 complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format input is multiplied yields a 2.30 format, and then added without saturation to a 64-bit accumulator in 34.30 format. Finally, the added output is truncated to 34.15 format by discarding the lower 15 bits, and then saturated to yield a result in 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4304" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4304" bodyend="4313"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga59cf991946f20e6faee1c8d072817b48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(col)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4331" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4331" bodyend="4340"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga505cc734fa70e616ce922a3773d7d058" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_fast_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_fast_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4341" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4341" bodyend="4350"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga6cbad2e069f4544598e4496b0b011a9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmat_mul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_cmat_mul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q31 complex matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input is multiplied yields a 2.62 format. In order to avoid overflows, the input signal must be scaled down by <computeroutput>log2(col)</computeroutput> bits, Finally, the 2.62 accumulator is right shifted by 31 bits to yield a 1.31 format value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4368" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4368" bodyend="4377"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gab3821d447640e097bba2ea057bec2101" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t row, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of two q7 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is multiplied yields a 2.15 format, and then added without saturation to a 32-bit accumulator in 17.15 format. Finally, the added output is truncated to 17.7 format by discarding the lower 7 bits, and then saturated to yield a result in 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4395" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4395" bodyend="4400"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga2be8e4b55feddf562f067c7f760da3c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_vxm_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t col, uint32_t col2)</argsstring>
        <name>hpm_dsp_mat_mul_vxm_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
<para>Multiplication of q7 vetor by matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the first input vector columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the second input matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.7 format input is multiplied yields a 2.15 format, and then added without saturation to a 32-bit accumulator in 17.15 format. Finally, the added output is truncated to 17.7 format by discarding the lower 7 bits, and then saturated to yield a result in 1.7 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4417" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4417" bodyend="4426"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gac3359bda42ba8700416d0c264bf10f61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_dsp_mat_pwr2_cache_f64</definition>
        <argsstring>(const float64_t *src, float64_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_mat_pwr2_cache_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4431" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4431" bodyend="4436"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaaff144f0790d2ba09cb379209ffc37f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_f32</definition>
        <argsstring>(const float32_t *src, float32_t scale, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of floating-potint matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>is the factor to be multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4447" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4447" bodyend="4456"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga4f0aa12d7d196af65d3c18500a3e246d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_q15</definition>
        <argsstring>(const q15_t *src, q15_t scale_fract, int32_t shift, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>scale_fract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of q15 matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale_fract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional multiplication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>arithmetic shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.15 format inputs are multiplied to yield a 2.30 intermediate result and this is shifted with saturation to 1.15 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4472" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4472" bodyend="4481"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gae9852e3b101f40e5942ea1f5d7efa51f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_scale_q31</definition>
        <argsstring>(const q31_t *src, q31_t scale_fract, int32_t shift, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_scale_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>scale_fract</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Multiplt a scale value of q31 matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale_fract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional multiplication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>arithmetic shift. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Function notes:</bold></para>
<para>The 1.31 format input are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 1.31 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4497" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4497" bodyend="4506"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga980f22a064fdbde8e2ff587b71c9f117" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_f64</definition>
        <argsstring>(const float64_t *src1, const float64_t *src2, float64_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float64_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two double-precision floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4519" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4519" bodyend="4529"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1157c9dc698c5ae412cf2b3ed61de494" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4539" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4539" bodyend="4548"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gafe8389f7178c599543913998896bbe33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two q15 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4560" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4560" bodyend="4569"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaf1b3af7f3e77fb0d79f3ba00b16186dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_sub_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_sub_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Substraction of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Ouput results will be saturated in Q31 range [0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4581" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4581" bodyend="4590"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga5a129095818accd33181ad52ae0132c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_f64</definition>
        <argsstring>(const float64_t *src, float64_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_f64</name>
        <param>
          <type>const float64_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float64_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the double-precision floating-potint matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4602" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4602" bodyend="4611"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga6d6c9a3a6e628cc39703fb08f698ef63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the floating-potint matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4620" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4620" bodyend="4625"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga17ccb9100e8f31ce3c727ee4c3e32417" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q15 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4634" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4634" bodyend="4643"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga8f103b765112d6f53f97b0a5048531d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q31 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4652" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4652" bodyend="4661"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga4b88fdfcba817cbe325a932ee25a344f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_u8</definition>
        <argsstring>(const uint8_t *src, uint8_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_u8</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the u8 matricex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the matrix columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4670" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4670" bodyend="4675"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gaee21507f92a3762e2a876c1a5016f05e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_trans_q7</definition>
        <argsstring>(const q7_t *src, q7_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_trans_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Transpose the q7 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in a matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in a matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4685" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4685" bodyend="4690"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1572b3f4872e2fc8559f65172d600e94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_oprod_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t size1, uint32_t size2)</argsstring>
        <name>hpm_dsp_mat_oprod_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size2</declname>
        </param>
        <briefdescription>
<para>Outer production of two q31 matrices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the first input matrix with a size of size1*1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the second input matrix with a size of 1*size2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output matrix with a size of size1 * size2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size1</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the first input matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the second input matrix.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para>This function multiplies a one-column matrix with size1 rows, src1[size1, 1], with a one-row matrix with size2 columns, src2[1, size2], and stores the result into a matrix with size1 rows and size2 columns, dst[size1, size2]. It achieves better efficiency for vector-wise matrix multiplication than for regular matrix multiplication.</para>
<para><bold>Example</bold> <preformatted>
The following equation shows the outer product of two matrices and its result.


Its code example is as follows:

     #define Arow 3
     #define Bcol 2
     q31_t src1[Arow] = {0x200000, 0x100000, 0x50000};
     q31_t src2[Bcol] = {0x10000, 0x30000};
     q31_t dst[Arow * Bcol];
     hpm_dsp_mat_oprod_q31 (src1, src2, dst, Arow, Bcol);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4723" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4723" bodyend="4733"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga1cbd7d2efa0ea89ef9e13c11941917d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for f32 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example</bold> <preformatted>

    #define Arow               2
    #define Acol               3
    float32_t src1[Arow * Acol] = {0.1, -0.1, 0.1, 0.2, -0.2, 0.3};
    float32_t src2[Acol] = {0.2, -0.1, -0.7};
    float32_t dst[Arow];
    hpm_dsp_mat_mul_mxv_f32 (src1, src2, dst, Arow, Acol);

This example also serves as a reference for examples of Q31, Q15 or Q7 functions.
 </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4757" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4757" bodyend="4767"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga511423c60883438ad6527712fb578342" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q15 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4777" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4777" bodyend="4787"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1ga70dc9d3a349273b985194460e605a51a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q31 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4797" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4797" bodyend="4807"/>
      </memberdef>
      <memberdef kind="function" id="group__matrix_1gab231aaccfb8b2484bb5f38b6ac3c2a99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_mat_mul_mxv_q7</definition>
        <argsstring>(const q7_t *src1, const q7_t *src2, q7_t *dst, uint32_t row, uint32_t col)</argsstring>
        <name>hpm_dsp_mat_mul_mxv_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Matrix multiply vector for q7 formats. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src1</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src2</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>number of columns in the matrix and the elements size of vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="4817" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="4817" bodyend="4827"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This set of functions provides basic matrix math operations. The funciotn specifies the size of the matrix and then points to an array. For example, the function definition for the floating-point is shown below: <preformatted>
    void riscv_dsp_funcname_f32(const float32_t *src1,
                            const float32_t *src2,
                                  float32_t *dst,
                                  uint32_t row,
                                  uint32_t col,
                                  uint32_t row2,
                                  uint32_t col2)
</preformatted> where it can be transform to the two matrix. For the matrix 1 is a <computeroutput>row * col</computeroutput> matrix and the matrix 2 is a <computeroutput>rol2 * col2</computeroutput> and the output matrix woild be different since the math operation. There are similar definitions for Q15 and Q31 data types. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
