<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__adc12__interface" kind="group">
    <compoundname>adc12_interface</compoundname>
    <title>ADC12 driver APIs</title>
    <innerclass refid="structadc12__config__t" prot="public">adc12_config_t</innerclass>
    <innerclass refid="structadc12__channel__config__t" prot="public">adc12_channel_config_t</innerclass>
    <innerclass refid="structadc12__channel__threshold__t" prot="public">adc12_channel_threshold_t</innerclass>
    <innerclass refid="structadc12__dma__config__t" prot="public">adc12_dma_config_t</innerclass>
    <innerclass refid="structadc12__seq__dma__data__t" prot="public">adc12_seq_dma_data_t</innerclass>
    <innerclass refid="structadc12__pmt__dma__data__t" prot="public">adc12_pmt_dma_data_t</innerclass>
    <innerclass refid="structadc12__prd__config__t" prot="public">adc12_prd_config_t</innerclass>
    <innerclass refid="structadc12__seq__queue__config__t" prot="public">adc12_seq_queue_config_t</innerclass>
    <innerclass refid="structadc12__seq__config__t" prot="public">adc12_seq_config_t</innerclass>
    <innerclass refid="structadc12__pmt__config__t" prot="public">adc12_pmt_config_t</innerclass>
    <sectiondef kind="user-defined">
      <header>Initialization and Deinitialization</header>
      <memberdef kind="function" id="group__adc12__interface_1ga78f1545f1bdc6cfe61d08dd7280c6226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc12_get_default_config</definition>
        <argsstring>(adc12_config_t *config)</argsstring>
        <name>adc12_get_default_config</name>
        <param>
          <type><ref refid="structadc12__config__t" kindref="compound">adc12_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get a default configuration for an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc12__config__t" kindref="compound">adc12_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="226" column="6" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="11" bodyend="19" declfile="drivers/inc/hpm_adc12_drv.h" declline="226" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gabe970318a8a6dc17fa839e736416aeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adc12_get_channel_default_config</definition>
        <argsstring>(adc12_channel_config_t *config)</argsstring>
        <name>adc12_get_channel_default_config</name>
        <param>
          <type><ref refid="structadc12__channel__config__t" kindref="compound">adc12_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get a default configuration for an ADC12 channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc12__channel__config__t" kindref="compound">adc12_channel_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="233" column="6" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="21" bodyend="30" declfile="drivers/inc/hpm_adc12_drv.h" declline="233" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gafbb1ab70f031d20dda01bae1b0788add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_deinit</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_deinit</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>De-initialize an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of de-initializing an ADC12 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>De-initialize an ADC12 instance successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>De-initialize an ADC12 instance unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="243" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="85" bodyend="91" declfile="drivers/inc/hpm_adc12_drv.h" declline="243" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga1638d81a6447e0deeebb40ebde932dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_init</definition>
        <argsstring>(ADC12_Type *ptr, adc12_config_t *config)</argsstring>
        <name>adc12_init</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__config__t" kindref="compound">adc12_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc12__config__t" kindref="compound">adc12_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of initializing an ADC12 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 instance successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 instance unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>disable adc When the adc is processing data, it will generate an error to initialize the adc again, so you need to shut down the adc before initializing it.</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="254" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="93" bodyend="164" declfile="drivers/inc/hpm_adc12_drv.h" declline="254" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gaa5d18a9bcfd09ecf69c8a4ea52ba026c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_init_channel</definition>
        <argsstring>(ADC12_Type *ptr, adc12_channel_config_t *config)</argsstring>
        <name>adc12_init_channel</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__channel__config__t" kindref="compound">adc12_channel_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize an ADC12 channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc12__channel__config__t" kindref="compound">adc12_channel_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of initializing an ADC12 channel. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 channel successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 channel unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="265" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="166" bodyend="195" declfile="drivers/inc/hpm_adc12_drv.h" declline="265" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gab8c55248482d0736800e142faaa133eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_get_channel_threshold</definition>
        <argsstring>(ADC12_Type *ptr, uint8_t ch, adc12_channel_threshold_t *config)</argsstring>
        <name>adc12_get_channel_threshold</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="structadc12__channel__threshold__t" kindref="compound">adc12_channel_threshold_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get thresholds of an ADC12 channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 channel number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the structure of channel threshold </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of getting thresholds of an ADC12 channel . </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 channel successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialize an ADC12 channel unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="277" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="197" bodyend="209" declfile="drivers/inc/hpm_adc12_drv.h" declline="277" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga60f2a7f772ee8cd3cd17a0d6b863ef29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_set_prd_config</definition>
        <argsstring>(ADC12_Type *ptr, adc12_prd_config_t *config)</argsstring>
        <name>adc12_set_prd_config</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__prd__config__t" kindref="compound">adc12_prd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the the period mode for an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the configuration struct of <ref refid="structadc12__prd__config__t" kindref="compound">adc12_prd_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the the period mode for an ADC12 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the period mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the period mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="288" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="244" bodyend="265" declfile="drivers/inc/hpm_adc12_drv.h" declline="288" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga7cb22a7bfe2132f595a4c03129f52db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_set_seq_config</definition>
        <argsstring>(ADC12_Type *ptr, adc12_seq_config_t *config)</argsstring>
        <name>adc12_set_seq_config</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__seq__config__t" kindref="compound">adc12_seq_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the the sequence mode for an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc12__seq__config__t" kindref="compound">adc12_seq_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the the sequence mode for an ADC12 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the sequence mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the the sequence mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="299" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="278" bodyend="303" declfile="drivers/inc/hpm_adc12_drv.h" declline="299" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga537418bcdeb9157adba6be65546aeb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_set_pmt_config</definition>
        <argsstring>(ADC12_Type *ptr, adc12_pmt_config_t *config)</argsstring>
        <name>adc12_set_pmt_config</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__pmt__config__t" kindref="compound">adc12_pmt_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the preemption mode for an ADC12 instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc12__pmt__config__t" kindref="compound">adc12_pmt_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of configuring the preemption mode for an ADC12 instance. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the preemption mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Configure the preemption mode unsuccessfully due to passing one or more invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="310" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="312" bodyend="340" declfile="drivers/inc/hpm_adc12_drv.h" declline="310" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>DMA Control</header>
      <memberdef kind="function" id="group__adc12__interface_1gae88b2925d9c1c3b3b4f8998f010967e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_set_seq_stop_pos</definition>
        <argsstring>(ADC12_Type *ptr, uint16_t stop_pos)</argsstring>
        <name>adc12_set_seq_stop_pos</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>stop_pos</declname>
        </param>
        <briefdescription>
<para>Configure the stop position offset in the specified memory of DMA write operation for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stop_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>A stop position offset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="325" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="325" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga2fab3d40d8b501b436719835e7d7aaf2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_init_pmt_dma</definition>
        <argsstring>(ADC12_Type *ptr, uint32_t addr)</argsstring>
        <name>adc12_init_pmt_dma</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Configure the start address of DMA write operation for the preemption mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>A start address of DMA write operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="337" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga423c716b99ab4717b25ed5efe51f5128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_init_seq_dma</definition>
        <argsstring>(ADC12_Type *ptr, adc12_dma_config_t *config)</argsstring>
        <name>adc12_init_seq_dma</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structadc12__dma__config__t" kindref="compound">adc12_dma_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the start address of DMA write operation for the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to configuration struct of <ref refid="structadc12__dma__config__t" kindref="compound">adc12_dma_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of DMA initializing for the sequence mode </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 initialize in sequence mode successfully. Please refert to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 initialize in sequence mode unsuccessfully due to passing invalid arguments. Please refert to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="351" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="211" bodyend="242" declfile="drivers/inc/hpm_adc12_drv.h" declline="351" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Status</header>
      <memberdef kind="function" id="group__adc12__interface_1gaf6e5628b28d54a63b4aa0541b5fb9ccd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t adc12_get_status_flags</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_get_status_flags</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get all ADC12 status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A mask indicating all corresponding interrupt statuses. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>mask. Please refer to <ref refid="group__adc12__interface_1ga1a1533725ab804c3a534252a7d4a2d8a" kindref="member">adc12_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="367" column="24" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga0e976a703720f19cc0907503d1c27ce1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_disable_busywait</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_disable_busywait</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set value of the WAIT_DIS bit. The ADC does not block access to the associated peripheral bus until the ADC has completed its conversion. *. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API will be removed from V2.0.x </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="379" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="379" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gab87f81092eb40c0edf9402594699f0b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_enable_busywait</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_enable_busywait</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set value of the WAIT_DIS bit. ADC blocks access to the associated peripheral bus until the ADC completes the conversion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This API will be removed from V2.0.x </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="391" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gab9e71aab3b76a9847b6bbd4d9e5f9f88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_set_nonblocking_read</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_set_nonblocking_read</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set nonblocking read in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>An ADC does not block access to the associated peripheral whether it completes a conversion or not.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="402" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga6fc9b8c6ce36675690337d2893aa7356" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_set_blocking_read</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_set_blocking_read</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Set blocking read in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>An ADC blocks access to the associated peripheral bus until it completes a conversion.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="413" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gafe3809e9074cba3bf40d4b61d31efcee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool adc12_is_nonblocking_mode</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_is_nonblocking_mode</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Judge whether the current setting is none-blocking mode or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result indicating the status of bus waiting. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>True</parametername>
</parameternamelist>
<parameterdescription>
<para>means that nonblocking reading. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>False</parametername>
</parameternamelist>
<parameterdescription>
<para>means that blocking reading. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="427" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga798b3be5b029174d4ccc0d35310cff1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool adc12_get_conv_valid_status</definition>
        <argsstring>(ADC12_Type *ptr, uint8_t ch)</argsstring>
        <name>adc12_get_conv_valid_status</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>Get the status of a conversion validity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral channel. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating the validity of the current conversion result.</para>
</simplesect>
<simplesect kind="note"><para>This function is only used when the WAIT_DIS bit in the BUF_RESULT register is 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="441" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="441" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga976ccf163fdce57fdd2a5b47defe6a03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_clear_status_flags</definition>
        <argsstring>(ADC12_Type *ptr, uint32_t mask)</argsstring>
        <name>adc12_clear_status_flags</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear the status flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask that means the specified flags to be cleared. Please refer to <ref refid="group__adc12__interface_1ga1a1533725ab804c3a534252a7d4a2d8a" kindref="member">adc12_irq_event_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only the specified flags can be cleared by writing the INT_STS register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="455" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="455" bodyend="458"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Interrupts</header>
      <memberdef kind="function" id="group__adc12__interface_1ga508ed98f5d6588cab7fa413128b57199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_enable_interrupts</definition>
        <argsstring>(ADC12_Type *ptr, uint32_t mask)</argsstring>
        <name>adc12_enable_interrupts</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask indicating the specified ADC interrupt events. Please refer to <ref refid="group__adc12__interface_1ga1a1533725ab804c3a534252a7d4a2d8a" kindref="member">adc12_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="473" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga4cc106c0c8134cb793fa93df9e7d4fb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void adc12_disable_interrupts</definition>
        <argsstring>(ADC12_Type *ptr, uint32_t mask)</argsstring>
        <name>adc12_disable_interrupts</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask indicating the specified interrupt events. Please refer to <ref refid="group__adc12__interface_1ga1a1533725ab804c3a534252a7d4a2d8a" kindref="member">adc12_irq_event_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="484" column="20" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="484" bodyend="487"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Trigger and Conversion</header>
      <memberdef kind="function" id="group__adc12__interface_1ga5697c916a8214ca305d81bf8f33b9aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_trigger_seq_by_sw</definition>
        <argsstring>(ADC12_Type *ptr)</argsstring>
        <name>adc12_trigger_seq_by_sw</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Trigger ADC conversions by software in sequence mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC12 software trigger. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 software triggers successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_fail</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 software triggers unsuccessfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="504" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="267" bodyend="275" declfile="drivers/inc/hpm_adc12_drv.h" declline="504" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gacab110b90caa2d9397a003b05f93cfe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_trigger_pmt_by_sw</definition>
        <argsstring>(ADC12_Type *ptr, uint8_t trig_ch)</argsstring>
        <name>adc12_trigger_pmt_by_sw</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_ch</declname>
        </param>
        <briefdescription>
<para>Trigger ADC conversions by software in preemption mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">trig_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>A trigger channel number(e.g. TRIG0A,TRIG0B,TRIG0C...). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC12 software trigger. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 software triggers successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_fail</parametername>
</parameternamelist>
<parameterdescription>
<para>ADC12 software triggers unsuccessfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="515" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="305" bodyend="310" declfile="drivers/inc/hpm_adc12_drv.h" declline="515" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1ga1785f7ec47fbaf77b637ed7640110a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_get_oneshot_result</definition>
        <argsstring>(ADC12_Type *ptr, uint8_t ch, uint16_t *result)</argsstring>
        <name>adc12_get_oneshot_result</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get the result in oneshot mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an ADC12 conversion result. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation result of getting an ADC12 conversion result in oneshot mode. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC12 conversion in oneshot mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC12 conversion in oneshot mode unsuccessfully due to passing invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="527" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="342" bodyend="361" declfile="drivers/inc/hpm_adc12_drv.h" declline="527" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__adc12__interface_1gafe860902f8a045fbbf30e8f72e3d6c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t adc12_get_prd_result</definition>
        <argsstring>(ADC12_Type *ptr, uint8_t ch, uint16_t *result)</argsstring>
        <name>adc12_get_prd_result</name>
        <param>
          <type><ref refid="structADC12__Type" kindref="compound">ADC12_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get the result in the period mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral base address. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch</parametername>
</parameternamelist>
<parameterdescription>
<para>An ADC12 peripheral channel. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a specified ADC12 conversion result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An implementation of getting an ADC12 conversion result in the period mode. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC12 conversion in the period mode successfully. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Get the result of an ADC12 conversion in the period mode unsuccessfully due to passing invalid arguments. Please refer to <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="539" column="12" bodyfile="drivers/src/hpm_adc12_drv.c" bodystart="363" bodyend="373" declfile="drivers/inc/hpm_adc12_drv.h" declline="539" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__adc12__interface_1gac39e2f0d4c899dbc13f237e20418dea2" prot="public" static="no" strong="no">
        <type></type>
        <name>adc12_sample_signal_t</name>
        <enumvalue id="group__adc12__interface_1ggac39e2f0d4c899dbc13f237e20418dea2ad46535381a9438ff4c5b2d5fedc824f4" prot="public">
          <name>adc12_sample_signal_single_ended</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1ggac39e2f0d4c899dbc13f237e20418dea2afdd131e009b2d41f340449f1e3f7348f" prot="public">
          <name>adc12_sample_signal_differential</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1ggac39e2f0d4c899dbc13f237e20418dea2a9cbfcdc1e79f30f31bd0f26380a9b595" prot="public">
          <name>adc12_sample_signal_count</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC12 sample signal types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="47" column="1" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc12__interface_1ga1df11396c1edb6df05ac87f918a5f384" prot="public" static="no" strong="no">
        <type></type>
        <name>adc12_resolution_t</name>
        <enumvalue id="group__adc12__interface_1gga1df11396c1edb6df05ac87f918a5f384ab3a681c64a87a730f6e46fc44776429d" prot="public">
          <name>adc12_res_6_bits</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1df11396c1edb6df05ac87f918a5f384a8834eb3b3fa2e2a4efdd14f11f54e38f" prot="public">
          <name>adc12_res_8_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1df11396c1edb6df05ac87f918a5f384a47ecf47943e96b5ef686e2cc3e9868ca" prot="public">
          <name>adc12_res_10_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1df11396c1edb6df05ac87f918a5f384a794ba1f1594935a43ac87b452a06ca28" prot="public">
          <name>adc12_res_12_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC12 resolutions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="54" column="1" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc12__interface_1ga4adb189f64a24a885497c6a5e7855d47" prot="public" static="no" strong="no">
        <type></type>
        <name>adc12_conversion_mode_t</name>
        <enumvalue id="group__adc12__interface_1gga4adb189f64a24a885497c6a5e7855d47acbbde1ee9d17f7236b9b1a9f5e1efccc" prot="public">
          <name>adc12_conv_mode_oneshot</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga4adb189f64a24a885497c6a5e7855d47a0cde3eb48015f167be0a29906e0bebac" prot="public">
          <name>adc12_conv_mode_period</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga4adb189f64a24a885497c6a5e7855d47a31021f8620d45a70174037edca17bfd2" prot="public">
          <name>adc12_conv_mode_sequence</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga4adb189f64a24a885497c6a5e7855d47acd4c187de9b1e3e23125be0e9b64e94b" prot="public">
          <name>adc12_conv_mode_preemption</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC12 conversion modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="62" column="1" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc12__interface_1ga9ab07374d6229ec9098ee1f36442656e" prot="public" static="no" strong="no">
        <type></type>
        <name>adc12_clock_divider_t</name>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea7a788621ecb3d5615c8ae8fa6200b600" prot="public">
          <name>adc12_clock_divider_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea009500273f0a3fbfe200251d0a6e37f9" prot="public">
          <name>adc12_clock_divider_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656eaa5de8e2c30a6410b9083bb3777ec5f6a" prot="public">
          <name>adc12_clock_divider_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea33ce115e5c688c05651c0ecf03f24af9" prot="public">
          <name>adc12_clock_divider_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea16cc0bb2ad91c0545331e2c68addef70" prot="public">
          <name>adc12_clock_divider_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea5799a9a1df5fb4b9de53decfccf6832a" prot="public">
          <name>adc12_clock_divider_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea7ebc73421bd9cb5e45657f4f3f8fe760" prot="public">
          <name>adc12_clock_divider_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea2c66764eb03bcf9f33d2408cfe2cb721" prot="public">
          <name>adc12_clock_divider_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea3523f98b87bcf375ba8699c8c64205d0" prot="public">
          <name>adc12_clock_divider_9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea2cb06548b76b03d836ebd2e1df91933f" prot="public">
          <name>adc12_clock_divider_10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea5d4978cd66f23768fee63b98728f85b9" prot="public">
          <name>adc12_clock_divider_11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656eaddffd3aaffe548ae73684696df43439b" prot="public">
          <name>adc12_clock_divider_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea73630f1018b98f08eb44b9bbb253ead6" prot="public">
          <name>adc12_clock_divider_13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656eafde429cc7e7f06db74c3d3dadea284ac" prot="public">
          <name>adc12_clock_divider_14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea2157a053261e9a324f762d21063e3880" prot="public">
          <name>adc12_clock_divider_15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga9ab07374d6229ec9098ee1f36442656ea913b2d8ff1f11f5cc5d2ddabb42752b9" prot="public">
          <name>adc12_clock_divider_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC12 Clock Divider. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="70" column="1" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="70" bodyend="87"/>
      </memberdef>
      <memberdef kind="enum" id="group__adc12__interface_1ga1a1533725ab804c3a534252a7d4a2d8a" prot="public" static="no" strong="no">
        <type></type>
        <name>adc12_irq_event_t</name>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aab4b2003da3a9e14839a8eac9384e4af7" prot="public">
          <name>adc12_event_trig_complete</name>
          <initializer>= (0x80000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a trigger conversion is complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aaa6fa867a3cac47f3ba227a30c5409c65" prot="public">
          <name>adc12_event_trig_sw_conflict</name>
          <initializer>= (0x40000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by software-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aad86eb35269b805314aa000c025536964" prot="public">
          <name>adc12_event_trig_hw_conflict</name>
          <initializer>= (0x20000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by hardware-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aa4fd3601843ce2256e76f84e005e441dd" prot="public">
          <name>adc12_event_read_conflict</name>
          <initializer>= (0x10000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused when bus reading from different channels. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aab1608be36676f99b6b2feaf60da39944" prot="public">
          <name>adc12_event_seq_sw_conflict</name>
          <initializer>= (0x8000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by sequence-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aa455902618647bc61927b6889eacde4a3" prot="public">
          <name>adc12_event_seq_hw_conflict</name>
          <initializer>= (0x4000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that a conflict caused by hardware-triggered conversions. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aafadf7062362702e32437dbc7aca0e05e" prot="public">
          <name>adc12_event_seq_dma_abort</name>
          <initializer>= (0x2000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that DMA is stopped currently. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aaa7d10429d2ed4a8f27b84bdc6cd1d402" prot="public">
          <name>adc12_event_seq_full_complete</name>
          <initializer>= (0x1000000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that all of the configured conversion(s) in a queue is(are) complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aa61269a146ed8a18bf5993ffe399a09ba" prot="public">
          <name>adc12_event_seq_single_complete</name>
          <initializer>= (0x800000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that one of the configured conversion(s) in a queue is complete. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__adc12__interface_1gga1a1533725ab804c3a534252a7d4a2d8aa26b29cd8200099dc7312a45e4e261ab5" prot="public">
          <name>adc12_event_dma_fifo_full</name>
          <initializer>= (0x400000UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This mask indicates that DMA FIFO is full currently. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Define ADC12 irq events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="90" column="1" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="90" bodyend="120"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__adc12__interface_1ga3992d2b6165d0ac8161aa52ee05669d6" prot="public" static="no">
        <name>ADC12_IS_SIGNAL_TYPE_INVALID</name>
        <param><defname>TYPE</defname></param>
        <initializer>(TYPE &gt; (uint32_t)<ref refid="group__adc12__interface_1ggac39e2f0d4c899dbc13f237e20418dea2a9cbfcdc1e79f30f31bd0f26380a9b595" kindref="member">adc12_sample_signal_count</ref>)</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the signal type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1ga170c01c7183e4b9a83af75e3ba3ceb83" prot="public" static="no">
        <name>ADC12_IS_CHANNEL_INVALID</name>
        <param><defname>CH</defname></param>
        <initializer>(CH &gt; <ref refid="HPM6700_2HPM6750_2hpm__soc__feature_8h_1a177192710ddc50c0cbbaa75656b5f0c1" kindref="member">ADC12_SOC_MAX_CH_NUM</ref>)</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the channel number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1ga7b393726d50f9584f065e062e0131121" prot="public" static="no">
        <name>ADC12_IS_CHANNEL_SAMPLE_CYCLE_INVALID</name>
        <param><defname>CYC</defname></param>
        <initializer>(CYC == 0)</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the channel sample cycle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1gaa8461bfb163931972692de73888e6043" prot="public" static="no">
        <name>ADC12_IS_TRIG_CH_INVLAID</name>
        <param><defname>CH</defname></param>
        <initializer>(CH &gt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1afe99060ae1eb492673214fd3af8e4fe6" kindref="member">ADC_SOC_MAX_TRIG_CH_NUM</ref>)</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the trigger number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1ga3a47eb8fdffe8cfa7973facb569f187c" prot="public" static="no">
        <name>ADC12_IS_TRIG_LEN_INVLAID</name>
        <param><defname>TRIG_LEN</defname></param>
        <initializer>(TRIG_LEN &gt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ab8bb2b014dd2780fa7f17cd6c21eed3d" kindref="member">ADC_SOC_MAX_TRIG_CH_LEN</ref>)</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the trigger length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="35" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1ga794c667bb94a600b7ef493e52c5c1d4b" prot="public" static="no">
        <name>ADC12_IS_SEQ_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a48f987e19c946a0b5c45536743d0b656" kindref="member">ADC_SOC_SEQ_MAX_LEN</ref>))</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the sequence length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="38" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1gace2478509112dcd2dd13cd978bf78351" prot="public" static="no">
        <name>ADC12_IS_SEQ_DMA_BUFF_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ad077905ebb9a5f49342a508df47f1f61" kindref="member">ADC_SOC_SEQ_MAX_DMA_BUFF_LEN_IN_4BYTES</ref>))</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the DMA buffer length in the sequence mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="41" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__adc12__interface_1ga445a4a18d3dc04454b07c4b6a794a5a4" prot="public" static="no">
        <name>ADC12_IS_PMT_DMA_BUFF_LEN_INVLAID</name>
        <param><defname>LEN</defname></param>
        <initializer>((LEN == 0) || (LEN &gt; <ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ac7a2197dac0b7c2a588e41e17f752e90" kindref="member">ADC_SOC_PMT_MAX_DMA_BUFF_LEN_IN_4BYTES</ref>))</initializer>
        <briefdescription>
<para>Define ADC12 validity check for the DMA buffer length in the preemption mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_adc12_drv.h" line="44" column="9" bodyfile="drivers/inc/hpm_adc12_drv.h" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ADC12 driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
