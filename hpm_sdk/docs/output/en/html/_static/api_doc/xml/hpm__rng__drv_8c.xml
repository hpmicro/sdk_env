<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__rng__drv_8c" kind="file" language="C++">
    <compoundname>hpm_rng_drv.c</compoundname>
    <includes refid="hpm__rng__drv_8h" local="yes">hpm_rng_drv.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_rng_drv.h</label>
        <link refid="hpm__rng__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_rng_drv.c</label>
        <link refid="hpm__rng__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>hpm_rng_regs.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__rng__drv_8c_1af1e34179c728edf5ab3470ebd4688270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t rng_run_selftest</definition>
        <argsstring>(RNG_Type *ptr)</argsstring>
        <name>rng_run_selftest</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="10" column="12" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="hpm__rng__drv_8c_1a49751ebd5cd7c9b1667a63b391336126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t rng_feed_rand_to_sdp</definition>
        <argsstring>(RNG_Type *ptr)</argsstring>
        <name>rng_feed_rand_to_sdp</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="26" column="12" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="26" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="hpm__rng__drv_8c_1af17667965a799e5fdbb153fb0e0c2c0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t rng_rand</definition>
        <argsstring>(RNG_Type *ptr, void *buf, uint32_t count_in_byte, bool wait)</argsstring>
        <name>rng_rand</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count_in_byte</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="49" column="19" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="49" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="hpm__rng__drv_8c_1a4f1ea635839be3f32b6a46867b672984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t rng_rand_wait</definition>
        <argsstring>(RNG_Type *ptr, void *buf, uint32_t count_in_byte)</argsstring>
        <name>rng_rand_wait</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count_in_byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="82" column="12" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="hpm__rng__drv_8c_1a3653517bf10db51c64e08325368fe3c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t rng_rand_no_wait</definition>
        <argsstring>(RNG_Type *ptr, void *buf, uint32_t count_in_byte)</argsstring>
        <name>rng_rand_no_wait</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count_in_byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="87" column="12" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="hpm__rng__drv_8c_1abe6791d3b4e44d27923b4148ceb833df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t rng_init</definition>
        <argsstring>(RNG_Type *ptr)</argsstring>
        <name>rng_init</name>
        <param>
          <type><ref refid="structRNG__Type" kindref="compound">RNG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/src/hpm_rng_drv.c" line="92" column="12" bodyfile="drivers/src/hpm_rng_drv.c" bodystart="92" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__rng__drv_8h" kindref="compound">hpm_rng_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1af1e34179c728edf5ab3470ebd4688270" kindref="member">rng_run_selftest</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structRNG__Type_1af0634c43be541f1b4d7290924397d451" kindref="member">CMD</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a8f2041eca518a146957c49450edecf78" kindref="member">RNG_CMD_SLFCHK_MASK</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(status<sp/>&amp;<sp/>(<ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ae272278ad7a0ef4464f5a0e6984f6ed3" kindref="member">RNG_STA_FUNCERR_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a863307f6876de7fb5fd7ae44de50ac99" kindref="member">RNG_STA_SCDN_MASK</ref>)));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>&amp;<sp/>(<ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ad52f5f0f818c659bc636ae286309ba54" kindref="member">RNG_STA_SCPF_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ae272278ad7a0ef4464f5a0e6984f6ed3" kindref="member">RNG_STA_FUNCERR_MASK</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1a49751ebd5cd7c9b1667a63b391336126" kindref="member">rng_feed_rand_to_sdp</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fifo_level;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__common__interface_1ga25f003de16c08a4888b69f619d70f427" kindref="member">ARRAY_SIZE</ref>(ptr-&gt;<ref refid="structRNG__Type_1aa1e2b8fea68e4789d34e179743cde70a" kindref="member">R2SK</ref>);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ae272278ad7a0ef4464f5a0e6984f6ed3" kindref="member">RNG_STA_FUNCERR_MASK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_level<sp/>=<sp/>(ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1afc3230fa869bab47a7d7d8b2ca183d2b" kindref="member">RNG_STA_FRNNU_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a570aa031401b507be05e16d5cecc825c" kindref="member">RNG_STA_FRNNU_SHIFT</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!fifo_level);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>:<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structRNG__Type_1aa1e2b8fea68e4789d34e179743cde70a" kindref="member">R2SK</ref>[i]));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1af17667965a799e5fdbb153fb0e0c2c0e" kindref="member">rng_rand</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>uint32_t<sp/>count_in_byte,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>fifo_level;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_in_byte<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(count_in_byte<sp/>/<sp/>4);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ae272278ad7a0ef4464f5a0e6984f6ed3" kindref="member">RNG_STA_FUNCERR_MASK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fifo_level<sp/>=<sp/>(ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1afc3230fa869bab47a7d7d8b2ca183d2b" kindref="member">RNG_STA_FRNNU_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a570aa031401b507be05e16d5cecc825c" kindref="member">RNG_STA_FRNNU_SHIFT</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!fifo_level<sp/>&amp;&amp;<sp/>wait);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fifo_level)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)((uint32_t)buf<sp/>+<sp/>i<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t))<sp/>=<sp/>ptr-&gt;<ref refid="structRNG__Type_1a256fa9e2b18c0fa1293d0378cb0c7756" kindref="member">FO2B</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__rng__drv_8h_1a871a83db4e53fc6c6872b5ac7cc94f39a1ee64788da4401abe328ec7edbb0c9ee" kindref="member">status_rng_not_available</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1a4f1ea635839be3f32b6a46867b672984" kindref="member">rng_rand_wait</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>uint32_t<sp/>count_in_byte)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__rng__drv_8c_1af17667965a799e5fdbb153fb0e0c2c0e" kindref="member">rng_rand</ref>(ptr,<sp/>buf,<sp/>count_in_byte,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1a3653517bf10db51c64e08325368fe3c4" kindref="member">rng_rand_no_wait</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/>uint32_t<sp/>count_in_byte)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__rng__drv_8c_1af17667965a799e5fdbb153fb0e0c2c0e" kindref="member">rng_rand</ref>(ptr,<sp/>buf,<sp/>count_in_byte,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__rng__drv_8c_1abe6791d3b4e44d27923b4148ceb833df" kindref="member">rng_init</ref>(<ref refid="structRNG__Type" kindref="compound">RNG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>interrupt<sp/>and<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structRNG__Type_1af0634c43be541f1b4d7290924397d451" kindref="member">CMD</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ac71b1bb46f19e4c5aabc4d5cfe127ab6" kindref="member">RNG_CMD_CLRERR_MASK</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generating<sp/>seed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structRNG__Type_1af0634c43be541f1b4d7290924397d451" kindref="member">CMD</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a7799b2cc2c945be476ac40edab022b08" kindref="member">RNG_CMD_GENSD_MASK</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a3dc04a9dec24e59e1c11a20a9ddb66e8" kindref="member">RNG_STA_FSDDN_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structRNG__Type_1a285eb97fc7ebee40231aeab47a3de5ee" kindref="member">STA</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1ae272278ad7a0ef4464f5a0e6984f6ed3" kindref="member">RNG_STA_FUNCERR_MASK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9ab3c0359cb713a70f593f2e46ab12bb39" kindref="member">status_fail</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1ggaae05225933a42f81e7c4a9fb286596f9a99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>auto<sp/>seeding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structRNG__Type_1a655b9f94d734a4b1ae3646258a4784bd" kindref="member">CTRL</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__rng__regs_8h_1a425718109396e4e14a76af83033655fc" kindref="member">RNG_CTRL_AUTRSD_MASK</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_rng_drv.c"/>
  </compounddef>
</doxygen>
