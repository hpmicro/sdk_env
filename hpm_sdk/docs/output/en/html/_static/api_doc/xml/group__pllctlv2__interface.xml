<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__pllctlv2__interface" kind="group">
    <compoundname>pllctlv2_interface</compoundname>
    <title>PLLCTLV2 driver APIs</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__pllctlv2__interface_1ga76d8da3065450fa6315fe202a27045e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctlv2_xtal_is_stable</definition>
        <argsstring>(PLLCTLV2_Type *ptr)</argsstring>
        <name>pllctlv2_xtal_is_stable</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check if external crystal is stable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if external crystal is stable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="30" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga1bd44db6e31fee97f2004326d6fbff01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctlv2_xtal_is_enabled</definition>
        <argsstring>(PLLCTLV2_Type *ptr)</argsstring>
        <name>pllctlv2_xtal_is_enabled</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check if external crystal is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if external crystal is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="40" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gaddb286cc23f63e739ec19820e4af019a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctlv2_xtal_set_rampup_time</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint32_t rc24m_cycles)</argsstring>
        <name>pllctlv2_xtal_set_rampup_time</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rc24m_cycles</declname>
        </param>
        <briefdescription>
<para>Set external crystal ramp-up time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rc24m_cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>Cycles of RC24M clock </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="50" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga5c800268cd22e9996a0442ba4e93f289" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctlv2_pll_is_stable</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctlv2_pll_is_stable</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Check is PLL is stable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLv2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if PLL is stable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="61" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gadc6f28103bfebec1d968f914b33d609a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctlv2_pll_is_enabled</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctlv2_pll_is_enabled</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Check if PLL is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if PLL is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="72" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gaee6fd288109eaf2f1f8aa151880bc712" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctlv2_select_reference_clock</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint8_t src)</argsstring>
        <name>pllctlv2_select_reference_clock</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Select the PLL reference clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL reference lcock source <itemizedlist>
<listitem><para>0 - XTAL24M </para>
</listitem>
<listitem><para>1 - IRC24M </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="85" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gab41eb08256054a6b3b4bd7a88e8a7e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pllctlv2_enable_spread_spectrum</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint32_t step, uint32_t stop)</argsstring>
        <name>pllctlv2_enable_spread_spectrum</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
<para>Enable PLL Spread Spectrum feature. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">step</parametername>
</parameternamelist>
<parameterdescription>
<para>Step of spread spectrum modulator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stop</parametername>
</parameternamelist>
<parameterdescription>
<para>Stop point of spread spectrum modulator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="97" column="6" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="64" bodyend="80" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="97" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gaab6e8ae0bcedf38f02b74757d878426e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctlv2_disable_spread_spectrum</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctlv2_disable_spread_spectrum</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Disable PLL Spread spectrum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="104" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gabebec54955a8509f7ad01494d47ce189" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctlv2_set_pll_lock_time</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint32_t xtal_cycles)</argsstring>
        <name>pllctlv2_set_pll_lock_time</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xtal_cycles</declname>
        </param>
        <briefdescription>
<para>Set PLL lock time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xtal_cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>external Crystal cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="115" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga809192d9ce2df1a324af4d42c8e6c05d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctlv2_set_pll_step_time</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint32_t xtal_cycles)</argsstring>
        <name>pllctlv2_set_pll_step_time</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xtal_cycles</declname>
        </param>
        <briefdescription>
<para>Set PLL step time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xtal_cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>external Crystal cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="126" column="20" bodyfile="drivers/inc/hpm_pllctlv2_drv.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gaff5bb0f3606276e5d4fe2fe52c3cd3d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pllctlv2_set_postdiv</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint8_t div_index, uint8_t div_value)</argsstring>
        <name>pllctlv2_set_postdiv</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_value</declname>
        </param>
        <briefdescription>
<para>Set PLL Post divider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_value</parametername>
</parameternamelist>
<parameterdescription>
<para>divider value, divider factor is 1 + div_value / 5 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="138" column="6" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="82" bodyend="89" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga90b8e7a170d012739f0269169a6e599d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctlv2_set_pll_with_mfi_mfn</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint32_t mfi, uint32_t mfn)</argsstring>
        <name>pllctlv2_set_pll_with_mfi_mfn</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mfn</declname>
        </param>
        <briefdescription>
<para>Set the PLL via the low-level MFI, MFD and MFN PLL frequency = REF CLOCK * (mfi + 1.0 * mfn / mfd) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mfi</parametername>
</parameternamelist>
<parameterdescription>
<para>MFI value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mfn</parametername>
</parameternamelist>
<parameterdescription>
<para>MFN value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>some parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>operation is successful </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="150" column="12" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="21" bodyend="37" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="150" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1gacf2349e8337f2c07b70b4185a4c678f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctlv2_init_pll_with_freq</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint32_t freq_in_hz)</argsstring>
        <name>pllctlv2_init_pll_with_freq</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>freq_in_hz</declname>
        </param>
        <briefdescription>
<para>Initialize PLL to specified frequency Note: the specified PLL clock needs to be enabled before being configured. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq_in_hz</parametername>
</parameternamelist>
<parameterdescription>
<para>expected PLL frequency </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>some parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>operation is successful </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; PLLCTLV2 PLL MFN Factor</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="161" column="12" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="39" bodyend="62" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="161" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga5da82012c20e61d57c4eb25d07eec48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pllctlv2_get_pll_freq_in_hz</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctlv2_get_pll_freq_in_hz</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Get the specified PLl clock frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PLL frequency in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="169" column="10" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="91" bodyend="101" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="169" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctlv2__interface_1ga17dbea12fc6c2bccb279beead41018a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pllctlv2_get_pll_postdiv_freq_in_hz</definition>
        <argsstring>(PLLCTLV2_Type *ptr, uint8_t pll, uint8_t div_index)</argsstring>
        <name>pllctlv2_get_pll_postdiv_freq_in_hz</name>
        <param>
          <type><ref refid="structPLLCTLV2__Type" kindref="compound">PLLCTLV2_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_index</declname>
        </param>
        <briefdescription>
<para>Get the selected PLL post divider frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTLV2 base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Post divider index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PLL frequency in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctlv2_drv.h" line="178" column="10" bodyfile="drivers/src/hpm_pllctlv2_drv.c" bodystart="103" bodyend="113" declfile="drivers/inc/hpm_pllctlv2_drv.h" declline="178" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PLLCTLV2 driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
