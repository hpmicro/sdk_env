<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__sdm__interface" kind="group">
    <compoundname>sdm_interface</compoundname>
    <title>SDM driver APIs</title>
    <innerclass refid="structsdm__control__t" prot="public">sdm_control_t</innerclass>
    <innerclass refid="structsdm__channel__common__config__t" prot="public">sdm_channel_common_config_t</innerclass>
    <innerclass refid="structsdm__comparator__config__t" prot="public">sdm_comparator_config_t</innerclass>
    <innerclass refid="structsdm__filter__config__t" prot="public">sdm_filter_config_t</innerclass>
    <innerclass refid="structsdm__output__config__t" prot="public">sdm_output_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sdm__interface_1ga61a66f30f2f42b82fcfa37800fa97b3c" prot="public" static="no" strong="no">
        <type></type>
        <name>sdm_sampling_mode_t</name>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3ca36de294c95ac368eb17f67a62225ac7c" prot="public">
          <name>sdm_sampling_rising_clk_edge</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3ca5983c2edda9d96d84797895042696796" prot="public">
          <name>sdm_sampling_every_clk_edge</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3caf8edfbaee7f895a47849c7b4595ace8c" prot="public">
          <name>sdm_sampling_manchester_mode</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3ca00818d4422c94f8710814645cd9ad5b6" prot="public">
          <name>sdm_sampling_falling_clk_edge</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3ca6cfc2e8daaba8275d1ff9c2309db2d4d" prot="public">
          <name>sdm_sampling_rising_two_clk_edge</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga61a66f30f2f42b82fcfa37800fa97b3ca1e74d80514d4f339e96c7f6e4a2db8fc" prot="public">
          <name>sdm_sampling_falling_two_clk_edge</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="33" column="1" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="33" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdm__interface_1ga3ace677c42e7ea4960f25d4a0ffb1d85" prot="public" static="no" strong="no">
        <type></type>
        <name>sdm_filter_type_t</name>
        <enumvalue id="group__sdm__interface_1gga3ace677c42e7ea4960f25d4a0ffb1d85aab1b486b58bbb20a9cf5d6430d9f31ed" prot="public">
          <name>sdm_filter_sinc1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga3ace677c42e7ea4960f25d4a0ffb1d85a6968fa0e46fcf86936934f5e7e3cab53" prot="public">
          <name>sdm_filter_sinc2</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga3ace677c42e7ea4960f25d4a0ffb1d85ae8f64c21231e6c03677aeb214aef0675" prot="public">
          <name>sdm_filter_sinc3</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga3ace677c42e7ea4960f25d4a0ffb1d85aad7a51d4c3e86725f7f397b3fa941d48" prot="public">
          <name>sdm_filter_fast_sinc2</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="42" column="1" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdm__interface_1ga2e08c666a9d23c386252929e55707e32" prot="public" static="no" strong="no">
        <type></type>
        <name>sdm_comparator_event_t</name>
        <enumvalue id="group__sdm__interface_1gga2e08c666a9d23c386252929e55707e32a3e7b09695541e37e6ee37740197b27e0" prot="public">
          <name>sdm_comparator_no_event</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga2e08c666a9d23c386252929e55707e32ac62dbd501f96c5b53d6c498403d2f698" prot="public">
          <name>sdm_comparator_event_out_high_threshold</name>
          <initializer>= SDM_CH_SCST_CMPH_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga2e08c666a9d23c386252929e55707e32ad289512dd89864393ede1f7cf46d95e7" prot="public">
          <name>sdm_comparator_event_out_low_threshold</name>
          <initializer>= SDM_CH_SCST_CMPL_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga2e08c666a9d23c386252929e55707e32ac6add7c7ac9923d660d53ab651d95a99" prot="public">
          <name>sdm_comparator_event_hz</name>
          <initializer>= SDM_CH_SCST_HZ_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga2e08c666a9d23c386252929e55707e32aa63153f17536d66de2347618d4081483" prot="public">
          <name>sdm_comparator_event_invalid_clk</name>
          <initializer>= SDM_CH_SCST_MF_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="128" column="1" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="128" bodyend="134"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdm__interface_1ga81ec1fb46ffa37b7db0eea696e998070" prot="public" static="no" strong="no">
        <type></type>
        <name>sdm_channel_int_status_mask_t</name>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070afacc3e38c5a752e3ca32285890179f3c" prot="public">
          <name>sdm_chn0_error_mask</name>
          <initializer>= SDM_INT_EN_CH0ERR_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070a974e820d406e62fede8964ffa27da896" prot="public">
          <name>sdm_chn1_error_mask</name>
          <initializer>= SDM_INT_EN_CH1ERR_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070a8ba46d5c58a5e176cce07298eb79d4dc" prot="public">
          <name>sdm_chn2_error_mask</name>
          <initializer>= SDM_INT_EN_CH2ERR_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070ae3855f3fa5ed89b9b749e88476a98971" prot="public">
          <name>sdm_chn3_error_mask</name>
          <initializer>= SDM_INT_EN_CH3ERR_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070a4596284bea9b0966f27263ab14efc0f4" prot="public">
          <name>sdm_chn0_data_ready_mask</name>
          <initializer>= SDM_INT_EN_CH0DRY_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070ac3a1345a23c0edd1ff67a375df70157e" prot="public">
          <name>sdm_chn1_data_ready_mask</name>
          <initializer>= SDM_INT_EN_CH1DRY_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070a2c5dd13635a305bba570d8671cfeed80" prot="public">
          <name>sdm_chn2_data_ready_mask</name>
          <initializer>= SDM_INT_EN_CH2DRY_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga81ec1fb46ffa37b7db0eea696e998070a2593fbda99a6383179590eae91d30dc3" prot="public">
          <name>sdm_chn3_data_ready_mask</name>
          <initializer>= SDM_INT_EN_CH3DRY_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="136" column="1" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="136" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="group__sdm__interface_1ga9163df5d5d66774bee99b0eba915ae2d" prot="public" static="no" strong="no">
        <type></type>
        <name>sdm_channel_enable_mask_t</name>
        <enumvalue id="group__sdm__interface_1gga9163df5d5d66774bee99b0eba915ae2da1862bf043144126cde44617cab6eb312" prot="public">
          <name>sdm_chn0_enable_mask</name>
          <initializer>= 1U &lt;&lt; SDM_CTRL_CH_EN_SHIFT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga9163df5d5d66774bee99b0eba915ae2da231250c6bd4d151b540b5d3b9e237b9d" prot="public">
          <name>sdm_chn1_enable_mask</name>
          <initializer>= 1U &lt;&lt; (SDM_CTRL_CH_EN_SHIFT + 1U)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga9163df5d5d66774bee99b0eba915ae2daf2966a61112e0dbda73980cc082dd936" prot="public">
          <name>sdm_chn2_enable_mask</name>
          <initializer>= 1U &lt;&lt; (SDM_CTRL_CH_EN_SHIFT + 2U)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sdm__interface_1gga9163df5d5d66774bee99b0eba915ae2da554a041ad196729d43d22dc130e0faa4" prot="public">
          <name>sdm_chn3_enable_mask</name>
          <initializer>= 1U &lt;&lt; (SDM_CTRL_CH_EN_SHIFT + 3U)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="147" column="1" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="147" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__sdm__interface_1ga7a91894eabb048dadbf9337e8be7b6f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_module_interrupt</definition>
        <argsstring>(SDM_Type *ptr, bool enable)</argsstring>
        <name>sdm_enable_module_interrupt</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>sdm enable module interrupt </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enable, false for disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="164" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="164" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gab0df1343da18eb1dcc6c531bd2cb6951" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_channel</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, bool enable)</argsstring>
        <name>sdm_enable_channel</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>sdm enable channel </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enable, false for disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="180" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaf675cf89fe120418c35f30aee7f8f1e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_channel_filter</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, bool enable)</argsstring>
        <name>sdm_enable_channel_filter</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>sdm enable channel sample data function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enable, false for disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="196" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="196" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga614bb6d38b02a9aa8480f0e97d6e5780" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_channel_comparator</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, bool enable)</argsstring>
        <name>sdm_enable_channel_comparator</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>sdm enable channel amplitude detect function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enable, false for disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="212" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga8c08ff8be006596d60e65b04b16b9f23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_channel_by_mask</definition>
        <argsstring>(SDM_Type *ptr, uint32_t ch_mask)</argsstring>
        <name>sdm_enable_channel_by_mask</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ch_mask</declname>
        </param>
        <briefdescription>
<para>sdm enable channel by mask </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>ch_mask supports bitwise or operation, this API could enable multiple channels at the same time</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_mask</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__sdm__interface_1ga9163df5d5d66774bee99b0eba915ae2d" kindref="member">sdm_channel_enable_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="229" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gae3a60de07a8167c24e83c6ded0d6c7ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_set_channel_sampling_mode</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, sdm_sampling_mode_t mode)</argsstring>
        <name>sdm_set_channel_sampling_mode</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="group__sdm__interface_1ga61a66f30f2f42b82fcfa37800fa97b3c" kindref="member">sdm_sampling_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>sdm set channel sampling mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__sdm__interface_1ga61a66f30f2f42b82fcfa37800fa97b3c" kindref="member">sdm_sampling_mode_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="241" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="241" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga22de12d531da2979a566fedf1784682d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_enable_channel_interrupt</definition>
        <argsstring>(SDM_Type *ptr, uint32_t mask)</argsstring>
        <name>sdm_enable_channel_interrupt</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>sdm enable channel interrupt </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__sdm__interface_1ga81ec1fb46ffa37b7db0eea696e998070" kindref="member">sdm_channel_int_status_mask_t</ref>, support bitwise or operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="253" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga9e6db974a050b88558755d0ac58d02a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdm_get_status</definition>
        <argsstring>(SDM_Type *ptr)</argsstring>
        <name>sdm_get_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>sdm get status register value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t sdm status register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="264" column="24" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaecebe65c285a6abb614551e539ba04d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdm_get_channel_data_ready_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_data_ready_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>get channel data ready status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true data ready </para>
</simplesect>
<simplesect kind="return"><para>false not ready </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="277" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gad75ce3a0103b08908c77817131b29566" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool sdm_get_channel_data_error_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_data_error_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>get channel error status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true error occur </para>
</simplesect>
<simplesect kind="return"><para>false no error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="290" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga3cb232cb33cac7bffc626a22c22c8126" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_set_ch_fifo_threshold</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint8_t threshold)</argsstring>
        <name>sdm_set_ch_fifo_threshold</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>sdm set channel&apos;s fifo threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>threshold value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="302" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaede542f656e41c657d31a7c45ca96ec2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdm_get_ch_fifo_threshold</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_ch_fifo_threshold</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel fifo threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t fifo threshold value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="314" column="23" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga7e869d2391e06514c4f45653ed3ec417" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdm_get_channel_filter_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_filter_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel filter status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t channel filter status register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="326" column="24" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga75e3e34b24d5403895f86fa98574016a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_clean_channel_filter_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint32_t mask)</argsstring>
        <name>sdm_clean_channel_filter_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>sdm clean channel sample data status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>status mask value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="368" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga83586c9c7e1c22f5d65dd7375b5707e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdm_get_channel_fifo_data_count</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_fifo_data_count</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel data count in fifo </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t data count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="380" column="23" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga9ba10c957317fee5f0ca413cb453522c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t sdm_get_channel_fifo_data</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_fifo_data</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel filter output data in fifo </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int32_t data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="392" column="23" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaadd72ba9ffb4306b6a46833f12f171d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t sdm_get_channel_clock_cycle_count</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_clock_cycle_count</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel input clock cycle count </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t clock cycle count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="404" column="23" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga8ae6c36f6fea07192b3ac7f01aebe2e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t sdm_get_channel_comparator_data</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_comparator_data</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel comparator data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t comparator data </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="416" column="24" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gabff599c51e1f7a9534ec6a4febdd33a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_set_channel_comparator_high_threshold</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint16_t value)</argsstring>
        <name>sdm_set_channel_comparator_high_threshold</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sdm set channel comparator high threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>high threshold value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="428" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gade47e0b6b0455f59f0bf35a239f10ec9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_set_channel_comparator_zero_crossing_threshold</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint16_t value)</argsstring>
        <name>sdm_set_channel_comparator_zero_crossing_threshold</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sdm set channel comparator zero crossing threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>zero crossing threshold value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="440" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaa72e13c5a81e446ad78758579a049e33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_set_channel_comparator_low_threshold</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint16_t value)</argsstring>
        <name>sdm_set_channel_comparator_low_threshold</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sdm set channel comparator low threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>low threshold value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="452" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gabac861fa1459c7d2ad4d269f1f97aa43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdm_get_channel_comparator_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch)</argsstring>
        <name>sdm_get_channel_comparator_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sdm get channel comparator status register value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t channel comparator status register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="464" column="24" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gae646597229673c423cdc255b1545382a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void sdm_clean_channel_comparator_status</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch, uint32_t mask)</argsstring>
        <name>sdm_clean_channel_comparator_status</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>sdm clean channel amplitude detect status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>status mask value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="476" column="20" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga5938eac9390cf4657c25c6b618ff71d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_get_default_module_control</definition>
        <argsstring>(SDM_Type *ptr, sdm_control_t *control)</argsstring>
        <name>sdm_get_default_module_control</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdm__control__t" kindref="compound">sdm_control_t</ref> *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>sdm get default module control </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__control__t" kindref="compound">sdm_control_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; configure clk sync for all channels</para>
<para>&lt; configure data sync for all channels</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="487" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="15" bodyend="21" declfile="drivers/inc/hpm_sdm_drv.h" declline="487" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga14c4630123a9d58bfcae17ae8d607b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_init_module</definition>
        <argsstring>(SDM_Type *ptr, sdm_control_t *control)</argsstring>
        <name>sdm_init_module</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdm__control__t" kindref="compound">sdm_control_t</ref> *</type>
          <declname>control</declname>
        </param>
        <briefdescription>
<para>sdm init module </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__control__t" kindref="compound">sdm_control_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="495" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="23" bodyend="36" declfile="drivers/inc/hpm_sdm_drv.h" declline="495" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga193289f80e6af2294bbabcb52420f6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_get_channel_common_setting</definition>
        <argsstring>(SDM_Type *ptr, sdm_channel_common_config_t *config)</argsstring>
        <name>sdm_get_channel_common_setting</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdm__channel__common__config__t" kindref="compound">sdm_channel_common_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>sdm get channel common setting </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__channel__common__config__t" kindref="compound">sdm_channel_common_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="503" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="38" bodyend="44" declfile="drivers/inc/hpm_sdm_drv.h" declline="503" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga2478e3e28b188e1c351944d59458a570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_config_channel_common_setting</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, sdm_channel_common_config_t *config)</argsstring>
        <name>sdm_config_channel_common_setting</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="structsdm__channel__common__config__t" kindref="compound">sdm_channel_common_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>sdm config channel&apos;s common setting </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__channel__common__config__t" kindref="compound">sdm_channel_common_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="512" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="46" bodyend="62" declfile="drivers/inc/hpm_sdm_drv.h" declline="512" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga710b8e06eef8976a72812a859e08bf60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_get_channel_default_filter_config</definition>
        <argsstring>(SDM_Type *ptr, sdm_filter_config_t *filter_config)</argsstring>
        <name>sdm_get_channel_default_filter_config</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdm__filter__config__t" kindref="compound">sdm_filter_config_t</ref> *</type>
          <declname>filter_config</declname>
        </param>
        <briefdescription>
<para>sdm get channel default filter config </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structfilter__config" kindref="compound">filter_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__filter__config__t" kindref="compound">sdm_filter_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; 1- 256</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="520" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="64" bodyend="89" declfile="drivers/inc/hpm_sdm_drv.h" declline="520" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gad4ee97c30d041e7febab894ff96ea8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_config_channel_filter</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, sdm_filter_config_t *filter_config)</argsstring>
        <name>sdm_config_channel_filter</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="structsdm__filter__config__t" kindref="compound">sdm_filter_config_t</ref> *</type>
          <declname>filter_config</declname>
        </param>
        <briefdescription>
<para>sdm config channel filter </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structfilter__config" kindref="compound">filter_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__filter__config__t" kindref="compound">sdm_filter_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="529" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="108" bodyend="141" declfile="drivers/inc/hpm_sdm_drv.h" declline="529" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gafdcb7ab9c58f5a443f16c9220e30f822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_get_channel_default_comparator_config</definition>
        <argsstring>(SDM_Type *ptr, sdm_comparator_config_t *cmp_config)</argsstring>
        <name>sdm_get_channel_default_comparator_config</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdm__comparator__config__t" kindref="compound">sdm_comparator_config_t</ref> *</type>
          <declname>cmp_config</declname>
        </param>
        <briefdescription>
<para>sdm get channel default comparator config </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__comparator__config__t" kindref="compound">sdm_comparator_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; 1-32, when 32, write 0 into bitfield</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="537" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="91" bodyend="106" declfile="drivers/inc/hpm_sdm_drv.h" declline="537" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga2c40357845567cb8170f03d66c3023e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdm_config_channel_comparator</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, sdm_comparator_config_t *cmp_config)</argsstring>
        <name>sdm_config_channel_comparator</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type><ref refid="structsdm__comparator__config__t" kindref="compound">sdm_comparator_config_t</ref> *</type>
          <declname>cmp_config</declname>
        </param>
        <briefdescription>
<para>sdm config channel comparator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structsdm__comparator__config__t" kindref="compound">sdm_comparator_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="546" column="6" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="143" bodyend="158" declfile="drivers/inc/hpm_sdm_drv.h" declline="546" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1ga7d601a72668c8573e2338c579987c510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdm_receive_one_filter_data</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, bool using_fifo, int8_t *data, uint8_t data_len_in_bytes)</argsstring>
        <name>sdm_receive_one_filter_data</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>using_fifo</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_len_in_bytes</declname>
        </param>
        <briefdescription>
<para>sdm receive one filter data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>using_fifo</parametername>
</parameternamelist>
<parameterdescription>
<para>true for getting data from fifo, false for getting data from register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data buff </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len_in_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>output data len in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success only if it succeeds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="558" column="12" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="160" bodyend="187" declfile="drivers/inc/hpm_sdm_drv.h" declline="558" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__sdm__interface_1gaabdf2c3c19243587e8d0cf7f7591d6a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdm_receive_filter_data</definition>
        <argsstring>(SDM_Type *ptr, uint8_t ch_index, bool using_fifo, int8_t *data, uint32_t count, uint8_t data_len_in_bytes)</argsstring>
        <name>sdm_receive_filter_data</name>
        <param>
          <type><ref refid="structSDM__Type" kindref="compound">SDM_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_index</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>using_fifo</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_len_in_bytes</declname>
        </param>
        <briefdescription>
<para>sdm receive filter data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SDM base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_index</parametername>
</parameternamelist>
<parameterdescription>
<para>channel index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>using_fifo</parametername>
</parameternamelist>
<parameterdescription>
<para>true for getting data from fifo, false for getting data from register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data buff </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>data count </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len_in_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>output data len in bytes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success only if it succeeds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="571" column="12" bodyfile="drivers/src/hpm_sdm_drv.c" bodystart="189" bodyend="201" declfile="drivers/inc/hpm_sdm_drv.h" declline="571" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__sdm__interface_1ga3ba97d2857790143743e9581fc138472" prot="public" static="no">
        <name>SAMPLING_MODE_MASK</name>
        <initializer>(0x7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1ga195729ce444d38e7bf67161b0c3c2bc1" prot="public" static="no">
        <name>CHN_SAMPLING_MODE_SHIFT</name>
        <param><defname>ch</defname></param>
        <initializer>((ch) * 3U + <ref refid="HPM6200_2ip_2hpm__sdm__regs_8h_1ade7aac8224cca9b01623f67f5f14181e" kindref="member">SDM_CTRL_CHMD_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1ga3d22d13f702e940e11990f3443d0a0e0" prot="public" static="no">
        <name>CHN_SAMPLING_MODE_MASK</name>
        <param><defname>ch</defname></param>
        <initializer>(<ref refid="group__sdm__interface_1ga3ba97d2857790143743e9581fc138472" kindref="member">SAMPLING_MODE_MASK</ref> &lt;&lt; <ref refid="group__sdm__interface_1ga195729ce444d38e7bf67161b0c3c2bc1" kindref="member">CHN_SAMPLING_MODE_SHIFT</ref>(ch))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1ga6015c75d6a0656fd9262f0951d8c3a9c" prot="public" static="no">
        <name>CH0_EN_MASK</name>
        <initializer>(0x1U &lt;&lt; <ref refid="HPM6200_2ip_2hpm__sdm__regs_8h_1ad2be2cc91660a078fcdf0f0803dfb6ec" kindref="member">SDM_CTRL_CH_EN_SHIFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1gacca693a02edb26b71b148e24dfc1942a" prot="public" static="no">
        <name>CHN_EN_MASK</name>
        <param><defname>ch</defname></param>
        <initializer>(<ref refid="group__sdm__interface_1ga6015c75d6a0656fd9262f0951d8c3a9c" kindref="member">CH0_EN_MASK</ref> &lt;&lt; (ch))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1ga67f9a663100d53b9723f3a257033cbfb" prot="public" static="no">
        <name>CHN_ERR_MASK</name>
        <param><defname>ch</defname></param>
        <initializer>(<ref refid="HPM6200_2ip_2hpm__sdm__regs_8h_1af3a442b0099b153fae961bba6c5f14df" kindref="member">SDM_INT_EN_CH0ERR_MASK</ref> &lt;&lt; (ch))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sdm__interface_1ga60712e7964218d7e4d8f421088600c6b" prot="public" static="no">
        <name>CHN_DRY_MASK</name>
        <param><defname>ch</defname></param>
        <initializer>(<ref refid="HPM6200_2ip_2hpm__sdm__regs_8h_1af54e554bbdbb24cf248f300fa51bc26f" kindref="member">SDM_INT_EN_CH0DRY_MASK</ref> &lt;&lt; (ch))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_sdm_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_sdm_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SDM APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
