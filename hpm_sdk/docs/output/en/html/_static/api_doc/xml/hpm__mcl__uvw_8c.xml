<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__uvw_8c" kind="file" language="C++">
    <compoundname>hpm_mcl_uvw.c</compoundname>
    <includes refid="hpm__mcl__uvw_8h" local="yes">hpm_mcl_uvw.h</includes>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.c</label>
        <link refid="hpm__mcl__uvw_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_mcl_uvw.h</label>
        <link refid="hpm__mcl__uvw_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="9">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__uvw_8c_1a7a04e6d78a7c0733fdf99b208ab0c098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_uvw_get_theta</definition>
        <argsstring>(void *encoder_base, uint8_t *last_pos, float deta_theta, float *theta)</argsstring>
        <name>hpm_mcl_uvw_get_theta</name>
        <param>
          <type>void *</type>
          <declname>encoder_base</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>last_pos</declname>
        </param>
        <param>
          <type>float</type>
          <declname>deta_theta</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
<para>Getting the angle in uvw mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encoder_base</parametername>
</parameternamelist>
<parameterdescription>
<para>HALL or QEIV2 Base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>last_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Global variables with initial value zero </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deta_theta</parametername>
</parameternamelist>
<parameterdescription>
<para>Angle value per call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>Current angle value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.c" line="9" column="16" bodyfile="middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.c" bodystart="9" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__uvw_8h" kindref="compound">hpm_mcl_uvw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__uvw_8c_1a7a04e6d78a7c0733fdf99b208ab0c098" kindref="member">hpm_mcl_uvw_get_theta</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoder_base,<sp/>uint8_t<sp/>*last_pos,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deta_theta,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*theta)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPMSOC_HAS_HPMSDK_HALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__hall__interface_1ga4df0b14a598ca2e88efd2615dd418b48" kindref="member">hall_rotate_direction_t</ref><sp/>dir;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>encoder_theta;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)last_pos;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder_theta<sp/>=<sp/>*theta;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/><ref refid="group__hall__interface_1ga82d2c0f2320adf27477a0ec6e6b59f31" kindref="member">hall_get_rotate_direction</ref>((<ref refid="structHALL__Type" kindref="compound">HALL_Type</ref><sp/>*)encoder_base);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/><ref refid="group__hall__interface_1gga8864e0956d97664acd7fb70765a6991ca148d5eae0dcdbe2dce77b7a9299fb6a8" kindref="member">hall_rotate_direction_forward</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>+=<sp/>deta_theta;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>-=<sp/>deta_theta;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoder_theta<sp/>&gt;<sp/><ref refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" kindref="member">MCL_2PI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>-=<sp/><ref refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" kindref="member">MCL_2PI</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(encoder_theta<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>+=<sp/><ref refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" kindref="member">MCL_2PI</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>*theta<sp/>=<sp/>encoder_theta;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HPMSOC_HAS_HPMSDK_QEIV2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pos;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>encoder_theta;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)deta_theta;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder_theta<sp/>=<sp/>*theta;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="group__qeiv2__interface_1gab04274c2cbdddec581e604b8575bc0ea" kindref="member">qeiv2_get_postion</ref>((<ref refid="structQEIV2__Type" kindref="compound">QEIV2_Type</ref><sp/>*)encoder_base);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>/=<sp/>QEIV2_ANGLE_PRE;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(pos<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>&gt;<sp/>*last_pos)<sp/>||<sp/>(*last_pos<sp/>-<sp/>pos<sp/>&gt;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>-=<sp/>deta_theta;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>&lt;<sp/>*last_pos)<sp/>||<sp/>(pos<sp/>-<sp/>*last_pos<sp/>&gt;<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoder_theta<sp/>+=<sp/>deta_theta;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>*last_pos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>*theta<sp/>=<sp/>encoder_theta;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.c"/>
  </compounddef>
</doxygen>
