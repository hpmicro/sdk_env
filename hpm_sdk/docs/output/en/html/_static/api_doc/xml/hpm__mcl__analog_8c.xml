<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__analog_8c" kind="file" language="C++">
    <compoundname>hpm_mcl_analog.c</compoundname>
    <includes refid="hpm__mcl__analog_8h" local="yes">hpm_mcl_analog.h</includes>
    <incdepgraph>
      <node id="4">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>hpm_mcl_filter.h</label>
        <link refid="hpm__mcl__filter_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c</label>
        <link refid="hpm__mcl__analog_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_mcl_analog.h</label>
        <link refid="hpm__mcl__analog_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="3">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="13">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__analog_8c_1ae621a365bae94e9a04a96e31fd430586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_init</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_cfg_t *cfg, mcl_cfg_t *mcl_cfg)</argsstring>
        <name>hpm_mcl_analog_init</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> *</type>
          <declname>mcl_cfg</declname>
        </param>
        <briefdescription>
<para>Initialize data structures for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcl_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" line="9" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="9" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8c_1a23e18b2e083e09ab7dcd6f4071475728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_get_value</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn, float *value)</argsstring>
        <name>hpm_mcl_analog_get_value</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Get the value of the analog channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Processed Sample Values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" line="63" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="63" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8c_1ab4e091c1e3985c0bcdfc3e14b1778cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_iir_filter_init</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn, mcl_filter_iir_df1_t *iir)</argsstring>
        <name>hpm_mcl_analog_iir_filter_init</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> *</type>
          <declname>iir</declname>
        </param>
        <briefdescription>
<para>Initializing the iir filter for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iir</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" line="89" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="89" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8c_1ab19d91ffa005004fb1d8f2e82a644519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_disable_iir_filter</definition>
        <argsstring>(mcl_analog_t *analog, mcl_analog_chn_t chn)</argsstring>
        <name>hpm_mcl_analog_disable_iir_filter</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Turn off the iir filter for analog functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" line="100" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__analog_8c_1a101c66fc83aaa5d4a3b9b80516dfdccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_analog_step_convert</definition>
        <argsstring>(mcl_analog_t *analog, float value, mcl_analog_chn_t chn, float angle, float *output)</argsstring>
        <name>hpm_mcl_analog_step_convert</name>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Current conversion of stepper motors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data acquired by the analog function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>electrical angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Transformed data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" line="109" column="16" bodyfile="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c" bodystart="109" bodyend="132"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__analog_8h" kindref="compound">hpm_mcl_analog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8c_1ae621a365bae94e9a04a96e31fd430586" kindref="member">hpm_mcl_analog_init</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="structmcl__analog__cfg__t" kindref="compound">mcl_analog_cfg_t</ref><sp/>*cfg,<sp/><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref><sp/>*mcl_cfg)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref><sp/>=<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea73b9dca4fe0281419bf6a7ad1fb4234b" kindref="member">analog_status_init</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(analog<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref><sp/>=<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ea99e61eeca9369e405bd4fea089ee9c45" kindref="member">analog_status_null</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(mcl_cfg<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1ae9d68ec64159ca25e365fd46e0f82a4b" kindref="member">get_value</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a700cd68ec04a3cc08b94e42f315793da" kindref="member">init</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(((cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ae0a0e6da2292ca048082ef1f44328581" kindref="member">enable_process_by_user</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>||<sp/>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a9caaf38256ba74c6a66f6fbd2513b8ef" kindref="member">process_by_user</ref><sp/>!=<sp/>NULL)),<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref><sp/>=<sp/>cfg;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref><sp/>=<sp/>&amp;mcl_cfg-&gt;<ref refid="structmcl__cfg__t_1add1b0983240b6f82d3bc5753ac37844b" kindref="member">physical</ref>.<ref refid="structmcl__physical__para__t_1a8b940362b9f4aa2bcd06848bfb2d9137" kindref="member">board</ref>.<ref refid="structphysical__board__t_1a0ca91c85852de177a985396791335740" kindref="member">analog</ref>[0];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a05c0671eee91b42ef5d71e3dbc8374a2" kindref="member">num_current_sample_res</ref><sp/>=<sp/>&amp;mcl_cfg-&gt;<ref refid="structmcl__cfg__t_1add1b0983240b6f82d3bc5753ac37844b" kindref="member">physical</ref>.<ref refid="structmcl__physical__para__t_1a8b940362b9f4aa2bcd06848bfb2d9137" kindref="member">board</ref>.<ref refid="structphysical__board__t_1a62b1c01a02772f6df86aa3b31794c207" kindref="member">num_current_sample_res</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a700cd68ec04a3cc08b94e42f315793da" kindref="member">init</ref>()<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a93b002eab2917030fa029bd356fedb20" kindref="member">mcl_analog_init_error</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1a65d6771db72fa49e67f182dae8ef10a5" kindref="member">enable_a_current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_num++;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aad8eddad861a1e44336789fc2b51005a" kindref="member">analog_a_current</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1a5774d874a70c61ddd5de66316befafd3" kindref="member">enable_b_current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_num++;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7ed6f1f4a16e96471c54d3d27b16648f" kindref="member">analog_b_current</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1a43111017c3b3bd2732ac5da058b3e9c6" kindref="member">enable_c_current</ref>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_num++;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1c6df855d543763f5ed606533e913b0d" kindref="member">analog_c_current</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1a1e38b2aeeb84ea9b7a6a756b2dddab03" kindref="member">enable_a_voltage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a1ee481c47ae347ab94f30994be02c899" kindref="member">analog_a_voltage</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1af8b51421185c124474268d5d07198020" kindref="member">enable_b_voltage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7b6d1cbca12474e7db085badea250605" kindref="member">analog_b_voltage</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1aae25dec9d00a20a097bb335b318b8cec" kindref="member">enable_c_voltage</ref>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aa93a60c7a056403af8b076536b5a21cd" kindref="member">analog_c_voltage</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1af981fe53cf8766f98b9f2ee59eedd91d" kindref="member">enable_vbus</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(cfg-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a17f074bec74cc317d9329b5f6035eb30" kindref="member">update_sample_location</ref>(<ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a93c40e9750d69847fee558f193c4eff2" kindref="member">analog_vbus</ref>,<sp/>0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ad51b91df0bf940d68bec69c946ffd990" kindref="member">mcl_analog_update_location_error</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(*analog-&gt;<ref refid="structmcl__analog__t_1a05c0671eee91b42ef5d71e3dbc8374a2" kindref="member">num_current_sample_res</ref><sp/>==<sp/>current_num,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a5df83cb02f3d9deca64a321eca8158b9" kindref="member">mcl_invalid_argument</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(*analog-&gt;<ref refid="structmcl__analog__t_1a05c0671eee91b42ef5d71e3dbc8374a2" kindref="member">num_current_sample_res</ref><sp/>==<sp/>2,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a18bf2817786c1682f1c0509d88ba8933" kindref="member">mcl_in_development</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref><sp/>=<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ead7edbc5db0e03d1626bf5a026eed69fc" kindref="member">analog_status_run</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8c_1a23e18b2e083e09ab7dcd6f4071475728" kindref="member">hpm_mcl_analog_get_value</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*value)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>adc_val;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(analog<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(value<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(analog-&gt;<ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref><sp/>==<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497ead7edbc5db0e03d1626bf5a026eed69fc" kindref="member">analog_status_run</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4ac9660398a528594bf84adb4215b7a81e" kindref="member">mcl_analog_not_ready</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1aa1a87daee1af58e93c5aa4a32f793f5b" kindref="member">MCL_ASSERT_EXEC_CODE_AND_RETURN</ref>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1ae9d68ec64159ca25e365fd46e0f82a4b" kindref="member">get_value</ref>(chn,<sp/>&amp;adc_val)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a9a7975a6fb2352261f50bdb29095c35f" kindref="member">status</ref><sp/>=<sp/><ref refid="hpm__mcl__analog_8h_1a80e36af09fe54b06fef465e5fd60497eabf8eb7654f6d884eb0214d0315c23a79" kindref="member">analog_status_fail</ref>,<sp/><ref refid="hpm__mcl__analog_8h_1a50c88c9b2a0775c8fc2c31dc341792b4a51356c08afcafa07f69412da6c59455f" kindref="member">mcl_analog_get_value_error</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ae0a0e6da2292ca048082ef1f44328581" kindref="member">enable_process_by_user</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ad81976d56385630cdc0f9b6c8f77a520" kindref="member">callback</ref>.<ref refid="structmcl__analog__callback__t_1a9caaf38256ba74c6a66f6fbd2513b8ef" kindref="member">process_by_user</ref>(chn,<sp/>adc_val,<sp/>&amp;val0)<sp/>==<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>adc_val;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>(val0<sp/>*<sp/>analog-&gt;<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref>[chn].<ref refid="structphysical__board__analog__t_1a9416990e960f1f7da9204aa5f8d5b16b" kindref="member">adc_reference_vol</ref><sp/>/<sp/>analog-&gt;<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref>[chn].<ref refid="structphysical__board__analog__t_1aba986f937bc94eee12e143b4c692b342" kindref="member">sample_precision</ref>)<sp/>/</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref>[chn].<ref refid="structphysical__board__analog__t_1a96ffb43c720c0466816b2ddb759440b4" kindref="member">opamp_gain</ref><sp/>/<sp/>analog-&gt;<ref refid="structmcl__analog__t_1a4d5b729cb32726c1c25b1f6250135855" kindref="member">board_parameter</ref>[chn].<ref refid="structphysical__board__analog__t_1a192096562144068583f32a658dff5d04" kindref="member">sample_res</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ad7b962346d96bcdc53d8f7162280f506" kindref="member">enable_filter</ref>[chn])<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/><ref refid="hpm__mcl__filter_8c_1a2acfcbb9d64faac619b31ae9901f9491" kindref="member">hpm_mcl_filter_iir_df1</ref>(analog-&gt;<ref refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" kindref="member">iir</ref>[chn],<sp/>val0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1afecb0757590df7eb4a895e4c3dc09864" kindref="member">current</ref>[chn]<sp/>=<sp/>val0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>val0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8c_1ab4e091c1e3985c0bcdfc3e14b1778cb1" kindref="member">hpm_mcl_analog_iir_filter_init</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/><ref refid="structmcl__filter__iir__df1__t" kindref="compound">mcl_filter_iir_df1_t</ref><sp/>*iir)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(analog<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(iir<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" kindref="member">iir</ref>[chn]<sp/>=<sp/>iir;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ad7b962346d96bcdc53d8f7162280f506" kindref="member">enable_filter</ref>[chn]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>,<sp/>0,<sp/>iir-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1ac80ed0899a9ec325c600ec81d422c662" kindref="member">section</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8c_1ab19d91ffa005004fb1d8f2e82a644519" kindref="member">hpm_mcl_analog_disable_iir_filter</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref>(analog<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>analog-&gt;<ref refid="structmcl__analog__t_1aa32f89636f4c2f0b65a546e967a8d7ae" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__analog__cfg__t_1ad7b962346d96bcdc53d8f7162280f506" kindref="member">enable_filter</ref>[chn]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(analog-&gt;<ref refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" kindref="member">iir</ref>[chn]-&gt;<ref refid="structmcl__filter__iir__df1__t_1a15640933ccf63eabff39e27a376d5af5" kindref="member">mem</ref>,<sp/>0,<sp/>analog-&gt;<ref refid="structmcl__analog__t_1af941a0f59753ae8b5bda58d344559cf5" kindref="member">iir</ref>[chn]-&gt;<ref refid="structmcl__filter__iir__df1__t_1aa505c6ddb00741c4681d12a9abda1b84" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__filter__iir__df1__cfg__t_1ac80ed0899a9ec325c600ec81d422c662" kindref="member">section</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmcl__filter__iir__df1__memory__t" kindref="compound">mcl_filter_iir_df1_memory_t</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__analog_8c_1a101c66fc83aaa5d4a3b9b80516dfdccc" kindref="member">hpm_mcl_analog_step_convert</ref>(<ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4" kindref="member">mcl_analog_chn_t</ref><sp/>chn,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)analog;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(output<sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(chn)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4aad8eddad861a1e44336789fc2b51005a" kindref="member">analog_a_current</ref>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((angle<sp/>&gt;=<sp/>(0.75f<sp/>*<sp/><ref refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" kindref="member">MCL_PI</ref>))<sp/>&amp;&amp;<sp/>(angle<sp/>&lt;=<sp/>(1.75f<sp/>*<sp/><ref refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" kindref="member">MCL_PI</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*output<sp/>=<sp/>-value;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*output<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__analog_8h_1a3b0205fd4a82c2687a6ff2d590cec3d4a7ed6f1f4a16e96471c54d3d27b16648f" kindref="member">analog_b_current</ref>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((angle<sp/>&lt;=<sp/>(0.25f<sp/>*<sp/><ref refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" kindref="member">MCL_PI</ref>))<sp/>||<sp/>(angle<sp/>&gt;=<sp/>(1.25f<sp/>*<sp/><ref refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" kindref="member">MCL_PI</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*output<sp/>=<sp/>-value;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*output<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a5df83cb02f3d9deca64a321eca8158b9" kindref="member">mcl_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c"/>
  </compounddef>
</doxygen>
