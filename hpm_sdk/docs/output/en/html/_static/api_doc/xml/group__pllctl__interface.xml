<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__pllctl__interface" kind="group">
    <compoundname>pllctl_interface</compoundname>
    <title>PLLCTL driver APIs</title>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__pllctl__interface_1gab9c5d7a0f40d3855d8d54540ffd54fbd" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__pllctl__interface_1ggab9c5d7a0f40d3855d8d54540ffd54fbda3fa666edd89077065fc97eb95942931a" prot="public">
          <name>status_pllctl_not_enabled</name>
          <initializer>=  ((uint32_t)(status_group_pllctl)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pllctl__interface_1ggab9c5d7a0f40d3855d8d54540ffd54fbda67a02dd116738171c1afa34d31bf3543" prot="public">
          <name>status_pllctl_out_of_range</name>
          <initializer>=  ((uint32_t)(status_group_pllctl)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="42" column="1" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="42" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__pllctl__interface_1gab8859c2f420775ae0a8282db23fe181e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctl_pll_unlock</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint32_t lock_mask)</argsstring>
        <name>pllctl_pll_unlock</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lock_mask</declname>
        </param>
        <briefdescription>
<para>Unlock pll. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of PLL parts to be unlocked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="58" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga410812aa2a415878623279f853d6fb2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctl_pll_lock</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint32_t lock_mask)</argsstring>
        <name>pllctl_pll_lock</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lock_mask</declname>
        </param>
        <briefdescription>
<para>Lock pll. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lock_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of PLL parts to be locked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="71" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gaccd66f951ffe2658c594abd51814fc09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_pll_ss_disable</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctl_pll_ss_disable</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Disable spread spectrum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="84" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="84" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga1cb7d7fcb3251d38e61120df293ec782" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_pll_powerdown</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctl_pll_powerdown</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Power down target PLL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="104" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="104" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga4274e0440d448c49ffc027c3be426317" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_pll_poweron</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctl_pll_poweron</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Power on target PLL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="124" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="124" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga931f9d23dd556dfcec071fde49a80dc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_pll_ss_enable</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t spread, uint8_t div, bool down_spread)</argsstring>
        <name>pllctl_pll_ss_enable</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>spread</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>down_spread</declname>
        </param>
        <briefdescription>
<para>Enable spread spectrum mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spread</parametername>
</parameternamelist>
<parameterdescription>
<para>Spread spectrum depth (1-31, from 0.1% to 3.1%) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div</parametername>
</parameternamelist>
<parameterdescription>
<para>Spread spectrum divider (1-63, divide by 1 to 63) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">down_spread</parametername>
</parameternamelist>
<parameterdescription>
<para>Set true if need down-spread, otherwise center-spread</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="160" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="160" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga5a0322295494aa584793a62c5927c6a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_set_postdiv1</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t div)</argsstring>
        <name>pllctl_set_postdiv1</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <briefdescription>
<para>Set postdiv1 for PLL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div</parametername>
</parameternamelist>
<parameterdescription>
<para>Postdiv1 value (0x1~0x7)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="195" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="195" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga7150f289eb4608709d9cc93c57e4b5f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_set_fbdiv_int</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint16_t fbdiv)</argsstring>
        <name>pllctl_set_fbdiv_int</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fbdiv</declname>
        </param>
        <briefdescription>
<para>Set fbdiv for PLL integer mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Fout = Fref/refdiv * fbdiv / postdiv1</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fbdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Fbdiv value (0x1~0x1000) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>fbdiv value can not set too large, if Fref/refdiv * fbdiv &gt; 2GHz, it might cause irrecoverable damage to that PLL</para>
</simplesect>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="219" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="219" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gaaf5c623915a7aa2a1434ccf07df6a7db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_set_fbdiv_frac</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint16_t fbdiv)</argsstring>
        <name>pllctl_set_fbdiv_frac</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fbdiv</declname>
        </param>
        <briefdescription>
<para>Set fbdiv for PLL fraction mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Fout = Fref/refdive * (fbdiv + frac/2^24)/postdiv1</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fbdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Fbdiv value (0x1~0x1000) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>fbdiv value can not set too large, if Fref/refdiv * fbdiv &gt; 2GHz, it might cause irrecoverable damage to that PLL</para>
</simplesect>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="242" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="242" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gad6944ae4511978f29719db041b764c0d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_set_frac</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint32_t frac)</argsstring>
        <name>pllctl_set_frac</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frac</declname>
        </param>
        <briefdescription>
<para>Set fraction for PLL fraction mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frac</parametername>
</parameternamelist>
<parameterdescription>
<para>24-bit fixed float point value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="263" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="263" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga876316522e5ce6207a83afbc9614612f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_get_div</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t div_index)</argsstring>
        <name>pllctl_get_div</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_index</declname>
        </param>
        <briefdescription>
<para>Get PLL divx value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target DIV to query</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Divider value of target DIV </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="283" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="283" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga5a92ec53c69591548a747d3c8105e75f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t pllctl_set_div</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t div_index, uint16_t div)</argsstring>
        <name>pllctl_set_div</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_index</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>div</declname>
        </param>
        <briefdescription>
<para>Set divider. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_index</parametername>
</parameternamelist>
<parameterdescription>
<para>DIV index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider value (starting from 1)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="306" column="26" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="306" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gae0adf14235ee37388f6f6dd7ddccc3f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctl_div_is_stable</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t div_index)</argsstring>
        <name>pllctl_div_is_stable</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div_index</declname>
        </param>
        <briefdescription>
<para>Check if specific PLL DIV is stable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Target DIV to check</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if target PLL DIV is stable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="333" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga8442e12a22d7fb560485d2e88c4b15ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctl_pll_is_enabled</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctl_pll_is_enabled</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Check if target PLL is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if target PLL is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="353" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gad330d44d20a314ca8f47693903f8e3c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctl_xtal_is_stable</definition>
        <argsstring>(PLLCTL_Type *ptr)</argsstring>
        <name>pllctl_xtal_is_stable</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check if XTAL is stable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if XTAL is stable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="365" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga6b46e9265a46db939a93cdc86d2114c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pllctl_xtal_is_enabled</definition>
        <argsstring>(PLLCTL_Type *ptr)</argsstring>
        <name>pllctl_xtal_is_enabled</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check if XTAL is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if XTAL is enabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="377" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga63f3716221535f3b2fafcc81a84b78a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pllctl_xtal_set_rampup_time</definition>
        <argsstring>(PLLCTL_Type *ptr, uint32_t cycles)</argsstring>
        <name>pllctl_xtal_set_rampup_time</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="387" column="20" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga42ce3268bcff8f50aec59877a039ffd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctl_set_pll_work_mode</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, bool int_mode)</argsstring>
        <name>pllctl_set_pll_work_mode</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>int_mode</declname>
        </param>
        <briefdescription>
<para>Set pll work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>true: integer mode, false - fraction mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="401" column="12" bodyfile="drivers/src/hpm_pllctl_drv.c" bodystart="26" bodyend="48" declfile="drivers/inc/hpm_pllctl_drv.h" declline="401" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gac21393aa2b216e943d84042c2ab6207f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctl_set_refdiv</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint8_t div)</argsstring>
        <name>pllctl_set_refdiv</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <briefdescription>
<para>Set refdiv. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider value (0x1-0x3F)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="412" column="12" bodyfile="drivers/src/hpm_pllctl_drv.c" bodystart="50" bodyend="79" declfile="drivers/inc/hpm_pllctl_drv.h" declline="412" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1gaf842de75b99d637f4c24c14063369f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctl_init_int_pll_with_freq</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint32_t freq_in_hz)</argsstring>
        <name>pllctl_init_int_pll_with_freq</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>freq_in_hz</declname>
        </param>
        <briefdescription>
<para>Initialize PLL working at integer mode with specific frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq_in_hz</parametername>
</parameternamelist>
<parameterdescription>
<para>Target frequency, expected &gt;= 375000000Hz</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay</para>
</simplesect>
<simplesect kind="note"><para>The actual frequency might be slightly different from freq_in_hz due to calculation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="425" column="12" bodyfile="drivers/src/hpm_pllctl_drv.c" bodystart="81" bodyend="146" declfile="drivers/inc/hpm_pllctl_drv.h" declline="425" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga0d2078e89146023194fd42c6d6c73bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pllctl_init_frac_pll_with_freq</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll, uint32_t freq_in_hz)</argsstring>
        <name>pllctl_init_frac_pll_with_freq</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>freq_in_hz</declname>
        </param>
        <briefdescription>
<para>Initialize PLL working at franction mode with specific frequency. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq_in_hz</parametername>
</parameternamelist>
<parameterdescription>
<para>Target frequency, expected &gt;= 375000000Hz</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if everything is okay </para>
</simplesect>
<simplesect kind="note"><para>The actual frequency might be slightly different from freq_in_hz due to calculation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="438" column="12" bodyfile="drivers/src/hpm_pllctl_drv.c" bodystart="148" bodyend="218" declfile="drivers/inc/hpm_pllctl_drv.h" declline="438" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pllctl__interface_1ga6ba63ccd276fc2421e4e1455b93ffd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t pllctl_get_pll_freq_in_hz</definition>
        <argsstring>(PLLCTL_Type *ptr, uint8_t pll)</argsstring>
        <name>pllctl_get_pll_freq_in_hz</name>
        <param>
          <type><ref refid="structPLLCTL__Type" kindref="compound">PLLCTL_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pll</declname>
        </param>
        <briefdescription>
<para>Get frequency of target PLL. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>PLLCTL base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pll</parametername>
</parameternamelist>
<parameterdescription>
<para>Target PLL index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>current frequency of target PLL in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="449" column="10" bodyfile="drivers/src/hpm_pllctl_drv.c" bodystart="220" bodyend="246" declfile="drivers/inc/hpm_pllctl_drv.h" declline="449" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__pllctl__interface_1gac6656cca9e1d4470de33b82e0ef21b91" prot="public" static="no">
        <name>PLLCTL_PLL_VCO_FREQ_MIN</name>
        <initializer>(375000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="21" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga636a8bfde463b9c73d40821ee11b78d2" prot="public" static="no">
        <name>PLLCTL_PLL_VCO_FREQ_MAX</name>
        <initializer>(2200000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="22" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1gac40dd386366ab1d8fae7e8478d24e743" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_SS_RESET</name>
        <initializer><ref refid="hpm__pllctl__regs_8h_1a3cb362a2878af69a4553dc5d3cd006c8" kindref="member">PLLCTL_PLL_LOCK_LOCK_SS_RSTPTR_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga6d32d4b8922569729da2a0030db473d6" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_REFDIV</name>
        <initializer><ref refid="hpm__pllctl__regs_8h_1a55b9720f5ee60a05fd8b44eda4f9c52a" kindref="member">PLLCTL_PLL_LOCK_LOCK_REFDIV_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga4335293547680b1610e990a5c32aec18" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_POSTDIV1</name>
        <initializer><ref refid="hpm__pllctl__regs_8h_1ad91e6e0bb89397c8ca16f22f3803ff1d" kindref="member">PLLCTL_PLL_LOCK_LOCK_POSTDIV1_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga1f37591a670ff29ea323745bc131a524" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_SS_SPREAD</name>
        <initializer>PLLCTL_PLL_LOCK_LOCK_SS_SPREAD_MASK</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga7bbb31f78295d2a2fefe7e0f6c6581c8" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_SS_DIVVAL</name>
        <initializer><ref refid="hpm__pllctl__regs_8h_1a9f3259efdf0e6a8c0feea7ed329225bb" kindref="member">PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pllctl__interface_1ga21b28487eb0b39679b81f6d7695e91e9" prot="public" static="no">
        <name>PLLCTL_PLL_LOCK_ALL</name>
        <initializer>                            (<ref refid="hpm__pllctl__regs_8h_1a3cb362a2878af69a4553dc5d3cd006c8" kindref="member">PLLCTL_PLL_LOCK_LOCK_SS_RSTPTR_MASK</ref> \
                            | <ref refid="hpm__pllctl__regs_8h_1a55b9720f5ee60a05fd8b44eda4f9c52a" kindref="member">PLLCTL_PLL_LOCK_LOCK_REFDIV_MASK</ref> \
                            | <ref refid="hpm__pllctl__regs_8h_1ad91e6e0bb89397c8ca16f22f3803ff1d" kindref="member">PLLCTL_PLL_LOCK_LOCK_POSTDIV1_MASK</ref> \
                            | PLLCTL_PLL_LOCK_LOCK_SS_SPREAD_MASK \
                            | <ref refid="hpm__pllctl__regs_8h_1a9f3259efdf0e6a8c0feea7ed329225bb" kindref="member">PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK</ref> \
                            | <ref refid="hpm__pllctl__regs_8h_1a9f3259efdf0e6a8c0feea7ed329225bb" kindref="member">PLLCTL_PLL_LOCK_LOCK_SS_DIVVAL_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pllctl_drv.h" line="32" column="9" bodyfile="drivers/inc/hpm_pllctl_drv.h" bodystart="32" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PLLCTL driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
