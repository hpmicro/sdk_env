<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__loop_8h" kind="file" language="C++">
    <compoundname>hpm_mcl_loop.h</compoundname>
    <includes refid="hpm__mcl__common_8h" local="yes">hpm_mcl_common.h</includes>
    <includes refid="hpm__mcl__encoder_8h" local="yes">hpm_mcl_encoder.h</includes>
    <includes refid="hpm__mcl__analog_8h" local="yes">hpm_mcl_analog.h</includes>
    <includes refid="hpm__mcl__control_8h" local="yes">hpm_mcl_control.h</includes>
    <includes refid="hpm__mcl__drivers_8h" local="yes">hpm_mcl_drivers.h</includes>
    <includes refid="hpm__mcl__path__plan_8h" local="yes">hpm_mcl_path_plan.h</includes>
    <includes refid="hpm__mcl__debug_8h" local="yes">hpm_mcl_debug.h</includes>
    <includedby refid="hpm__mcl__detect_8h" local="yes">middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</includedby>
    <includedby refid="hpm__mcl__loop_8c" local="yes">middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>hpm_mcl_control.h</label>
        <link refid="hpm__mcl__control_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>hpm_mcl_filter.h</label>
        <link refid="hpm__mcl__filter_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>hpm_mcl_path_plan.h</label>
        <link refid="hpm__mcl__path__plan_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>hpm_mcl_drivers.h</label>
        <link refid="hpm__mcl__drivers_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</label>
        <link refid="hpm__mcl__loop_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hpm_mcl_analog.h</label>
        <link refid="hpm__mcl__analog_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hpm_mcl_encoder.h</label>
        <link refid="hpm__mcl__encoder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="2">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>hpm_mcl_debug.h</label>
        <link refid="hpm__mcl__debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.c</label>
        <link refid="hpm__mcl__detect_8c"/>
      </node>
      <node id="2">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</label>
        <link refid="hpm__mcl__detect_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c</label>
        <link refid="hpm__mcl__loop_8c"/>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</label>
        <link refid="hpm__mcl__loop_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmcl__loop__cfg__t" prot="public">mcl_loop_cfg_t</innerclass>
    <innerclass refid="structmcl__hardware__clc__cfg__t" prot="public">mcl_hardware_clc_cfg_t</innerclass>
    <innerclass refid="structmcl__offline__param__detection__rundata__t" prot="public">mcl_offline_param_detection_rundata_t</innerclass>
    <innerclass refid="structmcl__loop__t" prot="public">mcl_loop_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_loop_status_t</name>
        <enumvalue id="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a33e4aabdb6122a8fa9d77582e5f270a5" prot="public">
          <name>loop_status_null</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2a7ff0a045792c2561f44c5d2ebf4ea9" prot="public">
          <name>loop_status_init</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2fd62d3f7fca31f172b072a52801d1f0" prot="public">
          <name>loop_status_run</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a38b977294c880d1826303935c6cc4dc2" prot="public">
          <name>loop_status_fail</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="18" column="1" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="18" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_loop_mode_t</name>
        <enumvalue id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a3639b65b9f8182743bbd030eea9eb3ff" prot="public">
          <name>mcl_mode_foc</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a457ff82871ee83e7d8f7022be377a01f" prot="public">
          <name>mcl_mode_block</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746aaeb7f67b71856ae0f1e231fcefc6a034" prot="public">
          <name>mcl_mode_hardware_foc</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a42e11bad6c4a58659b2c311f333ef67f" prot="public">
          <name>mcl_mode_step_foc</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746adb667ba45dc42a091c2c143a7ac4b9b1" prot="public">
          <name>mcl_mode_offline_param_detection</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Algorithms used in loops. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="29" column="1" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9cea" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_loop_chn_t</name>
        <enumvalue id="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaaf6c71341266dd92788a3a0d9a37cd7ae" prot="public">
          <name>loop_chn_id</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaa00a1f497bcd6d97d975772a3ccc17af6" prot="public">
          <name>loop_chn_iq</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CLC channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="61" column="1" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_offline_param_detection_mode_t</name>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a04b20937d9400a5ae7974fc08a1379e4" prot="public">
          <name>offline_param_detection_mode_init</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a22ef4007f42011d81a3895839e943172" prot="public">
          <name>offline_param_detection_mode_rs</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aee7b5e4ea781f9da010e005c674108b6" prot="public">
          <name>offline_param_detection_mode_ld</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a438a8bdd50f0dda0d7f10bf8d73b1a23" prot="public">
          <name>offline_param_detection_mode_lq</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a449c673c8503750ae14b9ec6219ad351" prot="public">
          <name>offline_param_detection_mode_ls</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a7f023296b4922eea9ea89f8d27a622d9" prot="public">
          <name>offline_param_detection_mode_flux</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a6728909bb56c98f5d9a4c2123593c9e7" prot="public">
          <name>offline_param_detection_mode_wait</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aa5f68dd77ecb19eb43851f9bf93465a2" prot="public">
          <name>offline_param_detection_mode_end</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aebb02dfc7005d0aa7fa14b7bd7f5c41f" prot="public">
          <name>offline_param_detection_mode_error</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Internal use, process control in the process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="79" column="1" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="79" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a42150d4a39a21a9a4fbb74bf04627921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_init</definition>
        <argsstring>(mcl_loop_t *loop, mcl_loop_cfg_t *cfg, mcl_cfg_t *mcl_cfg, mcl_encoder_t *encoder, mcl_analog_t *analog, mcl_control_t *control, mcl_drivers_t *drivers, mcl_path_plan_t *path)</argsstring>
        <name>hpm_mcl_loop_init</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__loop__cfg__t" kindref="compound">mcl_loop_cfg_t</ref> *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> *</type>
          <declname>mcl_cfg</declname>
        </param>
        <param>
          <type><ref refid="structmcl__encoder__t" kindref="compound">mcl_encoder_t</ref> *</type>
          <declname>encoder</declname>
        </param>
        <param>
          <type><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> *</type>
          <declname>analog</declname>
        </param>
        <param>
          <type><ref refid="structmcl__control__t" kindref="compound">mcl_control_t</ref> *</type>
          <declname>control</declname>
        </param>
        <param>
          <type><ref refid="structmcl__drivers__t" kindref="compound">mcl_drivers_t</ref> *</type>
          <declname>drivers</declname>
        </param>
        <param>
          <type><ref refid="structmcl__path__plan__t" kindref="compound">mcl_path_plan_t</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Initialisation loop data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__cfg__t" kindref="compound">mcl_loop_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcl_cfg</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoder</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__encoder__t" kindref="compound">mcl_encoder_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>analog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>control</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__control__t" kindref="compound">mcl_control_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>drivers</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__drivers__t" kindref="compound">mcl_drivers_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__path__plan__t" kindref="compound">mcl_path_plan_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="166" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="10" bodyend="72" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="166" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a834cacac017efa30329a41a914420d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_set_current_d</definition>
        <argsstring>(mcl_loop_t *loop, mcl_user_value_t id)</argsstring>
        <name>hpm_mcl_loop_set_current_d</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Setting the d-axis current. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="177" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="74" bodyend="79" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="177" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a7679a2062f70be4b0648a9fb9bf9a0c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_set_current_q</definition>
        <argsstring>(mcl_loop_t *loop, mcl_user_value_t iq)</argsstring>
        <name>hpm_mcl_loop_set_current_q</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref></type>
          <declname>iq</declname>
        </param>
        <briefdescription>
<para>Setting the q-axis current. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iq</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="186" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="81" bodyend="86" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="186" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a966c60749d6aabfda54779f173f2e20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_set_speed</definition>
        <argsstring>(mcl_loop_t *loop, mcl_user_value_t speed)</argsstring>
        <name>hpm_mcl_loop_set_speed</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref></type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Setting the speed loop speed feed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="195" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="88" bodyend="93" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="195" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1ad59a1fb25d99952ec92f53e83152c7fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_set_position</definition>
        <argsstring>(mcl_loop_t *loop, mcl_user_value_t position)</argsstring>
        <name>hpm_mcl_loop_set_position</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref></type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Setting the position parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="204" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="95" bodyend="100" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="204" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1aa8544cb4ca935f81702def8a3262c17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_disable_all_user_set_value</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_disable_all_user_set_value</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Invalid user-set values in all loops. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="212" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="102" bodyend="110" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="212" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a38aa1e40d9e1684be5de3cfc45987a04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Motor Loop, Periodic Recall. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="220" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="525" bodyend="545" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="220" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a385fc53cabb32c54442bd79660e983b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_refresh_block</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_refresh_block</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Call this function in the interrupt function to update the motor&apos;s sector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="228" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="501" bodyend="511" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="228" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a68c39f440cf75a0e2d8d8c4e6cfecd73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>hpm_mcl_stat_t hpm_mcl_loop_start_block</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_start_block</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Call this function in the interrupt function to start the motor&apos;s sector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="236" column="16" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c" bodystart="513" bodyend="523" declfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" declline="236" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a8ab91cade5aa9731bd56b801d7445715" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_loop_enable</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_enable</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Enable Loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="243" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1aee9d215d6393eece4ce434f5075d45b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_loop_disable</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_disable</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Disable Loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="253" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a9c4ba317f32dfaba468a714758656f55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_loop_enable_offline_param_detecion</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_enable_offline_param_detecion</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Enables the loop&apos;s offline parameter detection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="263" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a9db48175934bb6bd1eb115f979ac00c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool hpm_mcl_loop_offline_param_detection_is_done</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_offline_param_detection_is_done</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Get offline parameter is done. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="275" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="275" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a281506496367f2784ff8a11292bfab64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool hpm_mcl_loop_offline_param_detection_is_error</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_loop_offline_param_detection_is_error</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Get offline parameter is error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="290" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="290" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a661c6333075cdf9229c4b181fc5bba35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_loop_offline_param_detection_get_result</definition>
        <argsstring>(mcl_loop_t *loop, mcl_offline_param_detection_result_t *result)</argsstring>
        <name>hpm_mcl_loop_offline_param_detection_get_result</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="structmcl__offline__param__detection__result__t" kindref="compound">mcl_offline_param_detection_result_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get offline parameter detection result. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__offline__param__detection__result__t" kindref="compound">mcl_offline_param_detection_result_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="305" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a64a1f32974b0d233545bfaf55501cce4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_loop_mode_set</definition>
        <argsstring>(mcl_loop_t *loop, mcl_loop_mode_t mode)</argsstring>
        <name>hpm_mcl_loop_mode_set</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" kindref="member">mcl_loop_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set loop mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" kindref="member">mcl_loop_mode_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="316" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a54f98ad5f4b27d0d6286c271a4984f66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_enable_position_loop</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_enable_position_loop</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Enable position loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="326" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1aaec37c6520cbdc6eed0ab64c9c9ce70f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_disable_position_loop</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_disable_position_loop</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Disable position loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="336" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a4b0ff0bbb0457a70fd363a56062f8b40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_enable_speed_loop</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_enable_speed_loop</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Enable speed loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="346" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1af9ea641ed2cb8607f12b046288402e6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_mcl_disable_speed_loop</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_disable_speed_loop</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Disable speed loop. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="356" column="20" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1ac287f0880d2bcf65d0ff240e9a554a1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>static hpm_mcl_stat_t hpm_mcl_disable_dead_area_compensation</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_disable_dead_area_compensation</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>disable dead area compensation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="366" column="30" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="366" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a7130fce94c71fcfc1b76f1e947133e6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>static hpm_mcl_stat_t hpm_mcl_enable_dead_area_compensation</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_enable_dead_area_compensation</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>enable dead area compensation </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="383" column="30" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="383" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1aa1adb17dc3db6ed1bb1fe32fe7352a34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>static hpm_mcl_stat_t hpm_mcl_disable_dq_axis_decoupling</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_disable_dq_axis_decoupling</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>disable dq axis decoupling </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="400" column="30" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="400" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a56b7c93e2df965c703c53868104e75a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref></type>
        <definition>static hpm_mcl_stat_t hpm_mcl_enable_dq_axis_decoupling</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_enable_dq_axis_decoupling</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>enable dq axis decoupling </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="417" column="30" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="417" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__loop_8h_1a057a47fd28e6d9abd0d39cbb7ebb5f95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hpm_mcl_get_current_loop_run_tick</definition>
        <argsstring>(mcl_loop_t *loop)</argsstring>
        <name>hpm_mcl_get_current_loop_run_tick</name>
        <param>
          <type><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> *</type>
          <declname>loop</declname>
        </param>
        <briefdescription>
<para>Get current loop run tick. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loop</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t tick </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" line="435" column="24" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h" bodystart="435" bodyend="443"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCL_LOOP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCL_LOOP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__common_8h" kindref="compound">hpm_mcl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__encoder_8h" kindref="compound">hpm_mcl_encoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__analog_8h" kindref="compound">hpm_mcl_analog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__control_8h" kindref="compound">hpm_mcl_control.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__drivers_8h" kindref="compound">hpm_mcl_drivers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__path__plan_8h" kindref="compound">hpm_mcl_path_plan.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__debug_8h" kindref="compound">hpm_mcl_debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19" refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a33e4aabdb6122a8fa9d77582e5f270a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a33e4aabdb6122a8fa9d77582e5f270a5" kindref="member">loop_status_null</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="20" refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2a7ff0a045792c2561f44c5d2ebf4ea9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2a7ff0a045792c2561f44c5d2ebf4ea9" kindref="member">loop_status_init</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="21" refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2fd62d3f7fca31f172b072a52801d1f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a2fd62d3f7fca31f172b072a52801d1f0" kindref="member">loop_status_run</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="22" refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a38b977294c880d1826303935c6cc4dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555a38b977294c880d1826303935c6cc4dc2" kindref="member">loop_status_fail</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555" kindref="member">mcl_loop_status_t</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a3639b65b9f8182743bbd030eea9eb3ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a3639b65b9f8182743bbd030eea9eb3ff" kindref="member">mcl_mode_foc</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="31" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a457ff82871ee83e7d8f7022be377a01f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a457ff82871ee83e7d8f7022be377a01f" kindref="member">mcl_mode_block</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="32" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746aaeb7f67b71856ae0f1e231fcefc6a034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746aaeb7f67b71856ae0f1e231fcefc6a034" kindref="member">mcl_mode_hardware_foc</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="33" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a42e11bad6c4a58659b2c311f333ef67f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746a42e11bad6c4a58659b2c311f333ef67f" kindref="member">mcl_mode_step_foc</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="34" refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746adb667ba45dc42a091c2c143a7ac4b9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746adb667ba45dc42a091c2c143a7ac4b9b1" kindref="member">mcl_mode_offline_param_detection</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" kindref="member">mcl_loop_mode_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structmcl__loop__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="structmcl__loop__cfg__t_1a7852dbd90e9f630c6ba68bd63e8c8658" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" kindref="member">mcl_loop_mode_t</ref><sp/><ref refid="structmcl__loop__cfg__t_1a7852dbd90e9f630c6ba68bd63e8c8658" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="43" refid="structmcl__loop__cfg__t_1a26358ad9f9747be4041edd2136de7fe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__cfg__t_1a26358ad9f9747be4041edd2136de7fe0" kindref="member">enable_speed_loop</ref>;</highlight></codeline>
<codeline lineno="44" refid="structmcl__loop__cfg__t_1a509a5a5ff82aeb53692e0676801b6666" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__cfg__t_1a509a5a5ff82aeb53692e0676801b6666" kindref="member">enable_position_loop</ref>;</highlight></codeline>
<codeline lineno="45" refid="structmcl__loop__cfg__t_1acc4c329d8d1b3431c774b60ddd109be2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__cfg__t_1acc4c329d8d1b3431c774b60ddd109be2" kindref="member">enable_offline_param_detection</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_SENSORLESS_SMC)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_SENSORLESS_SMC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_smc;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DQ_AXIS_DECOUPLING)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DQ_AXIS_DECOUPLING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_dq_axis_decoupling;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DEAD_AREA_COMPENSATION)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DEAD_AREA_COMPENSATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable_dead_area_compensation;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><ref refid="structmcl__loop__cfg__t" kindref="compound">mcl_loop_cfg_t</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9cea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62" refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaaf6c71341266dd92788a3a0d9a37cd7ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaaf6c71341266dd92788a3a0d9a37cd7ae" kindref="member">loop_chn_id</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="63" refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaa00a1f497bcd6d97d975772a3ccc17af6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9ceaa00a1f497bcd6d97d975772a3ccc17af6" kindref="member">loop_chn_iq</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><ref refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9cea" kindref="member">mcl_loop_chn_t</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structmcl__hardware__clc__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71" refid="structmcl__hardware__clc__cfg__t_1a8f0e65679bbede5a0a0f6a22803b084e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structmcl__hardware__clc__cfg__t_1a8f0e65679bbede5a0a0f6a22803b084e" kindref="member">clc_set_val</ref>)(<ref refid="hpm__mcl__loop_8h_1a8c231fcfc365a30fd64a214eb2ad9cea" kindref="member">mcl_loop_chn_t</ref><sp/>chn,<sp/>int32_t<sp/>val);</highlight></codeline>
<codeline lineno="72" refid="structmcl__hardware__clc__cfg__t_1af3303d3da849cf0e928760ec386e52ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>(*<ref refid="structmcl__hardware__clc__cfg__t_1af3303d3da849cf0e928760ec386e52ad" kindref="member">convert_float_to_clc_val</ref>)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>realdata);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/><ref refid="structmcl__hardware__clc__cfg__t" kindref="compound">mcl_hardware_clc_cfg_t</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="80" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a04b20937d9400a5ae7974fc08a1379e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a04b20937d9400a5ae7974fc08a1379e4" kindref="member">offline_param_detection_mode_init</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="81" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a22ef4007f42011d81a3895839e943172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a22ef4007f42011d81a3895839e943172" kindref="member">offline_param_detection_mode_rs</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="82" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aee7b5e4ea781f9da010e005c674108b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aee7b5e4ea781f9da010e005c674108b6" kindref="member">offline_param_detection_mode_ld</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="83" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a438a8bdd50f0dda0d7f10bf8d73b1a23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a438a8bdd50f0dda0d7f10bf8d73b1a23" kindref="member">offline_param_detection_mode_lq</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="84" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a449c673c8503750ae14b9ec6219ad351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a449c673c8503750ae14b9ec6219ad351" kindref="member">offline_param_detection_mode_ls</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="85" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a7f023296b4922eea9ea89f8d27a622d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a7f023296b4922eea9ea89f8d27a622d9" kindref="member">offline_param_detection_mode_flux</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="86" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a6728909bb56c98f5d9a4c2123593c9e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a6728909bb56c98f5d9a4c2123593c9e7" kindref="member">offline_param_detection_mode_wait</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="87" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aa5f68dd77ecb19eb43851f9bf93465a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aa5f68dd77ecb19eb43851f9bf93465a2" kindref="member">offline_param_detection_mode_end</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="88" refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aebb02dfc7005d0aa7fa14b7bd7f5c41f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aebb02dfc7005d0aa7fa14b7bd7f5c41f" kindref="member">offline_param_detection_mode_error</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530" kindref="member">mcl_offline_param_detection_mode_t</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="structmcl__offline__param__detection__rundata__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92" refid="structmcl__offline__param__detection__rundata__t_1a64eded2a05e4addd50fd78520f6ce120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530" kindref="member">mcl_offline_param_detection_mode_t</ref><sp/><ref refid="structmcl__offline__param__detection__rundata__t_1a64eded2a05e4addd50fd78520f6ce120" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="93" refid="structmcl__offline__param__detection__rundata__t_1a28acc52cdf697414012959706c7e460a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structmcl__offline__param__detection__result__t" kindref="compound">mcl_offline_param_detection_result_t</ref><sp/><ref refid="structmcl__offline__param__detection__rundata__t_1a28acc52cdf697414012959706c7e460a" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="94" refid="structmcl__offline__param__detection__rundata__t_1a40e2281d02ed85c57211ed90224942ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__offline__param__detection__rundata__t_1a40e2281d02ed85c57211ed90224942ce" kindref="member">last_ualpha</ref>;</highlight></codeline>
<codeline lineno="95" refid="structmcl__offline__param__detection__rundata__t_1acda2ebf1a7f6cd194d593d0babbaae33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__offline__param__detection__rundata__t_1acda2ebf1a7f6cd194d593d0babbaae33" kindref="member">last_ubeta</ref>;</highlight></codeline>
<codeline lineno="96" refid="structmcl__offline__param__detection__rundata__t_1a8909223bbda1743a2f96e880fa63b59a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530" kindref="member">mcl_offline_param_detection_mode_t</ref><sp/><ref refid="structmcl__offline__param__detection__rundata__t_1a8909223bbda1743a2f96e880fa63b59a" kindref="member">last_mode</ref>;</highlight></codeline>
<codeline lineno="97" refid="structmcl__offline__param__detection__rundata__t_1ae737b32c749d606f6444d44e0c4da32d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcl__offline__param__detection__rundata__t_1ae737b32c749d606f6444d44e0c4da32d" kindref="member">tick_count</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/><ref refid="structmcl__offline__param__detection__rundata__t" kindref="compound">mcl_offline_param_detection_rundata_t</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="structmcl__loop__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105" refid="structmcl__loop__t_1afaefe4b5acfff59b11e73bafccbc0411" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__loop_8h_1af5c8ea9874903da335e430fd33298555" kindref="member">mcl_loop_status_t</ref><sp/><ref refid="structmcl__loop__t_1afaefe4b5acfff59b11e73bafccbc0411" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="106" refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__loop__cfg__t" kindref="compound">mcl_loop_cfg_t</ref><sp/>*<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="107" refid="structmcl__loop__t_1a14665ea3fa6925884bc464710c3f3979" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__encoder__t" kindref="compound">mcl_encoder_t</ref><sp/>*<ref refid="structmcl__loop__t_1a14665ea3fa6925884bc464710c3f3979" kindref="member">encoder</ref>;</highlight></codeline>
<codeline lineno="108" refid="structmcl__loop__t_1ad3c3cd51ea7c502d62cf9aef064a9da0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*<ref refid="structmcl__loop__t_1ad3c3cd51ea7c502d62cf9aef064a9da0" kindref="member">analog</ref>;</highlight></codeline>
<codeline lineno="109" refid="structmcl__loop__t_1aff4af0e10abaa39612907a9dd89e276d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__control__t" kindref="compound">mcl_control_t</ref><sp/>*<ref refid="structmcl__loop__t_1aff4af0e10abaa39612907a9dd89e276d" kindref="member">control</ref>;</highlight></codeline>
<codeline lineno="110" refid="structmcl__loop__t_1a329b20b02ec920dda6cf37f870f24ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__drivers__t" kindref="compound">mcl_drivers_t</ref><sp/>*<ref refid="structmcl__loop__t_1a329b20b02ec920dda6cf37f870f24ac9" kindref="member">drivers</ref>;</highlight></codeline>
<codeline lineno="111" refid="structmcl__loop__t_1a847787529ff11c270e797d4d8c030c63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*<ref refid="structmcl__loop__t_1a847787529ff11c270e797d4d8c030c63" kindref="member">debug</ref>;</highlight></codeline>
<codeline lineno="112" refid="structmcl__loop__t_1a54f030aa0d8c2ea921a39daa58a49bee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__path__plan__t" kindref="compound">mcl_path_plan_t</ref><sp/>*<ref refid="structmcl__loop__t_1a54f030aa0d8c2ea921a39daa58a49bee" kindref="member">path</ref>;</highlight></codeline>
<codeline lineno="113" refid="structmcl__loop__t_1aeb377144b2611221e642f9ec9254314e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__math_8h_1a8869f096800f7919fe1e95a9eb6f2ebf" kindref="member">hpm_mcl_type_t</ref><sp/>*<ref refid="structmcl__loop__t_1aeb377144b2611221e642f9ec9254314e" kindref="member">const_vbus</ref>;</highlight></codeline>
<codeline lineno="114" refid="structmcl__loop__t_1af7602ab0f92e7f212c83756404408a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__math_8h_1a8869f096800f7919fe1e95a9eb6f2ebf" kindref="member">hpm_mcl_type_t</ref><sp/>*<ref refid="structmcl__loop__t_1af7602ab0f92e7f212c83756404408a60" kindref="member">lq</ref>;</highlight></codeline>
<codeline lineno="115" refid="structmcl__loop__t_1ad77c805d1921ab8cc74d9a9d7864dba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__math_8h_1a8869f096800f7919fe1e95a9eb6f2ebf" kindref="member">hpm_mcl_type_t</ref><sp/>*<ref refid="structmcl__loop__t_1ad77c805d1921ab8cc74d9a9d7864dba3" kindref="member">ld</ref>;</highlight></codeline>
<codeline lineno="116" refid="structmcl__loop__t_1ad129111cabb5b914ba4c519f0b395e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__math_8h_1a8869f096800f7919fe1e95a9eb6f2ebf" kindref="member">hpm_mcl_type_t</ref><sp/>*<ref refid="structmcl__loop__t_1ad129111cabb5b914ba4c519f0b395e6a" kindref="member">flux</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118" refid="structmcl__loop__t_1a929ae91e2609d925ee64557823456c5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structmcl__loop__t_1a929ae91e2609d925ee64557823456c5d" kindref="member">current_ts</ref>;</highlight></codeline>
<codeline lineno="119" refid="structmcl__loop__t_1a893b7d8532bcbe4e747a316dc3c8e6c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structmcl__loop__t_1a893b7d8532bcbe4e747a316dc3c8e6c9" kindref="member">speed_ts</ref>;</highlight></codeline>
<codeline lineno="120" refid="structmcl__loop__t_1af840ac05105029ff1ff25d3235acdf21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structmcl__loop__t_1af840ac05105029ff1ff25d3235acdf21" kindref="member">position_ts</ref>;</highlight></codeline>
<codeline lineno="121" refid="structmcl__loop__t_1ac16725d3c36b3ec41ed51ce30b50e33d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1ac16725d3c36b3ec41ed51ce30b50e33d" kindref="member">dead_area_ts</ref>;</highlight></codeline>
<codeline lineno="122" refid="structmcl__loop__t_1a3c240078b71e545b6f112739402e91a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a3c240078b71e545b6f112739402e91a6" kindref="member">offline_detection_wait_ts</ref>;</highlight></codeline>
<codeline lineno="123" refid="structmcl__loop__t_1a9e75b40876ff365170ea78b45729e2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>const_time;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126" refid="structmcl__loop__t_1aaca2a40825f6a43923686086711c23ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__physical_8h_1afbb86bc6009e2c8dfa1035acbf7b0065" kindref="member">mcl_motor_dir_t</ref><sp/><ref refid="structmcl__loop__t_1aaca2a40825f6a43923686086711c23ce" kindref="member">dir</ref>;</highlight></codeline>
<codeline lineno="127" refid="structmcl__loop__t_1a91f290a90be986f0a736d8fe2e51408d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>block;</highlight></codeline>
<codeline lineno="128" refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcl__offline__param__detection__rundata__t" kindref="compound">mcl_offline_param_detection_rundata_t</ref><sp/><ref refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" kindref="member">offline_detection</ref>;</highlight></codeline>
<codeline lineno="129" refid="structmcl__loop__t_1a26b4a5ed8d5f81314d67041757e926e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structmcl__loop__t_1a26b4a5ed8d5f81314d67041757e926e6" kindref="member">current_loop_tick</ref>;</highlight></codeline>
<codeline lineno="130" refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>rundata;</highlight></codeline>
<codeline lineno="131" refid="structmcl__loop__t_1a819fe0066c80269091609467d028803c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/><ref refid="structmcl__loop__t_1a819fe0066c80269091609467d028803c" kindref="member">ref_id</ref>;</highlight></codeline>
<codeline lineno="132" refid="structmcl__loop__t_1a5e0a9eb12006b28b55841cb537eedf51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/><ref refid="structmcl__loop__t_1a5e0a9eb12006b28b55841cb537eedf51" kindref="member">ref_iq</ref>;</highlight></codeline>
<codeline lineno="133" refid="structmcl__loop__t_1aedc629f8ccd62bec76cc6159c0187cc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/><ref refid="structmcl__loop__t_1aedc629f8ccd62bec76cc6159c0187cc7" kindref="member">ref_speed</ref>;</highlight></codeline>
<codeline lineno="134" refid="structmcl__loop__t_1ab6446c7e69dbcb59dfcecb531b2e87a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/><ref refid="structmcl__loop__t_1ab6446c7e69dbcb59dfcecb531b2e87a1" kindref="member">ref_position</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136" refid="structmcl__loop__t_1a5f9a31079d71cd63b00714073fe1bfad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a5f9a31079d71cd63b00714073fe1bfad" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="137" refid="structmcl__loop__t_1a591336155cde2a8ecf5c55bf9f25943d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a591336155cde2a8ecf5c55bf9f25943d" kindref="member">iq</ref>;</highlight></codeline>
<codeline lineno="138" refid="structmcl__loop__t_1a1cae8c502788b24accc36c21c87154b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a1cae8c502788b24accc36c21c87154b7" kindref="member">speed</ref>;</highlight></codeline>
<codeline lineno="139" refid="structmcl__loop__t_1a7b2d68922070d579f1d3f29f72313a8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a7b2d68922070d579f1d3f29f72313a8b" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="140" refid="structmcl__loop__t_1ac2be37ac7be243f5136aa5b70526003f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>exec_ref;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="142" refid="structmcl__loop__t_1a08a41a27bc954093164b7384a769ed23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1a893b7d8532bcbe4e747a316dc3c8e6c9" kindref="member">speed_ts</ref>;</highlight></codeline>
<codeline lineno="143" refid="structmcl__loop__t_1ad233b95a0b6997432b62099aaa9d4c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1af840ac05105029ff1ff25d3235acdf21" kindref="member">position_ts</ref>;</highlight></codeline>
<codeline lineno="144" refid="structmcl__loop__t_1a92a9e236060d672639a09a378d58f0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>time;</highlight></codeline>
<codeline lineno="145" refid="structmcl__loop__t_1a0b4caaaa5cb80e4c9b549bff67df4751" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structmcl__loop__t_1a0b4caaaa5cb80e4c9b549bff67df4751" kindref="member">hardware</ref>;</highlight></codeline>
<codeline lineno="146" refid="structmcl__loop__t_1acf75024bc4c709a4aecbac3dba3876de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__loop__t_1acf75024bc4c709a4aecbac3dba3876de" kindref="member">enable</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}<sp/><ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a42150d4a39a21a9a4fbb74bf04627921" kindref="member">hpm_mcl_loop_init</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__loop__cfg__t" kindref="compound">mcl_loop_cfg_t</ref><sp/>*cfg,<sp/><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref><sp/>*mcl_cfg,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcl__encoder__t" kindref="compound">mcl_encoder_t</ref><sp/>*encoder,<sp/><ref refid="structmcl__analog__t" kindref="compound">mcl_analog_t</ref><sp/>*analog,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmcl__control__t" kindref="compound">mcl_control_t</ref><sp/>*control,<sp/><ref refid="structmcl__drivers__t" kindref="compound">mcl_drivers_t</ref><sp/>*drivers,<sp/><ref refid="structmcl__path__plan__t" kindref="compound">mcl_path_plan_t</ref><sp/>*path);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a834cacac017efa30329a41a914420d60" kindref="member">hpm_mcl_loop_set_current_d</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a7679a2062f70be4b0648a9fb9bf9a0c3" kindref="member">hpm_mcl_loop_set_current_q</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/>iq);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a966c60749d6aabfda54779f173f2e20c" kindref="member">hpm_mcl_loop_set_speed</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/>speed);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1ad59a1fb25d99952ec92f53e83152c7fb" kindref="member">hpm_mcl_loop_set_position</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref><sp/>position);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1aa8544cb4ca935f81702def8a3262c17f" kindref="member">hpm_mcl_loop_disable_all_user_set_value</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a38aa1e40d9e1684be5de3cfc45987a04" kindref="member">hpm_mcl_loop</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a385fc53cabb32c54442bd79660e983b6" kindref="member">hpm_mcl_loop_refresh_block</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a68c39f440cf75a0e2d8d8c4e6cfecd73" kindref="member">hpm_mcl_loop_start_block</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="hpm__mcl__loop_8h_1a8ab91cade5aa9731bd56b801d7445715" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a8ab91cade5aa9731bd56b801d7445715" kindref="member">hpm_mcl_loop_enable</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1acf75024bc4c709a4aecbac3dba3876de" kindref="member">enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="hpm__mcl__loop_8h_1aee9d215d6393eece4ce434f5075d45b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1aee9d215d6393eece4ce434f5075d45b2" kindref="member">hpm_mcl_loop_disable</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1acf75024bc4c709a4aecbac3dba3876de" kindref="member">enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="hpm__mcl__loop_8h_1a9c4ba317f32dfaba468a714758656f55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a9c4ba317f32dfaba468a714758656f55" kindref="member">hpm_mcl_loop_enable_offline_param_detecion</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" kindref="member">rundata</ref>.<ref refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" kindref="member">offline_detection</ref>.<ref refid="structmcl__offline__param__detection__rundata__t_1a64eded2a05e4addd50fd78520f6ce120" kindref="member">mode</ref><sp/>=<sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530a04b20937d9400a5ae7974fc08a1379e4" kindref="member">offline_param_detection_mode_init</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1acc4c329d8d1b3431c774b60ddd109be2" kindref="member">enable_offline_param_detection</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="hpm__mcl__loop_8h_1a9db48175934bb6bd1eb115f979ac00c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a9db48175934bb6bd1eb115f979ac00c4" kindref="member">hpm_mcl_loop_offline_param_detection_is_done</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loop-&gt;<ref refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" kindref="member">rundata</ref>.<ref refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" kindref="member">offline_detection</ref>.<ref refid="structmcl__offline__param__detection__rundata__t_1a64eded2a05e4addd50fd78520f6ce120" kindref="member">mode</ref><sp/>==<sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aa5f68dd77ecb19eb43851f9bf93465a2" kindref="member">offline_param_detection_mode_end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="hpm__mcl__loop_8h_1a281506496367f2784ff8a11292bfab64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a281506496367f2784ff8a11292bfab64" kindref="member">hpm_mcl_loop_offline_param_detection_is_error</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loop-&gt;<ref refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" kindref="member">rundata</ref>.<ref refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" kindref="member">offline_detection</ref>.<ref refid="structmcl__offline__param__detection__rundata__t_1a64eded2a05e4addd50fd78520f6ce120" kindref="member">mode</ref><sp/>==<sp/><ref refid="hpm__mcl__loop_8h_1ab7e08330c791a6d28b10ad6180a6e530aebb02dfc7005d0aa7fa14b7bd7f5c41f" kindref="member">offline_param_detection_mode_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="hpm__mcl__loop_8h_1a661c6333075cdf9229c4b181fc5bba35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a661c6333075cdf9229c4b181fc5bba35" kindref="member">hpm_mcl_loop_offline_param_detection_get_result</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="structmcl__offline__param__detection__result__t" kindref="compound">mcl_offline_param_detection_result_t</ref><sp/>*result)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>*result<sp/>=<sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" kindref="member">rundata</ref>.<ref refid="structmcl__loop__t_1a8da1be298ebdcc2fb6c619aeb941ff3b" kindref="member">offline_detection</ref>.<ref refid="structmcl__offline__param__detection__rundata__t_1a28acc52cdf697414012959706c7e460a" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="hpm__mcl__loop_8h_1a64a1f32974b0d233545bfaf55501cce4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a64a1f32974b0d233545bfaf55501cce4" kindref="member">hpm_mcl_loop_mode_set</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop,<sp/><ref refid="hpm__mcl__loop_8h_1ac36e7a2e1024eacc1898c80b107bb746" kindref="member">mcl_loop_mode_t</ref><sp/>mode)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1a7852dbd90e9f630c6ba68bd63e8c8658" kindref="member">mode</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="hpm__mcl__loop_8h_1a54f98ad5f4b27d0d6286c271a4984f66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a54f98ad5f4b27d0d6286c271a4984f66" kindref="member">hpm_mcl_enable_position_loop</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1a509a5a5ff82aeb53692e0676801b6666" kindref="member">enable_position_loop</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="hpm__mcl__loop_8h_1aaec37c6520cbdc6eed0ab64c9c9ce70f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1aaec37c6520cbdc6eed0ab64c9c9ce70f" kindref="member">hpm_mcl_disable_position_loop</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1a509a5a5ff82aeb53692e0676801b6666" kindref="member">enable_position_loop</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="hpm__mcl__loop_8h_1a4b0ff0bbb0457a70fd363a56062f8b40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1a4b0ff0bbb0457a70fd363a56062f8b40" kindref="member">hpm_mcl_enable_speed_loop</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1a26358ad9f9747be4041edd2136de7fe0" kindref="member">enable_speed_loop</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="hpm__mcl__loop_8h_1af9ea641ed2cb8607f12b046288402e6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__loop_8h_1af9ea641ed2cb8607f12b046288402e6f" kindref="member">hpm_mcl_disable_speed_loop</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;<ref refid="structmcl__loop__cfg__t_1a26358ad9f9747be4041edd2136de7fe0" kindref="member">enable_speed_loop</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="hpm__mcl__loop_8h_1ac287f0880d2bcf65d0ff240e9a554a1f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1ac287f0880d2bcf65d0ff240e9a554a1f" kindref="member">hpm_mcl_disable_dead_area_compensation</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DEAD_AREA_COMPENSATION)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DEAD_AREA_COMPENSATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;enable_dead_area_compensation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)loop;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="hpm__mcl__loop_8h_1a7130fce94c71fcfc1b76f1e947133e6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a7130fce94c71fcfc1b76f1e947133e6c" kindref="member">hpm_mcl_enable_dead_area_compensation</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DEAD_AREA_COMPENSATION)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DEAD_AREA_COMPENSATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;enable_dead_area_compensation<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)loop;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="hpm__mcl__loop_8h_1aa1adb17dc3db6ed1bb1fe32fe7352a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1aa1adb17dc3db6ed1bb1fe32fe7352a34" kindref="member">hpm_mcl_disable_dq_axis_decoupling</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DQ_AXIS_DECOUPLING)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DQ_AXIS_DECOUPLING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;enable_dq_axis_decoupling<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)loop;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="hpm__mcl__loop_8h_1a56b7c93e2df965c703c53868104e75a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref><sp/><ref refid="hpm__mcl__loop_8h_1a56b7c93e2df965c703c53868104e75a4" kindref="member">hpm_mcl_enable_dq_axis_decoupling</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_CFG_EN_DQ_AXIS_DECOUPLING)<sp/>&amp;&amp;<sp/>MCL_CFG_EN_DQ_AXIS_DECOUPLING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" kindref="member">MCL_ASSERT_OPT</ref>(loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref><sp/>!=<sp/>NULL,<sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9be5ba25b6adbeaec58d91052a442fe9" kindref="member">cfg</ref>-&gt;enable_dq_axis_decoupling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)loop;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="hpm__mcl__loop_8h_1a057a47fd28e6d9abd0d39cbb7ebb5f95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcl__loop_8h_1a057a47fd28e6d9abd0d39cbb7ebb5f95" kindref="member">hpm_mcl_get_current_loop_run_tick</ref>(<ref refid="structmcl__loop__t" kindref="compound">mcl_loop_t</ref><sp/>*loop)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MCL_EN_LOOP_TIME_COUNT)<sp/>&amp;&amp;<sp/>MCL_EN_LOOP_TIME_COUNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loop-&gt;<ref refid="structmcl__loop__t_1a9984b54ccf30f042e7895ae8ec007bd0" kindref="member">rundata</ref>.<ref refid="structmcl__loop__t_1a26b4a5ed8d5f81314d67041757e926e6" kindref="member">current_loop_tick</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)loop;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h"/>
  </compounddef>
</doxygen>
