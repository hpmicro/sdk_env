<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__debug_8h" kind="file" language="C++">
    <compoundname>hpm_mcl_debug.h</compoundname>
    <includes refid="hpm__mcl__common_8h" local="yes">hpm_mcl_common.h</includes>
    <includedby refid="hpm__mcl__debug_8c" local="yes">middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c</includedby>
    <includedby refid="hpm__mcl__loop_8h" local="yes">middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="2">
        <label>hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/hpm_mcl_debug.h</label>
        <link refid="hpm__mcl__debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.c</label>
        <link refid="hpm__mcl__detect_8c"/>
      </node>
      <node id="4">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</label>
        <link refid="hpm__mcl__detect_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c</label>
        <link refid="hpm__mcl__debug_8c"/>
      </node>
      <node id="6">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c</label>
        <link refid="hpm__mcl__loop_8c"/>
      </node>
      <node id="3">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</label>
        <link refid="hpm__mcl__loop_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/hpm_mcl_debug.h</label>
        <link refid="hpm__mcl__debug_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmcl__debug__callback__t" prot="public">mcl_debug_callback_t</innerclass>
    <innerclass refid="structmcl__debug__cfg__t" prot="public">mcl_debug_cfg_t</innerclass>
    <innerclass refid="structmcl__debug__t" prot="public">mcl_debug_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__mcl__debug_8h_1a0e822e17af26ce0533c4ea375318574d" prot="public" static="no">
        <name>MCL_DEBUG_FIFO</name>
        <initializer><ref refid="hpm__mcl__cfg_8h_1a2a1e859b15133882a70f8f6c0baae5fc" kindref="member">MCL_USER_DEFINED_DEBUG_FIFO</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="12" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" prot="public" static="no">
        <name>MCL_DEBUG_DATA_TYPE_SET</name>
        <param><defname>num</defname></param>
        <param><defname>size</defname></param>
        <initializer>(((num) &lt;&lt; 8) | (<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="22" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__debug_8h_1ac6d9a54130884c119a3abd2b74df5174" prot="public" static="no">
        <name>MCL_DEBUG_DATA_TYPE_GET_SIZE</name>
        <param><defname>type</defname></param>
        <initializer>((type) &amp; 0xff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="23" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" prot="public" static="no" strong="no">
        <type></type>
        <name>mcl_debug_data_type_t</name>
        <enumvalue id="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7ae3d91fac68163c4e379b2a251a0da384" prot="public">
          <name>mcl_debug_data_i8</name>
          <initializer>=  (((0) &lt;&lt; 8) | (1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a64f7aeadcce1ee084d946863784c5c45" prot="public">
          <name>mcl_debug_data_i16</name>
          <initializer>=  (((1) &lt;&lt; 8) | (2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a7546acd37d876b6bb1f859d9b6a12362" prot="public">
          <name>mcl_debug_data_i32</name>
          <initializer>=  (((2) &lt;&lt; 8) | (4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a8955b5d7f65c821fb06a004c5faf0aa8" prot="public">
          <name>mcl_debug_data_f32</name>
          <initializer>=  (((3) &lt;&lt; 8) | (4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of debug data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="29" column="1" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" bodystart="29" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__debug_8h_1a9348fca53d386788e54460997d7121fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_init</definition>
        <argsstring>(mcl_debug_t *debug)</argsstring>
        <name>hpm_mcl_debug_init</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
<para>init debug data struct </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="66" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="11" bodyend="14" declfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" declline="66" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__debug_8h_1a93c4c96570761ce414b1b96c18bd35b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_send_scope</definition>
        <argsstring>(mcl_debug_t *debug)</argsstring>
        <name>hpm_mcl_debug_send_scope</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
<para>Sends data in the buffer to the outside, Depending on how the callback function works, this function could potentially hang the application. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="74" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="16" bodyend="19" declfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__mcl__debug_8h_1abde92ef38ce1fdc7e26d051a827b2325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_mcl_debug_update_data</definition>
        <argsstring>(mcl_debug_t *debug, uint8_t chn, void *data, mcl_debug_data_type_t type)</argsstring>
        <name>hpm_mcl_debug_update_data</name>
        <param>
          <type><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>chn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Update debug data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>debug</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para>channel number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>input data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h" line="84" column="6" bodyfile="middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c" bodystart="21" bodyend="37" declfile="middleware/hpm_mcl_v2/hpm_mcl_debug.h" declline="84" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCL_DEBUG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__common_8h" kindref="compound">hpm_mcl_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="hpm__mcl__debug_8h_1a0e822e17af26ce0533c4ea375318574d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DEBUG_FIFO<sp/><sp/>MCL_USER_DEFINED_DEBUG_FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structmcl__debug__callback__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19" refid="structmcl__debug__callback__t_1a534702b438d30f24c4afb1d7fab493f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structmcl__debug__callback__t_1a534702b438d30f24c4afb1d7fab493f0" kindref="member">write_buf</ref>)(uint8_t<sp/>*byte,<sp/>uint16_t<sp/>num);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}<sp/><ref refid="structmcl__debug__callback__t" kindref="compound">mcl_debug_callback_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DEBUG_DATA_TYPE_SET(num,<sp/>size)<sp/>(((num)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(size))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="hpm__mcl__debug_8h_1ac6d9a54130884c119a3abd2b74df5174" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DEBUG_DATA_TYPE_GET_SIZE(type)<sp/>((type)<sp/>&amp;<sp/>0xff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30" refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7ae3d91fac68163c4e379b2a251a0da384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7ae3d91fac68163c4e379b2a251a0da384" kindref="member">mcl_debug_data_i8</ref><sp/>=<sp/><ref refid="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" kindref="member">MCL_DEBUG_DATA_TYPE_SET</ref>(0,<sp/>1),</highlight></codeline>
<codeline lineno="31" refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a64f7aeadcce1ee084d946863784c5c45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a64f7aeadcce1ee084d946863784c5c45" kindref="member">mcl_debug_data_i16</ref><sp/>=<sp/><ref refid="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" kindref="member">MCL_DEBUG_DATA_TYPE_SET</ref>(1,<sp/>2),</highlight></codeline>
<codeline lineno="32" refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a7546acd37d876b6bb1f859d9b6a12362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a7546acd37d876b6bb1f859d9b6a12362" kindref="member">mcl_debug_data_i32</ref><sp/>=<sp/><ref refid="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" kindref="member">MCL_DEBUG_DATA_TYPE_SET</ref>(2,<sp/>4),</highlight></codeline>
<codeline lineno="33" refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a8955b5d7f65c821fb06a004c5faf0aa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7a8955b5d7f65c821fb06a004c5faf0aa8" kindref="member">mcl_debug_data_f32</ref><sp/>=<sp/><ref refid="hpm__mcl__debug_8h_1aef85998900548eea2baf71e1af9c12a6" kindref="member">MCL_DEBUG_DATA_TYPE_SET</ref>(3,<sp/>4)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structmcl__debug__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="structmcl__debug__cfg__t_1a354543a51458b45e7a975aed691f0365" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__debug__callback__t" kindref="compound">mcl_debug_callback_t</ref><sp/><ref refid="structmcl__debug__cfg__t_1a354543a51458b45e7a975aed691f0365" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43" refid="structmcl__debug__cfg__t_1adee12765f651b7a3aa9f27599f475f24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structmcl__debug__cfg__t_1adee12765f651b7a3aa9f27599f475f24" kindref="member">f32</ref>;</highlight></codeline>
<codeline lineno="44" refid="structmcl__debug__cfg__t_1aea2067ac5d0e4f862c059838cba77f20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*<ref refid="structmcl__debug__cfg__t_1aea2067ac5d0e4f862c059838cba77f20" kindref="member">i16</ref>;</highlight></codeline>
<codeline lineno="45" refid="structmcl__debug__cfg__t_1aaa853eda033b0896116e6fa235e2e30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>*<ref refid="structmcl__debug__cfg__t_1aaa853eda033b0896116e6fa235e2e30f" kindref="member">i32</ref>;</highlight></codeline>
<codeline lineno="46" refid="structmcl__debug__cfg__t_1af6ce050989c4e9bba8762db4ee91b2cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_t<sp/>*<ref refid="structmcl__debug__cfg__t_1af6ce050989c4e9bba8762db4ee91b2cb" kindref="member">i8</ref>;</highlight></codeline>
<codeline lineno="47" refid="structmcl__debug__cfg__t_1aa44a32ef8353eb31dc378b601f7f4cb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="structmcl__debug__cfg__t_1aa44a32ef8353eb31dc378b601f7f4cb5" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="48" refid="structmcl__debug__cfg__t_1a1e1c9b171573afcf6d4e11c72e41e682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>data;</highlight></codeline>
<codeline lineno="49" refid="structmcl__debug__cfg__t_1a90dc9aadd3520618b7fd3963d02da077" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structmcl__debug__cfg__t_1a90dc9aadd3520618b7fd3963d02da077" kindref="member">cnt</ref>;</highlight></codeline>
<codeline lineno="50" refid="structmcl__debug__cfg__t_1aa8ddbb76584e736306279a81b07b2af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref><sp/><ref refid="structmcl__debug__cfg__t_1aa8ddbb76584e736306279a81b07b2af1" kindref="member">data_type</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="structmcl__debug__cfg__t" kindref="compound">mcl_debug_cfg_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structmcl__debug__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58" refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__debug__cfg__t" kindref="compound">mcl_debug_cfg_t</ref><sp/><ref refid="structmcl__debug__t_1a72bc10e4078e93e53b2798ee189f0dfe" kindref="member">cfg</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a9348fca53d386788e54460997d7121fd" kindref="member">hpm_mcl_debug_init</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1a93c4c96570761ce414b1b96c18bd35b1" kindref="member">hpm_mcl_debug_send_scope</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__debug_8h_1abde92ef38ce1fdc7e26d051a827b2325" kindref="member">hpm_mcl_debug_update_data</ref>(<ref refid="structmcl__debug__t" kindref="compound">mcl_debug_t</ref><sp/>*debug,<sp/>uint8_t<sp/>chn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="hpm__mcl__debug_8h_1a54b8c88aa488c54f194733faba5015e7" kindref="member">mcl_debug_data_type_t</ref><sp/>type);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/hpm_mcl_debug.h"/>
  </compounddef>
</doxygen>
