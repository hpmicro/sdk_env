<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__mcl__common_8h" kind="file" language="C++">
    <compoundname>hpm_mcl_common.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes refid="hpm__mcl__cfg_8h" local="yes">hpm_mcl_cfg.h</includes>
    <includes refid="hpm__mcl__physical_8h" local="yes">hpm_mcl_physical.h</includes>
    <includes refid="hpm__mcl__math_8h" local="yes">hpm_mcl_math.h</includes>
    <includes local="yes">stdio.h</includes>
    <includedby refid="hpm__mcl__control_8h" local="yes">middleware/hpm_mcl_v2/core/control/hpm_mcl_control.h</includedby>
    <includedby refid="hpm__mcl__filter_8c" local="yes">middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c</includedby>
    <includedby refid="hpm__mcl__path__plan_8h" local="yes">middleware/hpm_mcl_v2/core/control/hpm_mcl_path_plan.h</includedby>
    <includedby refid="hpm__mcl__detect_8h" local="yes">middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</includedby>
    <includedby refid="hpm__mcl__drivers_8h" local="yes">middleware/hpm_mcl_v2/core/drivers/hpm_mcl_drivers.h</includedby>
    <includedby refid="hpm__mcl__loop_8h" local="yes">middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</includedby>
    <includedby refid="hpm__mcl__analog_8h" local="yes">middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h</includedby>
    <includedby refid="hpm__mcl__encoder_8h" local="yes">middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h</includedby>
    <includedby refid="hpm__mcl__pwm_8h" local="yes">middleware/hpm_mcl_v2/drivers/hpm_mcl_pwm.h</includedby>
    <includedby refid="hpm__mcl__abz_8h" local="yes">middleware/hpm_mcl_v2/encoder/hpm_mcl_abz.h</includedby>
    <includedby refid="hpm__mcl__uvw_8h" local="yes">middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.h</includedby>
    <includedby refid="hpm__mcl__debug_8h" local="yes">middleware/hpm_mcl_v2/hpm_mcl_debug.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hpm_mcl_cfg.h</label>
        <link refid="hpm__mcl__cfg_8h"/>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>hpm_mcl_math.h</label>
        <link refid="hpm__mcl__math_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_mcl_physical.h</label>
        <link refid="hpm__mcl__physical_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_control.c</label>
        <link refid="hpm__mcl__control_8c"/>
      </node>
      <node id="2">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_control.h</label>
        <link refid="hpm__mcl__control_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_filter.c</label>
        <link refid="hpm__mcl__filter_8c"/>
      </node>
      <node id="10">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_path_plan.c</label>
        <link refid="hpm__mcl__path__plan_8c"/>
      </node>
      <node id="9">
        <label>middleware/hpm_mcl_v2/core/control/hpm_mcl_path_plan.h</label>
        <link refid="hpm__mcl__path__plan_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.c</label>
        <link refid="hpm__mcl__detect_8c"/>
      </node>
      <node id="5">
        <label>middleware/hpm_mcl_v2/core/detect/hpm_mcl_detect.h</label>
        <link refid="hpm__mcl__detect_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>middleware/hpm_mcl_v2/core/drivers/hpm_mcl_drivers.c</label>
        <link refid="hpm__mcl__drivers_8c"/>
      </node>
      <node id="11">
        <label>middleware/hpm_mcl_v2/core/drivers/hpm_mcl_drivers.h</label>
        <link refid="hpm__mcl__drivers_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_debug.c</label>
        <link refid="hpm__mcl__debug_8c"/>
      </node>
      <node id="7">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.c</label>
        <link refid="hpm__mcl__loop_8c"/>
      </node>
      <node id="4">
        <label>middleware/hpm_mcl_v2/core/loop/hpm_mcl_loop.h</label>
        <link refid="hpm__mcl__loop_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.c</label>
        <link refid="hpm__mcl__analog_8c"/>
      </node>
      <node id="13">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_analog.h</label>
        <link refid="hpm__mcl__analog_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.c</label>
        <link refid="hpm__mcl__encoder_8c"/>
      </node>
      <node id="15">
        <label>middleware/hpm_mcl_v2/core/sensor/hpm_mcl_encoder.h</label>
        <link refid="hpm__mcl__encoder_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>middleware/hpm_mcl_v2/drivers/hpm_mcl_pwm.c</label>
        <link refid="hpm__mcl__pwm_8c"/>
      </node>
      <node id="17">
        <label>middleware/hpm_mcl_v2/drivers/hpm_mcl_pwm.h</label>
        <link refid="hpm__mcl__pwm_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>middleware/hpm_mcl_v2/encoder/hpm_mcl_abz.c</label>
        <link refid="hpm__mcl__abz_8c"/>
      </node>
      <node id="19">
        <label>middleware/hpm_mcl_v2/encoder/hpm_mcl_abz.h</label>
        <link refid="hpm__mcl__abz_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.c</label>
        <link refid="hpm__mcl__uvw_8c"/>
      </node>
      <node id="21">
        <label>middleware/hpm_mcl_v2/encoder/hpm_mcl_uvw.h</label>
        <link refid="hpm__mcl__uvw_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>middleware/hpm_mcl_v2/hpm_mcl_common.h</label>
        <link refid="hpm__mcl__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>middleware/hpm_mcl_v2/hpm_mcl_debug.h</label>
        <link refid="hpm__mcl__debug_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmcl__user__value__t" prot="public">mcl_user_value_t</innerclass>
    <innerclass refid="structmcl__cfg__t" prot="public">mcl_cfg_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__mcl__common_8h_1a94464e5af2c61c67da41c13ae7fc7867" prot="public" static="no">
        <name>MCL_DEBUG</name>
        <initializer>printf</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="51" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" prot="public" static="no">
        <name>MCL_PI</name>
        <initializer><ref refid="group__common__interface_1gac2dd9908fbbc94c75bca994cf381c8c2" kindref="member">HPM_PI</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="52" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" prot="public" static="no">
        <name>MCL_2PI</name>
        <initializer><ref refid="group__common__interface_1ga0bdf7cce9256acb9717241172a4e0da5" kindref="member">HPM_2_PI</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="53" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a9c031727a68943d07b0b03502d382c5c" prot="public" static="no">
        <name>MCL_PI_DIV3</name>
        <initializer>(<ref refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" kindref="member">MCL_PI</ref> / 3.0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="54" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a7ad4b8d963c326686da22590416596c0" prot="public" static="no">
        <name>MCL_DELAY_US</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a4dae8342b13f1b93c6acddf91acd9692" kindref="member">mcl_user_delay_us</ref>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="56" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1aba24cdadad3278d0d8ae160d72483885" prot="public" static="no">
        <name>MCL_DELAY_MS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a7ad4b8d963c326686da22590416596c0" kindref="member">MCL_DELAY_US</ref>(1000*x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="57" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1ad62d435e2fb9100cd0e5143ee9a40b4f" prot="public" static="no">
        <name>MCL_EMPTY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="58" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a637c7856c9feff74f5b4ead9219c1db3" prot="public" static="no">
        <name>MCL_ASSERT_BOOL</name>
        <param><defname>b</defname></param>
        <param><defname>code_extend</defname></param>
        <param><defname>errcode</defname></param>
        <initializer>    do {    \
        if (!b) {   \
            code_extend; \
            <ref refid="hpm__mcl__common_8h_1a94464e5af2c61c67da41c13ae7fc7867" kindref="member">MCL_DEBUG</ref>(&quot;errcode:%d, file:%s, line:%d.\r\n&quot;, errcode, __FILE__, __LINE__);  \
            return errcode;    \
        }   \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="60" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="60" bodyend="67"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a2252c5b43e15a648937cfd39c22e2a81" prot="public" static="no">
        <name>MCL_ASSERT_EXEC_CODE_BOOL</name>
        <param><defname>b</defname></param>
        <param><defname>code_extend</defname></param>
        <initializer>    do {    \
        if (!b) {   \
            code_extend; \
        }   \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="69" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" prot="public" static="no">
        <name>MCL_ASSERT</name>
        <param><defname>x</defname></param>
        <param><defname>return_errcode</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a637c7856c9feff74f5b4ead9219c1db3" kindref="member">MCL_ASSERT_BOOL</ref>(((uint32_t)(x) != 0), <ref refid="hpm__mcl__common_8h_1ad62d435e2fb9100cd0e5143ee9a40b4f" kindref="member">MCL_EMPTY</ref>, return_errcode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="76" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a4cb8fb324354c9ea44b206655d0a4057" prot="public" static="no">
        <name>MCL_ASSERT_EXEC_CODE</name>
        <param><defname>x</defname></param>
        <param><defname>code</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a2252c5b43e15a648937cfd39c22e2a81" kindref="member">MCL_ASSERT_EXEC_CODE_BOOL</ref>((x), code)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="78" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1aa1a87daee1af58e93c5aa4a32f793f5b" prot="public" static="no">
        <name>MCL_ASSERT_EXEC_CODE_AND_RETURN</name>
        <param><defname>x</defname></param>
        <param><defname>code</defname></param>
        <param><defname>return_errcode</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a637c7856c9feff74f5b4ead9219c1db3" kindref="member">MCL_ASSERT_BOOL</ref>((x), code, return_errcode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="80" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a76aafb6499ee8c97775d6901e084c95e" prot="public" static="no">
        <name>MCL_ASSERT_EXEC_CODE_OPT</name>
        <initializer><ref refid="hpm__mcl__common_8h_1a4cb8fb324354c9ea44b206655d0a4057" kindref="member">MCL_ASSERT_EXEC_CODE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="87" column="14" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" prot="public" static="no">
        <name>MCL_ASSERT_OPT</name>
        <initializer><ref refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" kindref="member">MCL_ASSERT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="88" column="13" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1af71b7be25cc98946e91545dec4a93ce3" prot="public" static="no">
        <name>MCL_ASSERT_EXEC_CODE_AND_RETURN_OPT</name>
        <initializer><ref refid="hpm__mcl__common_8h_1aa1a87daee1af58e93c5aa4a32f793f5b" kindref="member">MCL_ASSERT_EXEC_CODE_AND_RETURN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="89" column="13" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" prot="public" static="no">
        <name>MCL_FUNCTION_EXC_IF_ENABLE</name>
        <param><defname>b</defname></param>
        <param><defname>str_f</defname></param>
        <param><defname>f</defname></param>
        <initializer>    do {    \
        if (b) {    \
            str_f = f;  \
        }   \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="92" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a91f24027d9dc8a8e02ec355b5904b3fd" prot="public" static="no">
        <name>MCL_FUNCTION_EXC_IF_ELSE_ENABLE</name>
        <param><defname>b</defname></param>
        <param><defname>str_f</defname></param>
        <param><defname>_if</defname></param>
        <param><defname>_else</defname></param>
        <initializer>    do {    \
        if (b) {    \
            str_f = _if;  \
        } else {    \
            str_f = _else;  \
        }   \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="99" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a5377d3aec001d0aea62b9fdcb8ae755d" prot="public" static="no">
        <name>MCL_FUNCTION_INIT_IF_EMPTY</name>
        <param><defname>str_function</defname></param>
        <param><defname>function</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" kindref="member">MCL_FUNCTION_EXC_IF_ENABLE</ref>((str_function == NULL), str_function, function)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="108" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a6491f08fe299b76aa68b50a083e644de" prot="public" static="no">
        <name>MCL_FUNCTION_INIT_IF_NO_EMPTY</name>
        <param><defname>function</defname></param>
        <param><defname>str_function</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" kindref="member">MCL_FUNCTION_EXC_IF_ENABLE</ref>((str_function != NULL), function, str_function)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="110" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a14e441427e6b22bb6ea365483e4dcdd3" prot="public" static="no">
        <name>MCL_STATUS_SET_IF_TRUE</name>
        <param><defname>real</defname></param>
        <param><defname>str</defname></param>
        <param><defname>status</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" kindref="member">MCL_FUNCTION_EXC_IF_ENABLE</ref>((real), str, status)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="112" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a9d0e6e1894281803721b72c6b77ad83a" prot="public" static="no">
        <name>MCL_VALUE_SET_IF_TRUE</name>
        <param><defname>real</defname></param>
        <param><defname>str</defname></param>
        <param><defname>value</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" kindref="member">MCL_FUNCTION_EXC_IF_ENABLE</ref>((real), str, value)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="114" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a8fc05461c4b13d0e4d2ab67ba9429d39" prot="public" static="no">
        <name>MCL_FUNCTION_SET_IF_ELSE_TRUE</name>
        <param><defname>real</defname></param>
        <param><defname>str</defname></param>
        <param><defname>_if</defname></param>
        <param><defname>_else</defname></param>
        <initializer><ref refid="hpm__mcl__common_8h_1a91f24027d9dc8a8e02ec355b5904b3fd" kindref="member">MCL_FUNCTION_EXC_IF_ELSE_ENABLE</ref>((real), str, _if, _else)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="116" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a2d3879a27c6198a449b63fcbbbbd9496" prot="public" static="no">
        <name>MCL_ANGLE_MOD_X</name>
        <param><defname>down</defname></param>
        <param><defname>up</defname></param>
        <param><defname>val</defname></param>
        <initializer>({    \
    float val_; \
    if ((val) &gt; up) { \
        val_ = (val); \
        do {  \
            val_ = (val_) - (up - down);    \
        } while ((val_) &gt; up); \
    } else if ((val) &lt; down) {    \
        val_ = (val); \
        do {  \
            val_ = (val_) + (up - down);   \
        } while ((val_) &lt; down); \
    } else {    \
        val_ = (val); \
    }   \
    (val_);  \
})</initializer>
        <briefdescription>
<para>Remainder of angle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="128" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="128" bodyend="145"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a22809cd96f4b469411bbe9c7778bad93" prot="public" static="no">
        <name>MCL_GET_ANGLE_DELTA</name>
        <param><defname>val</defname></param>
        <param><defname>offset</defname></param>
        <initializer>({    \
    float val_; \
    float temp; \
    val_ = 0;   \
    temp = 0;   \
    if ((val) &gt; 0) { \
        temp = (val) - offset;    \
    } else if ((val) &lt; 0) {    \
        temp = (val) + offset;   \
    } else {    \
        val_ = 0; \
    }   \
    if (fabs(val) &lt; fabs(temp)) { \
        val_ = val; \
    } else {\
        val_ = temp; \
    } \
    (val_);  \
})</initializer>
        <briefdescription>
<para>Calculate the difference in angle, because the angle is then changed between 0-360 degrees, there are 350 degrees to 0 degrees of the process of change, as well as 10 degrees to 360 degrees of the process of change, in this process, the actual angle change is 10 degrees, but it may be calculated as 350 degrees, so the role of the calculation is to strive for an angle value of 10 degrees, the offset value of the maximum angle value, the default is 2pi. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="158" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="158" bodyend="177"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a0d2fe1fc9ff86004a80c3d2d0d04dc97" prot="public" static="no">
        <name>MCL_VALUE_LIMIT</name>
        <param><defname>val</defname></param>
        <param><defname>min</defname></param>
        <param><defname>max</defname></param>
        <initializer>    do {    \
        if ((val) &gt; (max)) {  \
            val = max;  \
        } else if ((val) &lt; (min)) { \
            val = min;  \
        }   \
    } while (0)</initializer>
        <briefdescription>
<para>Data Range Limits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="183" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a0f8944cbe11da291acf9c43653cebe6a" prot="public" static="no">
        <name>MCL_GET_ADC_12BIT_VALID_DATA</name>
        <param><defname>x</defname></param>
        <initializer>((x &amp; 0xffff) &gt;&gt; 4)</initializer>
        <briefdescription>
<para>Get ADC data with 12bit valid bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="196" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a95fb64db7e89d45c0b250cdc782c7cfc" prot="public" static="no">
        <name>MCL_USEC_TO_HZ</name>
        <param><defname>usec</defname></param>
        <initializer>(1000000.0f / (usec))</initializer>
        <briefdescription>
<para>Macro to convert microseconds period to frequency in Hertz. The macro takes an unsigned integer representing a time period in microseconds, and returns the corresponding frequency as a floating-point number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="204" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a811626234ea63f7693674c1f0eb1b4d4" prot="public" static="no">
        <name>MCL_PERIOD_TO_FREQUENCY</name>
        <param><defname>period</defname></param>
        <initializer>(1.0f / (period))</initializer>
        <briefdescription>
<para>Macro to convert a time period in seconds to frequency in Hertz (Hz). The macro takes a floating-point number representing a time period in seconds, and returns the corresponding frequency as a floating-point number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="210" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a75d3f2f0503ad39956975bee045f6075" prot="public" static="no">
        <name>MCL_FREQUENCY_TO_PERIOD</name>
        <param><defname>frequency</defname></param>
        <initializer>(1.0f / (frequency))</initializer>
        <briefdescription>
<para>Macro to convert a frequency in Hertz (Hz) to a time period in seconds. The macro takes a floating-point number representing a frequency in Hertz. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="217" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1aac2b95bd47912513ec78308e34b82ece" prot="public" static="no">
        <name>MCL_USEC_TO_SEC</name>
        <param><defname>usec</defname></param>
        <initializer>((usec) / 1000000.0f)</initializer>
        <briefdescription>
<para>Converts microseconds (us) to seconds (s). </para>
        </briefdescription>
        <detaileddescription>
<para>This macro takes an unsigned integer or floating-point number representing a time period in microseconds and returns the corresponding time period as a floating-point number in seconds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="227" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__mcl__common_8h_1a516a422068d49d3e1ad60ada738de732" prot="public" static="no">
        <name>MCL_USEC_TO_MSEC</name>
        <param><defname>usec</defname></param>
        <initializer>((usec) / 1000.0f)</initializer>
        <briefdescription>
<para>Converts microseconds (us) to milliseconds (ms). </para>
        </briefdescription>
        <detaileddescription>
<para>This macro takes an unsigned integer or floating-point number representing a time period in microseconds and returns the corresponding time period as a floating-point number in milliseconds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="236" column="9" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="236" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edc" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" prot="public">
          <name>mcl_group_common</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcad7276d4ce80224021b9f3343046d828a" prot="public">
          <name>mcl_group_motor</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcae5f2954ae93a18b9bfbc3fa513c9186b" prot="public">
          <name>mcl_group_encoder</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" prot="public">
          <name>mcl_group_analog</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcaf968ecf750b1a38049e71e3a4ed09ad3" prot="public">
          <name>mcl_group_drivers</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="17" column="1" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" prot="public">
          <name>mcl_success</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" prot="public">
          <name>mcl_fail</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a5df83cb02f3d9deca64a321eca8158b9" prot="public">
          <name>mcl_invalid_argument</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" prot="public">
          <name>mcl_invalid_pointer</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a11c544470b793733cf40a39f56e1a4b3" prot="public">
          <name>mcl_timeout</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 4)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a18bf2817786c1682f1c0509d88ba8933" prot="public">
          <name>mcl_in_development</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Functions under development </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1ad04f400eb51c1d0d44cf37ab04555204" prot="public">
          <name>mcl_running</name>
          <initializer>= MAKE_STATUS(mcl_group_common, 6)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="34" column="1" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="34" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t hpm_mcl_stat_t</definition>
        <argsstring></argsstring>
        <name>hpm_mcl_stat_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="15" column="18" bodyfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__mcl__common_8h_1a4dae8342b13f1b93c6acddf91acd9692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mcl_user_delay_us</definition>
        <argsstring>(uint64_t tick)</argsstring>
        <name>mcl_user_delay_us</name>
        <param>
          <type>uint64_t</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
<para>user define code </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h" line="49" column="6" declfile="middleware/hpm_mcl_v2/hpm_mcl_common.h" declline="49" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCL_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCL_COMMON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__cfg_8h" kindref="compound">hpm_mcl_cfg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__physical_8h" kindref="compound">hpm_mcl_physical.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__mcl__math_8h" kindref="compound">hpm_mcl_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__mcl__common_8h_1a572fcb9d78561a8859565bac839c49b1" kindref="member">hpm_mcl_stat_t</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18" refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="19" refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcad7276d4ce80224021b9f3343046d828a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcad7276d4ce80224021b9f3343046d828a" kindref="member">mcl_group_motor</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="20" refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcae5f2954ae93a18b9bfbc3fa513c9186b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcae5f2954ae93a18b9bfbc3fa513c9186b" kindref="member">mcl_group_encoder</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="21" refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca47da3025f9873d240febf60c65f24af6" kindref="member">mcl_group_analog</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="22" refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcaf968ecf750b1a38049e71e3a4ed09ad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edcaf968ecf750b1a38049e71e3a4ed09ad3" kindref="member">mcl_group_drivers</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structmcl__user__value__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structmcl__user__value__t_1a13c1682c4cebf14fd2c93cebae47fd8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structmcl__user__value__t_1a13c1682c4cebf14fd2c93cebae47fd8d" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="31" refid="structmcl__user__value__t_1abbb68a18f8ba945c402a8d34792639fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmcl__user__value__t_1abbb68a18f8ba945c402a8d34792639fc" kindref="member">enable</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}<sp/><ref refid="structmcl__user__value__t" kindref="compound">mcl_user_value_t</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1abc4f3cbeacf07a9c01bca3ddb79e79dd" kindref="member">mcl_success</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="36" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a4ca0aba09b0cbf341e61c096cfafeb4c" kindref="member">mcl_fail</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="37" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a5df83cb02f3d9deca64a321eca8158b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a5df83cb02f3d9deca64a321eca8158b9" kindref="member">mcl_invalid_argument</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>2),</highlight></codeline>
<codeline lineno="38" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a6f9d895ded2188352dee8b236c5e3c37" kindref="member">mcl_invalid_pointer</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>3),</highlight></codeline>
<codeline lineno="39" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a11c544470b793733cf40a39f56e1a4b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a11c544470b793733cf40a39f56e1a4b3" kindref="member">mcl_timeout</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>4),</highlight></codeline>
<codeline lineno="40" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a18bf2817786c1682f1c0509d88ba8933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1a18bf2817786c1682f1c0509d88ba8933" kindref="member">mcl_in_development</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>5),<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1ad04f400eb51c1d0d44cf37ab04555204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__mcl__common_8h_1afe265cd19c5ca0690fdd800fe57288c1ad04f400eb51c1d0d44cf37ab04555204" kindref="member">mcl_running</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="hpm__mcl__common_8h_1ab2ac1a466d1b760de790a955526e6edca0ddd3add120c6975b94bdfaf80b5f0d4" kindref="member">mcl_group_common</ref>,<sp/>6),</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="hpm__mcl__common_8h_1a4dae8342b13f1b93c6acddf91acd9692" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__mcl__common_8h_1a4dae8342b13f1b93c6acddf91acd9692" kindref="member">mcl_user_delay_us</ref>(uint64_t<sp/>tick);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="hpm__mcl__common_8h_1a94464e5af2c61c67da41c13ae7fc7867" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DEBUG<sp/>printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="hpm__mcl__common_8h_1a990c966fff97d73cb5835a41156d6327" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_PI<sp/>HPM_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="hpm__mcl__common_8h_1a6fce632c323de12d2a5a9cbe15534e69" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_2PI<sp/>HPM_2_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="hpm__mcl__common_8h_1a9c031727a68943d07b0b03502d382c5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_PI_DIV3<sp/>(MCL_PI<sp/>/<sp/>3.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="hpm__mcl__common_8h_1a7ad4b8d963c326686da22590416596c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DELAY_US(x)<sp/>mcl_user_delay_us(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="hpm__mcl__common_8h_1aba24cdadad3278d0d8ae160d72483885" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_DELAY_MS(x)<sp/>MCL_DELAY_US(1000*x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="hpm__mcl__common_8h_1ad62d435e2fb9100cd0e5143ee9a40b4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_EMPTY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="hpm__mcl__common_8h_1a637c7856c9feff74f5b4ead9219c1db3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ASSERT_BOOL(b,<sp/>code_extend,<sp/>errcode)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!b)<sp/>{<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_extend;<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCL_DEBUG(&quot;errcode:%d,<sp/>file:%s,<sp/>line:%d.\r\n&quot;,<sp/>errcode,<sp/>__FILE__,<sp/>__LINE__);<sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>errcode;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="hpm__mcl__common_8h_1a2252c5b43e15a648937cfd39c22e2a81" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ASSERT_EXEC_CODE_BOOL(b,<sp/>code_extend)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!b)<sp/>{<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_extend;<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="hpm__mcl__common_8h_1a64c8542a95d705232b451f0a128a0a35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ASSERT(x,<sp/>return_errcode)<sp/>MCL_ASSERT_BOOL(((uint32_t)(x)<sp/>!=<sp/>0),<sp/>MCL_EMPTY,<sp/>return_errcode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="hpm__mcl__common_8h_1a4cb8fb324354c9ea44b206655d0a4057" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ASSERT_EXEC_CODE(x,<sp/>code)<sp/>MCL_ASSERT_EXEC_CODE_BOOL((x),<sp/>code)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="hpm__mcl__common_8h_1aa1a87daee1af58e93c5aa4a32f793f5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ASSERT_EXEC_CODE_AND_RETURN(x,<sp/>code,<sp/>return_errcode)<sp/><sp/><sp/><sp/>MCL_ASSERT_BOOL((x),<sp/>code,<sp/>return_errcode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_EXEC_CODE_OPT(x,<sp/>code)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_OPT(x,<sp/>return_errcode)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_EXEC_CODE_AND_RETURN_OPT(x,<sp/>code,<sp/>return_errcode)<sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="hpm__mcl__common_8h_1a76aafb6499ee8c97775d6901e084c95e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_EXEC_CODE_OPT<sp/>MCL_ASSERT_EXEC_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="hpm__mcl__common_8h_1a7987628a9f9662f4891f49c739314062" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_OPT<sp/>MCL_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="hpm__mcl__common_8h_1af71b7be25cc98946e91545dec4a93ce3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MCL_ASSERT_EXEC_CODE_AND_RETURN_OPT<sp/>MCL_ASSERT_EXEC_CODE_AND_RETURN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="hpm__mcl__common_8h_1ad5200dd3839ea89b0d36de7bad605ca3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FUNCTION_EXC_IF_ENABLE(b,<sp/>str_f,<sp/>f)<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(b)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_f<sp/>=<sp/>f;<sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="hpm__mcl__common_8h_1a91f24027d9dc8a8e02ec355b5904b3fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FUNCTION_EXC_IF_ELSE_ENABLE(b,<sp/>str_f,<sp/>_if,<sp/>_else)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(b)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_f<sp/>=<sp/>_if;<sp/><sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_f<sp/>=<sp/>_else;<sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="hpm__mcl__common_8h_1a5377d3aec001d0aea62b9fdcb8ae755d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FUNCTION_INIT_IF_EMPTY(str_function,<sp/>function)<sp/><sp/>MCL_FUNCTION_EXC_IF_ENABLE((str_function<sp/>==<sp/>NULL),<sp/>str_function,<sp/>function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="hpm__mcl__common_8h_1a6491f08fe299b76aa68b50a083e644de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FUNCTION_INIT_IF_NO_EMPTY(function,<sp/>str_function)<sp/><sp/>MCL_FUNCTION_EXC_IF_ENABLE((str_function<sp/>!=<sp/>NULL),<sp/>function,<sp/>str_function)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="hpm__mcl__common_8h_1a14e441427e6b22bb6ea365483e4dcdd3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_STATUS_SET_IF_TRUE(real,<sp/>str,<sp/>status)<sp/>MCL_FUNCTION_EXC_IF_ENABLE((real),<sp/>str,<sp/>status)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="hpm__mcl__common_8h_1a9d0e6e1894281803721b72c6b77ad83a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_VALUE_SET_IF_TRUE(real,<sp/>str,<sp/>value)<sp/>MCL_FUNCTION_EXC_IF_ENABLE((real),<sp/>str,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="hpm__mcl__common_8h_1a8fc05461c4b13d0e4d2ab67ba9429d39" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FUNCTION_SET_IF_ELSE_TRUE(real,<sp/>str,<sp/>_if,<sp/>_else)<sp/>MCL_FUNCTION_EXC_IF_ELSE_ENABLE((real),<sp/>str,<sp/>_if,<sp/>_else)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FUNC_OPTIONAL_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="hpm__mcl__common_8h_1a2d3879a27c6198a449b63fcbbbbd9496" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_ANGLE_MOD_X(down,<sp/>up,<sp/>val)<sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor">({<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float<sp/>val_;<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((val)<sp/>&gt;<sp/>up)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>(val);<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>(val_)<sp/>-<sp/>(up<sp/>-<sp/>down);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>((val_)<sp/>&gt;<sp/>up);<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>((val)<sp/>&lt;<sp/>down)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>(val);<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>(val_)<sp/>+<sp/>(up<sp/>-<sp/>down);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>((val_)<sp/>&lt;<sp/>down);<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>(val);<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(val_);<sp/><sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor">})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="hpm__mcl__common_8h_1a22809cd96f4b469411bbe9c7778bad93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_GET_ANGLE_DELTA(val,<sp/>offset)<sp/><sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">({<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float<sp/>val_;<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>float<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>0;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((val)<sp/>&gt;<sp/>0)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(val)<sp/>-<sp/>offset;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>((val)<sp/>&lt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(val)<sp/>+<sp/>offset;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(fabs(val)<sp/>&lt;<sp/>fabs(temp))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>val;<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val_<sp/>=<sp/>temp;<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(val_);<sp/><sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor">})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="hpm__mcl__common_8h_1a0d2fe1fc9ff86004a80c3d2d0d04dc97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_VALUE_LIMIT(val,<sp/>min,<sp/>max)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((val)<sp/>&gt;<sp/>(max))<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>max;<sp/><sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>((val)<sp/>&lt;<sp/>(min))<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>min;<sp/><sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="hpm__mcl__common_8h_1a0f8944cbe11da291acf9c43653cebe6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_GET_ADC_12BIT_VALID_DATA(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((x<sp/>&amp;<sp/>0xffff)<sp/>&gt;&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="hpm__mcl__common_8h_1a95fb64db7e89d45c0b250cdc782c7cfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_USEC_TO_HZ(usec)<sp/>(1000000.0f<sp/>/<sp/>(usec))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="hpm__mcl__common_8h_1a811626234ea63f7693674c1f0eb1b4d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_PERIOD_TO_FREQUENCY(period)<sp/>(1.0f<sp/>/<sp/>(period))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="hpm__mcl__common_8h_1a75d3f2f0503ad39956975bee045f6075" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_FREQUENCY_TO_PERIOD(frequency)<sp/>(1.0f<sp/>/<sp/>(frequency))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="hpm__mcl__common_8h_1aac2b95bd47912513ec78308e34b82ece" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_USEC_TO_SEC(usec)<sp/>((usec)<sp/>/<sp/>1000000.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="hpm__mcl__common_8h_1a516a422068d49d3e1ad60ada738de732" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCL_USEC_TO_MSEC(usec)<sp/>((usec)<sp/>/<sp/>1000.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structmcl__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239" refid="structmcl__cfg__t_1add1b0983240b6f82d3bc5753ac37844b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__physical__para__t" kindref="compound">mcl_physical_para_t</ref><sp/><ref refid="structmcl__cfg__t_1add1b0983240b6f82d3bc5753ac37844b" kindref="member">physical</ref>;</highlight></codeline>
<codeline lineno="240" refid="structmcl__cfg__t_1a9f4c76c59aa8a50fa521e641b8049a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmcl__physical__para__q__t" kindref="compound">mcl_physical_para_q_t</ref><sp/><ref refid="structmcl__cfg__t_1a9f4c76c59aa8a50fa521e641b8049a53" kindref="member">physical_q</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><ref refid="structmcl__cfg__t" kindref="compound">mcl_cfg_t</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="middleware/hpm_mcl_v2/hpm_mcl_common.h"/>
  </compounddef>
</doxygen>
