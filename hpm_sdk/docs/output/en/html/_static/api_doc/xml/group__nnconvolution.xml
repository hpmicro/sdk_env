<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__nnconvolution" kind="group">
    <compoundname>nnconvolution</compoundname>
    <title>NN Convolution Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__nnconvolution_1gaf6fad182b1496ef1d5651b6628701293" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>1x1<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//160x120x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their</highlight></codeline>
<codeline><highlight class="normal">//stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>up<sp/>the<sp/>bias<sp/>by<sp/>2^6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Scale<sp/>down<sp/>the<sp/>output<sp/>tensor<sp/>by<sp/>1/2^9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>120</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_1x1_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>STRIDE_Y,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7615" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7615" bodyend="7649"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga48801812baf4ac44d8f420656e0d344e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-vector enabled and its size must be &quot;out_tensor_ch * (3 * ker_dim *
                                 ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias(in_data,<sp/>IN_DIM,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7702" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7702" bodyend="7728"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb280da3e5ee9dae757454a6f9fde55a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution for RGB images with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[3<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>wt_tmp_buf[OUT_CH<sp/>*<sp/>(3<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>+<sp/>1)];</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_RGB_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>wt_tmp_buf);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7781" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7781" bodyend="7807"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga4289d8b8bf7de39fe2ec6716aeb1fb21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7860" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7860" bodyend="7887"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa3bea4019638b22edc46a625f5cf7cce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x3<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>80x59x5</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>40</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>30</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="7950" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="7950" bodyend="7984"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9c7a0bfeedea12c13702a7b85f6045b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>12x12x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>8x8x50</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>50</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>8</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8038" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8038" bodyend="8065"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ebc094b7ca8a8eb46c249c165dc0990" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 8-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_Y<sp/>*<sp/>OUT_X];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s8_s8_s8_sft_bias_fast_any(in_data,<sp/>IN_W,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8133" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8133" bodyend="8167"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae45d9ea581aa690f6bc604878b7ff56a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x1<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x20</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>input_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias(input_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8220" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8220" bodyend="8247"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2ad7e5bbd56df8f95bd183850900ff56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>28x28x4<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>5x5<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>24x24x8</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>4</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>10</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_DIM,<sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8301" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8301" bodyend="8328"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab92665e531cb2e24620d923c487f5697" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</definition>
        <argsstring>(const q15_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q15_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q15_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any</name>
        <param>
          <type>const q15_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast signed 16-bit integer convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that both in_tensor_ch and out_tensor_ch are multiple of 2.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>160x120x20<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x5<sp/>kernel<sp/>and<sp/>generate<sp/>a</highlight></codeline>
<codeline><highlight class="normal">//80x59x8<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>1<sp/>and<sp/>their<sp/>stride</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_X<sp/>160</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_Y<sp/>120</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>20</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>8</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_X<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM_Y<sp/>5</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_X<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD_Y<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_X<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE_Y<sp/>2</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_LSHIFT<sp/>6</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>9</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_X<sp/>80</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_Y<sp/>59</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_X<sp/>*<sp/>IN_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM_X<sp/>*<sp/>KER_DIM_Y<sp/>*<sp/>OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>bias[OUT_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>IN_CH<sp/>*<sp/>KER_DIM_X<sp/><sp/>*<sp/>KER_DIM_Y]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_X<sp/>*<sp/>OUT_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_HWC_s16_s16_s16_sft_bias_fast_any(in_data,<sp/>IN_X,<sp/>IN_Y<sp/>,<sp/>IN_CH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM_X,<sp/>KER_DIM_Y,<sp/>PAD_X,<sp/>PAD_Y,<sp/>STRIDE_X,<sp/>STRIDE_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bias,<sp/>BIAS_LSHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_X,<sp/>OUT_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8396" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8396" bodyend="8430"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a5303eb12476d8342725b778f3d60f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Convolve<sp/>a<sp/>11x11x28<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3<sp/>kernel<sp/>and<sp/>generate<sp/>a<sp/>9x9x48</highlight></codeline>
<codeline><highlight class="normal">//output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding<sp/>be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM<sp/>11</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>28</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>48</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM<sp/>9</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM<sp/>*<sp/>IN_DIM]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM<sp/>*<sp/>OUT_DIM];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias(in_data,<sp/>IN_DIM,<sp/>IN_CH,<sp/>weight,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>OUT_CH,<sp/>KER_DIM,<sp/>PAD,<sp/>STRIDE,<sp/>bias,<sp/>0,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in_tmp_buf,<sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8483" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8483" bodyend="8510"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacbd18e7251df9494ddf4619156237efd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q7_t *bias, const uint16_t bias_lshift, const uint16_t out_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf, q7_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_lshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs signed 8-bit integer depthwise convolution in any x and y dimensions with shift-based quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_lshift</parametername>
</parameternamelist>
<parameterdescription>
<para>left shift amount for the bias </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">//Perform<sp/>a<sp/>depth-wise<sp/>convolution<sp/>for<sp/>a<sp/>79x59x12<sp/>input<sp/>tensor<sp/>with<sp/>a<sp/>3x3</highlight></codeline>
<codeline><highlight class="normal">//kernel<sp/>and<sp/>generate<sp/>a<sp/>77x57x12<sp/>output<sp/>tensor.<sp/>Let<sp/>both<sp/>dimensions<sp/>padding</highlight></codeline>
<codeline><highlight class="normal">//be<sp/>0<sp/>and<sp/>their<sp/>stride<sp/>be<sp/>1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_X<sp/>79</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_DIM_Y<sp/>59</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>IN_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_CH<sp/>12</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>KER_DIM<sp/>3</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>PAD<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>STRIDE<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>BIAS_SHIFT<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_RSHIFT<sp/>7</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_X<sp/>77</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>OUT_DIM_Y<sp/>57</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">q7_t<sp/>in_data[IN_CH<sp/>*<sp/>IN_DIM_X<sp/>*<sp/>IN_DIM_Y]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>weight[IN_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM<sp/>*<sp/>IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>bias[IN_CH]<sp/>=<sp/>{...};</highlight></codeline>
<codeline><highlight class="normal">q15_t<sp/>in_tmp_buf[2<sp/>*<sp/>OUT_CH<sp/>*<sp/>KER_DIM<sp/>*<sp/>KER_DIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline><highlight class="normal">q7_t<sp/>out_data[OUT_CH<sp/>*<sp/>OUT_DIM_X<sp/>*<sp/>OUT_DIM_Y];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">riscv_nn_conv_dw_HWC_s8_s8_s8_sft_bias_any(in_data,<sp/>IN_DIM_X,<sp/>IN_DIM_Y,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IN_CH,<sp/>weight,<sp/>OUT_CH,<sp/>KER_DIM,<sp/>KER_DIM,<sp/>PAD,<sp/>PAD,<sp/>STRIDE,<sp/>STRIDE,<sp/>bias,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BIAS_SHIFT,<sp/>OUT_RSHIFT,<sp/>out_data,<sp/>OUT_DIM_X,<sp/>OUT_DIM_Y,<sp/>in_tmp_buf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8574" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8574" bodyend="8608"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga291d3433cfdeac37ddedd621e0cea855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs.. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8655" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8655" bodyend="8691"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab36c58937982cb251a299463e48ff357" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8739" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8739" bodyend="8773"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad97f5d188a38e067ca8afe1d26a3f9e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8820" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8820" bodyend="8854"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ee3747f0f50187370bb25d91b412447" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8902" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8902" bodyend="8936"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac7a64479b1a28db67739740f7797c0ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="8984" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="8984" bodyend="9018"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1353634c6dd78e51d72ad649f1851741" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9064" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9064" bodyend="9097"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga40b28637cd642db0f36e19b0c5008433" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9144" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9144" bodyend="9177"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1a24af57ab9a2be65f085e36c0c80520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9223" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9223" bodyend="9256"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga13dceb3700caa3c22c53bd7f6017a40d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to 2 * in_tensor_ch * ker_dim_x * ker_dim_y. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9303" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9303" bodyend="9336"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2e95b6dd2dc0ebe0fb31b4ce4e97b5c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;2 * in_tensor_ch *
                                     ker_dim_x * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>out_tensor_ch is a multiple of 2</para>
</listitem><listitem><para>ker_dim_x is 1</para>
</listitem><listitem><para>ker_dim_y is 1</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9383" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9383" bodyend="9416"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaeed17db639b9ce3a896bc2bfeaaeb8ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9449" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9449" bodyend="9476"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gadbb401015033df936d4547841e0c6778" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9510" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9510" bodyend="9537"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae84e818d001cf7ea2c4331924f36e35e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9570" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9570" bodyend="9597"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga02b99a74afdae934fc45f491a59d2214" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9630" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9630" bodyend="9657"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3fbca4e04cca9289834c84a10a913a88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9691" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9691" bodyend="9718"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac66363c7f5934113644361412bcf3afc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9750" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9750" bodyend="9776"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga760c3e28022de0cc9781549ec67b472a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9808" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9808" bodyend="9834"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga546898208090a68e33f99ced79470f5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9866" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9866" bodyend="9892"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2f5d213d0023ff26d9ce168bfefa2a40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9924" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9924" bodyend="9950"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga30719ccfc86c77e8b4fde37011f8d543" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf, q15_t *wt_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_RGB_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>wt_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution on RGB images for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>input tensor dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;2 * (3 *
                                 ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wt_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for kernel weights. It is required when -mext-dsp or -mext-vector enabled and its size must be &quot;out_tensor_ch *
                                 (3 * ker_dim * ker_dim + 1)&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="9982" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="9982" bodyend="10008"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0bc1ef1d72db702cc49be0016a4180f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10040" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10040" bodyend="10067"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa32181a4fa9730dd1aaff34473aad105" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10099" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10099" bodyend="10126"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab00822cf6d1b355344c6385a2555dab4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10158" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10158" bodyend="10185"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7cd15bdefc9684fc8c6dc5740bd973e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10217" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10217" bodyend="10244"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga14a05c18351cdbb2158cf1978e508f8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10276" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10276" bodyend="10303"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf85f4310b5b177044f48ea61614aaf10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10334" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10334" bodyend="10360"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaba554ffd11e415541ebab72f6161915d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10391" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10391" bodyend="10417"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga44f3d234a8ffe93b8cbc31e19ed49cc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10448" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10448" bodyend="10474"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga681fd01c3db04f540acb48e080682acc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10505" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10505" bodyend="10531"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6ca86332aeecf3be577bfb87f554d178" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 *
                                 in_tensor_ch * ker_dim * ker_dim&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10562" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10562" bodyend="10588"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa733b3587ec4a987004946f46fdf4d8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10626" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10626" bodyend="10660"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafa3b832483993fd1609f2744a7a1c6d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10699" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10699" bodyend="10733"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa245691db40029df9384b7e50b79fde4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10771" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10771" bodyend="10805"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae65c6f8353b1d3eb0ad4f6bbdb89c4cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10844" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10844" bodyend="10878"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1ba10db375981d7dfba5902aea8de0ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_bias_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10917" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10917" bodyend="10951"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaf210756844a35322033afcc20325eae5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="10988" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="10988" bodyend="11021"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaea70ea34cd3a6e45bc89ada5e110e698" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s16_s8_sym_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11058" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11058" bodyend="11091"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad00d5ffdfffd45ad20e15c41da36a31b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_u8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11128" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11128" bodyend="11161"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad463faadd1a58de1fabc5f05a396f025" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s8_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11198" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11198" bodyend="11231"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga7bb79b1cd25ff4e15ddfff5ac9336d3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_u8_s16_s8_sym_fast_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector enabled and its size must be equal to &quot;2 * in_tensor_ch * ker_dim_x
                                     * ker_dim_y&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch is a multiple of 4 and out_tensor_ch is a multiple of 2.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11268" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11268" bodyend="11301"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa2232c5f84cbe4d40d4201756d87c308" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11334" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11334" bodyend="11361"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c6fcf87e6f94a46600aab9b8154e747" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11393" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11393" bodyend="11420"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga88f4d9ab1a22cc7d551664bf37c11f4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11452" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11452" bodyend="11479"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga3c07fe5b1305f89f094eb44de887288e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11511" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11511" bodyend="11538"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae3cdb24a3bc9374cc98a97d1cf66d713" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11570" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11570" bodyend="11597"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaddf5ec832e3e3306da2089d5bb742aee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11628" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11628" bodyend="11654"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gacb88aa3904d0374b532ac0dfae36d0ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11685" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11685" bodyend="11711"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga11e8db5b74e51807c0f6c264ceb88a3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to (in_tensor_ch * ker_dim * ker_dim + 1) / 2. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11742" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11742" bodyend="11768"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga8021fde290f091b9348e56ae24fdf912" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs, and with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11799" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11799" bodyend="11825"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga19633dab07a1ccb79712b58dbf7e9a51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim, const uint16_t pad, const uint16_t stride, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch * ker_dim * ker_dim + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11856" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11856" bodyend="11882"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga425531141b804498f1b04ab9203c35c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11920" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11920" bodyend="11954"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0a8c643e8c77051213ccf469486ddccb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="11993" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="11993" bodyend="12027"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga048ff15cdd4652c25b9b250f8356f335" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12065" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12065" bodyend="12099"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab6af36649c64102a6e1c80e623bed9f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12138" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12138" bodyend="12172"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga24277b452593c20ae17ff2086fb8253a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const q31_t *bias, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_bias_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12211" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12211" bodyend="12245"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae8250ca3c328de6b4ea93e4f62bcf541" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with bias inputs and symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12282" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12282" bodyend="12315"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga6bf168c41fda67552bd4b5f5c200a268" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s16_s8_sym_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12353" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12353" bodyend="12386"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gab5cb8f3dc2985f57b742036399164798" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, u8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>u8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12423" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12423" bodyend="12456"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gac080214be9e1938ba324ca42c0aade2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q7_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s8_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 8-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12494" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12494" bodyend="12527"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae9744bde30c4e26b17ef6dc89acb16d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</definition>
        <argsstring>(const u8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const uint16_t pre_rshift, const uint16_t out_scale, const uint16_t post_rshift, q15_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_s16_s8_sym_any</name>
        <param>
          <type>const u8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pre_rshift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>post_rshift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs and signed 16-bit integer outputs in any x and y dimensions with symmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pre_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of scaling for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_rshift</parametername>
</parameternamelist>
<parameterdescription>
<para>right shift amount for the output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its size must be equal to &quot;(in_tensor_ch *
                                     ker_dim_x * ker_dim_y + 1) / 2&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch must be equal to out_tensor_ch.</para>
</simplesect>
<simplesect kind="note"><para>The outputs will be 2-stage shifted before being stored, i.e., out = ((out &gt;&gt; pre_rshift) *out_scale) &gt;&gt; post_rshift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12565" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12565" bodyend="12598"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga2420b518e254e3fd4abe27f16a2a7901" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1x1 kernels convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints (see the Note below for details).</para>
</simplesect>
<simplesect kind="note"><para><itemizedlist>
<listitem><para>The input constraints of this function are:<itemizedlist>
<listitem><para>in_tensor_ch is a multiple of 4</para>
</listitem><listitem><para>pad_x is 0</para>
</listitem><listitem><para>pad_y is 0</para>
</listitem><listitem><para>stride_x is 1</para>
</listitem><listitem><para>stride_y is 1 </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12646" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12646" bodyend="12689"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gaa7a9c1eab5556db05cfa3d05dfa4c71c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch)</argsstring>
        <name>hpm_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1x1_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12698" column="1" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12698" bodyend="12707"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gae1c62cb7f29063bf12498148562fdca7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t pad_x, const uint16_t stride_x, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs 1xn kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that out_tensor_dim_x is a multiple of 4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12747" column="19" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12747" bodyend="12787"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga1e0aac3f254eb048c027362e2fa40c0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_1xn_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel. It is always 1 here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12798" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12798" bodyend="12809"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gafcbbcd4692c657df2ab93d7529fc0adb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint16_t in_tensor_group, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_group</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_group</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor groups </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12852" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12852" bodyend="12899"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga89509f5499197a1f65bc7e29ff471f2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_HWC_s8_s8_s8_asym_bias_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_HWC_s8_s8_s8_asym_bias_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12909" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12909" bodyend="12920"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga9cfa87c1ba0068ad397a429d1ac1aab2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const int8_t *in_tensor, const int32_t in_tensor_dim_x, const int32_t in_tensor_dim_y, const int32_t in_tensor_ch, const int8_t *ker_weight, const int32_t out_tensor_ch, const int32_t pad_x, const int32_t pad_y, const int32_t stride_x, const int32_t stride_y, const int32_t *bias, int8_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const int32_t out_tensor_dim_x, const int32_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const int32_t dilation_x, const int32_t dilation_y, int16_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_3x3_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const int8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise 3x3 kernels convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraints that in_tensor_ch has to be equal to out_tensor_ch and pad_x is less than 1. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="12961" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="12961" bodyend="12998"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga455407b84cfc71528b0dd8680c64a8b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ch_mult, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for signed 8-bit interger inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels. out_tensor_ch is equal to ch_mult * in_tensor_ch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function only returns 0.</para>
</simplesect>
<bold>Example:</bold> <programlisting><codeline><highlight class="normal">to<sp/>be<sp/>modified...</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13047" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13047" bodyend="13096"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad954df9be69373bdc385362c70b140dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</definition>
        <argsstring>(const q7_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const q7_t *ker_weight, const uint16_t out_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const uint16_t pad_x, const uint16_t pad_y, const uint16_t stride_x, const uint16_t stride_y, const int32_t *bias, q7_t *out_tensor, const int32_t *out_shift, const int32_t *out_scale, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t out_offset, const int32_t in_offset, const int32_t act_min, const int32_t act_max, const uint16_t dilation_x, const uint16_t dilation_y, q15_t *in_tmp_buf)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any</name>
        <param>
          <type>const q7_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>out_scale</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>in_tmp_buf</declname>
        </param>
        <briefdescription>
<para>This function performs fast depthwise convolution for signed 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the shift vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the scaling vector for output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -127 to 128. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of -128 to 127. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tmp_buf</parametername>
</parameternamelist>
<parameterdescription>
<para>temporary buffer for the input tensor. It is required when -mext-dsp or -mext-vector is enabled and its needed size could be get by calling riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that in_tensor_ch has to be equal to out_tensor_ch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13142" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13142" bodyend="13189"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1gad9339201eff1c27fd41039bfc4a4756c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</definition>
        <argsstring>(const uint16_t in_tensor_ch, const uint16_t ker_dim_x, const uint16_t ker_dim_y)</argsstring>
        <name>hpm_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any_get_buffer_size</name>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <briefdescription>
<para>This function is used to get the needed size, in bytes, by the input temporary buffer of riscv_nn_conv_dw_HWC_s8_s8_s8_asym_bias_fast_any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns the needed size by the temporary buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13199" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13199" bodyend="13210"/>
      </memberdef>
      <memberdef kind="function" id="group__nnconvolution_1ga0b9ce54b2ac422932e71b67b66d657c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</definition>
        <argsstring>(const uint8_t *in_tensor, const uint16_t in_tensor_dim_x, const uint16_t in_tensor_dim_y, const uint16_t in_tensor_ch, const uint8_t *ker_weight, const uint16_t ker_dim_x, const uint16_t ker_dim_y, const int16_t ch_mult, const int16_t pad_x, const int16_t pad_y, const int16_t stride_x, const int16_t stride_y, const int16_t dilation_x, const int16_t dilation_y, const int32_t *bias, const int32_t in_offset, const int32_t ker_offset, const int32_t out_offset, uint8_t *out_tensor, const uint16_t out_tensor_dim_x, const uint16_t out_tensor_dim_y, const int32_t act_min, const int32_t act_max, const int32_t out_shift, const int32_t out_scale)</argsstring>
        <name>hpm_nn_conv_dw_HWC_u8_u8_u8_asym_bias_any</name>
        <param>
          <type>const uint8_t *</type>
          <declname>in_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_dim_y</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>in_tensor_ch</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>ker_weight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>ker_dim_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>ch_mult</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>pad_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>stride_y</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_x</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>dilation_y</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>in_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>ker_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>out_tensor</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_x</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_tensor_dim_y</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>act_max</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_scale</declname>
        </param>
        <briefdescription>
<para>This function performs depthwise convolution for unsigned 8-bit integer inputs/outputs in any x and y dimensions with asymmetric quantization on the outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the input tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_tensor_ch</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of kernel weights </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the filter kernel </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ch_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>multiplier of input tensor channels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_x</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pad_y</parametername>
</parameternamelist>
<parameterdescription>
<para>padding size in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_x</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stride_y</parametername>
</parameternamelist>
<parameterdescription>
<para>convolution stride in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_x</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dilation_y</parametername>
</parameternamelist>
<parameterdescription>
<para>dummy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the bias vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the input tensor It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ker_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the filter kernel It should be in the range of -255 to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>value of offset for the output tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_x</parametername>
</parameternamelist>
<parameterdescription>
<para>x dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_tensor_dim_y</parametername>
</parameternamelist>
<parameterdescription>
<para>y dimension of the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_min</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">act_max</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum value to clip out the ouput tensor. It should be in the range of 0 to 255. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount for the output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>value of sacling for the output tensor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>This function returns 0 on success; otherwise, it returns -1 if its inputs do not meet the constraint that both ch_mult and ker_dim_x are multiple of 2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="13252" column="23" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="13252" bodyend="13293"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The convolution functions transform the input matrix into a column vector with im2col, and then use matrix-matrix multiplication to get the convolution result. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
