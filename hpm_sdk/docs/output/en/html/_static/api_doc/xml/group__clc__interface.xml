<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__clc__interface" kind="group">
    <compoundname>clc_interface</compoundname>
    <title>CLC driver APIs</title>
    <innerclass refid="structclc__param__config__t" prot="public">clc_param_config_t</innerclass>
    <innerclass refid="structclc__coeff__config__t" prot="public">clc_coeff_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" prot="public" static="no" strong="no">
        <type></type>
        <name>clc_chn_t</name>
        <enumvalue id="group__clc__interface_1ggae009e62577c2cfc3e6d7fa152f6cc7e9a40baff03c442c0f6b966d23860af26a0" prot="public">
          <name>clc_vd_chn</name>
          <initializer>= (0UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1ggae009e62577c2cfc3e6d7fa152f6cc7e9aaf2cda62b141acfa38b3f2da943283b1" prot="public">
          <name>clc_vq_chn</name>
          <initializer>= (1UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>clc channel </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="25" column="1" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="enum" id="group__clc__interface_1ga6e4fcda8c14c63007ecb734c35c1a5aa" prot="public" static="no" strong="no">
        <type></type>
        <name>clc_coeff_zone_t</name>
        <enumvalue id="group__clc__interface_1gga6e4fcda8c14c63007ecb734c35c1a5aaa459490626586aa15c73b1178e2529f4d" prot="public">
          <name>clc_coeff_zone_0</name>
          <initializer>= (0UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga6e4fcda8c14c63007ecb734c35c1a5aaa33200bf6724f9280fb09cfb69b60c668" prot="public">
          <name>clc_coeff_zone_1</name>
          <initializer>= (1UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga6e4fcda8c14c63007ecb734c35c1a5aaa945728be182d2e956ac8041933f9d5ba" prot="public">
          <name>clc_coeff_zone_2</name>
          <initializer>= (2UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>clc coefficient zone </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="33" column="1" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="group__clc__interface_1ga90e2f007e36dc2e689f805368c439734" prot="public" static="no" strong="no">
        <type></type>
        <name>clc_irq_mask_t</name>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734a123901f93faf7f2ebd74434e36e2954b" prot="public">
          <name>clc_irq_calc_done</name>
          <initializer>= (0x00000001UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734aba92a48232c652961be05d75868914db" prot="public">
          <name>clc_irq_eadc_setting_err</name>
          <initializer>= (0x00000002UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734a2e28aff219203634cd72c1fe5f1cc6d3" prot="public">
          <name>clc_irq_2p2z_clamp_setting_err</name>
          <initializer>= (0x00000004UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734a112cb7466790903d06e2c5b124690776" prot="public">
          <name>clc_irq_2p2z_over_hi</name>
          <initializer>= (0x00000008UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734a4b7525d1481871ec33c8a65e0453c700" prot="public">
          <name>clc_irq_2p2z_over_lo</name>
          <initializer>= (0x00000010UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734ab8c9d71edac717ac7e67074152df9d57" prot="public">
          <name>clc_irq_2p2z_over_sf</name>
          <initializer>= (0x00000020UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734acc7a5d31ebe599892c4bfacd058cb412" prot="public">
          <name>clc_irq_3p3z_clamp_setting_err</name>
          <initializer>= (0x00000040UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734afc888d75628bb18c6646d525ff576d5b" prot="public">
          <name>clc_irq_3p3z_over_hi</name>
          <initializer>= (0x00000080UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734ac743575a5a3e6ac0d8ef0003e1c59241" prot="public">
          <name>clc_irq_3p3z_over_lo</name>
          <initializer>= (0x00000100UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734aa9f671f01276c1c140407a89e2554a10" prot="public">
          <name>clc_irq_forb_setting_err</name>
          <initializer>= (0x00000200UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__clc__interface_1gga90e2f007e36dc2e689f805368c439734af5d28ecba2342860d679480279789165" prot="public">
          <name>clc_irq_data_in_forbid</name>
          <initializer>= (0x00000400UL)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>clc irq mask bit </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="42" column="1" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="42" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__clc__interface_1gafdab94c662e243b0f0ef54f2cbd55862" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_enable</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, bool enable)</argsstring>
        <name>clc_set_enable</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>CLC enable or disable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true-enable, false-disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="97" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga9f05718d068cb682699f3ad195d3b3e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_mask_mode_enable</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, bool enable)</argsstring>
        <name>clc_set_mask_mode_enable</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>CLC keep working even if bad irq status ocurred. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true-enable, false-disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="113" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga5a781759ae97b8a0d1a84a6e6ddb1ff8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_sw_inject_dq_mode_enable</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, bool enable)</argsstring>
        <name>clc_set_sw_inject_dq_mode_enable</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>CLC set software inject dq work mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true-if the ADC value comes from software injection and the VD/VQ channel is required for joint use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="129" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="129" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga00967a266d1077e55f255f494689c279" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_irq_enable</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t irq_mask, bool enable)</argsstring>
        <name>clc_set_irq_enable</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>CLC set irq enable or disable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__clc__interface_1ga90e2f007e36dc2e689f805368c439734" kindref="member">clc_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>enable or disable <itemizedlist>
<listitem><para>true enable </para>
</listitem>
<listitem><para>false disable </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="147" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gafb36979536201dda8695bd37c47a3106" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t clc_get_irq_status</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_irq_status</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>irq</parametername>
</parameternamelist>
<parameterdescription>
<para>status. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="163" column="24" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga97b21f189bf380fee5701cbf654790c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_clear_irq_status</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t irq_mask)</argsstring>
        <name>clc_clear_irq_status</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_mask</declname>
        </param>
        <briefdescription>
<para>CLC clear irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__clc__interface_1ga90e2f007e36dc2e689f805368c439734" kindref="member">clc_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="174" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga5dd0571040117483e7b26f0aea748a42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool clc_get_irq_flag</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t irq_mask)</argsstring>
        <name>clc_get_irq_flag</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_mask</declname>
        </param>
        <briefdescription>
<para>CLC check irq request flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__clc__interface_1ga90e2f007e36dc2e689f805368c439734" kindref="member">clc_irq_mask_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true-has</parametername>
</parameternamelist>
<parameterdescription>
<para>irq req, false-no irq req. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="187" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga077aa857f6169a9a7a64dbe8884dc941" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_adc_chn_offset</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t adc_chn, uint32_t adc_offset)</argsstring>
        <name>clc_set_adc_chn_offset</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>adc_chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>adc_offset</declname>
        </param>
        <briefdescription>
<para>CLC set adc channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adc_chn</parametername>
</parameternamelist>
<parameterdescription>
<para>adc channel for ADC0~3 or SDM_ADC0~7, adc from VSC must be set to 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">adc_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>adc offset for ADC0~3 or SDM_ADC0~7, adc from VSC must be set to 0. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="199" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gaee8c7fa7f25b78fe104094faca4843ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_pwm_period</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t pwm_period)</argsstring>
        <name>clc_set_pwm_period</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pwm_period</declname>
        </param>
        <briefdescription>
<para>CLC set pwm period. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pwm_period</parametername>
</parameternamelist>
<parameterdescription>
<para>0-clc dac output pwm duty ratio, else-clc dac output pwm period, number of clock cycles. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="211" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga7b414545b190f7d1a7d73e4a6924344d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t clc_get_pwm_period</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_pwm_period</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC set pwm period. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>pwm</parametername>
</parameternamelist>
<parameterdescription>
<para>period </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="222" column="24" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga1a205f088338f1d3a0d8903ec884077d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t clc_get_output_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_output_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get output caculated value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>output caculated value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="233" column="24" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga5894a10350f5e819a6c6ae4989921b84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t clc_get_timestamp</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_timestamp</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get timestamp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>adc timestamp </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="244" column="24" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gaa4ebb1384611093713bdfcb9e05d723a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_eadc_current_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_eadc_current_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get error adc latest value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>error adc latest value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="255" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gab057468fe8bda5e08920ff293268b7b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_eadc_previous0_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_eadc_previous0_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get error adc previous0 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>error adc previous0 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="266" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gad9941bc7293b91b0f020e07df3a92cdd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_eadc_previous0_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t value)</argsstring>
        <name>clc_sw_inject_eadc_previous0_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject error adc previous0 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC error adc previous0 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="277" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gaed8bb064e7663d6ec6442c89c5165d02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_eadc_previous1_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_eadc_previous1_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get error adc previous1 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>error adc previous1 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="288" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga875041c6555ac7e400282a30e7b13373" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_eadc_previous1_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t value)</argsstring>
        <name>clc_sw_inject_eadc_previous1_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject error adc previous1 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC error adc previous1 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="299" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga2e2baa4cf1bf9dd1324acdbf78421a24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_2p2z_current_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_2p2z_current_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get 2p2z last value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>2p2z last value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="310" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga8bcf3474ed09cca615720718bbbeeafb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_2p2z_current_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t value)</argsstring>
        <name>clc_sw_inject_2p2z_current_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject 2p2z last value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC 2p2z last value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="321" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="321" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gac67a14275e495c445add006e40a16cc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_2p2z_previous0_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_2p2z_previous0_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get 2p2z previous0 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>2p2z previous0 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="332" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga74ceed466b0455b8bb57949364944ae9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_2p2z_previous0_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t value)</argsstring>
        <name>clc_sw_inject_2p2z_previous0_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject 2p2z previous0 value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC 2p2z previous0 value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="343" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gaca8769b2403dee2928411455a7dc892c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t clc_get_3p3z_current_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn)</argsstring>
        <name>clc_get_3p3z_current_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>CLC get 3p3z last value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CLC</parametername>
</parameternamelist>
<parameterdescription>
<para>3p3z last value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="354" column="23" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga1065e20a5143e63cd497b95fe77e6d28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_3p3z_current_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t value)</argsstring>
        <name>clc_sw_inject_3p3z_current_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject 3p3z last value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC 3p3z last value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="365" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga5ddf2c677f6a6de1da2a966345810213" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_expect_adc_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, int32_t expect)</argsstring>
        <name>clc_set_expect_adc_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>expect</declname>
        </param>
        <briefdescription>
<para>CLC set expected adc value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">expect</parametername>
</parameternamelist>
<parameterdescription>
<para>expected adc value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="376" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gaf005f2a80873086072a94b40835d9f30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_sw_inject_adc_value</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, uint32_t value)</argsstring>
        <name>clc_sw_inject_adc_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>CLC software inject adc value. If it&apos;s not dq mode, this will trig clc calculation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC adc value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="387" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga16e4bbc38b8ec6ea4181fa7c37b67d18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void clc_set_sw_inject_dq_adc_value_ready</definition>
        <argsstring>(CLC_Type *clc)</argsstring>
        <name>clc_set_sw_inject_dq_adc_value_ready</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <briefdescription>
<para>CLC set software inject dq adc value ready, this will trig clc calculation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="396" column="20" bodyfile="drivers/inc/hpm_clc_drv.h" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga5d4afe5faa965d97a66020e78c03a894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clc_config_param</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, clc_param_config_t *param)</argsstring>
        <name>clc_config_param</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="structclc__param__config__t" kindref="compound">clc_param_config_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>CLC parameter configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structclc__param__config__t" kindref="compound">clc_param_config_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="407" column="6" bodyfile="drivers/src/hpm_clc_drv.c" bodystart="10" bodyend="23" declfile="drivers/inc/hpm_clc_drv.h" declline="407" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1gad6242fb1bb1b294b021303d5e3391a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t clc_config_coeff</definition>
        <argsstring>(CLC_Type *clc, clc_chn_t chn, clc_coeff_zone_t zone, clc_coeff_config_t *coeff)</argsstring>
        <name>clc_config_coeff</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__clc__interface_1ga6e4fcda8c14c63007ecb734c35c1a5aa" kindref="member">clc_coeff_zone_t</ref></type>
          <declname>zone</declname>
        </param>
        <param>
          <type><ref refid="structclc__coeff__config__t" kindref="compound">clc_coeff_config_t</ref> *</type>
          <declname>coeff</declname>
        </param>
        <briefdescription>
<para>CLC coefficient configuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chn</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC channel, <ref refid="group__clc__interface_1gae009e62577c2cfc3e6d7fa152f6cc7e9" kindref="member">clc_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">zone</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC coefficient zone, <ref refid="group__clc__interface_1ga6e4fcda8c14c63007ecb734c35c1a5aa" kindref="member">clc_coeff_zone_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coeff</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structclc__param__config__t" kindref="compound">clc_param_config_t</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>some parameters are invalid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>operation is successful </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="419" column="12" bodyfile="drivers/src/hpm_clc_drv.c" bodystart="25" bodyend="76" declfile="drivers/inc/hpm_clc_drv.h" declline="419" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__clc__interface_1ga7aaf6e595f161ec009552b30cd06c8d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clc_sw_inject_dq_adc_value</definition>
        <argsstring>(CLC_Type *clc, uint32_t d_value, uint32_t q_value)</argsstring>
        <name>clc_sw_inject_dq_adc_value</name>
        <param>
          <type><ref refid="structCLC__Type" kindref="compound">CLC_Type</ref> *</type>
          <declname>clc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>d_value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>q_value</declname>
        </param>
        <briefdescription>
<para>CLC software inject dq adc value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">clc</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d_value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC d adc value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">q_value</parametername>
</parameternamelist>
<parameterdescription>
<para>CLC q adc value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_clc_drv.h" line="462" column="6" bodyfile="drivers/src/hpm_clc_drv.c" bodystart="97" bodyend="102" declfile="drivers/inc/hpm_clc_drv.h" declline="462" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CLC driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
