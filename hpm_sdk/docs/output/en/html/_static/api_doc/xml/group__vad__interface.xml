<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__vad__interface" kind="group">
    <compoundname>vad_interface</compoundname>
    <title>VAD driver APIs</title>
    <innerclass refid="structvad__config" prot="public">vad_config</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__vad__interface_1ga9c85cd861e752aa35f1bb562e849e691" prot="public" static="no">
        <type>struct <ref refid="structvad__config" kindref="compound">vad_config</ref></type>
        <definition>typedef struct vad_config vad_config_t</definition>
        <argsstring></argsstring>
        <name>vad_config_t</name>
        <briefdescription>
<para>vad config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="45" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__vad__interface_1ga0099d509b594187a4ff2b910bfb45e79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_capture_delay</definition>
        <argsstring>(VAD_Type *ptr, uint8_t delay)</argsstring>
        <name>vad_set_capture_delay</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>set capture deplay cycle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">delay</parametername>
</parameternamelist>
<parameterdescription>
<para>delay cycle value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="57" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gad6771dd4a42b4687c845ac731980c834" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_pdm_clock_half_div</definition>
        <argsstring>(VAD_Type *ptr, uint8_t div)</argsstring>
        <name>vad_set_pdm_clock_half_div</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>div</declname>
        </param>
        <briefdescription>
<para>set pdm clock hald_divider </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">div</parametername>
</parameternamelist>
<parameterdescription>
<para>divider value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="69" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gac4c4a020267693455b19aa86ae76cc71" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_enable_irq</definition>
        <argsstring>(VAD_Type *ptr, uint32_t irq_mask)</argsstring>
        <name>vad_enable_irq</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_mask</declname>
        </param>
        <briefdescription>
<para>enable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="81" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga889c7bba9e736463b0449ab8ed677fec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_disable_irq</definition>
        <argsstring>(VAD_Type *ptr, uint32_t irq_mask)</argsstring>
        <name>vad_disable_irq</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>irq_mask</declname>
        </param>
        <briefdescription>
<para>disable irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">irq_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="92" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga529cbaa2d3f6df39b95ce58779f414c4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_disable_buffer</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_disable_buffer</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable buffer </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="102" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gaad9532cbf01f7dd0482f6f19b6ddd56a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_enable_buffer</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_enable_buffer</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable buffer </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="112" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga693596b77d7586444b6d551f3f479f01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_fifo_threshold</definition>
        <argsstring>(VAD_Type *ptr, uint8_t threshold)</argsstring>
        <name>vad_set_fifo_threshold</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>set fifo threshold </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>fifo threshold value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="123" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gaa2d44386e1b9d9cdfa2b21438ca15413" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_enable_pdm_clock_out</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_enable_pdm_clock_out</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable pdm clock out </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="134" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gaed1efebdd8aeeffe5e9e8871acde97f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_disable_pdm_clock_out</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_disable_pdm_clock_out</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable pdm clock out </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="144" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gae57b5e157b33f9286c49d8eaa63b3dbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_pdm_clock_capture_level</definition>
        <argsstring>(VAD_Type *ptr, uint8_t level)</argsstring>
        <name>vad_set_pdm_clock_capture_level</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>set pdm clock polarity </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
</parameternamelist>
<parameterdescription>
<para>clock polarity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="155" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga9975806cfc694e67260a0e7695b9f542" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_channel_number</definition>
        <argsstring>(VAD_Type *ptr, bool two_channels)</argsstring>
        <name>vad_set_channel_number</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>two_channels</declname>
        </param>
        <briefdescription>
<para>set channel number </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">two_channels</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>true: set two channels </para>
</listitem>
<listitem><para>false: set one channel </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="169" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga9038d4402cc3e7c9c5b6699283a83784" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t vad_get_status</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_get_status</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>ST</parametername>
</parameternamelist>
<parameterdescription>
<para>register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="181" column="24" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga8ca09e0998543247ed24b4a5c789cf24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_clear_status</definition>
        <argsstring>(VAD_Type *ptr, uint32_t mask)</argsstring>
        <name>vad_clear_status</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>slear status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>status mask value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="192" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gaa2c767646b77c3925051b0c65ab2aaca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t vad_get_data</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_get_data</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>OFIFO</parametername>
</parameternamelist>
<parameterdescription>
<para>register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="203" column="24" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga52271848913a6aabe9d3a324b725bd62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_software_reset</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_software_reset</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>software reset </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="213" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga7f41842b00c581d3633c22e000ebcc55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_start</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_start</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>start </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="224" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga21e678b2ce3734b646ebc9cde60d5c7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_stop</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_stop</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>stop </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="234" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gaf320b02936a9a855d2dc0a48a7e6033d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool vad_is_running</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_is_running</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check whether vad is running </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if vad is running </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="245" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gac91086e946450be30ab2411917246341" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_enable_fifo</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_enable_fifo</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable fifo </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="255" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gac129c7bd1146b8a6f1cf026e0dbd0beb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_disable_fifo</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_disable_fifo</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable fifo </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="265" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gac2a9d901ab580905d1572c5aa24dc5dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t vad_get_coef_value</definition>
        <argsstring>(VAD_Type *ptr, uint32_t index)</argsstring>
        <name>vad_get_coef_value</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get coefficient value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>coefficient index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="276" column="24" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga086d203a542f5788702e731b0d0c9ee4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_post_scale</definition>
        <argsstring>(VAD_Type *ptr, uint8_t post_scale)</argsstring>
        <name>vad_set_post_scale</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>post_scale</declname>
        </param>
        <briefdescription>
<para>set ouptput value post scale </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">post_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>post scale value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="287" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1gab987e40dd1111168634a212670e398f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void vad_set_amplify</definition>
        <argsstring>(VAD_Type *ptr, uint16_t high, uint16_t low)</argsstring>
        <name>vad_set_amplify</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>high</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>low</declname>
        </param>
        <briefdescription>
<para>set sampling signal amplitude limits </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">high</parametername>
</parameternamelist>
<parameterdescription>
<para>high limit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">low</parametername>
</parameternamelist>
<parameterdescription>
<para>low limit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="300" column="20" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga238c5a9b454a2f09737ee9ea331a8836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vad_get_default_config</definition>
        <argsstring>(VAD_Type *ptr, vad_config_t *config)</argsstring>
        <name>vad_get_default_config</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__vad__interface_1ga9c85cd861e752aa35f1bb562e849e691" kindref="member">vad_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>get default config </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__vad__interface_1ga9c85cd861e752aa35f1bb562e849e691" kindref="member">vad_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="312" column="6" bodyfile="drivers/src/hpm_vad_drv.c" bodystart="10" bodyend="22" declfile="drivers/inc/hpm_vad_drv.h" declline="312" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga27f08d72c38c4cf3dd24dfa9a488b10d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vad_init</definition>
        <argsstring>(VAD_Type *ptr, vad_config_t *config)</argsstring>
        <name>vad_init</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__vad__interface_1ga9c85cd861e752aa35f1bb562e849e691" kindref="member">vad_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>initialization </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__vad__interface_1ga9c85cd861e752aa35f1bb562e849e691" kindref="member">vad_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="320" column="6" bodyfile="drivers/src/hpm_vad_drv.c" bodystart="24" bodyend="41" declfile="drivers/inc/hpm_vad_drv.h" declline="320" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__vad__interface_1ga0c3cb74217c46857c48f5b56f2004811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vad_reset</definition>
        <argsstring>(VAD_Type *ptr)</argsstring>
        <name>vad_reset</name>
        <param>
          <type><ref refid="structVAD__Type" kindref="compound">VAD_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>reset </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>VAD base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="327" column="6" bodyfile="drivers/src/hpm_vad_drv.c" bodystart="43" bodyend="49" declfile="drivers/inc/hpm_vad_drv.h" declline="327" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__vad__interface_1gaa53a4c9ef60cba9a4756f66c936c679f" prot="public" static="no">
        <name>VAD_EVENT_VAD</name>
        <initializer>(1U &lt;&lt; 7)</initializer>
        <briefdescription>
<para>vad event </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga080fa5fe286897151d747af6c5af58b4" prot="public" static="no">
        <name>VAD_EVENT_FIFO_DATA_AVAILABLE</name>
        <initializer>(1U &lt;&lt; 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="25" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga18441cb611907d34083bb3481bed1180" prot="public" static="no">
        <name>VAD_EVENT_MEMBUF_EMPTY</name>
        <initializer>(1U &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="26" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga0be3851fd2379e846c2ca604c0627e7d" prot="public" static="no">
        <name>VAD_EVENT_FIFO_OVERFLOW</name>
        <initializer>(1U &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga8798d3b3b0e8e508b05d9188694fc9d0" prot="public" static="no">
        <name>VAD_EVENT_IIR_OVERLOAD</name>
        <initializer>(1U &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1gaf798627609c1f5f165ed94e53c242bcb" prot="public" static="no">
        <name>VAD_EVENT_IIR_OVERFLOW</name>
        <initializer>(1U &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga6b454f45c2ad00bdcd071c48c728c2de" prot="public" static="no">
        <name>VAD_EVENT_CIC_OVERLOAD_ERROR</name>
        <initializer>(1U &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__vad__interface_1ga4bae33a99dc03cdb59d41a82c10a7e3e" prot="public" static="no">
        <name>VAD_EVENT_CIC_STA_ERROR</name>
        <initializer>(1U &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_vad_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_vad_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>VAD driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
