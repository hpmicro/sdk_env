<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__hpm__sdmmc" kind="group">
    <compoundname>hpm_sdmmc</compoundname>
    <title>HPM SDMMC stack</title>
    <innerclass refid="unionemmc__switch__cmd__arg__t" prot="public">emmc_switch_cmd_arg_t</innerclass>
    <innerclass refid="unionemmc__ocr__t" prot="public">emmc_ocr_t</innerclass>
    <innerclass refid="unionemmc__cid__t" prot="public">emmc_cid_t</innerclass>
    <innerclass refid="unionemmc__card__status__t" prot="public">emmc_card_status_t</innerclass>
    <innerclass refid="structemmc__csd__t" prot="public">emmc_csd_t</innerclass>
    <innerclass refid="unionemmc__device__type__t" prot="public">emmc_device_type_t</innerclass>
    <innerclass refid="structemmc__ext__csd__t" prot="public">emmc_ext_csd_t</innerclass>
    <innerclass refid="unionemmc__power__class__t" prot="public">emmc_power_class_t</innerclass>
    <innerclass refid="structboot__info__t" prot="public">boot_info_t</innerclass>
    <innerclass refid="structsecure__feature__info__t" prot="public">secure_feature_info_t</innerclass>
    <innerclass refid="structemmc__boot__setting__t" prot="public">emmc_boot_setting_t</innerclass>
    <innerclass refid="structemmc__device__attribute__t" prot="public">emmc_device_attribute_t</innerclass>
    <innerclass refid="structemmc__config__partition__option__t" prot="public">emmc_config_partition_option_t</innerclass>
    <innerclass refid="structhpm__sdmmc__pin__info__t" prot="public">hpm_sdmmc_pin_info_t</innerclass>
    <innerclass refid="structhpm__sdmmc__extra__io__data__t" prot="public">hpm_sdmmc_extra_io_data_t</innerclass>
    <innerclass refid="structsdmmc__io__init__apis__t" prot="public">sdmmc_io_init_apis_t</innerclass>
    <innerclass refid="structsdmmc__host__param__t" prot="public">sdmmc_host_param_t</innerclass>
    <innerclass refid="structsdmmc__host__t" prot="public">sdmmc_host_t</innerclass>
    <innerclass refid="unionsd__flags__t" prot="public">sd_flags_t</innerclass>
    <innerclass refid="unionswitch__function__status__t" prot="public">switch_function_status_t</innerclass>
    <innerclass refid="unionsdio__cmd5__arg__t" prot="public">sdio_cmd5_arg_t</innerclass>
    <innerclass refid="unionsdio__cmd5__resp__t" prot="public">sdio_cmd5_resp_t</innerclass>
    <innerclass refid="unionsdio__resp__r5__t" prot="public">sdio_resp_r5_t</innerclass>
    <innerclass refid="unionsdio__cmd52__arg__t" prot="public">sdio_cmd52_arg_t</innerclass>
    <innerclass refid="unionsdio__cmd53__arg__t" prot="public">sdio_cmd53_arg_t</innerclass>
    <innerclass refid="structsdio__cccr__t" prot="public">sdio_cccr_t</innerclass>
    <innerclass refid="structsdio__fbr__t" prot="public">sdio_fbr_t</innerclass>
    <innerclass refid="structsdio__tpl__block" prot="public">sdio_tpl_block</innerclass>
    <innerclass refid="structsdio__common__cis__t" prot="public">sdio_common_cis_t</innerclass>
    <innerclass refid="structATTR__PACKED" prot="public">ATTR_PACKED</innerclass>
    <innerclass refid="structsdio__cis__t" prot="public">sdio_cis_t</innerclass>
    <innerclass refid="structsdio__func__t" prot="public">sdio_func_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__hpm__sdmmc_1gac7d74b9f2117fd62e445c9ddc306286f" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286faab7c312dbfdece23c3607975b18b6507" prot="public">
          <name>sdmmc_state_idle</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa722acde67f7b38698a85a5315041a813" prot="public">
          <name>sdmmc_state_ready</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa70c947f603972e297ce1c0177d83e0ec" prot="public">
          <name>sdmmc_state_identify</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa16e7812b8fe6fc213198eddecb2c6af6" prot="public">
          <name>sdmmc_state_standby</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fadc7bc32d8bdf621f0d55caef8412ab00" prot="public">
          <name>sdmmc_state_transfer</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fad7371a7823569c721d42d995d69a5d68" prot="public">
          <name>sdmmc_state_send_data</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa928ef8f6514c39d8430e378bb238ad3e" prot="public">
          <name>sdmmc_state_receive_data</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa7de2763651c0ca51ff1406086222270c" prot="public">
          <name>sdmmc_state_program</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac7d74b9f2117fd62e445c9ddc306286fa21767e0900b0d097074f07d986d5d8ad" prot="public">
          <name>sdmmc_state_disconnect</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="41" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga27fd895fac89bbc0288543ca0b1e371c" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_operation_voltage_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga27fd895fac89bbc0288543ca0b1e371cadafae307c68fb5677708508375c466ae" prot="public">
          <name>sdmmc_operation_voltage_1v8</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga27fd895fac89bbc0288543ca0b1e371caaab3a0c40f1a8cd5c99c5ca44257bf73" prot="public">
          <name>sdmmc_operation_voltage_3v0</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga27fd895fac89bbc0288543ca0b1e371cab878ed6432c68cff046b1618c8b8b576" prot="public">
          <name>sdmmc_operation_voltage_3v3</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="53" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gad265761fec234cb730a74575030799f6" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_resp_type_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6a2fc0c3a9b3a5dd4f6931fd7b2fd92d81" prot="public">
          <name>sdmmc_resp_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6a50af79ceb9a7d48f175d325ba6237dbe" prot="public">
          <name>sdmmc_resp_r1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6abe55cd639554a518d2963e9790c7d6f3" prot="public">
          <name>sdmmc_resp_r1b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6af1ef734ffc5702387472e5ab65cc3057" prot="public">
          <name>sdmmc_resp_r2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6aa78b87b3a4de5dc40c392a368b20201f" prot="public">
          <name>sdmmc_resp_r3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6abc8b1ab3339fc937883310184d824d50" prot="public">
          <name>sdmmc_resp_r4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6aff916d9b08e47fc71e716c7a4687687d" prot="public">
          <name>sdmmc_resp_r5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6a748bd02f61a07df8948f68c0049fc4a7" prot="public">
          <name>sdmmc_resp_r5b</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6a3485ee61e3c771f1a4301ca9c02e5710" prot="public">
          <name>sdmmc_resp_r6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad265761fec234cb730a74575030799f6a043c0e5b25b53482c6d131855be24dbe" prot="public">
          <name>sdmmc_resp_r7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="60" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="60" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gabc8bc7accbe01f3ee584213bcd39fb83" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__hpm__sdmmc_1ggabc8bc7accbe01f3ee584213bcd39fb83a4f0560bd6053266f38db7a8eab1e984d" prot="public">
          <name>status_sdmmc_card_not_support</name>
          <initializer>= MAKE_STATUS(status_group_sdmmc, 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggabc8bc7accbe01f3ee584213bcd39fb83abdbfdcf3770f222d2903c6bf3ae1c99d" prot="public">
          <name>status_sdmmc_wait_card_insert_timeout</name>
          <initializer>= MAKE_STATUS(status_group_sdmmc, 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggabc8bc7accbe01f3ee584213bcd39fb83acac0015a3c1dc3f37c19c759d1eb71f7" prot="public">
          <name>status_sdmmc_no_sd_card_inserted</name>
          <initializer>= MAKE_STATUS(status_group_sdmmc, 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggabc8bc7accbe01f3ee584213bcd39fb83aa897f9f625ddf929a2f2caebf2d838dc" prot="public">
          <name>status_sdmmc_device_init_required</name>
          <initializer>= MAKE_STATUS(status_group_sdmmc, 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggabc8bc7accbe01f3ee584213bcd39fb83a42dfa3e0fe186042d9b7b235936b9293" prot="public">
          <name>status_sdmmc_wait_busy_timeout</name>
          <initializer>= MAKE_STATUS(status_group_sdmmc, 4)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="73" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gaf53bfafc57eddf219fb08300edf1f11b" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_switch_cmd_access_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggaf53bfafc57eddf219fb08300edf1f11ba67ecda5d6dc558c43f90c3f6cc659467" prot="public">
          <name>emmc_switch_cmd_access_mode_command_set</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaf53bfafc57eddf219fb08300edf1f11bacf799b7aa9bb3738e23afccd5d1c3b16" prot="public">
          <name>emmc_switch_cmd_access_mode_set_bits</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaf53bfafc57eddf219fb08300edf1f11ba27568453b1a17e6e91d56080d1fabbd6" prot="public">
          <name>emmc_switch_cmd_access_mode_clear_bits</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaf53bfafc57eddf219fb08300edf1f11ba190fbce113b413e1f044e25e431d1c66" prot="public">
          <name>emmc_switch_cmd_access_mode_write_byte</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="27" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga7c0ce3bbf56536384e851caebc04e711" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_csd_vdd_current_min_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711aea46bf110ed33c6dc49b97a18d99728b" prot="public">
          <name>emmc_csd_vdd_current_min_0_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711a72b1a89b84717228851b0e15809e6530" prot="public">
          <name>emmc_csd_vdd_current_min_1ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711a2099e181565490d9f4416e4718967eec" prot="public">
          <name>emmc_csd_vdd_current_min_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711ac68b679c89f1ea92dcdf17987fc4b754" prot="public">
          <name>emmc_csd_vdd_current_min_10ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711a6a736950c0520f3a45001837db646819" prot="public">
          <name>emmc_csd_vdd_current_min_25ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711aca6b3b623bc59d59c21fa7b9130d8a5f" prot="public">
          <name>emmc_csd_vdd_current_min_35ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711a7feb355967dc06cfc8a4fce9334eb51a" prot="public">
          <name>emmc_csd_vdd_current_min_60ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga7c0ce3bbf56536384e851caebc04e711a075ff84fbe3a760fb39804f66b0c3948" prot="public">
          <name>emmc_csd_vdd_current_min_100ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="139" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="139" bodyend="148"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga4dae08006b728b7ad367db87a4b97a5d" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_csd_vdd_current_max_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da2cf2b26e68e2c932ced2b2a1d07abb55" prot="public">
          <name>emmc_csd_vdd_current_max_1ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5dafef621634bc95fd09c1f7ded9aa478a9" prot="public">
          <name>emmc_csd_vdd_current_max_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da2d4176464eff6dcde5275a6cf30e2805" prot="public">
          <name>emmc_csd_vdd_current_max_10ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da052fae41a8869907812c9592f0f99c7e" prot="public">
          <name>emmc_csd_vdd_current_max_25ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da80d5c50c06413394e070319924fefe15" prot="public">
          <name>emmc_csd_vdd_current_max_35ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da1df6b4b7468e2c5017c1944fccb54ca7" prot="public">
          <name>emmc_csd_vdd_current_max_45ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da961e0335547033af760740bc327f4ee5" prot="public">
          <name>emmc_csd_vdd_current_max_80ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4dae08006b728b7ad367db87a4b97a5da0cbe889cc8c53bf6fc4b1a4fb52cc16d" prot="public">
          <name>emmc_csd_vdd_current_max_200ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="150" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga355870629582954db9c13cfad239adb4" prot="public" static="no" strong="no">
        <type></type>
        <name>vdd_current_min_def</name>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a84afe6a6156ce6f1a52c5e2b97f956ac" prot="public">
          <name>vdd_current_min_0_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a5949471a9b417831d90c6199a1296d10" prot="public">
          <name>vdd_current_min_1ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4accd8099942f57eb61288b1e14b9e2b9a" prot="public">
          <name>vdd_current_min_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a5bd6c9c6911c493c4fca32f0f9ee3683" prot="public">
          <name>vdd_current_min_10ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a54194d10e899a7dfc31a18b7fd5d5c7a" prot="public">
          <name>vdd_current_min_25ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a3bbcd2df4d55c23efc2442435ba651a3" prot="public">
          <name>vdd_current_min_35ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a150d0a66e443a8b3f496e9e022837f78" prot="public">
          <name>vdd_current_min_60ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga355870629582954db9c13cfad239adb4a84232b23b589c961a491f8dc79b183ff" prot="public">
          <name>vdd_current_min_100ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="161" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="161" bodyend="170"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga8f4270c841ac86bfdae98c1fa3b4f078" prot="public" static="no" strong="no">
        <type></type>
        <name>vdd_current_max_def</name>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078aaefcb1e5969ff2e9585a01f5da7956a9" prot="public">
          <name>vdd_current_max_1ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078aa8205d371edcba2261191a08aba49292" prot="public">
          <name>vdd_current_max_5ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078afce07e6b684cc43253919456aba29ec9" prot="public">
          <name>vdd_current_max_10ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078a16f2d84c86fa183c5b92a411f5763172" prot="public">
          <name>vdd_current_max_25ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078a1cbd3736e9fcc831dae458eca9817c87" prot="public">
          <name>vdd_current_max_35ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078acd28450e47630e2f6e060238a970de62" prot="public">
          <name>vdd_current_max_45ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078aa100f18334b45e08031c91c82296b203" prot="public">
          <name>vdd_current_max_80ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga8f4270c841ac86bfdae98c1fa3b4f078a8852db9879c9a23529e80a3332db1605" prot="public">
          <name>vdd_current_max_200ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="172" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="172" bodyend="181"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga2ecb1ceb99b93c417d9a079bf06bc0a5" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_csd_file_format_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga2ecb1ceb99b93c417d9a079bf06bc0a5a6461cacdad9fb84215ae2e44bd57d9f4" prot="public">
          <name>emmc_csd_file_format_hard_disk_like_file_system_with_partition_table</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga2ecb1ceb99b93c417d9a079bf06bc0a5a63a244fa33eeeb178ca19b70cc36d295" prot="public">
          <name>emmc_csd_file_format_dos_fat_with_boot_sector_only</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga2ecb1ceb99b93c417d9a079bf06bc0a5ac8c224981e1bbbe9ef4449d0e6c81a09" prot="public">
          <name>emmc_csd_file_format_universal_file_format</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga2ecb1ceb99b93c417d9a079bf06bc0a5a329f1797a4cbb48bd94b5c9092c76c40" prot="public">
          <name>emmc_csd_file_format_others_or_unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="183" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga4fb205aac16f56606d3532ac55782a4e" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_power_class_3v6_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eaa35520559e004ad34d97b7d46ba45f81" prot="public">
          <name>emmc_power_3v6_max_rms_100ma_peak_200ma</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea1cce647ec3df89c29cfa1a0b8da2b6e4" prot="public">
          <name>emmc_power_3v6_max_rms_120ma_peak_220ma</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eafda97726cd84141ff9280e0f5809a555" prot="public">
          <name>emmc_power_3v6_max_rms_150ma_peak_250ma</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eae36f3ec0521dab666b0b3dde63251bd4" prot="public">
          <name>emmc_power_3v6_max_rms_180ma_peak_280ma</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eaf96fd303b47876afbd5b3edb08458a41" prot="public">
          <name>emmc_power_3v6_max_rms_200ma_peak_300ma</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea4567eb559f4c0939598505cbb2ad2f09" prot="public">
          <name>emmc_power_3v6_max_rms_220ma_peak_320ma</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eafc5ddfabe85d3874e37be221515d05f3" prot="public">
          <name>emmc_power_3v6_max_rms_250ma_peak_350ma</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea45093f4abda5a2fac61b7b3e8bd0ea86" prot="public">
          <name>emmc_power_3v6_max_rms_300ma_peak_400ma</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea83d7dc57a2d80bd6a0b79b687330077a" prot="public">
          <name>emmc_power_3v6_max_rms_350ma_peak_450ma</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea40f29098da8077f30113f65ea59a7b99" prot="public">
          <name>emmc_power_3v6_max_rms_400ma_peak_500ma</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea6a76644428730b314c650c23b2b3d90b" prot="public">
          <name>emmc_power_3v6_max_rms_450ma_peak_550ma</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea3d3b343e5b59e97780cc3933ca8b6cf6" prot="public">
          <name>emmc_power_3v6_max_rms_500ma_peak_600ma</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eabf6bc02342b1b0ec8e4fc0cfc91528fc" prot="public">
          <name>emmc_power_3v6_max_rms_600ma_peak_700ma</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eae2d8ac8f0bb95aac68a2438c2700dde1" prot="public">
          <name>emmc_power_3v6_max_rms_700ma_peak_800ma</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4ea9c39271b6631950ebcc930037a949401" prot="public">
          <name>emmc_power_3v6_max_rms_800ma_peak_900ma</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4fb205aac16f56606d3532ac55782a4eaeb2f28cd5ba55f687eea881d7eb43fb0" prot="public">
          <name>emmc_power_3v6_max_rms_gt800ma_peak_gt900ma</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="469" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="469" bodyend="486"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gae6934084fe7a71112ff4cf7c9aae4b65" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_power_class_1v95_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ac7cab4ab0cfd4b1e912200fcd1aaace7" prot="public">
          <name>emmc_power_1v95_max_rms_65ma_peak_130ma</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ab67439cbddf2cd085f45f18de0f200b5" prot="public">
          <name>emmc_power_1v95_max_rms_70ma_peak_140ma</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a7f8eb6151ce0b8d8bc9689c19d41fa3b" prot="public">
          <name>emmc_power_1v95_max_rms_80ma_peak_160ma</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a25e1325a29cafb9d9488b5e8f991efd2" prot="public">
          <name>emmc_power_1v95_max_rms_90ma_peak_180ma</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a468e7fab771f8f07832b4b61bca54b3f" prot="public">
          <name>emmc_power_1v95_max_rms_100ma_peak_200ma</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a24979b1405702676228d575925bd4033" prot="public">
          <name>emmc_power_1v95_max_rms_120ma_peak_220ma</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a97ab2f4f52892e6bffa71b0538f730d5" prot="public">
          <name>emmc_power_1v95_max_rms_140ma_peak_240ma</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a20a4db79d240257959c13d952131cc4a" prot="public">
          <name>emmc_power_1v95_max_rms_160ma_peak_260ma</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65abfc69dc6f12d9211cfd8bcb61e569d69" prot="public">
          <name>emmc_power_1v95_max_rms_180ma_peak_280ma</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a0e0f92ccf05254907d2a76321e120b7f" prot="public">
          <name>emmc_power_1v95_max_rms_200ma_peak_300ma</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ac5059812225620e46b4f388e7b139865" prot="public">
          <name>emmc_power_1v95_max_rms_250ma_peak_350ma</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a17ea15575fa72eb2003acd2139c9fbb0" prot="public">
          <name>emmc_power_1v95_max_rms_300ma_peak_400ma</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ab54cdf1e9031ca82ef0ef65b4c25698f" prot="public">
          <name>emmc_power_1v95_max_rms_350ma_peak_450ma</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ad62a9f62d4f44b6d68788b16873e1958" prot="public">
          <name>emmc_power_1v95_max_rms_400ma_peak_500ma</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65ad0e304c8f53598128db92d85d877de73" prot="public">
          <name>emmc_power_1v95_max_rms_500ma_peak_600ma</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae6934084fe7a71112ff4cf7c9aae4b65a88844781c011cc33568ba0b16b92dbb8" prot="public">
          <name>emmc_power_1v95_max_rms_gt500ma_peak_gt600ma</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="488" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="488" bodyend="505"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga3f3a5842087275c86dafea16c093d40e" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_bus_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40eadf190a3dd0d93983a0ef1fc2180a9bc6" prot="public">
          <name>emmc_bus_mode_x1_sdr</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40eaec4826daf44b77c5a9c971df1fdcd210" prot="public">
          <name>emmc_bus_mode_x4_sdr</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40ea48ba622949e3744a38e634872639df7e" prot="public">
          <name>emmc_bus_mode_x8_sdr</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40ea9e30eea18ece94232a633d5cbd0cb590" prot="public">
          <name>emmc_bus_mode_x4_ddr</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40eaa6d127e1ebe07a3495d5251f6af1d00e" prot="public">
          <name>emmc_bus_mode_x8_ddr</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3f3a5842087275c86dafea16c093d40ea918373f9add892feeecf646371471012" prot="public">
          <name>emmc_bus_mode_x8_ddr_ds</name>
          <initializer>= 0x86</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="512" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="512" bodyend="519"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga99d779c11cde57ed84428072e1f0cd33" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_write_protection_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga99d779c11cde57ed84428072e1f0cd33a7b1ada17a8424aafc31a926b4bc682b8" prot="public">
          <name>emmc_write_protection_mode_legacy</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga99d779c11cde57ed84428072e1f0cd33a9aef5121892508bf22365300a68a7e1a" prot="public">
          <name>emmc_write_protection_mode_secure</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="521" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="521" bodyend="524"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga302de3a42040ff3bd45e82b39f127e44" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_boot_partition_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga302de3a42040ff3bd45e82b39f127e44a65e6b7af69e947034463c138688004d2" prot="public">
          <name>emmc_boot_partition_mode_not_enabled</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga302de3a42040ff3bd45e82b39f127e44a25a900a897d01f7fe289c07b6a0219ab" prot="public">
          <name>emmc_boot_partition_mode_boot_partition1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga302de3a42040ff3bd45e82b39f127e44a7b034a6ec5d8f0ed1987e2d837a60986" prot="public">
          <name>emmc_boot_partition_mode_boot_partition2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga302de3a42040ff3bd45e82b39f127e44a730bbc3a7024248f42ab46094e5f2bdb" prot="public">
          <name>emmc_boot_partition_mode_user_area</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="540" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="540" bodyend="545"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gaeae4eb8c3b40e5e611fdf9bfc74eb873" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_partition_access_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873abc9a81d5a3b22b7864f4f08fd0fffd32" prot="public">
          <name>emmc_partition_access_boot_partition_disabled</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873ad71e71094998b918eeae89edc030a701" prot="public">
          <name>emmc_partition_access_read_or_write_boot_partition1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873a2ecb213e443e6a6ddf58df17b4142a6e" prot="public">
          <name>emmc_partition_access_read_or_write_boot_partition2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873acea2adb812ed4de1daa35dfbbaf1ebb5" prot="public">
          <name>emmc_partition_access_read_or_write_rpmb</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873aac118ed0d04815584104b58b5c5e62f0" prot="public">
          <name>emmc_partition_access_access_to_gp_partition1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873abb0ce976430e0a40a625b6cde83e5e4e" prot="public">
          <name>emmc_partition_access_access_to_gp_partition2</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873a4b1da6006e5ffe4e40c9bd43c22baa55" prot="public">
          <name>emmc_partition_access_access_to_gp_partition3</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaeae4eb8c3b40e5e611fdf9bfc74eb873aad85a110e1883186e1e86224ba24e677" prot="public">
          <name>emmc_partition_access_access_to_gp_partition4</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="547" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="547" bodyend="556"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga63bfad9282e6b60894adb76f212c452b" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_boot_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga63bfad9282e6b60894adb76f212c452baeb2e344aeb76ba4d6b3087457c08d9fe" prot="public">
          <name>emmc_boot_mode_sdr_legacy</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga63bfad9282e6b60894adb76f212c452baa018dfb7421def14b608a08ab5687a2d" prot="public">
          <name>emmc_boot_mode_sdr_high_speed_timing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga63bfad9282e6b60894adb76f212c452baa874bb01cd5679ac90ebd7997851034f" prot="public">
          <name>emmc_boot_mode_ddr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="558" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="558" bodyend="560"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga197db45ae027ee3032edc283ecfbf0c9" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_idle_option_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga197db45ae027ee3032edc283ecfbf0c9a8305bbdd1af52111a090840bcb9f7ece" prot="public">
          <name>emmc_idle_option_go_idle_state</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga197db45ae027ee3032edc283ecfbf0c9a652b7e22f40d0c3aaffe9497e9dd5027" prot="public">
          <name>emmc_idle_option_go_pre_idle_state</name>
          <initializer>= 0xF0F0F0F0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga197db45ae027ee3032edc283ecfbf0c9ac711c66af83b672b928d90e61ea0964f" prot="public">
          <name>emmc_idle_option_boot_initialization</name>
          <initializer>= 0xFFFFFFFAU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="643" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="643" bodyend="647"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga4bd115a39f4e41c7c3b6b1ba268bef9a" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_erase_option_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga4bd115a39f4e41c7c3b6b1ba268bef9aa160a93f282af10c421c516f6bc72dad9" prot="public">
          <name>emmc_erase_option_erase</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>eMMC Erase operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4bd115a39f4e41c7c3b6b1ba268bef9aac15b046b081de4189744970d0e0d16e3" prot="public">
          <name>emmc_erase_option_trim</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>eMMC Trim operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga4bd115a39f4e41c7c3b6b1ba268bef9aa0a596a938a2519e340110076d6daa053" prot="public">
          <name>emmc_erase_option_discard</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>eMMC Discard operation </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="649" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="649" bodyend="653"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga6acea7c2d9ebe46c0fc31186ac2da860" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_boot_partition_enable_option_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga6acea7c2d9ebe46c0fc31186ac2da860afb4636ce9776b8888a95720fb4a7d13b" prot="public">
          <name>boot_partition_enable_option_not_enabled</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga6acea7c2d9ebe46c0fc31186ac2da860acc4d702256380a6947d911503a99c14f" prot="public">
          <name>boot_partition_enable_option_boot_partition1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga6acea7c2d9ebe46c0fc31186ac2da860ad3dbcb43aeb31bd81f8da60ffe7c815e" prot="public">
          <name>boot_partition_enable_option_boot_partition2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga6acea7c2d9ebe46c0fc31186ac2da860a3ccf043293dde158a54940c39de77c79" prot="public">
          <name>boot_partition_enable_option_user_area</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="655" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="655" bodyend="660"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gad40563515e16ddb5072ce97874d6f245" prot="public" static="no" strong="no">
        <type></type>
        <name>emmc_partition_access_option_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245ab1f2ce3a528345189dc2a264a76935a7" prot="public">
          <name>partition_access_option_no_access_to_boot_partition</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a2a298f83af26f2a29ad868f09b3f31a8" prot="public">
          <name>partition_access_option_read_write_boot_partition1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a1e377132a43231b72b94173a8f76f313" prot="public">
          <name>partition_access_option_read_write_boot_partition2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245aabbcadc8314961470d2166bb91c6f342" prot="public">
          <name>partition_access_option_read_write_rpmb</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a06da864cfa13e6498c31277fbd8b05d1" prot="public">
          <name>partition_access_option_access_to_gp_partition1</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a2f752cf598c6cc1804f77dac28d81e28" prot="public">
          <name>partition_access_option_access_to_gp_partition2</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a89407d368f6f2afdf4a5bc9f0dc38c24" prot="public">
          <name>partition_access_option_access_to_gp_partition3</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggad40563515e16ddb5072ce97874d6f245a9e88e9eee36d9aad26986448fd6721ef" prot="public">
          <name>partition_access_option_access_to_gp_partition4</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="662" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="662" bodyend="671"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gaf3fc4bd055fe53817f214445bb52a29c" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_buswidth_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggaf3fc4bd055fe53817f214445bb52a29ca441dab09e5a9e8a21f7506ce4bd08af6" prot="public">
          <name>sdmmc_bus_width_1bit</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaf3fc4bd055fe53817f214445bb52a29ca6fb5ccb427906fcc1fc7887e940fa5ea" prot="public">
          <name>sdmmc_bus_width_4bit</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaf3fc4bd055fe53817f214445bb52a29ca23df9a6c9aa3c7cad9158db1a6cc3963" prot="public">
          <name>sdmmc_bus_width_8bit</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SD/MMC Bus Width definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="58" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga3e97d64ae1826d8d7da350a123fcf7a3" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_dev_type_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga3e97d64ae1826d8d7da350a123fcf7a3abb21cd07046f4e5f642a2c579a222bcd" prot="public">
          <name>sdmmc_dev_type_emmc</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3e97d64ae1826d8d7da350a123fcf7a3aabfcedaa354527df75eeec8972c6745a" prot="public">
          <name>sdmmc_dev_type_sd</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga3e97d64ae1826d8d7da350a123fcf7a3a2c52c4b1cf48fa1831c794280559b1ad" prot="public">
          <name>sdmmc_dev_type_sdio</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SD/MMC Device Type definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="67" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga0d2cdacd4e7d08538fbb13c3698c9c20" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_card_detection_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga0d2cdacd4e7d08538fbb13c3698c9c20ad96e8f5605accfe37686831ceb4a34cf" prot="public">
          <name>sdmmc_host_card_detection_none</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga0d2cdacd4e7d08538fbb13c3698c9c20a7a7ccd014895f2bc29ae996663c4ea3d" prot="public">
          <name>sdmmc_host_card_detection_via_gpio</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga0d2cdacd4e7d08538fbb13c3698c9c20a6d05059e7c046dbc3c9270c2752bffbf" prot="public">
          <name>sdmmc_host_card_detection_via_sdxc</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SD/MMC Host Card Detection Modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="76" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga55d73ea9113c4369ddf2a40ae67d945a" prot="public" static="no" strong="no">
        <type></type>
        <name>hpm_sdmmc_io_volt_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga55d73ea9113c4369ddf2a40ae67d945aabf0cc2a47a96d62d75a49f79f1df2ba3" prot="public">
          <name>hpm_sdmmc_io_voltage_3v3</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IO voltage is 3.3v </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga55d73ea9113c4369ddf2a40ae67d945aa3350d69447abb1d3be508eca9092884a" prot="public">
          <name>hpm_sdmmc_io_voltage_1v8</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>IO voltage is 1.8v </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDMMC IO Voltage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="85" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gae621a656c0803a85dc1742fe648c726d" prot="public" static="no" strong="no">
        <type></type>
        <name>hpm_sdmmc_operation_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggae621a656c0803a85dc1742fe648c726da2aea9484baca565ba9073f6597e9353e" prot="public">
          <name>hpm_sdmmc_operation_mode_inactive</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae621a656c0803a85dc1742fe648c726da36c5d64aaa235e01f5cb2725548114f5" prot="public">
          <name>hpm_sdmmc_operation_mode_identification</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae621a656c0803a85dc1742fe648c726da98c94029d66f262170cad209aa4c8d55" prot="public">
          <name>hpm_sdmmc_operation_mode_transfer</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae621a656c0803a85dc1742fe648c726dac29729145a5076671e8034b07debd36c" prot="public">
          <name>hpm_sdmmc_operation_mode_interrupt</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SDMMC Operation mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="93" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gae45d06eba88f1fe759955854ea78796e" prot="public" static="no" strong="no">
        <type></type>
        <name>sdmmc_speed_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796ea8120559bcce571d8aa13c668af722d49" prot="public">
          <name>sdmmc_sd_speed_normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eafa7b50d53408d66f9c0ea048b09afd05" prot="public">
          <name>sdmmc_sd_speed_high</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eaeb2f62ae52dce17fc4781c8c30f52963" prot="public">
          <name>sdmmc_sd_speed_sdr12</name>
          <initializer>= sdmmc_sd_speed_normal</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eae7624e87dc363f2fba65ead694153d73" prot="public">
          <name>sdmmc_sd_speed_sdr25</name>
          <initializer>= sdmmc_sd_speed_high</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eacbbadf4bd8f3b928769683b3b0f0fbf1" prot="public">
          <name>sdmmc_sd_speed_sdr50</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796ead58188446116ad57e6f4585ddd292753" prot="public">
          <name>sdmmc_sd_speed_sdr104</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796ea0d15afddb587324261644841be7eb1da" prot="public">
          <name>sdmmc_sd_speed_ddr50</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eaea5547fc8675a0dde798c1f338f701de" prot="public">
          <name>sdmmc_emmc_speed_legacy</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eace569e0001f3e9037801097050675bb7" prot="public">
          <name>sdmmc_emmc_speed_high_speed_sdr</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796ea9bf4ad9deb77f573f1178ceeb39da981" prot="public">
          <name>sdmmc_emmc_speed_hs200</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796ea991060c0c0909a859b1d472e5e797ca7" prot="public">
          <name>sdmmc_emmc_speed_high_speed_ddr</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggae45d06eba88f1fe759955854ea78796eaafd4275d39888d0d9bab81b97b6d2ae9" prot="public">
          <name>sdmmc_emmc_speed_hs400</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SD/MMC Speed definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="103" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="103" bodyend="119"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga989232e6bad561871a2ec1dfbf06c263" prot="public" static="no" strong="no">
        <type></type>
        <name>hpm_sdmmc_power_option_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga989232e6bad561871a2ec1dfbf06c263a8551d3518c33678e7d415cfb6266de59" prot="public">
          <name>hpm_sdmmc_power_off</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power Off the SDMMC </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga989232e6bad561871a2ec1dfbf06c263acdecd9b8c9d7bf3dafb51554dfcf783e" prot="public">
          <name>hpm_sdmmc_power_up</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power up the SDMMC </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga989232e6bad561871a2ec1dfbf06c263ac760e8cec956d9dac739422d82b6371a" prot="public">
          <name>hpm_sdmmc_power_on</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power on the SDMMC </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="130" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga508c3d50863e57dce5fa1b7758972e1b" prot="public" static="no" strong="no">
        <type></type>
        <name>sd_timing_mode_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga508c3d50863e57dce5fa1b7758972e1bad650a9ebaa20736e4b6403becab798cb" prot="public">
          <name>sd_timing_sdr12_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga508c3d50863e57dce5fa1b7758972e1ba90c8a74d6ed3e934c6385574507d3047" prot="public">
          <name>sd_timing_sdr25_highspeed</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga508c3d50863e57dce5fa1b7758972e1ba03b8cc526f0ade6bf1f3feec92a9a1d9" prot="public">
          <name>sd_timing_sdr50</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga508c3d50863e57dce5fa1b7758972e1ba22377709ce7acc0f55a08dd08debe989" prot="public">
          <name>sd_timing_sdr104</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga508c3d50863e57dce5fa1b7758972e1bad8e63b5a93bc8280abbf82f14d041cec" prot="public">
          <name>sd_timing_ddr50</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="24" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" bodystart="24" bodyend="30"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gab635d506891dfe9dc9b9eaa7aab88c03" prot="public" static="no" strong="no">
        <type></type>
        <name>sd_drive_strength_t</name>
        <enumvalue id="group__hpm__sdmmc_1ggab635d506891dfe9dc9b9eaa7aab88c03a79338fc9e499725da081dc4c53263b29" prot="public">
          <name>sd_drive_strength_type_b</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggab635d506891dfe9dc9b9eaa7aab88c03a6cbc662b3a07fac68687d344ae83256f" prot="public">
          <name>sd_drive_strength_type_a</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggab635d506891dfe9dc9b9eaa7aab88c03a5ae05fce9875902cbc317a8718832b21" prot="public">
          <name>sd_drive_strength_type_c</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggab635d506891dfe9dc9b9eaa7aab88c03ae37b2f8105d604539705ee263d1e15dc" prot="public">
          <name>sd_drive_strength_type_d</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="32" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1ga47f2d06751444a78cbf1792022d0a3cb" prot="public" static="no" strong="no">
        <type></type>
        <name>sd_max_current_t</name>
        <enumvalue id="group__hpm__sdmmc_1gga47f2d06751444a78cbf1792022d0a3cbab78f0857c33ff9bb2b106d95987a67ce" prot="public">
          <name>sd_current_limit_200ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga47f2d06751444a78cbf1792022d0a3cba71e54bf4b0a465b20f451258b5eb9ec3" prot="public">
          <name>sd_current_limit_400ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga47f2d06751444a78cbf1792022d0a3cba4caf0d8d9d83a9cbc72095795701ed09" prot="public">
          <name>sd_current_limit_600ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1gga47f2d06751444a78cbf1792022d0a3cba025c577eafaaa11f30d6f6cc5e378407" prot="public">
          <name>sd_current_limit_800ma</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="39" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gaa1e3dc50a7c4967da342ccd3781cce3d" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__hpm__sdmmc_1ggaa1e3dc50a7c4967da342ccd3781cce3da70854e50e7f9870b06ee890c400479ad" prot="public">
          <name>sd_switch_function_group_access_mode</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaa1e3dc50a7c4967da342ccd3781cce3daf02dbf0dbc58b313a65cd7823bb2d317" prot="public">
          <name>sd_switch_function_group_command_system</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaa1e3dc50a7c4967da342ccd3781cce3da49a3bcd88c97d0bab3131b87a9827e7b" prot="public">
          <name>sd_switch_function_group_drive_strength</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggaa1e3dc50a7c4967da342ccd3781cce3dac925803c8f9d68ef3e700fb167dbe213" prot="public">
          <name>sd_switch_function_group_power_limit</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="58" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="group__hpm__sdmmc_1gac2910e0117be76017b015a716f11ea82" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__hpm__sdmmc_1ggac2910e0117be76017b015a716f11ea82a9668ea48bd00df0ee9218fb00b6c52f3" prot="public">
          <name>sd_switch_function_mode_check</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__hpm__sdmmc_1ggac2910e0117be76017b015a716f11ea82a2b6f8858a28979ba0ccd3542ef2c1f4e" prot="public">
          <name>sd_switch_function_mode_set</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="65" column="1" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" bodystart="65" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga148516f49ddb7bfeeb23fcaf61084d77" prot="public" static="no">
        <type>enum <ref refid="group__hpm__sdmmc_1ga355870629582954db9c13cfad239adb4" kindref="member">vdd_current_min_def</ref></type>
        <definition>typedef enum vdd_current_min_def vdd_current_min_t</definition>
        <argsstring></argsstring>
        <name>vdd_current_min_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="170" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga436b2e3b516f7d30ccd31fad237994dc" prot="public" static="no">
        <type>enum <ref refid="group__hpm__sdmmc_1ga8f4270c841ac86bfdae98c1fa3b4f078" kindref="member">vdd_current_max_def</ref></type>
        <definition>typedef enum vdd_current_max_def vdd_current_max_t</definition>
        <argsstring></argsstring>
        <name>vdd_current_max_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="181" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga955684d4b2ad38f7c3921d51ebfaf5e1" prot="public" static="no">
        <type>enum _emmc_partition</type>
        <definition>typedef enum _emmc_partition emmc_partition_t</definition>
        <argsstring></argsstring>
        <name>emmc_partition_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="459" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga4b0157a9b1addb447a3ec044843e7653" prot="public" static="no">
        <type>enum _emmc_hs_timing</type>
        <definition>typedef enum _emmc_hs_timing emmc_hs_timing_t</definition>
        <argsstring></argsstring>
        <name>emmc_hs_timing_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="467" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" prot="public" static="no">
        <type>struct _sdmmc_emmc</type>
        <definition>typedef struct _sdmmc_emmc emmc_card_t</definition>
        <argsstring></argsstring>
        <name>emmc_card_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="641" column="13"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga3dda5c74d6bb578cb8f866e15a50a83f" prot="public" static="no">
        <type><ref refid="group__sdxc__interface_1gabd45a27b4d377a7701dbd86e52fc08e8" kindref="member">sdxc_xfer_t</ref></type>
        <definition>typedef sdxc_xfer_t sdmmchost_xfer_t</definition>
        <argsstring></argsstring>
        <name>sdmmchost_xfer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="155" column="21" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gacd1545b6b75beb094468a001b77c1634" prot="public" static="no">
        <type><ref refid="group__sdxc__interface_1ga7f7195eb5f19cd35b9fb42b632d4511e" kindref="member">sdxc_command_t</ref></type>
        <definition>typedef sdxc_command_t sdmmchost_cmd_t</definition>
        <argsstring></argsstring>
        <name>sdmmchost_cmd_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="156" column="24" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gad83842c228e530fde58fcdeab683c760" prot="public" static="no">
        <type><ref refid="group__sdxc__interface_1ga91fe68da7e2017c9f4cf786fb0d97b80" kindref="member">sdxc_data_t</ref></type>
        <definition>typedef sdxc_data_t sdmmchost_data_t</definition>
        <argsstring></argsstring>
        <name>sdmmchost_data_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="157" column="21" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga48a057c5cd39d7fc61de09eedbc46f56" prot="public" static="no">
        <type><ref refid="group__sdxc__interface_1gaf91cc3447e777bfc9f04a8db7144a548" kindref="member">sdxc_adma2_descriptor_t</ref></type>
        <definition>typedef sdxc_adma2_descriptor_t sdmmc_adma2_desc_t</definition>
        <argsstring></argsstring>
        <name>sdmmc_adma2_desc_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="158" column="33" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gaf0f5ff968b25b19a3c4b3fad2b2d9d18" prot="public" static="no">
        <type><ref refid="structSDXC__Type" kindref="compound">SDXC_Type</ref></type>
        <definition>typedef SDXC_Type SDMMCHOST_Type</definition>
        <argsstring></argsstring>
        <name>SDMMCHOST_Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="159" column="19" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga061c9ab0b34c26b21c17b288544d061b" prot="public" static="no">
        <type><ref refid="structsdxc__capabilities__t" kindref="compound">sdxc_capabilities_t</ref></type>
        <definition>typedef sdxc_capabilities_t sdmmchost_capabilities_t</definition>
        <argsstring></argsstring>
        <name>sdmmchost_capabilities_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="160" column="29" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga6c1f81e1be90c3937aa698f78188d75e" prot="public" static="no">
        <type>uint32_t(*</type>
        <definition>typedef uint32_t(* sdmmchost_clock_init_func_t) (SDMMCHOST_Type *base, uint32_t clk_freq, bool need_reverse)</definition>
        <argsstring>)(SDMMCHOST_Type *base, uint32_t clk_freq, bool need_reverse)</argsstring>
        <name>sdmmchost_clock_init_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="162" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gaf4a9cfed436b6783092b3388040968c0" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sdmmchost_power_switch_func_t) (SDMMCHOST_Type *base, bool on_off)</definition>
        <argsstring>)(SDMMCHOST_Type *base, bool on_off)</argsstring>
        <name>sdmmchost_power_switch_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="164" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga7e253be44818a9a036876fd1753be513" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sdmmchost_io_init_func_t) (SDMMCHOST_Type *base)</definition>
        <argsstring>)(SDMMCHOST_Type *base)</argsstring>
        <name>sdmmchost_io_init_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="166" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga08ef5bf68d664ebfb42115e0f8950c43" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sdmmchost_switch_1v8_io_func_t) (SDMMCHOST_Type *base)</definition>
        <argsstring>)(SDMMCHOST_Type *base)</argsstring>
        <name>sdmmchost_switch_1v8_io_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="168" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gadbfd8aa64a48e63e2735f7082da1f98d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sdmmchost_cmd_line_init_func_t) (SDMMCHOST_Type *base, bool push_pull)</definition>
        <argsstring>)(SDMMCHOST_Type *base, bool push_pull)</argsstring>
        <name>sdmmchost_cmd_line_init_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="170" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga362d1779c8ad6e25c8b4ac6349f8f310" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* sdmmchost_card_detect_func_t) (SDMMCHOST_Type *base)</definition>
        <argsstring>)(SDMMCHOST_Type *base)</argsstring>
        <name>sdmmchost_card_detect_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="172" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" prot="public" static="no">
        <type>volatile uint32_t *</type>
        <definition>typedef volatile uint32_t* hpm_sdmmc_osal_event_t</definition>
        <argsstring></argsstring>
        <name>hpm_sdmmc_osal_event_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="28" column="27" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" prot="public" static="no">
        <type>struct _sdmmc_sdcard</type>
        <definition>typedef struct _sdmmc_sdcard sd_card_t</definition>
        <argsstring></argsstring>
        <name>sd_card_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="123" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga363a74b35965ab06ab292a41a89f3d35" prot="public" static="no">
        <type>struct <ref refid="structsdio__tpl__block" kindref="compound">sdio_tpl_block</ref> *</type>
        <definition>typedef struct sdio_tpl_block * sdio_tpl_blk_t</definition>
        <argsstring></argsstring>
        <name>sdio_tpl_blk_t</name>
        <briefdescription>
<para>TPL block structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="372" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" prot="public" static="no">
        <type>struct _sdmmc_sdio</type>
        <definition>typedef struct _sdmmc_sdio sdio_card_t</definition>
        <argsstring></argsstring>
        <name>sdio_card_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="458" column="26" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="458" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__hpm__sdmmc_1ga7c86746ad214ca36568c62b9ce10bbbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_go_idle_state</definition>
        <argsstring>(sdmmc_host_t *host, uint32_t argument)</argsstring>
        <name>sdmmc_go_idle_state</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>argument</declname>
        </param>
        <briefdescription>
<para>Switch device to Idle state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument for CMD0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="99" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="12" bodyend="30" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="99" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad024103a584f5db9a747cc36709a5804" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_go_inactive_state</definition>
        <argsstring>(sdmmc_host_t *host, uint16_t relative_addr)</argsstring>
        <name>sdmmc_go_inactive_state</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>relative_addr</declname>
        </param>
        <briefdescription>
<para>Switch device to Inactive state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">relative_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>device relative address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="107" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="32" bodyend="50" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="107" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga6fc939b761d116c1dd8ec84a1e2a9d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_select_card</definition>
        <argsstring>(sdmmc_host_t *host, uint16_t relative_addr, bool is_selected)</argsstring>
        <name>sdmmc_select_card</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>relative_addr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_selected</declname>
        </param>
        <briefdescription>
<para>Select/De-select the device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">relative_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>device relative address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>true: select, false: de-select </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="116" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="52" bodyend="74" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="116" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga63c08d10f7c2910e33730597f786d35c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_send_application_command</definition>
        <argsstring>(sdmmc_host_t *host, uint16_t relative_addr)</argsstring>
        <name>sdmmc_send_application_command</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>relative_addr</declname>
        </param>
        <briefdescription>
<para>Send Application Command. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">relative_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>device related address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="124" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="76" bodyend="94" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="124" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac9a699d43fd8d30525d98a99e5bee2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_set_block_count</definition>
        <argsstring>(sdmmc_host_t *host, uint32_t block_count)</argsstring>
        <name>sdmmc_set_block_count</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Set block count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Block count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="132" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="96" bodyend="114" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="132" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaf33ed435019619a629cb4ce2766df4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_set_block_size</definition>
        <argsstring>(sdmmc_host_t *host, uint32_t block_size)</argsstring>
        <name>sdmmc_set_block_size</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Set Block size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Block size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="140" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="116" bodyend="134" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="140" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8ad85d10bad373ff516b67d56d109d2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmc_enable_auto_tuning</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmc_enable_auto_tuning</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Enable Auto Tuning mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status_success if operation is successful </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="147" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="136" bodyend="159" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="147" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga63ce1e913221a0c8fdb69ab542aac714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t extract_csd_field</definition>
        <argsstring>(const uint32_t *raw_csd, uint8_t end_offset, uint8_t start_offset)</argsstring>
        <name>extract_csd_field</name>
        <param>
          <type>const uint32_t *</type>
          <declname>raw_csd</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>end_offset</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>start_offset</declname>
        </param>
        <briefdescription>
<para>Extract Fields from raw CSD data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">raw_csd</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw CSD data array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>end offset of the specific field (in terms of bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>start offset of the specific field (in terms of bit) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Extracted CSD field </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="156" column="10" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.c" bodystart="161" bodyend="185" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="156" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga79afba90ede5942da21bc22ab56a4b54" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdmmc_get_sys_addr</definition>
        <argsstring>(const sdmmc_host_t *host, uint32_t addr)</argsstring>
        <name>sdmmc_get_sys_addr</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
<para>Get System address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>SD/MMC Host Context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">addr</parametername>
</parameternamelist>
<parameterdescription>
<para>memory address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted system address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="164" column="17" bodyfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.c" bodystart="13" bodyend="16" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" declline="164" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga61ca29b5fdf80298598c5b1fd0be0809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_init</definition>
        <argsstring>(emmc_card_t *card)</argsstring>
        <name>emmc_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize eMMC device, include both host and the device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="688" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="554" bodyend="579" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="688" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga88ca22e0e956351e9929e76615ea09c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void emmc_deinit</definition>
        <argsstring>(emmc_card_t *card)</argsstring>
        <name>emmc_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="697" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="581" bodyend="587" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="697" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaffe1e7e4801e746834951673e3be68a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_card_init</definition>
        <argsstring>(emmc_card_t *card)</argsstring>
        <name>emmc_card_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="706" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="620" bodyend="810" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="706" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac95f91df700b50090cc2c0c09afbcb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_send_cid</definition>
        <argsstring>(emmc_card_t *card)</argsstring>
        <name>emmc_send_cid</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Request eMMC device to send CID to Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="715" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="398" bodyend="416" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="715" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga03313ff13d56d166ffa42e31fbf846a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_probe_device</definition>
        <argsstring>(emmc_card_t *card)</argsstring>
        <name>emmc_probe_device</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Probe eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="724" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="589" bodyend="618" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="724" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga07bcf480db5f69c149506ee3815c9845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_select_card</definition>
        <argsstring>(const emmc_card_t *card, bool is_selected)</argsstring>
        <name>emmc_select_card</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_selected</declname>
        </param>
        <briefdescription>
<para>Select eMMC device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>Select/De-select the eMMC device</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="734" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="817" bodyend="821" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="734" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaa233f0c149244fece01632ff936b198c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_go_idle</definition>
        <argsstring>(emmc_card_t *card, emmc_idle_option_t option)</argsstring>
        <name>emmc_go_idle</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga197db45ae027ee3032edc283ecfbf0c9" kindref="member">emmc_idle_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Go to Idle mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC idle options</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="744" column="12" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="744" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gabc24082d1383aaba55ee1e9b26237b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_switch_function</definition>
        <argsstring>(const emmc_card_t *card, emmc_switch_cmd_arg_t arg, uint32_t timeout_us)</argsstring>
        <name>emmc_switch_function</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="unionemmc__switch__cmd__arg__t" kindref="compound">emmc_switch_cmd_arg_t</ref></type>
          <declname>arg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_us</declname>
        </param>
        <briefdescription>
<para>Switch eMMC function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">arg</parametername>
</parameternamelist>
<parameterdescription>
<para>Switch command argument </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_us</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in microseconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="755" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="1061" bodyend="1079" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="755" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gab3c8f86bd17590e68b9e78769ada5479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_configure_partition</definition>
        <argsstring>(const emmc_card_t *card, emmc_config_partition_option_t option)</argsstring>
        <name>emmc_configure_partition</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="structemmc__config__partition__option__t" kindref="compound">emmc_config_partition_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Configure eMMC Partition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Partition configuration option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="765" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="1081" bodyend="1138" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="765" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaddd0cf359733c3e9a353344c651269c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_enable_high_density_erase_group</definition>
        <argsstring>(emmc_card_t *card, bool enable)</argsstring>
        <name>emmc_enable_high_density_erase_group</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable High Density Erase group. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag for enabling the high density erase group</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="774" column="12" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="774" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5af49a3755eb36f67d07ab8f41b0052d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_program_csd</definition>
        <argsstring>(emmc_card_t *card, const uint32_t *raw_csd)</argsstring>
        <name>emmc_program_csd</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>raw_csd</declname>
        </param>
        <briefdescription>
<para>Program CSD register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">raw_csd</parametername>
</parameternamelist>
<parameterdescription>
<para>raw CSD buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="784" column="12" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="784" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gacd2e0b27d26db88d0908984f142082e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_read_blocks</definition>
        <argsstring>(emmc_card_t *card, uint8_t *buffer, uint32_t start_block, uint32_t block_count)</argsstring>
        <name>emmc_read_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Read eMMC blocks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>Start Block index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="796" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="823" bodyend="888" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="796" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga953bf9499d20039bd04648af30c82273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_write_blocks</definition>
        <argsstring>(emmc_card_t *card, const uint8_t *buffer, uint32_t start_block, uint32_t block_count)</argsstring>
        <name>emmc_write_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Write eMMC blocks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>Start block index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="808" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="890" bodyend="950" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="808" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga39d336785431705efeb2b5bb549202d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_erase_blocks</definition>
        <argsstring>(emmc_card_t *card, uint32_t start_block, uint32_t block_count, emmc_erase_option_t option)</argsstring>
        <name>emmc_erase_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga4bd115a39f4e41c7c3b6b1ba268bef9a" kindref="member">emmc_erase_option_t</ref></type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Erase eMMC Blocks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>The start block = </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be erased </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Erase option</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="820" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="968" bodyend="1026" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="820" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8f901ffaf1b1127e799fa233fed40620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_enter_sleep_mode</definition>
        <argsstring>(const emmc_card_t *card)</argsstring>
        <name>emmc_enter_sleep_mode</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Switch eMMC device into sleep mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="829" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="1140" bodyend="1160" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="829" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8f7934f36c3824414a849a7fd2fe6839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t emmc_exit_sleep_mode</definition>
        <argsstring>(const emmc_card_t *card)</argsstring>
        <name>emmc_exit_sleep_mode</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga178ee3c43dd83534bc1d5eb224d6a897" kindref="member">emmc_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Switch eMMC device into standby mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>eMMC card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command Execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="838" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.c" bodystart="1162" bodyend="1182" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" declline="838" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5c1a274902311e3e07404da34641df94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_init</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_init</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>SDMMC Host Initialization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Host initialization status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="234" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="47" bodyend="89" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="234" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga3b1ec416b0277dd32386c99ae5a981ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_set_card_bus_width</definition>
        <argsstring>(sdmmc_host_t *host, sdmmc_buswidth_t bus_width)</argsstring>
        <name>sdmmchost_set_card_bus_width</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gaf3fc4bd055fe53817f214445bb52a29c" kindref="member">sdmmc_buswidth_t</ref></type>
          <declname>bus_width</declname>
        </param>
        <briefdescription>
<para>Set the card bus width. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bus_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Bus width </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="241" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="210" bodyend="215" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="241" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga3ea7a74b1e8c5c5b81f77ca0525a26e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdmmchost_set_card_clock</definition>
        <argsstring>(sdmmc_host_t *host, uint32_t freq, bool clock_inverse)</argsstring>
        <name>sdmmchost_set_card_clock</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clock_inverse</declname>
        </param>
        <briefdescription>
<para>Set the Card clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency in Hz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clock_inverse</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock Inverse flag</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual clock frequency in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="251" column="10" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="217" bodyend="222" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="251" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaaa3dc0fb040d49b4aca5fd56b67de126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_deinit</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_deinit</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Deinitialize the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="257" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="164" bodyend="178" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="257" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaaf23c9e446431e8ae1011b11e5962fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_reset</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_reset</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Reset the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="263" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="180" bodyend="185" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="263" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5f0bcf607e789cec5a1244e4f9ceb7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_wait_card_active</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_wait_card_active</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Wait until the card is active. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="269" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="224" bodyend="229" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="269" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga053cea0ac70538b820fc9910c3b66b29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_send_command</definition>
        <argsstring>(sdmmc_host_t *host, const sdmmchost_cmd_t *cmd)</argsstring>
        <name>sdmmchost_send_command</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1gacd1545b6b75beb094468a001b77c1634" kindref="member">sdmmchost_cmd_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send command via the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>Command context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="278" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="318" bodyend="357" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="278" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac0be95716e6c0f286074fa9b3f8f7fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_transfer</definition>
        <argsstring>(sdmmc_host_t *host, const sdmmchost_xfer_t *content)</argsstring>
        <name>sdmmchost_transfer</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga3dda5c74d6bb578cb8f866e15a50a83f" kindref="member">sdmmchost_xfer_t</ref> *</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Transfer data via the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">content</parametername>
</parameternamelist>
<parameterdescription>
<para>Transfer context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transfer execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="287" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="359" bodyend="431" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="287" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad15ada2d1e0080ab1ae73e4de72116c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdmmchost_is_card_detected</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_is_card_detected</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Check whether the card is detected or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The card detection state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="295" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="192" bodyend="208" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="295" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gacb828994a65081a54855efd974ebc452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_init_io</definition>
        <argsstring>(sdmmc_host_t *host, hpm_sdmmc_operation_mode_t operation_mode)</argsstring>
        <name>sdmmchost_init_io</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gae621a656c0803a85dc1742fe648c726d" kindref="member">hpm_sdmmc_operation_mode_t</ref></type>
          <declname>operation_mode</declname>
        </param>
        <briefdescription>
<para>Initialize the Host IO according to the operation mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operation_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="302" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="512" bodyend="613" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="302" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga06ee448f5d7906393d5fc36842b040e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_delay_ms</definition>
        <argsstring>(const sdmmc_host_t *host, uint32_t ms)</argsstring>
        <name>sdmmchost_delay_ms</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Host delay. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="309" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="34" bodyend="37" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="309" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad0348a7d7dc2db2a4dd7a7c166c4288b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_switch_to_1v8</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_switch_to_1v8</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Switch the Host to 1.8V IO voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Host switch voltage status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="317" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="116" bodyend="162" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="317" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga99f9e852fa1591d5a21c97f6d026593d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_vsel_pin_control</definition>
        <argsstring>(const sdmmc_host_t *host, hpm_sdmmc_io_volt_t io_volt)</argsstring>
        <name>sdmmchost_vsel_pin_control</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga55d73ea9113c4369ddf2a40ae67d945a" kindref="member">hpm_sdmmc_io_volt_t</ref></type>
          <declname>io_volt</declname>
        </param>
        <briefdescription>
<para>Control the Voltage selection pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">io_volt</parametername>
</parameternamelist>
<parameterdescription>
<para>IO voltage </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="324" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="91" bodyend="114" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="324" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga063e7a54d785cf3d36993d90d9d25ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_enable_emmc_support</definition>
        <argsstring>(const sdmmc_host_t *host, bool enable)</argsstring>
        <name>sdmmchost_enable_emmc_support</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable the eMMC support on the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or disable the eMMC support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function should be called after the host is initialized </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="332" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="187" bodyend="190" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="332" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gab6baa9fa3142f2986589327c259a6055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_set_speed_mode</definition>
        <argsstring>(const sdmmc_host_t *host, sdmmc_speed_mode_t speed_mode)</argsstring>
        <name>sdmmchost_set_speed_mode</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gae45d06eba88f1fe759955854ea78796e" kindref="member">sdmmc_speed_mode_t</ref></type>
          <declname>speed_mode</declname>
        </param>
        <briefdescription>
<para>Set the speed mode via the Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">speed_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Speed mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="341" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="433" bodyend="441" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="341" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga6cf013dffa70ba4e01c5478f6e572119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdmmchost_error_recovery</definition>
        <argsstring>(sdmmc_host_t *host, sdmmchost_cmd_t *cmd)</argsstring>
        <name>sdmmchost_error_recovery</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gacd1545b6b75beb094468a001b77c1634" kindref="member">sdmmchost_cmd_t</ref> *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Trigger the Error recovery via the Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>abort command context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="350" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="443" bodyend="446" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="350" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac4d93261219e7236de1f3fbef4e94943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sdmmchost_is_voltage_switch_supported</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_is_voltage_switch_supported</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Check whether the host support voltage switch. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Voltage switch support state </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="358" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="465" bodyend="468" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaee9bd556ba39ba67ddbb8fd315de0870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_enable_enhanced_data_strobe</definition>
        <argsstring>(const sdmmc_host_t *host, bool enable)</argsstring>
        <name>sdmmchost_enable_enhanced_data_strobe</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable the enhanced data strboe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable or disable the enhanced data strobe </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="365" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="615" bodyend="618" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="365" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad9ce96105622915ef259f47560f274a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_set_data_strobe_delay</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_set_data_strobe_delay</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Set the Data strobe delay for Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="371" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="621" bodyend="625" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="371" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga40fe715d04a50eb06eb33768e70082db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_select_voltage</definition>
        <argsstring>(sdmmc_host_t *host, hpm_sdmmc_io_volt_t io_volt)</argsstring>
        <name>sdmmchost_select_voltage</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga55d73ea9113c4369ddf2a40ae67d945a" kindref="member">hpm_sdmmc_io_volt_t</ref></type>
          <declname>io_volt</declname>
        </param>
        <briefdescription>
<para>Select the IO voltage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">io_volt</parametername>
</parameternamelist>
<parameterdescription>
<para>IO voltage </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="378" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="627" bodyend="637" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="378" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad3806c80950c3ee20bb56484aa8569eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_set_cardclk_delay_chain</definition>
        <argsstring>(const sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_set_cardclk_delay_chain</name>
        <param>
          <type>const <ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Set the Card clock delay chain for the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="384" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="448" bodyend="458" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="384" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga39c1a8aa98b7aa2a930a781f84db0e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_set_rxclk_delay_chain</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_set_rxclk_delay_chain</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Set the Card Rx Clock delay chain for the host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="390" column="6" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="390" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gad73bedf0fd00f17619984a227e05791d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_irq_handler</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_irq_handler</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>THe Host IRQ Handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="397" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="639" bodyend="662" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="397" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga35c1956c3104cc912d2889075be2e6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_register_sdio_callback</definition>
        <argsstring>(sdmmc_host_t *host, void(*sdio_irq_callback)(void *param), void *param)</argsstring>
        <name>sdmmchost_register_sdio_callback</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>void(*)(void *param)</type>
          <declname>sdio_irq_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Registers an SDIO interrupt callback function for the SDMMC host controller. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows the user to register a callback that will be invoked upon SDIO interrupts. It is useful for handling SDIO-specific events in addition to standard SDMMC transactions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SDMMC host controller structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sdio_irq_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the callback function that will be called when an SDIO interrupt occurs. The function should accept a single parameter of type <computeroutput>void*</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a user-defined data that will be passed to the callback function each time it is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="411" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="676" bodyend="682" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="411" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gae434d3e85eb387bc970270f8c223ea35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdmmchost_enable_sdio_interrupt</definition>
        <argsstring>(sdmmc_host_t *host, bool enable)</argsstring>
        <name>sdmmchost_enable_sdio_interrupt</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or disable SDIO interrupt on the SDMMC host controller. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows controlling the SDIO interrupt signal and status based on the provided flag. When enabled, it sets the interrupt signal and status masks to detect card interrupts. When disabled, it clears the interrupt status mask to stop interrupt generation from card interrupts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SDMMC host controller structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to enable (true) or disable (false) the SDIO interrupt. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="423" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="664" bodyend="674" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="423" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaa2ad7f1f893e672723e982f5ca442208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sdmmchost_get_data_pin_level</definition>
        <argsstring>(sdmmc_host_t *host)</argsstring>
        <name>sdmmchost_get_data_pin_level</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Return the data pin level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SDMMC host controller structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value for data pin level </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="431" column="10" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.c" bodystart="684" bodyend="695" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" declline="431" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga1cf12078953224e8b83c6de67b132639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_sdmmc_osal_delay</definition>
        <argsstring>(void *ctx, uint32_t ms)</argsstring>
        <name>hpm_sdmmc_osal_delay</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ms</declname>
        </param>
        <briefdescription>
<para>Delay in milliseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="42" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="84" bodyend="90" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga18764e14efa76fed2af31e2c88948dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" kindref="member">hpm_sdmmc_osal_event_t</ref></type>
        <definition>hpm_sdmmc_osal_event_t hpm_sdmmc_osal_event_create</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>hpm_sdmmc_osal_event_create</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Create Event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created event </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="51" column="24" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="92" bodyend="100" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="51" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga67f26741c0069abd905fe37dc0910d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_sdmmc_osal_event_delete</definition>
        <argsstring>(void *ctx, hpm_sdmmc_osal_event_t event)</argsstring>
        <name>hpm_sdmmc_osal_event_delete</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" kindref="member">hpm_sdmmc_osal_event_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Delete an event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to be removed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="61" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="102" bodyend="109" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="61" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga1d32fa657f9d325b48bbb7187c6b8f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_sdmmc_osal_event_wait</definition>
        <argsstring>(void *ctx, hpm_sdmmc_osal_event_t event, uint32_t flags, uint32_t timeout)</argsstring>
        <name>hpm_sdmmc_osal_event_wait</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" kindref="member">hpm_sdmmc_osal_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait specified event flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags to wait </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="73" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="111" bodyend="134" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="73" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga32ae5a35fcb9515389ee006104e3cdc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_sdmmc_osal_event_set</definition>
        <argsstring>(void *ctx, hpm_sdmmc_osal_event_t event, uint32_t flags)</argsstring>
        <name>hpm_sdmmc_osal_event_set</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" kindref="member">hpm_sdmmc_osal_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set specified event flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="82" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="136" bodyend="141" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga71a196c9ce1cb4e55541eccc04a03ed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_sdmmc_osal_event_clear</definition>
        <argsstring>(void *ctx, hpm_sdmmc_osal_event_t event, uint32_t flags)</argsstring>
        <name>hpm_sdmmc_osal_event_clear</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gac8fd7e34bc5f3c542e20fe1037d631ce" kindref="member">hpm_sdmmc_osal_event_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear specified event flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags to clear </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="91" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="143" bodyend="148" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga2d5649b9da31066acbdb15d852e0ce16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_sdmmc_osal_enter_critical</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>hpm_sdmmc_osal_enter_critical</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Enter critical section. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="98" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="150" bodyend="154" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="98" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaaff1b61418d3bf1bc13e0ef2c30d784b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_sdmmc_osal_exit_critical</definition>
        <argsstring>(void *ctx)</argsstring>
        <name>hpm_sdmmc_osal_exit_critical</name>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Exit critical section. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>OSAL context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="105" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.c" bodystart="156" bodyend="160" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" declline="105" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga479aee4b79c9b1e95f46a05cf71022d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_init</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SD device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="137" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="669" bodyend="703" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="137" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8ea47ee8d44c43c19f6177f76e744eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sd_deinit</definition>
        <argsstring>(const sd_card_t *card)</argsstring>
        <name>sd_deinit</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize SD device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="146" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="705" bodyend="708" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gabb782dd11dadca1d3d8b1ffd4ae775bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_card_init</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_card_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SD card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Send CMD: Set power limit</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="155" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="711" bodyend="841" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="155" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5eda9ef077958551cd06bde7a8e6cffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sd_card_deinit</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_card_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize SD card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="164" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="646" bodyend="652" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga33053350fcf8a8d1d7d41bc8861caafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_host_init</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_host_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SD Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="173" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="654" bodyend="666" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="173" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga23e4fc1b6129c0c6f44d458c1a809931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_host_deinit</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_host_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize SD Host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="182" column="12" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="182" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gada0d793eefd7f64c833a5ce7408a90a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sd_is_card_present</definition>
        <argsstring>(const sd_card_t *card)</argsstring>
        <name>sd_is_card_present</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Check whether the SD card is present. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="191" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="844" bodyend="847" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="191" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gabf5223ee14140f902585a11a690539f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_select_card</definition>
        <argsstring>(const sd_card_t *card, bool is_selected)</argsstring>
        <name>sd_select_card</name>
        <param>
          <type>const <ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_selected</declname>
        </param>
        <briefdescription>
<para>Select/Deselect SD card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>true: select, false: deselect</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="200" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="849" bodyend="853" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="200" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gab4ba882a3b73ca470df07c7a2ef020df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_read_status</definition>
        <argsstring>(sd_card_t *card)</argsstring>
        <name>sd_read_status</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Read SD card status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="209" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="855" bodyend="883" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="209" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaeed4e45631f81f503b20d674fd77ee23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_read_blocks</definition>
        <argsstring>(sd_card_t *card, uint8_t *buffer, uint32_t start_block, uint32_t block_count)</argsstring>
        <name>sd_read_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Read data from specified SD block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to store data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>start block index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="221" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="885" bodyend="956" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="221" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac762dfb41e919b77a3b69470daf490db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_write_blocks</definition>
        <argsstring>(sd_card_t *card, const uint8_t *buffer, uint32_t start_block, uint32_t block_count)</argsstring>
        <name>sd_write_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Write data to specified SD block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>start block index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="233" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="958" bodyend="1029" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="233" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gab7dc8b6f334218e4d796b4576ba0420a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_erase_blocks</definition>
        <argsstring>(sd_card_t *card, uint32_t start_block, uint32_t block_count)</argsstring>
        <name>sd_erase_blocks</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>start_block</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_count</declname>
        </param>
        <briefdescription>
<para>Erase specified SD ranges. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start_block</parametername>
</parameternamelist>
<parameterdescription>
<para>start block index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be erased</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="244" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="1062" bodyend="1108" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="244" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga1c2d0ef6393d90169c72ef1fca7aae0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_set_driver_strength</definition>
        <argsstring>(sd_card_t *card, sd_drive_strength_t driver_strength)</argsstring>
        <name>sd_set_driver_strength</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gab635d506891dfe9dc9b9eaa7aab88c03" kindref="member">sd_drive_strength_t</ref></type>
          <declname>driver_strength</declname>
        </param>
        <briefdescription>
<para>Set the driver strength for SD card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">driver_strength</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver strength</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="254" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="1110" bodyend="1114" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="254" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga4f916b6a66606391d0a1caef32aa15d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_set_max_current</definition>
        <argsstring>(sd_card_t *card, sd_max_current_t max_current)</argsstring>
        <name>sd_set_max_current</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga47f2d06751444a78cbf1792022d0a3cb" kindref="member">sd_max_current_t</ref></type>
          <declname>max_current</declname>
        </param>
        <briefdescription>
<para>Set the maximum current for SD card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_current</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum current</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="263" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="1116" bodyend="1120" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="263" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaccaee7b4dbad9991f4f958b688c21624" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sd_polling_card_status_busy</definition>
        <argsstring>(sd_card_t *card, uint32_t timeout_ms)</argsstring>
        <name>sd_polling_card_status_busy</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga2b903f312065c7bd95f61d27c33ab246" kindref="member">sd_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>Polling SD card status busy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SD card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in milliseconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" line="272" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.c" bodystart="1122" bodyend="1153" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sd.h" declline="272" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaf2394daa0dc6b87df0e53a1411b8d019" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t sdio_cis_csr_addr</definition>
        <argsstring>(const uint8_t *reg_ptr)</argsstring>
        <name>sdio_cis_csr_addr</name>
        <param>
          <type>const uint8_t *</type>
          <declname>reg_ptr</declname>
        </param>
        <briefdescription>
<para>Get the CIS register address from raw register value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted CIS CSR address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="499" column="24" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="499" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5a093ec3e8eeca9578684d36e6fd2b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_init</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SDIO device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIO device initialization status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="513" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="636" bodyend="655" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="513" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga39500b105a4a113b8f414e6de892589f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sdio_deinit</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-initialize SDIO device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="519" column="6" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="658" bodyend="665" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="519" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8427d0dd9be12a302c9c533934e3a3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_card_init</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_card_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SDIO card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIO card initialization status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="526" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="734" bodyend="789" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="526" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga11f423fe2a65d8d1f1ec7181f44da941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_card_deinit</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_card_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize SDIO card. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIO card initialization status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="533" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="791" bodyend="809" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="533" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gade6686be8772dd45515527bba38a5dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_host_init</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_host_init</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SDIO host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="539" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="894" bodyend="910" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="539" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga016bcb192a858c28d0791e35b31c84d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_host_deinit</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_host_deinit</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-initialize SDIO host. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>De-initialization status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="547" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="912" bodyend="916" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="547" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga26b72e8433d4cb2d22ac5c1483ddded6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_rw_direct</definition>
        <argsstring>(sdio_card_t *card, bool write, uint32_t func_idx, uint32_t reg_addr, uint8_t *pdata, bool read_after_write)</argsstring>
        <name>sdio_io_rw_direct</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pdata</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>read_after_write</declname>
        </param>
        <briefdescription>
<para>Execute SDIO_IO_RW_DIRECT command (CMD52) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">write</parametername>
</parameternamelist>
<parameterdescription>
<para>true: write, false: read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>pass in data if write is true or read_after_write is true, output data if write is false </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">read_after_write</parametername>
</parameternamelist>
<parameterdescription>
<para>true: read data after write</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDIO_IO_RW_DIRECT command status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="560" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="368" bodyend="413" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="560" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gab6fdfa866b7824d9f992ad554e8ab346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_set_block_size</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t block_size)</argsstring>
        <name>sdio_set_block_size</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Set the Block size for specified Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Block size</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; FBR base address for specified function</para>
<para>&lt; FBR base address for specified function</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="575" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="415" bodyend="446" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="575" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gae2c78d9b1db32f79144d12609c25c9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_rw_extend</definition>
        <argsstring>(sdio_card_t *card, bool write, uint32_t func_idx, uint32_t reg_addr, uint32_t op_code, uint8_t *pbuf, uint32_t blocks, uint32_t block_size)</argsstring>
        <name>sdio_io_rw_extend</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>write</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>op_code</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pbuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blocks</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
<para>Execute SDIO_IO_RW_EXTEND command (CMD53) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">write</parametername>
</parameternamelist>
<parameterdescription>
<para>true: write, false: read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation code, SDIO_CMD53_OP_MODE_FIXED_ADDR or SDIO_CMD53_OP_MODE_INCR_ADDR </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blocks</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of blocks to be transferred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Block size in bytes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; SDIO Command Timeout in milliseconds</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="590" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="458" bodyend="548" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="590" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaa7849955ab724cc5122ce9d453fc2629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_write_multi_bytes_to_fifo</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t *pbuf, uint32_t length)</argsstring>
        <name>sdio_io_write_multi_bytes_to_fifo</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pbuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Write multiple bytes to the FIFO address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Fixed Address in CMD53</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="609" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="550" bodyend="569" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="609" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac4b02fe19e30a579a7de9ca59886c4fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_read_multi_bytes_from_fifo</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t *pbuf, uint32_t length)</argsstring>
        <name>sdio_io_read_multi_bytes_from_fifo</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pbuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read multiple bytes from the FIFO address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to be read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Fixed Address in CMD53</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="625" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="572" bodyend="591" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="625" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga53f46ffee0ec217a627fb9cffcba0c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_write_incr_multi_bytes</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t *pbuf, uint32_t length)</argsstring>
        <name>sdio_io_write_incr_multi_bytes</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pbuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Write multiple bytes to the address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Incremental Address in CMD53</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="641" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="593" bodyend="612" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="641" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaab4417d2708e195ef2e1d85f777a34cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_read_incr_multi_bytes</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t *pbuf, uint32_t length)</argsstring>
        <name>sdio_io_read_incr_multi_bytes</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pbuf</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read multiple bytes from the address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>bytes to be read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Incremental Address in CMD53</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="657" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="614" bodyend="633" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="657" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gac18515a41da3035ab375ae7269bbc3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_read_byte</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t *pdata)</argsstring>
        <name>sdio_io_read_byte</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>Read 1 byte from the address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="672" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="448" bodyend="451" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="672" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga0c2003fabb022216c82fda1b4a2de626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_io_write_byte</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, uint32_t reg_addr, uint8_t byte_data)</argsstring>
        <name>sdio_io_write_byte</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>byte_data</declname>
        </param>
        <briefdescription>
<para>Write 1 byte to the address for specified SDIO Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">byte_data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="683" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="453" bodyend="456" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="683" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga5007f728903dac8de5e5309a6f149178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * sdio_get_func_if_code_str</definition>
        <argsstring>(uint8_t std_func_if_code)</argsstring>
        <name>sdio_get_func_if_code_str</name>
        <param>
          <type>uint8_t</type>
          <declname>std_func_if_code</declname>
        </param>
        <briefdescription>
<para>Get the string for specified function interface code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">std_func_if_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard function interface code</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string for the specified function interface code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="691" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="918" bodyend="963" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="691" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga3f8390353da07d65c25ce06a0f355879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_read_fbr</definition>
        <argsstring>(sdio_card_t *card, uint32_t func_idx, sdio_fbr_t *fbr)</argsstring>
        <name>sdio_read_fbr</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>func_idx</declname>
        </param>
        <param>
          <type><ref refid="structsdio__fbr__t" kindref="compound">sdio_fbr_t</ref> *</type>
          <declname>fbr</declname>
        </param>
        <briefdescription>
<para>Read the specified Function Basic Register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO function index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fbr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FBR buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; FBR base address for specified function</para>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="701" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="349" bodyend="365" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="701" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga18c3facb03156696753c116c75f56192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_read_cis</definition>
        <argsstring>(sdio_card_t *card, uint32_t cis_ptr, sdio_cis_t *cis, bool keep_tpl_raw_data)</argsstring>
        <name>sdio_read_cis</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cis_ptr</declname>
        </param>
        <param>
          <type><ref refid="structsdio__cis__t" kindref="compound">sdio_cis_t</ref> *</type>
          <declname>cis</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keep_tpl_raw_data</declname>
        </param>
        <briefdescription>
<para>Read Card Information Structure (CIS) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cis_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>CIS pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">cis</parametername>
</parameternamelist>
<parameterdescription>
<para>CIS buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keep_tpl_raw_data</parametername>
</parameternamelist>
<parameterdescription>
<para>true: keep the raw data of TPL, false: discard the raw data of TPL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="712" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="238" bodyend="347" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="712" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaca1ffb207a84331151ce3661692a44fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_get_max_transfer_speed</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_get_max_transfer_speed</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Get the maximum transfer speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="721" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="811" bodyend="829" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="721" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga6012d0de324da21ce937c716ac649fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_init_funcs</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_init_funcs</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Initialize SDIO functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="729" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="831" bodyend="864" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="729" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga2b1797bd3e92a7877bdef0e899a8043a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_deinit_funcs</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_deinit_funcs</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>De-Initialize SDIO functions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>SDIO card context</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Command execution status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="737" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="866" bodyend="892" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="737" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1gaa7250fca449ed12d63be15c6898e3dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_enable_interrupt</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_enable_interrupt</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Enables SDIO interrupts for the specified card. </para>
        </briefdescription>
        <detaileddescription>
<para>This function activates the SDIO interrupts by utilizing the host controller. It is essential to ensure that the card and its associated host controller are properly initialized before calling this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> structure representing the SDIO card. Must not be NULL and should have a valid host controller pointer.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>: Status of the operation.<itemizedlist>
<listitem><para>status_success: Interrupts were successfully enabled.</para>
</listitem><listitem><para>status_invalid_argument: If the card pointer or its host controller is NULL. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="753" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="965" bodyend="976" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="753" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga2e2faa391249c8e34929786c4c473b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_disable_interrupt</definition>
        <argsstring>(sdio_card_t *card)</argsstring>
        <name>sdio_disable_interrupt</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <briefdescription>
<para>Disables SDIO interrupts for the specified card. </para>
        </briefdescription>
        <detaileddescription>
<para>This function disables the SDIO interrupts associated with the given SDIO card. It ensures that the card and its host are valid before proceeding to disable the interrupts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the <ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> structure representing the SDIO card. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns status_success if the interrupts were successfully disabled, or status_invalid_argument if the card or its host is not properly initialized. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="766" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="978" bodyend="989" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="766" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga298d214b746d931d98f9909810aa00e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t sdio_register_irq_callback</definition>
        <argsstring>(sdio_card_t *card, void(*sdio_irq_callback)(void *param), void *sdio_irq_param)</argsstring>
        <name>sdio_register_irq_callback</name>
        <param>
          <type><ref refid="group__hpm__sdmmc_1ga6adb66a775679a877c49d6b0e652b95c" kindref="member">sdio_card_t</ref> *</type>
          <declname>card</declname>
        </param>
        <param>
          <type>void(*)(void *param)</type>
          <declname>sdio_irq_callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>sdio_irq_param</declname>
        </param>
        <briefdescription>
<para>Registers an interrupt callback function for an SDIO card. </para>
        </briefdescription>
        <detaileddescription>
<para>This function allows the user to register a callback that will be invoked when an SDIO interrupt occurs. The provided callback function should be designed to handle SDIO-specific events or data associated with the interrupt.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">card</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the SDIO card context structure. Must not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sdio_irq_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the user-defined interrupt callback function. This function will be called when an SDIO interrupt is detected. The function signature should match <computeroutput>void (*)(void *)</computeroutput>, where the parameter is a generic pointer provided by the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sdio_irq_param</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to any user-defined data that needs to be passed to the interrupt callback function. Can be NULL if no data needs to be passed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref>: Status of the registration operation.<itemizedlist>
<listitem><para>status_success: Callback successfully registered.</para>
</listitem><listitem><para>status_invalid_argument: If the card pointer is NULL or the card host is not initialized.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>Ensure the SDIO card and host controller are properly initialized before calling this function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="785" column="12" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.c" bodystart="991" bodyend="1002" declfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" declline="785" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga8015670494c47f0e016afebd9a0bcced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t board_init_sd_host_params</definition>
        <argsstring>(sdmmc_host_t *host, SDMMCHOST_Type *base)</argsstring>
        <name>board_init_sd_host_params</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gaf0f5ff968b25b19a3c4b3fad2b2d9d18" kindref="member">SDMMCHOST_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initialize board-level SD Host parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>SD Host base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" line="33" column="12" bodyfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.c" bodystart="18" bodyend="120" declfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" declline="33" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga1010af3944aba853839cfbd80514772d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t board_init_emmc_host_params</definition>
        <argsstring>(sdmmc_host_t *host, SDMMCHOST_Type *base)</argsstring>
        <name>board_init_emmc_host_params</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gaf0f5ff968b25b19a3c4b3fad2b2d9d18" kindref="member">SDMMCHOST_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initialize board-level eMMC Host parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>Host base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" line="42" column="12" bodyfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.c" bodystart="122" bodyend="219" declfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" declline="42" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__hpm__sdmmc_1ga523a001f82dd8dcd64f3852f0055b38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t board_init_sdio_host_params</definition>
        <argsstring>(sdmmc_host_t *host, SDMMCHOST_Type *base)</argsstring>
        <name>board_init_sdio_host_params</name>
        <param>
          <type><ref refid="structsdmmc__host__t" kindref="compound">sdmmc_host_t</ref> *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="group__hpm__sdmmc_1gaf0f5ff968b25b19a3c4b3fad2b2d9d18" kindref="member">SDMMCHOST_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initialize board-level SDIO Host parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">host</parametername>
</parameternamelist>
<parameterdescription>
<para>Host context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>Host base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" line="51" column="12" bodyfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.c" bodystart="282" bodyend="384" declfile="middleware/hpm_sdmmc/port/hpm_sdmmc_port.h" declline="51" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa28de26c002ffef8dc53e27e84aabba7" prot="public" static="no">
        <name>SDMMC_CLOCK_400KHZ</name>
        <initializer>(400000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="29" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga61da56bf7761fcbb0a8b5f98597b0a7e" prot="public" static="no">
        <name>SD_CLOCK_25MHZ</name>
        <initializer>(25000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="30" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae81862dd656cded629335cd311027298" prot="public" static="no">
        <name>SD_CLOCK_50MHZ</name>
        <initializer>(50000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="31" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gab5ab938258ba03c9cb6dcd90d6173234" prot="public" static="no">
        <name>SD_CLOCK_100MHZ</name>
        <initializer>(100000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="32" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga48bd3adc6f333940e4322212abc7a6f4" prot="public" static="no">
        <name>SD_CLOCK_208MHZ</name>
        <initializer>(208000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="33" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa35002e87da3c38c939da4058be0fa05" prot="public" static="no">
        <name>MMC_CLOCK_26MHz</name>
        <initializer>(26000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="35" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga2554ad21a75ee40207946ae35a9a1d27" prot="public" static="no">
        <name>MMC_CLOCK_52MHz</name>
        <initializer>(52000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="36" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gab8a64e844002ecaa7d807afd4751af68" prot="public" static="no">
        <name>MMC_CLOCK_DDR52</name>
        <initializer>(52000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="37" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga671386ab69a0401a950656c7ed994c9a" prot="public" static="no">
        <name>MMC_CLOCK_HS200</name>
        <initializer>(200000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="38" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga1f75ed535ed5d2ad5982c32cfbe2ff7e" prot="public" static="no">
        <name>MMC_CLOCK_HS400</name>
        <initializer>(200000000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="39" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga7b369fe184cc4c5345d0e37b54729c7a" prot="public" static="no">
        <name>HPM_SDMMC_MALLOC</name>
        <initializer>malloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="82" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0a48b02bd9793fddb27a6de5c16f8dfd" prot="public" static="no">
        <name>HPM_SDMMC_FREE</name>
        <initializer>free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" line="86" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_common.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga63f08f091128b0280a5496ae296ea49e" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_CMD_SET</name>
        <initializer>(191)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="45" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga766d8dfd0ad67009935b3f0dd370dfdb" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_POWER_CLASS</name>
        <initializer>(187)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="46" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga35d9767efafa3107a23af306d452c7bf" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_HS_TIMING</name>
        <initializer>(185)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="47" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa52ca0e738da5f4a4c5c95526204e1d9" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BUS_WDITH</name>
        <initializer>(183)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="48" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga779754c4085f874d753a956b4b8bba2c" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PARTITION_CONFIG</name>
        <initializer>(179)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="49" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae6fb3cc97a0244aad13bcd871c1dac0a" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BOOT_CONFIG_PROT</name>
        <initializer>(178)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="50" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga268fe72739222b1c081ca83ab5f21bef" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BOOT_BUS_CONDITIONS</name>
        <initializer>(177)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="51" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga5ba254e1c5774cb99084ab61ef6af645" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_ERASE_GROUP_DEF</name>
        <initializer>(175)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="52" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae797bd77ea02fed5dc8a51e389fc684a" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BOOT_WP</name>
        <initializer>(173)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="53" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa4819b56c53196b650723154417b8443" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_USER_WP</name>
        <initializer>(171)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="54" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga7419f516def63a2a7d66f23c358d9ff0" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_FW_CONFIG</name>
        <initializer>(169)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="55" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga88c95497e804a0b22b4f545a16f0df84" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_WR_REL_SET</name>
        <initializer>(167)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="56" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga7e9f01758da8b39e5fb590f9f3779944" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_SANITIZE_START</name>
        <initializer>(165)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="57" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga8714d1bfaa1caf1600f2dd85bd13636f" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BKOPS_START</name>
        <initializer>(164)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="58" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga2d20b1db9893f15a2afe707384de5dc9" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BKOPS_EN</name>
        <initializer>(163)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="59" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gabc358c99ad3a3a55d0687256f69e7e00" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_RSTn_FUNCTION</name>
        <initializer>(162)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="60" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga1721d8d7f53428f9d56af9d3860027fa" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_HPI_MGMT</name>
        <initializer>(161)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="61" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa3b26ca52d6adec5dc175c5bf9c31eea" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PARTITIONS_ATTRIBUTE</name>
        <initializer>(156)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="62" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga15f1f11efacfe7a3d357cd5322fe82c4" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PARTITION_SETTING_COMPLETED</name>
        <initializer>(155)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="63" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga72f714dd00dbc1b12c1d9f072be0c591" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_SEC_BAD_BLK_MGMNT</name>
        <initializer>(134)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="64" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa6504c6c203d436c240a6893726d70ec" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PRODUCTION_STATE_AWARENESS</name>
        <initializer>(133)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="65" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaca797338799a21ff1040467f59e60d41" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PERIODIC_WAKEUP</name>
        <initializer>(131)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="66" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga1e13b40a8daeba8bf22b20364a805c72" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_USE_NATIVE_SECTOR</name>
        <initializer>(62)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="67" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae7cde40955f63cf1e339cfbe243069fe" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_CLASS_6_CTRL</name>
        <initializer>(59)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="68" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga5112d470905aadb7073476a0b382bce7" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_POWER_OFF_NOTIFICATION</name>
        <initializer>(34)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="70" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0ae319eda9ea5b7b34893e301c8351b5" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_CACHE_CTRL</name>
        <initializer>(33)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="71" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9d4e7ce490ee44e260bfadd020e1ee3d" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_FLUSH_CACHE</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="72" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gada4ad8100070bb54ba991acff0afd4a3" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_BARRIER_CTRL</name>
        <initializer>(31)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="73" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0d43b3b5d7f362f4f7ee1cd8f1295c88" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_MODE_CONFIG</name>
        <initializer>(30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="74" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9f032f0b068127f0e1cc9ad6d3cddf0b" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_PRODUCT_STATE_AWARENESS_ENABLEMENT</name>
        <initializer>(17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="75" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga40e8be5876a544390446bb98e6f9de8b" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_SECURE_REMOVAL_TYPE</name>
        <initializer>(16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="76" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga24095adc81f03ba9e41703f87baff16b" prot="public" static="no">
        <name>EMMC_EXT_CSD_INDEX_CMDQ_MODE_EN</name>
        <initializer>(15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" line="77" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_emmc.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga325adb50df628ecbe5c0b748397f42d6" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_4BIT</name>
        <initializer>(1UL &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="28" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga26fc9ca2d7248d599135bf174870e0ec" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_8BIT</name>
        <initializer>(1UL &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="29" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf974924a652207bdec716b6b24130871" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_3V3</name>
        <initializer>(1UL &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="30" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0a496aaf8a74a114c375cd45b02f30e9" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_1V8</name>
        <initializer>(1UL &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="31" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga332743dff37abed5d2f802696a17cf52" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_DDR</name>
        <initializer>(1UL &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="33" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0173ed2dc999fe26eaa05e214001160e" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_SDR50</name>
        <initializer>(1UL &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="34" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0a9294770f9e5da5581adefdede28a7f" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_SDR104</name>
        <initializer>(1UL &lt;&lt; 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="35" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gabf3a2dcd0a8aae9f83dccd183966be61" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_HS200</name>
        <initializer>(1UL &lt;&lt; 7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="36" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gafb844662b4f095a381dd1eb5daf9b505" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_HS400</name>
        <initializer>(1Ul &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="37" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga18fe7f8892eddaf8da58fb7b46892d75" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_CARD_DETECTION</name>
        <initializer>(1UL &lt;&lt; 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="39" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9dc58694a2691100e8466306d35f6633" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_VOLTAGE_SWITCH</name>
        <initializer>(1UL &lt;&lt; 17)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="40" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaac563f448bc5d668bb8cde86dc4c365f" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_POWER_SWITCH</name>
        <initializer>(1UL &lt;&lt; 18)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="41" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaef47a3d4462c751bf99ffc8345af735e" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_WRITE_PROTECTION</name>
        <initializer>(1UL &lt;&lt; 19)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="42" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga393d0a7f0e83507cad8dd36fffe13aa9" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_RESET_PIN</name>
        <initializer>(1UL &lt;&lt; 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="43" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gacba2708b14cb22f4b12e438e897bf570" prot="public" static="no">
        <name>HPM_SDMMC_HOST_SUPPORT_DATA_STROBE</name>
        <initializer>(1UL &lt;&lt; 21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="44" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga78670f9a7d1da85e8e8cb8fb7872a2e8" prot="public" static="no">
        <name>HPM_SDMMC_HOST_CD_IN_IP</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga18fe7f8892eddaf8da58fb7b46892d75" kindref="member">HPM_SDMMC_HOST_SUPPORT_CARD_DETECTION</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="46" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga287f99e6456642ac722dc60429e93335" prot="public" static="no">
        <name>HPM_SDMMC_HOST_VSEL_IN_IP</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga9dc58694a2691100e8466306d35f6633" kindref="member">HPM_SDMMC_HOST_SUPPORT_VOLTAGE_SWITCH</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="47" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf9bce593965d056ba9b88aea039861e1" prot="public" static="no">
        <name>HPM_SDMMC_HOST_PWR_IN_IP</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1gaac563f448bc5d668bb8cde86dc4c365f" kindref="member">HPM_SDMMC_HOST_SUPPORT_POWER_SWITCH</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="48" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga5302f1fd1648b5d8cabba6e5be9713df" prot="public" static="no">
        <name>HPM_SDMMC_HOST_WP_IN_IP</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1gaef47a3d4462c751bf99ffc8345af735e" kindref="member">HPM_SDMMC_HOST_SUPPORT_WRITE_PROTECTION</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="49" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9cfec7c25e80b56bba4ad84aea7d86c7" prot="public" static="no">
        <name>HPM_SDMMC_HOST_RST_IN_IP</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga393d0a7f0e83507cad8dd36fffe13aa9" kindref="member">HPM_SDMMC_HOST_SUPPORT_RESET_PIN</ref> &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="50" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaaa3b334dfb2ac4902076c61c2ffbe1f0" prot="public" static="no">
        <name>HPM_SDMMC_HOST_ADMA3_ALIGN_SIZE</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="52" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gac8540f6e124e4f5d54b3213f2027d62e" prot="public" static="no">
        <name>HPM_SDMMC_HOST_ADMA_TBL_SIZE</name>
        <initializer>(<ref refid="group__sdxc__interface_1gac83bd1782648cdf1fd8c2f464724141f" kindref="member">SDXC_AMDA3_DESC_MIN_WORDS</ref> * 2UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" line="151" column="10" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_host.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf5ca17e4615da96944d420d549bb6a62" prot="public" static="no">
        <name>HPM_SDMMC_OSAL_WAIT_FOREVER</name>
        <initializer>(0xFFFFFFFFUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" line="29" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_osal.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga47779c8dfb85682db5ea412f2ad6238a" prot="public" static="no">
        <name>SDIO_CMD53_OP_MODE_FIXED_ADDR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fixed Address in CMD53 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="24" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae14e3324909452f10db980564ebd42e3" prot="public" static="no">
        <name>SDIO_CMD53_OP_MODE_INCR_ADDR</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Incremental Address in CMD53 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="25" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga500956ab44473c6aee6e9c24a6199cbf" prot="public" static="no">
        <name>SDIO_CMD_TIMEOUT_MS</name>
        <initializer>(1000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SDIO Command Timeout in milliseconds </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="27" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gacdd345b0b5ceeba404016cead126b437" prot="public" static="no">
        <name>SDIO_FBR_REG_BASE</name>
        <param><defname>fbr</defname></param>
        <initializer>((fbr) * 0x100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FBR base address for specified function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="29" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9aa981991f3bd1be2f03954e03a10071" prot="public" static="no">
        <name>SDIO_MAX_FUNC_NUM</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum supported functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="31" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga8a0a4294bc15aa955644b8e71c82b1e1" prot="public" static="no">
        <name>SDIO_SPEED_DEFAULT_SPEED</name>
        <initializer>0UL</initializer>
        <briefdescription>
<para>SDIO Speed definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="36" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf9117e658b5d0f851349fcaa6cffd930" prot="public" static="no">
        <name>SDIO_SPEED_HIGH_SPEED</name>
        <initializer>1UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="37" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga2a52f53647afd1174573efc80923789c" prot="public" static="no">
        <name>SDIO_SPEED_SDR12</name>
        <initializer><ref refid="group__hpm__sdmmc_1ga8a0a4294bc15aa955644b8e71c82b1e1" kindref="member">SDIO_SPEED_DEFAULT_SPEED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="38" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga4cb4dca2e5033c38a76e297d55a40ac8" prot="public" static="no">
        <name>SDIO_SPEED_SDR25</name>
        <initializer><ref refid="group__hpm__sdmmc_1gaf9117e658b5d0f851349fcaa6cffd930" kindref="member">SDIO_SPEED_HIGH_SPEED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="39" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga021c0ac74e6636b0a07532c6196e78af" prot="public" static="no">
        <name>SDIO_SPEED_SDR50</name>
        <initializer>2UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="40" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga63d08f87a4cd4a1a136e33812f64b35a" prot="public" static="no">
        <name>SDIO_SPEED_SDR104</name>
        <initializer>3UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="41" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga562759621e98f89f26a86a6906c6b905" prot="public" static="no">
        <name>SDIO_SPEED_DDR50</name>
        <initializer>4UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="42" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0d53be6c379fc57596270a4f23fb71b8" prot="public" static="no">
        <name>SDIO_CCCR_BUS_WIDTH_1BIT</name>
        <initializer>0UL</initializer>
        <briefdescription>
<para>SDIO Bus width definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="47" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga758601b8e05c7b3689a5ea3a21a13467" prot="public" static="no">
        <name>SDIO_CCCR_BUS_WIDTH_4BIT</name>
        <initializer>2UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="48" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga637ac39e3f0a0ee420a0b93f31b8802d" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_MASK</name>
        <initializer>(0x7UL &lt;&lt; 1)</initializer>
        <briefdescription>
<para>SDIO BUS speed definitions in CCCR register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="53" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gabfa3df9a3c665894a655ac01ee2db96e" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_SUPPORT_HIGHSPEED</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="54" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga5bf4b7e23fd320fc3eb4168a90d91f14" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_DEFAULT</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga8a0a4294bc15aa955644b8e71c82b1e1" kindref="member">SDIO_SPEED_DEFAULT_SPEED</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="55" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga155d57ce73e767fdf665967b528ff0f2" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_HIGH</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1gaf9117e658b5d0f851349fcaa6cffd930" kindref="member">SDIO_SPEED_HIGH_SPEED</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="56" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gabd7148995c556951c8266aa542fde427" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_SDR12</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga5bf4b7e23fd320fc3eb4168a90d91f14" kindref="member">SDIO_CCCR_BUS_SPEED_DEFAULT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="57" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gad29c9580d1aae1c2e59b0b300b9130a3" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_SDR25</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga155d57ce73e767fdf665967b528ff0f2" kindref="member">SDIO_CCCR_BUS_SPEED_HIGH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="58" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga95d3ab2ca24b59903835a612dd89ca03" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_SDR50</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga021c0ac74e6636b0a07532c6196e78af" kindref="member">SDIO_SPEED_SDR50</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="59" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga4181b606752d827ac4185c95acb65365" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_SDR104</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga63d08f87a4cd4a1a136e33812f64b35a" kindref="member">SDIO_SPEED_SDR104</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="60" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gadfa163673d7d23b3151564db012956c9" prot="public" static="no">
        <name>SDIO_CCCR_BUS_SPEED_DDR50</name>
        <initializer>(<ref refid="group__hpm__sdmmc_1ga562759621e98f89f26a86a6906c6b905" kindref="member">SDIO_SPEED_DDR50</ref> &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="61" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga036f26e1570ee5f471a2ec1955a04b4b" prot="public" static="no">
        <name>SDIO_REG_CCCR_SDIO_REV</name>
        <initializer>0</initializer>
        <briefdescription>
<para>CCCR register address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="66" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gac9893f9db7dad7db9566d8ad4cbd8fcc" prot="public" static="no">
        <name>SDIO_REG_CCCR_SD_REV</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="67" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga07a881627b2876294b1b3ec9bf610c95" prot="public" static="no">
        <name>SDIO_REG_CCCR_IO_ENABLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="68" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga7783b7bc1a960be7fb19a6f03556627f" prot="public" static="no">
        <name>SDIO_REG_CCCR_IO_READY</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="69" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0729dafefa9ff9db43ea0c68e95787b2" prot="public" static="no">
        <name>SDIO_REG_CCCR_INT_ENABLE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="70" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga45b03c2413cbc3bd610b606a43a3ff72" prot="public" static="no">
        <name>SDIO_REG_CCCR_INT_PENDING</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="71" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga539875bd7ebc70f0d2ba093067e4171c" prot="public" static="no">
        <name>SDIO_REG_CCCR_IO_ABORT</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="72" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga6651a0cfa4224e1d35555708d701dfe4" prot="public" static="no">
        <name>SDIO_REG_CCCR_BUS_IF_CTRL</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="73" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga53d2a30a785c0a84a522c8a2857696b3" prot="public" static="no">
        <name>SDIO_REG_CCCR_CARD_CAP</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="74" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gab3cdbd02a7b9efa5719db03877168ab0" prot="public" static="no">
        <name>SDIO_REG_CCCR_COM_CIS_PTR</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="75" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9dff6619430c293e6956e058a4eeb3f7" prot="public" static="no">
        <name>SDIO_REG_CCCR_BUS_SUSPEND</name>
        <initializer>0xC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="76" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gafe34ecc99454ce993d176b1d2d1de476" prot="public" static="no">
        <name>SDIO_REG_CCCR_FUNC_SEL</name>
        <initializer>0xD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="77" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gac11f8ec6bec4365e6a0fe6399d165692" prot="public" static="no">
        <name>SDIO_REG_CCCR_EXEC_FLAGS</name>
        <initializer>0xE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="78" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga0c0d6815dbd81bcf0a5a4a1c53229ea9" prot="public" static="no">
        <name>SDIO_REG_CCCR_READY_FLAGS</name>
        <initializer>0xF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="79" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaca5e2cd3f687c0fb2706c73b565dd522" prot="public" static="no">
        <name>SDIO_REG_CCCR_FN0_BLK_SIZE</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="80" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gad2a7f53caeb302cd79cbde8ede3ebde2" prot="public" static="no">
        <name>SDIO_REG_CCCR_POWER_CTRL</name>
        <initializer>0x12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="81" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa68c52817b2a083ef5f7c4937fb3095f" prot="public" static="no">
        <name>SDIO_REG_CCCR_BUS_SPEED_SEL</name>
        <initializer>0x13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="82" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga7112a258f47900b501a15e2b271fd8c7" prot="public" static="no">
        <name>SDIO_REG_CCCR_UHS_SUPPORT</name>
        <initializer>0x14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="83" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga613395de067a41462788324b7398920c" prot="public" static="no">
        <name>SDIO_REG_CCCR_DRV_STRENGTH</name>
        <initializer>0x15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="84" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf4f3427b62fd33b0aa95b77a0cdf49bd" prot="public" static="no">
        <name>SDIO_REG_CCCR_INT_EXT</name>
        <initializer>0x16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="85" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga6026202a6f455ddca0c83fd419c8940a" prot="public" static="no">
        <name>SDIO_REG_CCCR_START</name>
        <initializer><ref refid="group__hpm__sdmmc_1ga036f26e1570ee5f471a2ec1955a04b4b" kindref="member">SDIO_REG_CCCR_SDIO_REV</ref></initializer>
        <briefdescription>
<para>CCCR register range definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="90" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga72613ad12d3b2339735b6425a6507500" prot="public" static="no">
        <name>SDIO_REG_CCCR_END</name>
        <initializer><ref refid="group__hpm__sdmmc_1gaf4f3427b62fd33b0aa95b77a0cdf49bd" kindref="member">SDIO_REG_CCCR_INT_EXT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="91" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga14eeb0409335014e34514146584e4d3e" prot="public" static="no">
        <name>SDIO_REG_FBR_CIS_PTR_OFFSET</name>
        <initializer>0x9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="93" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gae91b2533ff0822bf4e22f9412305b02d" prot="public" static="no">
        <name>SDIO_REG_FBR_CSR_PTR_OFFSET</name>
        <initializer>0xC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="94" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga05d64639b41b22c571e26dc1e818bfd3" prot="public" static="no">
        <name>SDIO_REG_FBR_MAX_BLK_SIZE_OFFSET</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="95" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga63323d48f25522cf360323ea211adb8f" prot="public" static="no">
        <name>CISTPL_NULL</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>CISTPL type definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="100" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga8f83e4bdfc4ae662c4a952a307dbfc9d" prot="public" static="no">
        <name>CISTPL_CHECKSUM</name>
        <initializer>(0x10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="101" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga35ce88e01940df49789578a0a8a17d60" prot="public" static="no">
        <name>CISTPL_VERS_1</name>
        <initializer>(0x15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="102" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga371a087a67afaf0ce4f91fd2c46f50af" prot="public" static="no">
        <name>CISTPL_ALTSTR</name>
        <initializer>(0x16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="103" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga254d188fdc3d26e69e7a9cd16801bbb0" prot="public" static="no">
        <name>CISTPL_MANFID</name>
        <initializer>(0x20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="104" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gac0f38d2fc8e1f138fa9c6710d7bd47ae" prot="public" static="no">
        <name>CISTPL_FUNCID</name>
        <initializer>(0x21)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="105" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga99af349641e81e3aadae8c3d734bb411" prot="public" static="no">
        <name>CISTPL_FUNCE</name>
        <initializer>(0x22)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="106" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaca9f21c63eaacfe4b31a9fdbc36f0df9" prot="public" static="no">
        <name>CISTPL_SDIO_STD</name>
        <initializer>(0x91)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="107" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gac6484fa02370db96dfc8a1c3df02e5b7" prot="public" static="no">
        <name>CISTPL_SDIO_EXT</name>
        <initializer>(0x92)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="108" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gab55b15a6e3e612bbf7acf72c959acf83" prot="public" static="no">
        <name>CISTPL_END</name>
        <initializer>(0xFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="109" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaf465fbac6ca13cca1f862a2628f465c9" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_NON_STD</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Standard SDIO Function Interface Code Definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="324" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga61a0585680de0ace7fcaff3b093918da" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_UART</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="325" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga9bcbb9cec23088d0a5216cb5ec460a97" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_BT_TYPEA</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="326" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga208a5a7a5a01a7494bab756f4096f4e2" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_BT_TYPEB</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="327" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga03f6c3b35a734c22c6e35eb5949c8214" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_GPS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="328" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga66213ad9a9b04e2ecf24be996d0e5af8" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_CAMERA</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="329" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gacbecb036ef822150a8dd736fdf129f60" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_PHS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="330" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1gaa9f83ade34f0b3d288a5935f0b4a2538" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_WLAN</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="331" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga6e607f4bf5043081cb23d82f120e3fa5" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_ATA</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="332" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga4ceb5e9dc5be4efd02e30b8c247f6da6" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_BT_TYPEA_AMP</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="333" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga8d3ee5e0bc10964816bea09b59fe789c" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_ISDIO</name>
        <initializer>0xE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="334" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__hpm__sdmmc_1ga796b7ce65928f50df379079b373c9b0f" prot="public" static="no">
        <name>STD_SDIO_FUNC_IF_CODE_EXT_STD</name>
        <initializer>0xF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" line="335" column="9" bodyfile="middleware/hpm_sdmmc/lib/hpm_sdmmc_sdio.h" bodystart="335" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>HPM SDMMC common APIs. </para>
    </briefdescription>
    <detaileddescription>
<para>HPM SDMMC portable APIs.</para>
<para>HPM SDIO driver APIs.</para>
<para>HPM SDMMC SD driver APIs.</para>
<para>HPM SDMMC OSAL APIs.</para>
<para>HPM SDMMC Host APIs.</para>
<para>HPM SDMMC eMMC driver APIs.</para>
    </detaileddescription>
  </compounddef>
</doxygen>
