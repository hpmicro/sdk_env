<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__spi_8c" kind="file" language="C++">
    <compoundname>hpm_spi.c</compoundname>
    <includes refid="hpm__spi_8h" local="yes">hpm_spi.h</includes>
    <includes local="yes">hpm_clock_drv.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="17">
        <label>hpm_l1c_drv.h</label>
        <link refid="hpm__l1c__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>riscv/riscv_core.h</label>
        <link refid="riscv__core_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>components/spi/hpm_spi.c</label>
        <link refid="hpm__spi_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_spi.h</label>
        <link refid="hpm__spi_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>hpm_csr_drv.h</label>
        <link refid="hpm__csr__drv_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>hpm_dma_drv.h</label>
        <link refid="hpm__dma__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>hpm_dmamux_drv.h</label>
        <link refid="hpm__dmamux__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>hpm_spi_drv.h</label>
        <link refid="hpm__spi__drv_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="21">
        <label>hpm_clock_drv.h</label>
      </node>
      <node id="19">
        <label>hpm_csr_regs.h</label>
      </node>
      <node id="13">
        <label>hpm_dma_regs.h</label>
      </node>
      <node id="15">
        <label>hpm_dmamux_regs.h</label>
      </node>
      <node id="16">
        <label>hpm_misc.h</label>
      </node>
      <node id="11">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="10">
        <label>hpm_spi_regs.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structhpm__spi__cfg__t" prot="public">hpm_spi_cfg_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__spi_8c_1a5e4b0c6608be16eb8384956b18747c63" prot="public" static="no">
        <name>SPI_COMP_FREQUENCY_THRESHOLD</name>
        <initializer>(20000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="13" column="9" bodyfile="components/spi/hpm_spi.c" bodystart="13" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="hpm__spi_8c_1a490b5610e9a13d50598db0c79ae31942" prot="public" static="yes" mutable="no">
        <type><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref></type>
        <definition>hpm_spi_cfg_t spi_dma_cfg_table[]</definition>
        <argsstring>[]</argsstring>
        <name>spi_dma_cfg_table</name>
        <initializer>= {














































































































































}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="29" column="22" bodyfile="components/spi/hpm_spi.c" bodystart="29" bodyend="172"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__spi_8c_1a5f604d5e8b9460d57ac7c75bfda63954" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t hpm_spi_tx_trigger_dma</definition>
        <argsstring>(DMA_Type *dma_ptr, uint8_t ch_num, SPI_Type *spi_ptr, uint32_t src, uint8_t data_width, uint32_t size)</argsstring>
        <name>hpm_spi_tx_trigger_dma</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>dma_ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>spi_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="175" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="175" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a41f05bfb60621ec70e2c4617fad51e62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t hpm_spi_rx_trigger_dma</definition>
        <argsstring>(DMA_Type *dma_ptr, uint8_t ch_num, SPI_Type *spi_ptr, uint32_t dst, uint8_t data_width, uint32_t size)</argsstring>
        <name>hpm_spi_rx_trigger_dma</name>
        <param>
          <type><ref refid="structDMA__Type" kindref="compound">DMA_Type</ref> *</type>
          <declname>dma_ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ch_num</declname>
        </param>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>spi_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="191" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="191" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a37129783c0f842eeeeec03cc3f7606ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_spi_prepare_dma_tx_descriptors</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config, uint32_t trans_count, uint32_t *spi_transctrl, dma_linked_descriptor_t *tx_dma_descriptors)</argsstring>
        <name>hpm_spi_prepare_dma_tx_descriptors</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>trans_count</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>spi_transctrl</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref> *</type>
          <declname>tx_dma_descriptors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="208" column="6" bodyfile="components/spi/hpm_spi.c" bodystart="208" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a2e5d7249b950c35bb4977089081578f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_prepare_dma_rx_descriptors</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config, uint32_t trans_count, uint32_t *spi_transctrl, dma_linked_descriptor_t *rx_dma_descriptors)</argsstring>
        <name>hpm_prepare_dma_rx_descriptors</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>trans_count</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>spi_transctrl</declname>
        </param>
        <param>
          <type><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref> *</type>
          <declname>rx_dma_descriptors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="299" column="6" bodyfile="components/spi/hpm_spi.c" bodystart="299" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1aec968bcad19cbc6f8a264f9d73fb76b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hpm_spi_get_trans_count</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config)</argsstring>
        <name>hpm_spi_get_trans_count</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="380" column="17" bodyfile="components/spi/hpm_spi.c" bodystart="380" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a85b830edcd8505a0edf5c23daa800e50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t spi_setup_trans_with_dma_chain</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config)</argsstring>
        <name>spi_setup_trans_with_dma_chain</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>spi with dma chain workflow</para>
<para><orderedlist>
<listitem><para>call spi_setup_dma_transfer to config SPI for first transmission</para>
</listitem><listitem><para>execute data transmission phase in dma chain descriptor</para>
</listitem><listitem><para>execute setting SPI CTRL register phase in dma chain descriptor</para>
</listitem><listitem><para>execute writing SPI CMD register phase in dma chain descriptor</para>
</listitem><listitem><para>Repeat steps 2-4 until finish the transmission </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="408" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="408" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a8c0e01827231692b2548d401ad4ff4f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t spi_setup_trans_with_dma</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config)</argsstring>
        <name>spi_setup_trans_with_dma</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="487" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="487" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1aa5040a4e4d8a2e6010f213de252805e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_setup_dma_transfer</definition>
        <argsstring>(spi_context_t *context, spi_control_config_t *config)</argsstring>
        <name>hpm_spi_setup_dma_transfer</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>hpm_spi setup dma transfer </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if the transferred data count more than SPI_SOC_TRANSFER_COUNT_MAX, this API will using DMA chain descriptors to link SPI transmission.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the struct of &quot;spi_context_t&quot; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the struct of &quot;spi_control_config_t&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI transfers data successfully. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="533" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="533" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a7ffc36e67d61727ac713636186e72aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_release_gpio_cs</definition>
        <argsstring>(spi_context_t *context)</argsstring>
        <name>hpm_spi_release_gpio_cs</name>
        <param>
          <type><ref refid="structspi__context__t" kindref="compound">spi_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>hpm_spi releases gpio cs pin after SPI transfer completed </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the struct of &quot;spi_context_t&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>if SPI releases gpio cs pin successfully. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="581" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="581" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t wait_spi_slave_active</definition>
        <argsstring>(SPI_Type *ptr, bool active_status, uint32_t timeout)</argsstring>
        <name>wait_spi_slave_active</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>active_status</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="596" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="596" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref> *</type>
        <definition>static hpm_spi_cfg_t * hpm_spi_get_cfg_obj</definition>
        <argsstring>(SPI_Type *ptr)</argsstring>
        <name>hpm_spi_get_cfg_obj</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="608" column="22" bodyfile="components/spi/hpm_spi.c" bodystart="608" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t hpm_spi_transfer_init</definition>
        <argsstring>(SPI_Type *ptr, spi_trans_mode_t mode, uint32_t size)</argsstring>
        <name>hpm_spi_transfer_init</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__spi__interface_1gae719b4eb51210f7a6878861fcb374d15" kindref="member">spi_trans_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="621" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="621" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a7438a41884a3ffd603f034fd0404e9b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t write_read_data_together</definition>
        <argsstring>(SPI_Type *ptr, uint8_t data_len_in_bytes, uint8_t *wbuff, uint32_t wsize, uint8_t *rbuff, uint32_t rsize, uint32_t timeout)</argsstring>
        <name>write_read_data_together</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_len_in_bytes</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>wbuff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>wsize</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rbuff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="661" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="661" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a869304f8db280130d149920d5016d57b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t read_data_single</definition>
        <argsstring>(SPI_Type *ptr, uint8_t data_len_in_bytes, uint8_t *rbuff, uint32_t rsize, uint32_t timeout)</argsstring>
        <name>read_data_single</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_len_in_bytes</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rbuff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rsize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="723" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="723" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1ae04ab2239b211196e21848fb59592a69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t write_data_single</definition>
        <argsstring>(SPI_Type *ptr, uint8_t data_len_in_bytes, uint8_t *wbuff, uint32_t wsize, uint32_t timeout)</argsstring>
        <name>write_data_single</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>data_len_in_bytes</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>wbuff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>wsize</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="758" column="19" bodyfile="components/spi/hpm_spi.c" bodystart="758" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a92749b87848c44cdf2f7e05cd72baf13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpm_spi_get_default_init_config</definition>
        <argsstring>(spi_initialize_config_t *config)</argsstring>
        <name>hpm_spi_get_default_init_config</name>
        <param>
          <type><ref refid="structspi__initialize__config__t" kindref="compound">spi_initialize_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>spi get default init config </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>spi_init_config_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="794" column="6" bodyfile="components/spi/hpm_spi.c" bodystart="794" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a926606c43a217dca6c6afad012649427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_initialize</definition>
        <argsstring>(SPI_Type *ptr, spi_initialize_config_t *config)</argsstring>
        <name>hpm_spi_initialize</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structspi__initialize__config__t" kindref="compound">spi_initialize_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>initialize for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>spi_init_config_t struct </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="805" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="805" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a00ef064bb3d9b8e462cdf726af9c59a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_set_sclk_frequency</definition>
        <argsstring>(SPI_Type *ptr, uint32_t freq)</argsstring>
        <name>hpm_spi_set_sclk_frequency</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>set spi sclk frequency for spi master </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">freq</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sclk frequency </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="833" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="833" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a9a55e3ff764f95c85faa338092092f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_transmit_receive_blocking</definition>
        <argsstring>(SPI_Type *ptr, uint8_t *wbuff, uint8_t *rbuff, uint32_t size, uint32_t timeout)</argsstring>
        <name>hpm_spi_transmit_receive_blocking</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>wbuff</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rbuff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>transmit and receive block for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wbuff</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent data buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rbuff</parametername>
</parameternamelist>
<parameterdescription>
<para>spi receive data buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>wait time. unit is millisecond </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="932" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="932" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1aa9a47638d853a478222752ac26b04734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_receive_blocking</definition>
        <argsstring>(SPI_Type *ptr, uint8_t *buff, uint32_t size, uint32_t timeout)</argsstring>
        <name>hpm_spi_receive_blocking</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>receive block for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>spi receive data buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>wait time. unit is millisecond </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="980" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="980" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1a231f68025831b83e5309dc16e9dd7835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_transmit_blocking</definition>
        <argsstring>(SPI_Type *ptr, uint8_t *buff, uint32_t size, uint32_t timeout)</argsstring>
        <name>hpm_spi_transmit_blocking</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>transmit block for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent data buff address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>wait time. unit is millisecond </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="1016" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="1016" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1adaf0db9df572cb84e05ad13b23627521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_transmit_receive_setup_dma</definition>
        <argsstring>(SPI_Type *ptr, uint32_t size)</argsstring>
        <name>hpm_spi_transmit_receive_setup_dma</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>transmit and receive setup dma for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase. main configuration spi dma related, call this API after configuring DMA best</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi sent and receive data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="1063" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="1063" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1af51f2d625f9f8cabd4fa24da120d43a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_receive_setup_dma</definition>
        <argsstring>(SPI_Type *ptr, uint32_t size)</argsstring>
        <name>hpm_spi_receive_setup_dma</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>receive setup dma for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase. main configuration spi dma related, call this API after configuring DMA best</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi receive data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="1091" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="1091" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="hpm__spi_8c_1aed8707ac71bf311625d7eb709b18f20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t hpm_spi_transmit_setup_dma</definition>
        <argsstring>(SPI_Type *ptr, uint32_t size)</argsstring>
        <name>hpm_spi_transmit_setup_dma</name>
        <param>
          <type><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>transmit setup dma for spi </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it&apos;s no command/address/token phase, only data phase. main configuration spi dma related, call this API after configuring DMA best</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>SPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>spi transmit data count(word unit), not greater than SPI_SOC_TRANSFER_COUNT_MAX </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>status_success if spi in busy status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/spi/hpm_spi.c" line="1116" column="12" bodyfile="components/spi/hpm_spi.c" bodystart="1116" bodyend="1142"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2024<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__spi_8h" kindref="compound">hpm_spi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_clock_drv.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPI_COMP_FREQUENCY_THRESHOLD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPI_COMP_FREQUENCY_THRESHOLD<sp/><sp/>(20000000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structhpm__spi__cfg__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*<ref refid="structhpm__spi__cfg__t_1a25f60647ca111667b0f32106ea7615bd" kindref="member">spi_ptr</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a24298d5cfc4913a8c6970632ef6bc19f" kindref="member">clock_name_t</ref><sp/><ref refid="structhpm__spi__cfg__t_1acf0870f56cac3cce397714032abb5253" kindref="member">spi_clock_name</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tx_dmamux_src;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rx_dmamux_src;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>txdma_resource;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>rxdma_resource;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_dma_complete_cb<sp/>tx_dma_complete;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_dma_complete_cb<sp/>rx_dma_complete;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/><ref refid="hpm__spi_8c_1a490b5610e9a13d50598db0c79ae31942" kindref="member">spi_dma_cfg_table</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc_8h_1a1cead57562361f03d81b5385eca26213" kindref="member">HPM_SPI0</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a92e909b20463dc815128cc288b0a91db" kindref="member">clock_spi0</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1a665c47760ffad6a2b240ca6d0c4b1d9a" kindref="member">HPM_DMA_SRC_SPI0_TX</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1ae2e2ad9b36727d10e229fb3545de7b1e" kindref="member">HPM_DMA_SRC_SPI0_RX</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc_8h_1a58afd167a8ea58b8b415b82f4d2d224c" kindref="member">HPM_SPI1</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a7c32f3381cf7a52c82f7c472214adfa6" kindref="member">clock_spi1</ref>,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1ac9c5faf1aa7b44936027ce7b68fb2019" kindref="member">HPM_DMA_SRC_SPI1_TX</ref>,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1a04a7a90c4149919841c1fc7c9c164ffd" kindref="member">HPM_DMA_SRC_SPI1_RX</ref>,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc_8h_1a9221fd009e7acaeb12274aee882aba58" kindref="member">HPM_SPI2</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a3aceabcc2e36dc905c65e0f0548e6022" kindref="member">clock_spi2</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1a5f8b6b6c7e55dd2413f43086c1d7aee5" kindref="member">HPM_DMA_SRC_SPI2_TX</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1ad8c8808960b2bcfa88de6553b18e5cae" kindref="member">HPM_DMA_SRC_SPI2_RX</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc_8h_1af49408f033caffa7e63f273f46a54d2c" kindref="member">HPM_SPI3</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1ab606b0d23b4bfa58c2a22c21c29822db" kindref="member">clock_spi3</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1a4cc34fe3989ec74feab3032237d25c7e" kindref="member">HPM_DMA_SRC_SPI3_TX</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__dmamux__src_8h_1ac72e14c45e16cc3f916ffd6f0798760a" kindref="member">HPM_DMA_SRC_SPI3_RX</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__soc_8h_1a36e467ccd82723f5df1be3072f9a2e0c" kindref="member">HPM_SPI4</ref>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM6E00_2HPM6E80_2hpm__clock__drv_8h_1a2c9a07f4c89397bc50b795e7ec282d3e" kindref="member">clock_spi4</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a25cfbe6e5140430eca50fc5aabfcabf2" kindref="member">HPM_DMA_SRC_SPI4_TX</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a7c26c69075d92dbe49ba4840412bdc40" kindref="member">HPM_DMA_SRC_SPI4_RX</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__soc_8h_1aac93b9f9b69f4ca920fc1e6254395f05" kindref="member">HPM_SPI5</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM6E00_2HPM6E80_2hpm__clock__drv_8h_1a41cf631e40d81da4dfe142510947eae0" kindref="member">clock_spi5</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a7020de6d8285fcd7447e165c789e0b92" kindref="member">HPM_DMA_SRC_SPI5_TX</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a46c12812842c77c55b5e5580acb0137d" kindref="member">HPM_DMA_SRC_SPI5_RX</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__soc_8h_1a25074ebf7fec22bf71bf2b32e5927baf" kindref="member">HPM_SPI6</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM6E00_2HPM6E80_2hpm__clock__drv_8h_1a07de3fa07b6a31f07f6b7277a911340f" kindref="member">clock_spi6</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1ae159b079d93235502dcef0f542839852" kindref="member">HPM_DMA_SRC_SPI6_TX</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a25ecf1398a1bde7429e28cf9a5a5ae36" kindref="member">HPM_DMA_SRC_SPI6_RX</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__soc_8h_1aa550b911337cd6eefaa8a0aa3d9787a3" kindref="member">HPM_SPI7</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/><ref refid="HPM6E00_2HPM6E80_2hpm__clock__drv_8h_1a55e9053a4fa80ef64be4debf9280810a" kindref="member">clock_spi7</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a80f9b5c020fd9c281c982eda682bd1b6" kindref="member">HPM_DMA_SRC_SPI7_TX</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/><ref refid="HPM6E00_2HPM6E60_2hpm__dmamux__src_8h_1a543eabcc4ab3b9b3a54deb5876c11142" kindref="member">HPM_DMA_SRC_SPI7_RX</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/>HPM_SPI8,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/>clock_spi8,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI8_TX,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI8_RX,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/>HPM_SPI9,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/>clock_spi9,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI9_TX,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI9_RX,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_SPI10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_ptr<sp/>=<sp/>HPM_SPI10,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.spi_clock_name<sp/>=<sp/>clock_spi10,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI10_TX,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dmamux_src<sp/>=<sp/>HPM_DMA_SRC_SPI10_RX,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.tx_dma_complete<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a5f604d5e8b9460d57ac7c75bfda63954" kindref="member">hpm_spi_tx_trigger_dma</ref>(<ref refid="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" kindref="member">DMA_Type</ref><sp/>*dma_ptr,<sp/>uint8_t<sp/>ch_num,<sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*spi_ptr,<sp/>uint32_t<sp/>src,<sp/>uint8_t<sp/>data_width,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref><sp/>config;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga58b2a7329e217e39a5787efa41f33e3e" kindref="member">dma_default_handshake_config</ref>(dma_ptr,<sp/>&amp;config);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1aac5cbfdee49d393422457655c61af5fa" kindref="member">ch_index</ref><sp/>=<sp/>ch_num;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1a59a125f3cb57c7b31651a03d5194c821" kindref="member">dst</ref><sp/>=<sp/>(uint32_t)&amp;spi_ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>config.dst_fixed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>config.src<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>config.src_fixed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>config.data_width<sp/>=<sp/>data_width;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>config.size_in_byte<sp/>=<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__dma__interface_1gae3aa3d5d4812c36d6cbb138576053eb7" kindref="member">dma_setup_handshake</ref>(dma_ptr,<sp/>&amp;config,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a41f05bfb60621ec70e2c4617fad51e62" kindref="member">hpm_spi_rx_trigger_dma</ref>(<ref refid="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" kindref="member">DMA_Type</ref><sp/>*dma_ptr,<sp/>uint8_t<sp/>ch_num,<sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*spi_ptr,<sp/>uint32_t<sp/>dst,<sp/>uint8_t<sp/>data_width,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga6d6f4f5ff9740a0016f93c215a00d0bf" kindref="member">dma_handshake_config_t</ref><sp/>config;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga58b2a7329e217e39a5787efa41f33e3e" kindref="member">dma_default_handshake_config</ref>(dma_ptr,<sp/>&amp;config);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1aac5cbfdee49d393422457655c61af5fa" kindref="member">ch_index</ref><sp/>=<sp/>ch_num;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1a59a125f3cb57c7b31651a03d5194c821" kindref="member">dst</ref><sp/>=<sp/>dst;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1a267383e1d74800d3ba7bff7d9319059a" kindref="member">dst_fixed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>config.<ref refid="structdma__handshake__config_1ab768fb1619f65a9faf7da6a5bec1817c" kindref="member">src</ref><sp/>=<sp/>(uint32_t)&amp;spi_ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>config.src_fixed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>config.data_width<sp/>=<sp/>data_width;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>config.size_in_byte<sp/>=<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__dma__interface_1gae3aa3d5d4812c36d6cbb138576053eb7" kindref="member">dma_setup_handshake</ref>(dma_ptr,<sp/>&amp;config,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__spi_8c_1a37129783c0f842eeeeec03cc3f7606ca" kindref="member">hpm_spi_prepare_dma_tx_descriptors</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config,<sp/>uint32_t<sp/>trans_count,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*spi_transctrl,<sp/><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref><sp/>*tx_dma_descriptors)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dma_transfer_size[trans_count];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>per_trans_size<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dma_ch<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1aee93353471110d9fbd6cad5aed40b3ff" kindref="member">tx_dma_ch</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*tx_buff<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1ada4dbd11c7d2478716a0a9422d274b6a" kindref="member">tx_buff</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref><sp/>dma_ch_config;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>dummy_cmd<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp32;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_buff_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga68a6913c8d41fc26a2da98874833badd" kindref="member">dma_default_channel_config</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>trans_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_count<sp/>&gt;<sp/>per_trans_size)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>per_trans_size;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_count<sp/>-=<sp/>per_trans_size;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>tx_count;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(spi_transctrl<sp/>+<sp/>i)<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a13ac830907557dcdcd83cf7944173296" kindref="member">SPI_TRANSCTRL_TRANSMODE_SET</ref>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref><sp/>?</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref><sp/>:<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a081e29e57512423430de60a4073c9329" kindref="member">SPI_TRANSCTRL_DUALQUAD_SET</ref>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1ade270abbbcfe0810b2a0edd85cdd4233" kindref="member">data_phase_fmt</ref>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1acc151831597683d07ec6f62c91db7a83" kindref="member">SPI_TRANSCTRL_WRTRANCNT_SET</ref>(temp32<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1adfa3eaf5bb75d07238f13cd92fa06e1e" kindref="member">SPI_TRANSCTRL_RDTRANCNT_SET</ref>(temp32<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>count<sp/>of<sp/>data<sp/>transferred<sp/>by<sp/>dma<sp/>to<sp/>be<sp/>one<sp/>more<sp/>than<sp/>that<sp/>of<sp/>spi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>dma<sp/>transfer<sp/>finished,<sp/>there<sp/>are<sp/>data<sp/>in<sp/>SPI<sp/>fifo,<sp/>dma<sp/>should<sp/>not<sp/>execute<sp/>the<sp/>dma<sp/>descriptor<sp/>which<sp/>changes<sp/>SPI<sp/>CTRL<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>temp32<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>trans_count<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>temp32<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_transfer_size[i]<sp/>=<sp/>temp32;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>CTRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(spi_transctrl<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a0612770893dbcab8ecc643718417acbf" kindref="member">TRANSCTRL</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(tx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>tx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref>,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>CMD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;dummy_cmd);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(tx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>tx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>1,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>DATA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>dma_transfer_size[i]<sp/>&lt;&lt;<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(tx_buff<sp/>+<sp/>tx_buff_index));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>trans_count<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(tx_dma_descriptors<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref>));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>tx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>2,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_buff_index<sp/>+=<sp/>temp32<sp/>*<sp/>context-&gt;<ref refid="structspi__context__t_1a6cd551af075a3e57b01af674be35c730" kindref="member">data_len_in_byte</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__spi_8c_1a2e5d7249b950c35bb4977089081578f7" kindref="member">hpm_prepare_dma_rx_descriptors</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config,<sp/>uint32_t<sp/>trans_count,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*spi_transctrl,<sp/><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref><sp/>*rx_dma_descriptors)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dma_transfer_size[trans_count];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>per_trans_size<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dma_ch<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a9adb724e2d142430b7987e6db53eca38" kindref="member">rx_dma_ch</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*rx_buff<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref><sp/>dma_ch_config;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>dummy_cmd<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp32;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_buff_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga68a6913c8d41fc26a2da98874833badd" kindref="member">dma_default_channel_config</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>trans_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_count<sp/>&gt;<sp/>per_trans_size)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>per_trans_size;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_count<sp/>-=<sp/>per_trans_size;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp32<sp/>=<sp/>rx_count;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(spi_transctrl<sp/>+<sp/>i)<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a13ac830907557dcdcd83cf7944173296" kindref="member">SPI_TRANSCTRL_TRANSMODE_SET</ref>(<ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref>)<sp/>|</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a081e29e57512423430de60a4073c9329" kindref="member">SPI_TRANSCTRL_DUALQUAD_SET</ref>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1ade270abbbcfe0810b2a0edd85cdd4233" kindref="member">data_phase_fmt</ref>)<sp/>|</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1acc151831597683d07ec6f62c91db7a83" kindref="member">SPI_TRANSCTRL_WRTRANCNT_SET</ref>(temp32<sp/>-<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1adfa3eaf5bb75d07238f13cd92fa06e1e" kindref="member">SPI_TRANSCTRL_RDTRANCNT_SET</ref>(temp32<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_transfer_size[i]<sp/>=<sp/>temp32;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>CTRL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(spi_transctrl<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a0612770893dbcab8ecc643718417acbf" kindref="member">TRANSCTRL</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(rx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>rx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref>,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>CMD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;dummy_cmd);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1gae10dd77aadcab9f6cbad1e9f431c4b35" kindref="member">DMA_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(rx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>rx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>1,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>DATA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>dma_transfer_size[i]<sp/>&lt;&lt;<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(rx_buff<sp/>+<sp/>rx_buff_index));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a72a8a4710ccb94a1a40c40a7d940415d" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga118bec6d1d493e9cefc5022575d76675" kindref="member">DMA_HANDSHAKE_MODE_HANDSHAKE</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aba4e194bd2d515fd5eb21f1fcd23d570" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="group__dma__interface_1gaf99b37b0d669fbde75576b5d6c5dc82f" kindref="member">DMA_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9ac6d6dbb0fbd143fab5f0e587380a19" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gadec283cc248f55399685c1f27b2bcc08" kindref="member">DMA_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a32da0a6928757a89be43722aaba86598" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="group__dma__interface_1gac26c5a0b3cb46ddddc026ca3123c893f" kindref="member">DMA_ADDRESS_CONTROL_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>trans_count<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(rx_dma_descriptors<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref>));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga34614c9ae36c862cd152aa51068e2082" kindref="member">dma_config_linked_descriptor</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>rx_dma_descriptors<sp/>+<sp/>i<sp/>*<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>+<sp/>2,<sp/>dma_ch,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_buff_index<sp/>+=<sp/>temp32<sp/>*<sp/>context-&gt;<ref refid="structspi__context__t_1a6cd551af075a3e57b01af674be35c730" kindref="member">data_len_in_byte</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="hpm__spi_8c_1aec968bcad19cbc6f8a264f9d73fb76b3" kindref="member">hpm_spi_get_trans_count</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>total_trans_count,<sp/>per_trans_count,<sp/>trans_count;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>per_trans_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a19c72838dd5f1436b0d12764565d1f23" kindref="member">spi_trans_dummy_write</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_trans_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a938f0767762b6a2f353bb987314826c5" kindref="member">spi_trans_dummy_read</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_trans_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>read<sp/>together<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref><sp/>==<sp/>context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_trans_count<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>trans_count<sp/>=<sp/>(total_trans_count<sp/>+<sp/>per_trans_count<sp/>-<sp/>1)<sp/>/<sp/>per_trans_count;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trans_count;</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a85b830edcd8505a0edf5c23daa800e50" kindref="member">spi_setup_trans_with_dma_chain</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*spi_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" kindref="member">DMA_Type</ref><sp/>*dma_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDMAMUX__Type" kindref="compound">DMAMUX_Type</ref><sp/>*dmamux_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a14b616bd7dcdbc12733bbef81b374bd6" kindref="member">dmamux_ptr</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga6978af946aa984b0e6e73e14061b0dfa" kindref="member">dma_linked_descriptor_t</ref><sp/>*<ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref><sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a1d306eaa8261c3a261dfd50feb7b1155" kindref="member">dma_linked_descriptor</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*spi_transctrl<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a2135f987d871715089da5e363986348e" kindref="member">spi_transctrl</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dma_channel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>trans_count;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga96b9a1318af382070de60d3ac3b6bedd" kindref="member">dma_channel_config_t</ref><sp/>dma_ch_config<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>a<sp/>dummy<sp/>dma<sp/>transfer<sp/>to<sp/>start<sp/>SPI<sp/>trans<sp/>dma<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>dummy_data1<sp/>=<sp/>0xff,<sp/>dummy_data2<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>trans_count<sp/>=<sp/><ref refid="hpm__spi_8c_1aec968bcad19cbc6f8a264f9d73fb76b3" kindref="member">hpm_spi_get_trans_count</ref>(context,<sp/>config);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>active<sp/>spi<sp/>cs<sp/>pin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref>(context-&gt;<ref refid="structspi__context__t_1abb2a09bc6e322f4076ffecf73b6a70d1" kindref="member">cs_pin</ref>,<sp/><ref refid="hpm__spi_8h_1a3bfce6edc450d433df797c134fb21528" kindref="member">SPI_CS_ACTIVE</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>config<sp/>SPI<sp/>for<sp/>first<sp/>dma<sp/>transmission<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__spi__interface_1ga302f08c4fb52f1c0ac5049b2b91a8d87" kindref="member">spi_setup_dma_transfer</ref>(spi_ptr,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;context-&gt;<ref refid="structspi__context__t_1aedfe9bf2c53a95234b833c353e814ef4" kindref="member">cmd</ref>,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;context-&gt;<ref refid="structspi__context__t_1ab15b64e749612bddb455e573c21eb76b" kindref="member">addr</ref>,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>));</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a19c72838dd5f1436b0d12764565d1f23" kindref="member">spi_trans_dummy_write</ref>)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__spi_8c_1a37129783c0f842eeeeec03cc3f7606ca" kindref="member">hpm_spi_prepare_dma_tx_descriptors</ref>(context,<sp/>config,<sp/>trans_count,<sp/>spi_transctrl,<sp/><ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_channel<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1aee93353471110d9fbd6cad5aed40b3ff" kindref="member">tx_dma_ch</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a2f89e5926d0822a72d4a2c6623896872" kindref="member">tx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1af8924375f4c2e47be5f1a2b0dcecc65f" kindref="member">tx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a938f0767762b6a2f353bb987314826c5" kindref="member">spi_trans_dummy_read</ref>)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__spi_8c_1a2e5d7249b950c35bb4977089081578f7" kindref="member">hpm_prepare_dma_rx_descriptors</ref>(context,<sp/>config,<sp/>trans_count,<sp/>spi_transctrl,<sp/><ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_channel<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a9adb724e2d142430b7987e6db53eca38" kindref="member">rx_dma_ch</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a8bb78488bae5dabd2b73a2ea88eb525c" kindref="member">rx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a41344a054c90d92301225300ed54a89a" kindref="member">rx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>and<sp/>read<sp/>together<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__spi_8c_1a37129783c0f842eeeeec03cc3f7606ca" kindref="member">hpm_spi_prepare_dma_tx_descriptors</ref>(context,<sp/>config,<sp/>trans_count,<sp/>spi_transctrl,<sp/><ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dma_channel<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1aee93353471110d9fbd6cad5aed40b3ff" kindref="member">tx_dma_ch</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a2f89e5926d0822a72d4a2c6623896872" kindref="member">tx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1af8924375f4c2e47be5f1a2b0dcecc65f" kindref="member">tx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a8bb78488bae5dabd2b73a2ea88eb525c" kindref="member">rx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a41344a054c90d92301225300ed54a89a" kindref="member">rx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>tx<sp/>use<sp/>chained<sp/>dma<sp/>descriptor,<sp/>spi<sp/>rx<sp/>use<sp/>unchained<sp/>dma<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a41f05bfb60621ec70e2c4617fad51e62" kindref="member">hpm_spi_rx_trigger_dma</ref>(dma_ptr,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a9adb724e2d142430b7987e6db53eca38" kindref="member">rx_dma_ch</ref>,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_ptr,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref>),</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a5d86804ca3e61c2e9a7b54fe56eb0cf1" kindref="member">rx_size</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1ga68a6913c8d41fc26a2da98874833badd" kindref="member">dma_default_channel_config</ref>(context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>,<sp/>&amp;dma_ch_config);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a6ea3c68e5abe00f23dfb6619dc7f522e" kindref="member">src_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;dummy_data1);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a61573001cee2cf4c07fafa82008376a9" kindref="member">dst_addr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)&amp;dummy_data2);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a8f39273df46e8b495b02fa3f2970b3c6" kindref="member">src_burst_size</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga4c2aae66f2ff42fd7b2b843845ea53a3" kindref="member">DMA_NUM_TRANSFER_PER_BURST_1T</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aa624d53a8b5cc9e855c680df10a79800" kindref="member">src_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1aeb58ed3b8d289bda735d3ce3e63db0d0" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="group__dma__interface_1ga7db07dc846a74e39a65b18996961eae2" kindref="member">DMA_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a9c26d92bb6bc973c8da648515ea2a879" kindref="member">size_in_byte</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>data<sp/>transmission<sp/>phase<sp/>in<sp/>dma<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>dma_ch_config.<ref refid="structdma__channel__config_1a30d87b0f09b2ee86ea52bcfdc9ee0c89" kindref="member">linked_ptr</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)(<ref refid="structdma__linked__descriptor" kindref="compound">dma_linked_descriptor</ref><sp/>+<sp/><ref refid="hpm__spi_8h_1a7a474e427eb0f84beb8d74c8f7880e61" kindref="member">SPI_DMA_DESC_COUNT_PER_TRANS</ref><sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__dma__interface_1ga4e06185c6cfab347b9bde8032bae380c" kindref="member">dma_setup_channel</ref>(dma_ptr,<sp/>dma_channel,<sp/>&amp;dma_ch_config,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a8c0e01827231692b2548d401ad4ff4f1" kindref="member">spi_setup_trans_with_dma</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*spi_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" kindref="member">DMA_Type</ref><sp/>*dma_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a5771c065bf3808b0498b98a09d8939bd" kindref="member">dma_ptr</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDMAMUX__Type" kindref="compound">DMAMUX_Type</ref><sp/>*dmamux_ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a14b616bd7dcdbc12733bbef81b374bd6" kindref="member">dmamux_ptr</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>trans_mode<sp/>=<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref>(context-&gt;<ref refid="structspi__context__t_1abb2a09bc6e322f4076ffecf73b6a70d1" kindref="member">cs_pin</ref>,<sp/><ref refid="hpm__spi_8h_1a3bfce6edc450d433df797c134fb21528" kindref="member">SPI_CS_ACTIVE</ref>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__spi__interface_1ga302f08c4fb52f1c0ac5049b2b91a8d87" kindref="member">spi_setup_dma_transfer</ref>(spi_ptr,<sp/>config,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;context-&gt;<ref refid="structspi__context__t_1aedfe9bf2c53a95234b833c353e814ef4" kindref="member">cmd</ref>,<sp/>&amp;context-&gt;<ref refid="structspi__context__t_1ab15b64e749612bddb455e573c21eb76b" kindref="member">addr</ref>,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref><sp/>&amp;&amp;<sp/>trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a19c72838dd5f1436b0d12764565d1f23" kindref="member">spi_trans_dummy_write</ref><sp/>&amp;&amp;<sp/>trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15aacc4a2b50914746ead941136d219909d" kindref="member">spi_trans_no_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a8bb78488bae5dabd2b73a2ea88eb525c" kindref="member">rx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a41344a054c90d92301225300ed54a89a" kindref="member">rx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a41f05bfb60621ec70e2c4617fad51e62" kindref="member">hpm_spi_rx_trigger_dma</ref>(dma_ptr,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a9adb724e2d142430b7987e6db53eca38" kindref="member">rx_dma_ch</ref>,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_ptr,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref>),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a5d86804ca3e61c2e9a7b54fe56eb0cf1" kindref="member">rx_size</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref><sp/>&amp;&amp;<sp/>trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a938f0767762b6a2f353bb987314826c5" kindref="member">spi_trans_dummy_read</ref><sp/>&amp;&amp;<sp/>trans_mode<sp/>!=<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15aacc4a2b50914746ead941136d219909d" kindref="member">spi_trans_no_data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__dmamux__interface_1gae3bdf4ad2783b4484cfcf4c96c8cd124" kindref="member">dmamux_config</ref>(dmamux_ptr,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a2f89e5926d0822a72d4a2c6623896872" kindref="member">tx_dmamux_ch</ref>,<sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1af8924375f4c2e47be5f1a2b0dcecc65f" kindref="member">tx_req</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a5f604d5e8b9460d57ac7c75bfda63954" kindref="member">hpm_spi_tx_trigger_dma</ref>(dma_ptr,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1aee93353471110d9fbd6cad5aed40b3ff" kindref="member">tx_dma_ch</ref>,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spi_ptr,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(context-&gt;<ref refid="structspi__context__t_1a64ffebc0d2f1026098f2dd50e40a331b" kindref="member">running_core</ref>,<sp/>(uint32_t)context-&gt;<ref refid="structspi__context__t_1ada4dbd11c7d2478716a0a9422d274b6a" kindref="member">tx_buff</ref>),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref>.<ref refid="structspi__dma__context__t_1a4371c508d5e2482868381ca603adb223" kindref="member">data_width</ref>,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1a612a828ae8c3e7c5aa92ae7594ba8c30" kindref="member">tx_size</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1aa5040a4e4d8a2e6010f213de252805e8" kindref="member">hpm_spi_setup_dma_transfer</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context,<sp/><ref refid="structspi__control__config__t" kindref="compound">spi_control_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context<sp/>!=<sp/>NULL<sp/>||<sp/>config<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>dma<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(&amp;context-&gt;<ref refid="structspi__context__t_1a22c48ae3d492e39281aac16e101aca87" kindref="member">dma_context</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>per<sp/>trans<sp/>data<sp/>size<sp/>not<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__l1cache__interface_1ga6b3c1ed19b34e78698fc0c0a0ae84a87" kindref="member">l1c_dc_is_enabled</ref>())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache<sp/>writeback<sp/>for<sp/>tx<sp/>buff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;<ref refid="structspi__context__t_1ada4dbd11c7d2478716a0a9422d274b6a" kindref="member">tx_buff</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>context-&gt;<ref refid="structspi__context__t_1a612a828ae8c3e7c5aa92ae7594ba8c30" kindref="member">tx_size</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_start<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3053dfee4086a6092816983a53393cca" kindref="member">HPM_L1C_CACHELINE_ALIGN_DOWN</ref>((uint32_t)context-&gt;<ref refid="structspi__context__t_1ada4dbd11c7d2478716a0a9422d274b6a" kindref="member">tx_buff</ref>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_end<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a7e795aefe75dc25f3883818c735d7b00" kindref="member">HPM_L1C_CACHELINE_ALIGN_UP</ref>((uint32_t)context-&gt;<ref refid="structspi__context__t_1ada4dbd11c7d2478716a0a9422d274b6a" kindref="member">tx_buff</ref><sp/>+<sp/>context-&gt;<ref refid="structspi__context__t_1a612a828ae8c3e7c5aa92ae7594ba8c30" kindref="member">tx_size</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_size<sp/>=<sp/>aligned_end<sp/>-<sp/>aligned_start;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__l1cache__interface_1gac0443f752d550f9c890709703a83b41f" kindref="member">l1c_dc_writeback</ref>(aligned_start,<sp/>aligned_size);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cache<sp/>invalidate<sp/>for<sp/>receive<sp/>buff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>context-&gt;<ref refid="structspi__context__t_1a5d86804ca3e61c2e9a7b54fe56eb0cf1" kindref="member">rx_size</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_start<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3053dfee4086a6092816983a53393cca" kindref="member">HPM_L1C_CACHELINE_ALIGN_DOWN</ref>((uint32_t)context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_end<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a7e795aefe75dc25f3883818c735d7b00" kindref="member">HPM_L1C_CACHELINE_ALIGN_UP</ref>((uint32_t)context-&gt;<ref refid="structspi__context__t_1a2e4eb93158844c83d2ac49f9df5e97e8" kindref="member">rx_buff</ref><sp/>+<sp/>context-&gt;<ref refid="structspi__context__t_1a5d86804ca3e61c2e9a7b54fe56eb0cf1" kindref="member">rx_size</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>aligned_size<sp/>=<sp/>aligned_end<sp/>-<sp/>aligned_start;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__l1cache__interface_1gad211f4a8e8d756b6b92977d208f8e5de" kindref="member">l1c_dc_invalidate</ref>(aligned_start,<sp/>aligned_size);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((context-&gt;<ref refid="structspi__context__t_1a0bef4c2989cce6565f9b0a6f12f45935" kindref="member">rx_count</ref><sp/>&gt;<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>)<sp/>||<sp/>(context-&gt;<ref refid="structspi__context__t_1acd813ecf4960a163dd5c72b6125491a1" kindref="member">tx_count</ref><sp/>&gt;<sp/>context-&gt;<ref refid="structspi__context__t_1a7afa1bfd3d6fbec4b43a0ca44561ae61" kindref="member">per_trans_max</ref>))<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>multiple<sp/>SPI<sp/>transmissions<sp/>with<sp/>chained<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a938f0767762b6a2f353bb987314826c5" kindref="member">spi_trans_dummy_read</ref></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a19c72838dd5f1436b0d12764565d1f23" kindref="member">spi_trans_dummy_write</ref></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>config-&gt;<ref refid="structspi__control__config__t_1ad808dc64b56fca1e62005aaaf8618b70" kindref="member">common_config</ref>.<ref refid="structspi__common__control__config__t_1adfca7e744e0d44634d9b38f7be284058" kindref="member">trans_mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>master<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert((context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a8f434f7b57aa9d147799e51facde44db" kindref="member">SPI_TRANSFMT_SLVMODE_MASK</ref>)<sp/>!=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a8f434f7b57aa9d147799e51facde44db" kindref="member">SPI_TRANSFMT_SLVMODE_MASK</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GPIO<sp/>should<sp/>be<sp/>used<sp/>to<sp/>replace<sp/>SPI<sp/>CS<sp/>pin<sp/>for<sp/>SPI<sp/>chained<sp/>DMA<sp/>transmissions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a85b830edcd8505a0edf5c23daa800e50" kindref="member">spi_setup_trans_with_dma_chain</ref>(context,<sp/>config);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>SPI<sp/>transmissions<sp/>with<sp/>chained<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a8c0e01827231692b2548d401ad4ff4f1" kindref="member">spi_setup_trans_with_dma</ref>(context,<sp/>config);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Using<sp/>GPIO<sp/>as<sp/>SPI<sp/>CS<sp/>pin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>SPI<sp/>trans<sp/>completed,<sp/>GPIO<sp/>cs<sp/>pin<sp/>should<sp/>be<sp/>released<sp/>manually<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a7ffc36e67d61727ac713636186e72aaf" kindref="member">hpm_spi_release_gpio_cs</ref>(<ref refid="structspi__context__t" kindref="compound">spi_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr<sp/>=<sp/>context-&gt;<ref refid="structspi__context__t_1a30ddfb493782c22a50eefdfa1b95f4c1" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__spi__interface_1ga0bd47db6a31f4592c25b0b0ce4d26635" kindref="member">spi_wait_for_idle_status</ref>(ptr);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>!=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structspi__context__t_1aa712a90382312565e8542312411999de" kindref="member">write_cs</ref>(context-&gt;<ref refid="structspi__context__t_1abb2a09bc6e322f4076ffecf73b6a70d1" kindref="member">cs_pin</ref>,<sp/>!<ref refid="hpm__spi_8h_1a3bfce6edc450d433df797c134fb21528" kindref="member">SPI_CS_ACTIVE</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active_status,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ticks_per_us<sp/>=<sp/><ref refid="group__clock__interface_1gab66c8cf6ac649dc572308c55a7467424" kindref="member">clock_get_core_clock_ticks_per_us</ref>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>expected_ticks<sp/>=<sp/><ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>+<sp/>(uint64_t)ticks_per_us<sp/>*<sp/>1000UL<sp/>*<sp/>timeout;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__spi__interface_1ga0043a6affc864f586ce9a91b3725ce66" kindref="member">spi_is_active</ref>(ptr)<sp/>!=<sp/>active_status)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>&gt;<sp/>expected_ticks)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*<ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="hpm__spi_8c_1a490b5610e9a13d50598db0c79ae31942" kindref="member">spi_dma_cfg_table</ref>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref>));<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>&amp;<ref refid="hpm__spi_8c_1a490b5610e9a13d50598db0c79ae31942" kindref="member">spi_dma_cfg_table</ref>[i];</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj-&gt;<ref refid="structhpm__spi__cfg__t_1a25f60647ca111667b0f32106ea7615bd" kindref="member">spi_ptr</ref><sp/>==<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/><ref refid="group__spi__interface_1gae719b4eb51210f7a6878861fcb374d15" kindref="member">spi_trans_mode_t</ref><sp/>mode,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>slv_mode<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gafff636ea73cfd28e417690fcfcacc5f9" kindref="member">spi_data_phase_format_t</ref><sp/>data_phase<sp/>=<sp/>(<ref refid="group__spi__interface_1gafff636ea73cfd28e417690fcfcacc5f9" kindref="member">spi_data_phase_format_t</ref>)<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1ab1c9e29317b680134d2b420db8e55b9f" kindref="member">SPI_TRANSCTRL_DUALQUAD_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a0612770893dbcab8ecc643718417acbf" kindref="member">TRANSCTRL</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>slave<sp/>is<sp/>not<sp/>support<sp/>dspi<sp/>and<sp/>qspi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((slv_mode<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3ea6d237dd86032fe3495c45320e9ba4afb" kindref="member">spi_slave_mode</ref>)<sp/>&amp;&amp;<sp/>(data_phase<sp/>!=<sp/><ref refid="group__spi__interface_1ggafff636ea73cfd28e417690fcfcacc5f9afa1be05243c70c676721e8d938096115" kindref="member">spi_single_io_mode</ref>))<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slv_mode<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__spi__interface_1ga0043a6affc864f586ce9a91b3725ce66" kindref="member">spi_is_active</ref>(ptr)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__spi__interface_1ggaaa9607bf535272bd730af073728be224a2d497018c6ac935d124ce6c3a3eb4ec0" kindref="member">status_spi_master_busy</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gaeea2c67df32555cb1d06cd59a9cdce75" kindref="member">spi_set_transfer_mode</ref>(ptr,<sp/>mode);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>slave<sp/>mode,<sp/>only<sp/>support<sp/>trans_write_read_together<sp/>mode<sp/>in<sp/>only_data_mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gaeea2c67df32555cb1d06cd59a9cdce75" kindref="member">spi_set_transfer_mode</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mode<sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>)<sp/>||<sp/>(slv_mode<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3ea6d237dd86032fe3495c45320e9ba4afb" kindref="member">spi_slave_mode</ref>))<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga64c2e39fd9475ae8c63c53b7b6525996" kindref="member">spi_set_write_data_count</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga69f5bef4180ac170d76f93210b0a73a5" kindref="member">spi_set_read_data_count</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref>)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga64c2e39fd9475ae8c63c53b7b6525996" kindref="member">spi_set_write_data_count</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga69f5bef4180ac170d76f93210b0a73a5" kindref="member">spi_set_read_data_count</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>new<sp/>transmission,<sp/>reset<sp/>spi<sp/>for<sp/>slave*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slv_mode<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3ea6d237dd86032fe3495c45320e9ba4afb" kindref="member">spi_slave_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga612e862742c37a8fb24d804f27d25c36" kindref="member">spi_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga5c26a576ac4ad1c200f61bcdef602be7" kindref="member">spi_transmit_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga9f13297d81585c938533cce5a246d163" kindref="member">spi_receive_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr-&gt;<ref refid="structSPI__Type_1a62780ecb289cdd6e93a947ffdd3ebfef" kindref="member">CTRL</ref><sp/>&amp;<sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a3f4b69860aaac73b7949433067ebe178" kindref="member">SPI_CTRL_TXFIFORST_MASK</ref><sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a324e23ccc3db421cd234be39c20444db" kindref="member">SPI_CTRL_RXFIFORST_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a7438a41884a3ffd603f034fd0404e9b8" kindref="member">write_read_data_together</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>data_len_in_bytes,<sp/>uint8_t<sp/>*wbuff,<sp/>uint32_t<sp/>wsize,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*rbuff,<sp/>uint32_t<sp/>rsize,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>txfifo_size<sp/>=<sp/><ref refid="group__spi__interface_1gac7530cb52d282a0f587dcaf0cc13aa78" kindref="member">spi_get_tx_fifo_size</ref>(ptr);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_index<sp/>=<sp/>0,<sp/>tx_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rxfifo_valid_size,<sp/>txfifo_valid_size,<sp/>j;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ticks_per_us<sp/>=<sp/><ref refid="group__clock__interface_1gab66c8cf6ac649dc572308c55a7467424" kindref="member">clock_get_core_clock_ticks_per_us</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>expected_ticks<sp/>=<sp/><ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>+<sp/>(uint64_t)ticks_per_us<sp/>*<sp/>1000UL<sp/>*<sp/>timeout;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((rx_index<sp/>&lt;<sp/>rsize)<sp/>||<sp/>(tx_index<sp/>&lt;<sp/>wsize))<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_index<sp/>&lt;<sp/>wsize)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txfifo_valid_size<sp/>=<sp/><ref refid="group__spi__interface_1ga018f780445a809c06c0079f56b4917c5" kindref="member">spi_get_tx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((txfifo_size<sp/>-<sp/>txfifo_valid_size)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(txfifo_size<sp/>-<sp/>txfifo_valid_size);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_index<sp/>&gt;=<sp/>wsize)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_len_in_bytes)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint8_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint16_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint32_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wbuff<sp/>+=<sp/>data_len_in_bytes;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_index++;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_index<sp/>&lt;<sp/>rsize)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_valid_size<sp/>=<sp/><ref refid="group__spi__interface_1ga84886a9846cb90b103a964b3e21f758b" kindref="member">spi_get_rx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rxfifo_valid_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>rxfifo_valid_size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_index<sp/>&gt;=<sp/>rsize)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_len_in_bytes)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint8_t<sp/>*)rbuff<sp/>=<sp/>(uint8_t)ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint16_t<sp/>*)rbuff<sp/>=<sp/>(uint16_t)ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)rbuff<sp/>=<sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rbuff<sp/>+=<sp/>data_len_in_bytes;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_index++;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>&gt;<sp/>expected_ticks)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a869304f8db280130d149920d5016d57b" kindref="member">read_data_single</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>data_len_in_bytes,<sp/>uint8_t<sp/>*rbuff,<sp/>uint32_t<sp/>rsize,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rxfifo_valid_size,<sp/>j;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ticks_per_us<sp/>=<sp/><ref refid="group__clock__interface_1gab66c8cf6ac649dc572308c55a7467424" kindref="member">clock_get_core_clock_ticks_per_us</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>expected_ticks<sp/>=<sp/><ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>+<sp/>(uint64_t)ticks_per_us<sp/>*<sp/>1000UL<sp/>*<sp/>timeout;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rx_index<sp/>&lt;<sp/>rsize)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifo_valid_size<sp/>=<sp/><ref refid="group__spi__interface_1ga84886a9846cb90b103a964b3e21f758b" kindref="member">spi_get_rx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rxfifo_valid_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>rxfifo_valid_size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rx_index<sp/>&gt;=<sp/>rsize)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_len_in_bytes)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint8_t<sp/>*)rbuff<sp/>=<sp/>(uint8_t)ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint16_t<sp/>*)rbuff<sp/>=<sp/>(uint16_t)ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint32_t<sp/>*)rbuff<sp/>=<sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rbuff<sp/>+=<sp/>data_len_in_bytes;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_index++;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>&gt;<sp/>expected_ticks)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1ae04ab2239b211196e21848fb59592a69" kindref="member">write_data_single</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>data_len_in_bytes,<sp/>uint8_t<sp/>*wbuff,<sp/>uint32_t<sp/>wsize,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>txfifo_size<sp/>=<sp/><ref refid="group__spi__interface_1gac7530cb52d282a0f587dcaf0cc13aa78" kindref="member">spi_get_tx_fifo_size</ref>(ptr);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>txfifo_valid_size,<sp/>j;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ticks_per_us<sp/>=<sp/><ref refid="group__clock__interface_1gab66c8cf6ac649dc572308c55a7467424" kindref="member">clock_get_core_clock_ticks_per_us</ref>();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>expected_ticks<sp/>=<sp/><ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>+<sp/>(uint64_t)ticks_per_us<sp/>*<sp/>1000UL<sp/>*<sp/>timeout;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tx_index<sp/>&lt;<sp/>wsize)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txfifo_valid_size<sp/>=<sp/><ref refid="group__spi__interface_1ga018f780445a809c06c0079f56b4917c5" kindref="member">spi_get_tx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((txfifo_size<sp/>-<sp/>txfifo_valid_size)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(txfifo_size<sp/>-<sp/>txfifo_valid_size);<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tx_index<sp/>&gt;=<sp/>wsize)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_len_in_bytes)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint8_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint16_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>*(uint32_t<sp/>*)wbuff;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wbuff<sp/>+=<sp/>data_len_in_bytes;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_index++;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__csr__interface_1gadd6bea98cfd952f51d4829277c8c967d" kindref="member">hpm_csr_get_core_cycle</ref>()<sp/>&gt;<sp/>expected_ticks)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa19319d05fb8a35cc93f77e40e06b9617" kindref="member">status_timeout</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__spi_8c_1a92749b87848c44cdf2f7e05cd72baf13" kindref="member">hpm_spi_get_default_init_config</ref>(<ref refid="structspi__initialize__config__t" kindref="compound">spi_initialize_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1a36024fa308c25c04377cd1f45873d1a5" kindref="member">mode</ref><sp/>=<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1a821308e984e195aa037f778b54c64b32" kindref="member">io_mode</ref><sp/>=<sp/><ref refid="group__spi__interface_1ggafff636ea73cfd28e417690fcfcacc5f9afa1be05243c70c676721e8d938096115" kindref="member">spi_single_io_mode</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1af647f14f4f4721f8375d67ea0aaee5b7" kindref="member">clk_polarity</ref><sp/>=<sp/><ref refid="group__spi__interface_1ggaa216e00c4ce27ab3897a36c72e617968a6a05e63978b1c909f29fcd9e0afe2739" kindref="member">spi_sclk_low_idle</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1a3846994ed05be651c5f0e3f3284e6e5b" kindref="member">clk_phase</ref><sp/>=<sp/><ref refid="group__spi__interface_1ggab063d70616d6d55c73b01e9a1d2fb162adfa02e88e6f8e2e588681d72e7ec0740" kindref="member">spi_sclk_sampling_odd_clk_edges</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1ae4d480b562f4e14812815edd0c65c052" kindref="member">data_len</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1a730b2dc871550aee1cbc0b1f08759579" kindref="member">data_merge</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>config-&gt;<ref refid="structspi__initialize__config__t_1a6c638f1ccc49b4a5473f26259fadeaea" kindref="member">direction</ref><sp/>=<sp/><ref refid="group__spi__interface_1ggaa68518c16202382c2e1f1c7c66a9d53dac8c28b25e0dd1ca37ffe2a9fcb691550" kindref="member">spi_msb_first</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a926606c43a217dca6c6afad012649427" kindref="member">hpm_spi_initialize</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/><ref refid="structspi__initialize__config__t" kindref="compound">spi_initialize_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>slave<sp/>is<sp/>not<sp/>support<sp/>dspi<sp/>and<sp/>qspi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((config-&gt;<ref refid="structspi__initialize__config__t_1ae4d480b562f4e14812815edd0c65c052" kindref="member">data_len</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((config-&gt;<ref refid="structspi__initialize__config__t_1a36024fa308c25c04377cd1f45873d1a5" kindref="member">mode</ref><sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3ea6d237dd86032fe3495c45320e9ba4afb" kindref="member">spi_slave_mode</ref>)<sp/>&amp;&amp;<sp/>(config-&gt;<ref refid="structspi__initialize__config__t_1a821308e984e195aa037f778b54c64b32" kindref="member">io_mode</ref><sp/>!=<sp/><ref refid="group__spi__interface_1ggafff636ea73cfd28e417690fcfcacc5f9afa1be05243c70c676721e8d938096115" kindref="member">spi_single_io_mode</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frist<sp/>init<sp/>TRANSFMT<sp/>reg*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a822b5648b67d63d5c9e80263844bb450" kindref="member">SPI_TRANSFMT_DATALEN_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1ae4d480b562f4e14812815edd0c65c052" kindref="member">data_len</ref><sp/>-<sp/>1)<sp/>|</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a9302d273c347584fe5bee64f2084b8c8" kindref="member">SPI_TRANSFMT_DATAMERGE_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1a730b2dc871550aee1cbc0b1f08759579" kindref="member">data_merge</ref>)<sp/>|</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a471d8dad331b84fdbb06d4e46b2ceea7" kindref="member">SPI_TRANSFMT_LSB_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1a6c638f1ccc49b4a5473f26259fadeaea" kindref="member">direction</ref>)<sp/>|</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a777f5f1e609d01adcc464b34289274bb" kindref="member">SPI_TRANSFMT_SLVMODE_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1a36024fa308c25c04377cd1f45873d1a5" kindref="member">mode</ref>)<sp/>|</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1aa6f0b977682f62b98ace2b7a610cadf6" kindref="member">SPI_TRANSFMT_CPOL_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1af647f14f4f4721f8375d67ea0aaee5b7" kindref="member">clk_polarity</ref>)<sp/>|</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1ac795af034217a3cf5e5e97ca1310695a" kindref="member">SPI_TRANSFMT_CPHA_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1a3846994ed05be651c5f0e3f3284e6e5b" kindref="member">clk_phase</ref>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>init<sp/>TRANSCTRL<sp/>reg</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>default<sp/>phase:<sp/>disable<sp/>command/address/token<sp/>phase,</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>default<sp/>Transfer<sp/>mode:<sp/>write<sp/>and<sp/>read<sp/>at<sp/>the<sp/>same<sp/>time</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a0612770893dbcab8ecc643718417acbf" kindref="member">TRANSCTRL</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a4d7e4e6992f5b56ca6ae4bbddb27050d" kindref="member">SPI_TRANSCTRL_SLVDATAONLY_SET</ref>(1)<sp/>|<sp/></highlight><highlight class="comment">/*<sp/>it&apos;s<sp/>only<sp/>data<sp/>anyway<sp/>for<sp/>slave*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a081e29e57512423430de60a4073c9329" kindref="member">SPI_TRANSCTRL_DUALQUAD_SET</ref>(config-&gt;<ref refid="structspi__initialize__config__t_1a821308e984e195aa037f778b54c64b32" kindref="member">io_mode</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>third:<sp/>init<sp/>TIMING<sp/>reg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1ae055aa5a39455f4407d4de3f7f293425" kindref="member">TIMING</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a85e903b7b4cac795b4fd25ac147633a9" kindref="member">SPI_TIMING_CS2SCLK_SET</ref>(<ref refid="group__spi__interface_1gga33e343fc2876a4886bcd808046ba8ebeaf94ebaa71709afd9f6f4c3445227a729" kindref="member">spi_cs2sclk_half_sclk_1</ref>)<sp/>|</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a0e0741eb90fb4c2907c59f2a780afba5" kindref="member">SPI_TIMING_CSHT_SET</ref>(<ref refid="group__spi__interface_1gga410142b39b47da0d68fa76b42aa7e030abd82a7856f4955ffa1cefbb2ff293fb3" kindref="member">spi_csht_half_sclk_1</ref>)<sp/>|</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a7ec150fe70b2873988ffea9b62edf18f" kindref="member">SPI_TIMING_SCLK_DIV_SET</ref>(0x10);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a00ef064bb3d9b8e462cdf726af9c59a2" kindref="member">hpm_spi_set_sclk_frequency</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>freq)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq_list[<ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5af39e9c6978275e7b10d474901804b02f" kindref="member">clock_source_general_source_end</ref>]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_freq<sp/>=<sp/>freq;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0,<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_diff_freq;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_diff_freq;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_freq;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>div,<sp/>sclk_div;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sysctl__interface_1ga306537444209dc91972f17fc71473ff5" kindref="member">clock_source_t</ref><sp/>clock_source;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a76a6e990148cd29799a50eb51eec497b" kindref="member">clk_src_t</ref><sp/>clk_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a43d7d89c195d4a54827b78f060c843c7" kindref="member">clk_src_pll0_clk0</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pll_clk<sp/>=<sp/>0,<sp/>spi_clock;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>minimum<sp/>time<sp/>that<sp/>SPI<sp/>CS<sp/>should<sp/>stay<sp/>HIGH.<sp/>set<sp/>One<sp/>half<sp/>sclk<sp/>cycle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gaa5d631efc977c69f6979d91a6052fc53" kindref="member">spi_master_set_csht_timing</ref>(ptr,<sp/><ref refid="group__spi__interface_1gga410142b39b47da0d68fa76b42aa7e030abd82a7856f4955ffa1cefbb2ff293fb3" kindref="member">spi_csht_half_sclk_1</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>minimum<sp/>time<sp/>between<sp/>the<sp/>edges<sp/>of<sp/>SPI<sp/>CS<sp/>and<sp/>the<sp/>edges<sp/>of<sp/>SCLK.<sp/>set<sp/>One<sp/>half<sp/>sclk<sp/>cycle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gaeeca7594629b6890028b9c967415aa51" kindref="member">spi_master_set_cs2sclk_timing</ref>(ptr,<sp/><ref refid="group__spi__interface_1gga33e343fc2876a4886bcd808046ba8ebeaf94ebaa71709afd9f6f4c3445227a729" kindref="member">spi_cs2sclk_half_sclk_1</ref>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SCLK<sp/>=<sp/>SPI_SRC_CLOK<sp/>/<sp/>((SCLK_DIV<sp/>+<sp/>1)<sp/>*<sp/>2)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_clock<sp/>=<sp/><ref refid="group__clock__interface_1ga0b6cfe27aaccef750309ac03a4285189" kindref="member">clock_get_frequency</ref>(obj-&gt;<ref refid="structhpm__spi__cfg__t_1acf0870f56cac3cce397714032abb5253" kindref="member">spi_clock_name</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>sclk_div<sp/>=<sp/>((spi_clock<sp/>/<sp/>freq)<sp/>/<sp/>2)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>default<sp/>SPI<sp/>operating<sp/>frequency<sp/>cannot<sp/>meet<sp/>the<sp/>frequency<sp/>division,</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>other<sp/>clock<sp/>sources<sp/>and<sp/>frequency<sp/>divisions<sp/>are<sp/>automatically<sp/>calculated<sp/>and<sp/>allocated.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((spi_clock<sp/>%<sp/>freq)<sp/>!=<sp/>0)<sp/>||<sp/>(((spi_clock<sp/>/<sp/>freq)<sp/>%<sp/>2)<sp/>!=<sp/>0)<sp/>||<sp/>(sclk_div<sp/>&gt;<sp/>0xFE))<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(clock_source<sp/>=<sp/>(<ref refid="group__sysctl__interface_1ga306537444209dc91972f17fc71473ff5" kindref="member">clock_source_t</ref>)0;<sp/>clock_source<sp/>&lt;<sp/><ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5af39e9c6978275e7b10d474901804b02f" kindref="member">clock_source_general_source_end</ref>;<sp/>clock_source++)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll_clk<sp/>=<sp/><ref refid="group__clock__interface_1gaaec69da7dc160ba76709210b861182f0" kindref="member">get_frequency_for_source</ref>(clock_source);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>SCLK<sp/>frequency<sp/>is<sp/>less<sp/>than<sp/>20M,<sp/>select<sp/>another<sp/>suitable<sp/>clock<sp/>source<sp/>for<sp/>frequency<sp/>division.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&lt;=<sp/><ref refid="hpm__spi_8c_1a5e4b0c6608be16eb8384956b18747c63" kindref="member">SPI_COMP_FREQUENCY_THRESHOLD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock_source<sp/>==<sp/><ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5a1531200b109803be03a15ee77778dda2" kindref="member">clock_source_osc0_clk0</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>24M<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclk_div<sp/>=<sp/>(((pll_clk<sp/>/<sp/>div)<sp/>/<sp/>freq)<sp/>/<sp/>2)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clk_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a070ac8da664cddc6e7675c36a696ab80" kindref="member">MAKE_CLK_SRC</ref>(<ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a447777c775f75afcce26c85f49e9abce" kindref="member">CLK_SRC_GROUP_COMMON</ref>,<sp/>clock_source);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock_source<sp/>==<sp/><ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5a1531200b109803be03a15ee77778dda2" kindref="member">clock_source_osc0_clk0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>div<sp/>to<sp/>ensure<sp/>the<sp/>SPI<sp/>clock<sp/>source<sp/>is<sp/>within<sp/>a<sp/>reasonable<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((div<sp/>==<sp/>5)<sp/>||<sp/>(div<sp/>==<sp/>15))<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sclk_div<sp/>==<sp/>0)<sp/>||<sp/>(sclk_div<sp/>&gt;<sp/>0xFE))<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pll_clk<sp/>/<sp/>div)<sp/>&gt;<sp/>800000000)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div++;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div--;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sclk_div<sp/>&lt;=<sp/>0xFE)<sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clock_source<sp/>==<sp/>(<ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5af39e9c6978275e7b10d474901804b02f" kindref="member">clock_source_general_source_end</ref><sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclk_div<sp/>=<sp/>0xFE;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>pll_clk<sp/>/<sp/>freq;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>division<sp/>factor<sp/>ranges<sp/>from<sp/>1<sp/>to<sp/>256<sp/>as<sp/>any<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((div<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(div<sp/>&lt;=<sp/>0x100))<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq_list[clock_source]<sp/>=<sp/>pll_clk<sp/>/<sp/>div;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>&gt;<sp/><ref refid="hpm__spi_8c_1a5e4b0c6608be16eb8384956b18747c63" kindref="member">SPI_COMP_FREQUENCY_THRESHOLD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>SCLK<sp/>frequency<sp/>is<sp/>greater<sp/>than<sp/>20M,<sp/>and<sp/>SCLK<sp/>is<sp/>directly<sp/>equal<sp/>to<sp/>the<sp/>SPI<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SPI<sp/>SCLK<sp/>clock<sp/>=<sp/>SPI<sp/>clock<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sclk_div<sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>the<sp/>best<sp/>sclk<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_diff_freq<sp/>=<sp/>abs(freq_list[0]<sp/>-<sp/>_freq);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_freq<sp/>=<sp/>freq_list[0];</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="group__sysctl__interface_1gga306537444209dc91972f17fc71473ff5af39e9c6978275e7b10d474901804b02f" kindref="member">clock_source_general_source_end</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_diff_freq<sp/>=<sp/>abs(freq_list[i]<sp/>-<sp/>_freq);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_diff_freq<sp/>&lt;<sp/>min_diff_freq)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_diff_freq<sp/>=<sp/>current_diff_freq;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_freq<sp/>=<sp/>freq_list[i];</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll_clk<sp/>=<sp/><ref refid="group__clock__interface_1gaaec69da7dc160ba76709210b861182f0" kindref="member">get_frequency_for_source</ref>((<ref refid="group__sysctl__interface_1ga306537444209dc91972f17fc71473ff5" kindref="member">clock_source_t</ref>)index);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clk_src<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a070ac8da664cddc6e7675c36a696ab80" kindref="member">MAKE_CLK_SRC</ref>(<ref refid="HPM5300_2HPM5301_2hpm__clock__drv_8h_1a447777c775f75afcce26c85f49e9abce" kindref="member">CLK_SRC_GROUP_COMMON</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>div<sp/>=<sp/>pll_clk<sp/>/<sp/>best_freq;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__clock__interface_1ga645fa0a04343d76c729aad437a564a86" kindref="member">clock_set_source_divider</ref>(obj-&gt;<ref refid="structhpm__spi__cfg__t_1acf0870f56cac3cce397714032abb5253" kindref="member">spi_clock_name</ref>,<sp/>clk_src,<sp/>div);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gacfa3adaa305d91e7e24480e1a643bcaa" kindref="member">spi_master_set_sclk_div</ref>(ptr,<sp/>sclk_div);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a9a55e3ff764f95c85faa338092092f72" kindref="member">hpm_spi_transmit_receive_blocking</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*wbuff,<sp/>uint8_t<sp/>*rbuff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>txfifo_size<sp/>=<sp/><ref refid="group__spi__interface_1gac7530cb52d282a0f587dcaf0cc13aa78" kindref="member">spi_get_tx_fifo_size</ref>(ptr);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>remain_size<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp,<sp/>count;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wbuff<sp/>==<sp/>NULL)<sp/>||<sp/>(rbuff<sp/>==<sp/>NULL)<sp/>||<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes)))<sp/>||</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__spi__interface_1gaadfbe7c0def75ad34d005bde61c92bdc" kindref="member">spi_master_get_data_phase_format</ref>(ptr)<sp/>!=<sp/><ref refid="group__spi__interface_1ggafff636ea73cfd28e417690fcfcacc5f9afa1be05243c70c676721e8d938096115" kindref="member">spi_single_io_mode</ref>))<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a7438a41884a3ffd603f034fd0404e9b8" kindref="member">write_read_data_together</ref>(ptr,<sp/>data_len_in_bytes,<sp/>wbuff,<sp/>count,<sp/>rbuff,<sp/>count,<sp/>timeout);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>master<sp/>mode,<sp/>becomes<sp/>0<sp/>after<sp/>the<sp/>transfer<sp/>is<sp/>finished<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>receiving<sp/>the<sp/>host<sp/>to<sp/>start<sp/>transmission,<sp/>fill<sp/>the<sp/>TX<sp/>FIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remain_size<sp/>=<sp/>txfifo_size<sp/>-<sp/><ref refid="group__spi__interface_1ga018f780445a809c06c0079f56b4917c5" kindref="member">spi_get_tx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>remain_size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data_len_in_bytes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>*(wbuff++)<sp/>&lt;&lt;<sp/>i<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>remain_size;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>slave<sp/>mode,<sp/>becomes<sp/>1<sp/>after<sp/>the<sp/>SPI<sp/>CS<sp/>signal<sp/>is<sp/>asserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>to<sp/>read<sp/>RXFIFO<sp/>because<sp/>no<sp/>effect<sp/>SPI<sp/>bus<sp/>for<sp/>slave<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>-<sp/>remain_size)<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>))<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a7438a41884a3ffd603f034fd0404e9b8" kindref="member">write_read_data_together</ref>(ptr,<sp/>data_len_in_bytes,<sp/>wbuff,<sp/>count,<sp/>rbuff,<sp/>count<sp/>+<sp/>remain_size,<sp/>timeout);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1aa9a47638d853a478222752ac26b04734" kindref="member">hpm_spi_receive_blocking</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buff<sp/>==<sp/>NULL)<sp/>||<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>slave<sp/>mode,<sp/>becomes<sp/>1<sp/>after<sp/>the<sp/>SPI<sp/>CS<sp/>signal<sp/>is<sp/>asserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>to<sp/>write<sp/>TXFIFO<sp/>because<sp/>no<sp/>effect<sp/>SPI<sp/>bus<sp/>for<sp/>slave<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1a869304f8db280130d149920d5016d57b" kindref="member">read_data_single</ref>(ptr,<sp/>data_len_in_bytes,<sp/>buff,<sp/>count,<sp/>timeout);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>master<sp/>mode,<sp/>becomes<sp/>0<sp/>after<sp/>the<sp/>transfer<sp/>is<sp/>finished<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1a231f68025831b83e5309dc16e9dd7835" kindref="member">hpm_spi_transmit_blocking</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>txfifo_size<sp/>=<sp/><ref refid="group__spi__interface_1gac7530cb52d282a0f587dcaf0cc13aa78" kindref="member">spi_get_tx_fifo_size</ref>(ptr);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>remain_size<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp,<sp/>count;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buff<sp/>==<sp/>NULL)<sp/>||<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1ae04ab2239b211196e21848fb59592a69" kindref="member">write_data_single</ref>(ptr,<sp/>data_len_in_bytes,<sp/>buff,<sp/>count,<sp/>timeout);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>master<sp/>mode,<sp/>becomes<sp/>0<sp/>after<sp/>the<sp/>transfer<sp/>is<sp/>finished<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>receiving<sp/>the<sp/>host<sp/>to<sp/>start<sp/>transmission,<sp/>fill<sp/>the<sp/>TX<sp/>FIFO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remain_size<sp/>=<sp/>txfifo_size<sp/>-<sp/><ref refid="group__spi__interface_1ga018f780445a809c06c0079f56b4917c5" kindref="member">spi_get_tx_fifo_valid_data_size</ref>(ptr);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>remain_size;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data_len_in_bytes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>+=<sp/>*(buff++)<sp/>&lt;&lt;<sp/>i<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>remain_size;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting....in<sp/>slave<sp/>mode,<sp/>becomes<sp/>1<sp/>after<sp/>the<sp/>SPI<sp/>CS<sp/>signal<sp/>is<sp/>asserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af35fb1cdbea525335f9fe3d126440630" kindref="member">wait_spi_slave_active</ref>(ptr,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>timeout);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>to<sp/>read<sp/>RXFIFO<sp/>because<sp/>no<sp/>effect<sp/>SPI<sp/>bus<sp/>for<sp/>slave<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((count<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(stat<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1ae04ab2239b211196e21848fb59592a69" kindref="member">write_data_single</ref>(ptr,<sp/>data_len_in_bytes,<sp/>buff,<sp/>count,<sp/>timeout);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1adaf0db9df572cb84e05ad13b23627521" kindref="member">hpm_spi_transmit_receive_setup_dma</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SPI_SOC_TRANSFER_COUNT_MAX<sp/>==<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15ad2a478fbce4d16e6a53fda9d2a7d28a7" kindref="member">spi_trans_write_read_together</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_SPI_DMA_TX_REQ_AFTER_CMD_FO_MASTER)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_SPI_DMA_TX_REQ_AFTER_CMD_FO_MASTER<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_master_enable_tx_dma_request_after_cmd_write(ptr);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gac2db9a3228352512393aae049a3ea03c" kindref="member">spi_enable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga657e67d00646b00b6c973fa2ef547f97" kindref="member">spi_enable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1af51f2d625f9f8cabd4fa24da120d43a6" kindref="member">hpm_spi_receive_setup_dma</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SPI_SOC_TRANSFER_COUNT_MAX<sp/>==<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a20a6bb5cff8d394455e770ab0f73c4b4" kindref="member">spi_trans_read_only</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga4502ff3183ab82b24ab064452e948630" kindref="member">spi_disable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga657e67d00646b00b6c973fa2ef547f97" kindref="member">spi_enable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__spi_8c_1aed8707ac71bf311625d7eb709b18f20c" kindref="member">hpm_spi_transmit_setup_dma</ref>(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(SPI_SOC_TRANSFER_COUNT_MAX<sp/>==<sp/>512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>==<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>==<sp/>512)<sp/>&amp;&amp;<sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1gae5a4c4e106257107efe0a26851a72491" kindref="member">HPM_CHECK_RET</ref>(<ref refid="hpm__spi_8c_1ae10300ae890372fddc2a6c17e4f351fc" kindref="member">hpm_spi_transfer_init</ref>(ptr,<sp/><ref refid="group__spi__interface_1ggae719b4eb51210f7a6878861fcb374d15a49d8050552ae2f123d9e5894d6d99c54" kindref="member">spi_trans_write_only</ref>,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPM_IP_FEATURE_SPI_DMA_TX_REQ_AFTER_CMD_FO_MASTER)<sp/>&amp;&amp;<sp/>(HPM_IP_FEATURE_SPI_DMA_TX_REQ_AFTER_CMD_FO_MASTER<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_master_enable_tx_dma_request_after_cmd_write(ptr);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gac2db9a3228352512393aae049a3ea03c" kindref="member">spi_enable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gafc2c95d3d748afce3797778072931179" kindref="member">spi_disable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>master<sp/>mode,<sp/>This<sp/>CMD<sp/>register<sp/>must<sp/>be<sp/>written<sp/>with<sp/>a<sp/>dummy<sp/>value</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>start<sp/>a<sp/>SPI<sp/>transfer<sp/>even<sp/>when<sp/>the<sp/>command<sp/>phase<sp/>is<sp/>not<sp/>enabled</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2ip_2hpm__spi__regs_8h_1a44af66f62b77884f6797122d75b0e0b3" kindref="member">SPI_TRANSFMT_SLVMODE_GET</ref>(ptr-&gt;<ref refid="structSPI__Type_1a46813b468c53af3cabea791c7b076455" kindref="member">TRANSFMT</ref>)<sp/>==<sp/><ref refid="group__spi__interface_1gga9ac2dd2dcd0b2c3b5fb1363eac489a3eaa45f1c195fc0e4f77a6871bd3c72ad30" kindref="member">spi_master_mode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structSPI__Type_1a9a5c4349c6a9e94a38b295854a12f519" kindref="member">CMD</ref><sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_DMA_MGR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dma_channel_tc_callback(<ref refid="group__dma__interface_1gad318c67c9687e5174692025c50e8721c" kindref="member">DMA_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/>(<ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*)user_data;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((obj-&gt;rxdma_resource.channel<sp/>==<sp/>channel)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(obj-&gt;rxdma_resource.base<sp/>==<sp/>ptr)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(obj-&gt;rx_dma_complete<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;rx_dma_complete(channel);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((obj-&gt;txdma_resource.channel<sp/>==<sp/>channel)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(obj-&gt;txdma_resource.base<sp/>==<sp/>ptr)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(obj-&gt;tx_dma_complete<sp/>!=<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;tx_dma_complete(channel);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>hpm_spi_dma_mgr_install_callback(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>spi_dma_complete_cb<sp/>tx_complete,<sp/>spi_dma_complete_cb<sp/>rx_complete)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a219e66052c4c274fcf81bcc2f77652e4" kindref="member">dma_mgr_chn_conf_t</ref><sp/>chg_config;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*resource<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a6fa7c7a09d860dd39bfc697dc86b8805" kindref="member">dma_mgr_get_default_chn_config</ref>(&amp;chg_config);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1abf3c7490a04d741952f14117c0c219ca" kindref="member">src_width</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a5a0fd3fe9f17a72e9bdda9612f59e7c3" kindref="member">DMA_MGR_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a055cf9ef45e9b7868f53821997a40297" kindref="member">dst_width</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a5a0fd3fe9f17a72e9bdda9612f59e7c3" kindref="member">DMA_MGR_TRANSFER_WIDTH_BYTE</ref>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>rx<sp/>dma<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;rxdma_resource;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hpm__dma__mgr_8c_1a319e00568b443c04dd481e53ee5bea9f" kindref="member">dma_mgr_request_resource</ref>(resource)<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ac303c1f78599127bfd07a5521b043d96" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a20c3bf11dfdafef0b1c54d1f1da18676" kindref="member">DMA_MGR_HANDSHAKE_MODE_HANDSHAKE</ref>;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a3b847bbfd4476ca8b9b21262c038e40a" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a98b27499465acf45a40905c2fd7e71af" kindref="member">DMA_MGR_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ac01d4358e7b04bd3a475761e065faa33" kindref="member">src_addr</ref><sp/>=<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a54a6d295af50ab705a6ecd6371d6893f" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1aa6dbf20840d2626367b1004f62ebed94" kindref="member">DMA_MGR_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ab573d54934a8be3099437c5f2acb0311" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1acd3e64e6a97e8b07eb8ce75f78519db2" kindref="member">DMA_MGR_ADDRESS_CONTROL_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a02caa298cdd484fca1177cf515c3f1fb" kindref="member">en_dmamux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a1f3e6087105526e53e49f1323a987e34" kindref="member">dmamux_src</ref><sp/>=<sp/>obj-&gt;rx_dmamux_src;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a978e7e2f4e8e9b342de6a43d6975ff5b" kindref="member">dma_mgr_setup_channel</ref>(resource,<sp/>&amp;chg_config);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1ab8a9c9b98d527ef61714031db448f1a4" kindref="member">dma_mgr_install_chn_tc_callback</ref>(resource,<sp/>dma_channel_tc_callback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)obj);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a35fdb678c747b3d8bf30e3f7b857ee63" kindref="member">dma_mgr_enable_chn_irq</ref>(resource,<sp/><ref refid="hpm__dma__mgr_8h_1a1ed5cb39f6d24c95fa17f26de4618868" kindref="member">DMA_MGR_INTERRUPT_MASK_TC</ref>);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a52da40cfe270e122d620feacecaab729" kindref="member">dma_mgr_enable_dma_irq_with_priority</ref>(resource,<sp/>1);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;rx_dma_complete<sp/>=<sp/>rx_complete;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>spi<sp/>tx<sp/>dma<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;txdma_resource;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="hpm__dma__mgr_8c_1a319e00568b443c04dd481e53ee5bea9f" kindref="member">dma_mgr_request_resource</ref>(resource)<sp/>==<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ac303c1f78599127bfd07a5521b043d96" kindref="member">src_mode</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1aa6dbf20840d2626367b1004f62ebed94" kindref="member">DMA_MGR_HANDSHAKE_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a3b847bbfd4476ca8b9b21262c038e40a" kindref="member">src_addr_ctrl</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1acd3e64e6a97e8b07eb8ce75f78519db2" kindref="member">DMA_MGR_ADDRESS_CONTROL_INCREMENT</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a54a6d295af50ab705a6ecd6371d6893f" kindref="member">dst_mode</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a20c3bf11dfdafef0b1c54d1f1da18676" kindref="member">DMA_MGR_HANDSHAKE_MODE_HANDSHAKE</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ab573d54934a8be3099437c5f2acb0311" kindref="member">dst_addr_ctrl</ref><sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a98b27499465acf45a40905c2fd7e71af" kindref="member">DMA_MGR_ADDRESS_CONTROL_FIXED</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1ac279789f91bdd9945aad4e7d31495303" kindref="member">dst_addr</ref><sp/>=<sp/>(uint32_t)&amp;ptr-&gt;<ref refid="structSPI__Type_1a63fce340a6d0378668d55df1e5c2dc99" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a02caa298cdd484fca1177cf515c3f1fb" kindref="member">en_dmamux</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chg_config.<ref refid="structhpm__dma__mgr__chn__conf_1a1f3e6087105526e53e49f1323a987e34" kindref="member">dmamux_src</ref><sp/>=<sp/>obj-&gt;tx_dmamux_src;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a978e7e2f4e8e9b342de6a43d6975ff5b" kindref="member">dma_mgr_setup_channel</ref>(resource,<sp/>&amp;chg_config);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1ab8a9c9b98d527ef61714031db448f1a4" kindref="member">dma_mgr_install_chn_tc_callback</ref>(resource,<sp/>dma_channel_tc_callback,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)obj);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a35fdb678c747b3d8bf30e3f7b857ee63" kindref="member">dma_mgr_enable_chn_irq</ref>(resource,<sp/><ref refid="hpm__dma__mgr_8h_1a1ed5cb39f6d24c95fa17f26de4618868" kindref="member">DMA_MGR_INTERRUPT_MASK_TC</ref>);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a52da40cfe270e122d620feacecaab729" kindref="member">dma_mgr_enable_dma_irq_with_priority</ref>(resource,<sp/>1);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;tx_dma_complete<sp/>=<sp/>tx_complete;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>hpm_spi_transmit_receive_nonblocking(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*wbuff,<sp/>uint8_t<sp/>*rbuff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>transfer_width;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>buf_addr;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a6c95497847a0e4fcdd06f58699100006" kindref="member">DMA_MGR_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>byte<sp/>or<sp/>half_word*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/>data_len_in_bytes<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((obj<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__spi__interface_1gaadfbe7c0def75ad34d005bde61c92bdc" kindref="member">spi_master_get_data_phase_format</ref>(ptr)<sp/>!=<sp/><ref refid="group__spi__interface_1ggafff636ea73cfd28e417690fcfcacc5f9afa1be05243c70c676721e8d938096115" kindref="member">spi_single_io_mode</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes)))<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gafc2c95d3d748afce3797778072931179" kindref="member">spi_disable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga4502ff3183ab82b24ab064452e948630" kindref="member">spi_disable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga5c26a576ac4ad1c200f61bcdef602be7" kindref="member">spi_transmit_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga9f13297d81585c938533cce5a246d163" kindref="member">spi_receive_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;rxdma_resource;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(<ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a72373b15bc6fffd9ec6688b6406cc65d" kindref="member">HPM_CORE0</ref>,<sp/>(uint32_t)rbuff);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aed51c83cf1703c535d4d312932bed7dd" kindref="member">dma_mgr_set_chn_dst_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a4636519e0e3fb4838154314a35bea531" kindref="member">dma_mgr_set_chn_src_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a7b4c9d986e28862b5b5e84197a17bafc" kindref="member">dma_mgr_set_chn_dst_addr</ref>(resource,<sp/>buf_addr);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aa3df75bd4e70012eb4091f5966dec8e4" kindref="member">dma_mgr_set_chn_transize</ref>(resource,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a66418c75052465b695b7fe6cc54ecf5a" kindref="member">dma_mgr_enable_channel</ref>(resource);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;txdma_resource;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(<ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a72373b15bc6fffd9ec6688b6406cc65d" kindref="member">HPM_CORE0</ref>,<sp/>(uint32_t)wbuff);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aed51c83cf1703c535d4d312932bed7dd" kindref="member">dma_mgr_set_chn_dst_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a4636519e0e3fb4838154314a35bea531" kindref="member">dma_mgr_set_chn_src_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1abfc9a26dc8544020a7784682f9fd2bed" kindref="member">dma_mgr_set_chn_src_addr</ref>(resource,<sp/>buf_addr);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aa3df75bd4e70012eb4091f5966dec8e4" kindref="member">dma_mgr_set_chn_transize</ref>(resource,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a66418c75052465b695b7fe6cc54ecf5a" kindref="member">dma_mgr_enable_channel</ref>(resource);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1adaf0db9df572cb84e05ad13b23627521" kindref="member">hpm_spi_transmit_receive_setup_dma</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>hpm_spi_receive_nonblocking(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>transfer_width;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>buf_addr;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a6c95497847a0e4fcdd06f58699100006" kindref="member">DMA_MGR_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>byte<sp/>or<sp/>half_word*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/>data_len_in_bytes<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((obj<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes))))<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gafc2c95d3d748afce3797778072931179" kindref="member">spi_disable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga4502ff3183ab82b24ab064452e948630" kindref="member">spi_disable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga5c26a576ac4ad1c200f61bcdef602be7" kindref="member">spi_transmit_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga9f13297d81585c938533cce5a246d163" kindref="member">spi_receive_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;rxdma_resource;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(<ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a72373b15bc6fffd9ec6688b6406cc65d" kindref="member">HPM_CORE0</ref>,<sp/>(uint32_t)buff);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aed51c83cf1703c535d4d312932bed7dd" kindref="member">dma_mgr_set_chn_dst_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a4636519e0e3fb4838154314a35bea531" kindref="member">dma_mgr_set_chn_src_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a7b4c9d986e28862b5b5e84197a17bafc" kindref="member">dma_mgr_set_chn_dst_addr</ref>(resource,<sp/>buf_addr);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aa3df75bd4e70012eb4091f5966dec8e4" kindref="member">dma_mgr_set_chn_transize</ref>(resource,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a66418c75052465b695b7fe6cc54ecf5a" kindref="member">dma_mgr_enable_channel</ref>(resource);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1af51f2d625f9f8cabd4fa24da120d43a6" kindref="member">hpm_spi_receive_setup_dma</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>hpm_spi_transmit_nonblocking(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>*buff,<sp/>uint32_t<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/>stat<sp/>=<sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>transfer_width;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*resource;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>buf_addr;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_len_in_bytes<sp/>=<sp/><ref refid="group__spi__interface_1gacdb3db6c42352184bacb17222cb7635f" kindref="member">spi_get_data_length_in_bytes</ref>(ptr);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len_in_bytes<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_len_in_bytes<sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>4<sp/>aglin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/><ref refid="hpm__dma__mgr_8h_1a6c95497847a0e4fcdd06f58699100006" kindref="member">DMA_MGR_TRANSFER_WIDTH_WORD</ref>;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>byte<sp/>or<sp/>half_word*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transfer_width<sp/>=<sp/>data_len_in_bytes<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((obj<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>&gt;<sp/>(<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9ab6af43398ba35709ba46f496487bc5" kindref="member">SPI_SOC_TRANSFER_COUNT_MAX</ref><sp/>*<sp/>data_len_in_bytes)))<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>resource<sp/>=<sp/>&amp;obj-&gt;txdma_resource;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_addr<sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(<ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a72373b15bc6fffd9ec6688b6406cc65d" kindref="member">HPM_CORE0</ref>,<sp/>(uint32_t)buff);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1gafc2c95d3d748afce3797778072931179" kindref="member">spi_disable_rx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga4502ff3183ab82b24ab064452e948630" kindref="member">spi_disable_tx_dma</ref>(ptr);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga5c26a576ac4ad1c200f61bcdef602be7" kindref="member">spi_transmit_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__spi__interface_1ga9f13297d81585c938533cce5a246d163" kindref="member">spi_receive_fifo_reset</ref>(ptr);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1abfc9a26dc8544020a7784682f9fd2bed" kindref="member">dma_mgr_set_chn_src_addr</ref>(resource,<sp/>buf_addr);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aed51c83cf1703c535d4d312932bed7dd" kindref="member">dma_mgr_set_chn_dst_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a4636519e0e3fb4838154314a35bea531" kindref="member">dma_mgr_set_chn_src_width</ref>(resource,<sp/>transfer_width);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1aa3df75bd4e70012eb4091f5966dec8e4" kindref="member">dma_mgr_set_chn_transize</ref>(resource,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref><sp/>/<sp/>data_len_in_bytes);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__dma__mgr_8c_1a66418c75052465b695b7fe6cc54ecf5a" kindref="member">dma_mgr_enable_channel</ref>(resource);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>stat<sp/>=<sp/><ref refid="hpm__spi_8c_1aed8707ac71bf311625d7eb709b18f20c" kindref="member">hpm_spi_transmit_setup_dma</ref>(ptr,<sp/><ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*hpm_spi_get_tx_dma_resource(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;obj-&gt;txdma_resource;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><ref refid="hpm__dma__mgr_8h_1a2cb29626236e022cced99f3e498d18eb" kindref="member">dma_resource_t</ref><sp/>*hpm_spi_get_rx_dma_resource(<ref refid="structSPI__Type" kindref="compound">SPI_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhpm__spi__cfg__t" kindref="compound">hpm_spi_cfg_t</ref><sp/>*obj<sp/>=<sp/><ref refid="hpm__spi_8c_1a2bbf6fc7b4f23f1a474f600b38675e44" kindref="member">hpm_spi_get_cfg_obj</ref>(ptr);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obj<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;obj-&gt;rxdma_resource;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="components/spi/hpm_spi.c"/>
  </compounddef>
</doxygen>
