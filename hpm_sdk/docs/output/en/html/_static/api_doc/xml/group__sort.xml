<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__sort" kind="group">
    <compoundname>sort</compoundname>
    <title>DSP Sort Functions</title>
    <innergroup refid="group__nnactivation">NN Activation Functions</innergroup>
    <innergroup refid="group__nnbasic">NN Basic Functions</innergroup>
    <innergroup refid="group__nnconcatenation">NN Concatenation Functions</innergroup>
    <innergroup refid="group__nnconvolution">NN Convolution Functions</innergroup>
    <innergroup refid="group__nnfullyconnect">NN Fully Connected Functions</innergroup>
    <innergroup refid="group__nnpooling">NN Pooling Functions</innergroup>
    <innergroup refid="group__nnsoftmax">NN Softmax Functions</innergroup>
    <innergroup refid="group__nnutils">NN Utils Functions</innergroup>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__sort_1gabf8425ef3f2fd273785642b7e7b1aa8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_init_f32</definition>
        <argsstring>(riscv_dsp_sort_f32_t *instance, riscv_dsp_sort_alg alg, riscv_dsp_sort_order order)</argsstring>
        <name>hpm_dsp_sort_init_f32</name>
        <param>
          <type>riscv_dsp_sort_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_alg</type>
          <declname>alg</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_order</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alg</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting algorithm </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting order</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>This function has to be called to initialize the instance structure before the function riscv_dsp_sort_f32 is executed. Please refer to code examples.</para>
</listitem><listitem><para>The possible sorting algorithms for the generic sorting (i.e., options for alg) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_BITONIC bitonic sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_BUBBLE bubble sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_HEAP heap sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_INSERTION insertion sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_QUICK quick sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_SELECTION selection sort</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The possible sorting orders for the generic sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6478" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6478" bodyend="6483"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga1d9fc7c29e5a7d2033fd25894047682e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_f32</definition>
        <argsstring>(const riscv_dsp_sort_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sort_f32</name>
        <param>
          <type>const riscv_dsp_sort_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Generic sorting function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>The possible sorting algorithms for the generic sorting (i.e., options for alg) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_BITONIC bitonic sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_BUBBLE bubble sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_HEAP heap sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_INSERTION insertion sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_QUICK quick sort</para>
</listitem><listitem><para>RISCV_DSP_SORT_SELECTION selection sort</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>The possible sorting orders for the generic sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>To ensure correct results, you must initialize the instance structure with the function riscv_dsp_sort_init_f32 before using this function riscv_dsp_sort_f32. For how to use the two functions, please refer to the code examples below.</para>
</listitem></orderedlist>
</para>
<para><bold>Example</bold> <preformatted>
      With the input size as 100, sorting order as ascending and sorting algorithm as quick
      sort, the code example of generic sorting is as follows:

         #define size 100
         riscv_dsp_sort_f32_t *instance;
         float32_t src[size] = {};
         float32_t dst[size];
         riscv_dsp_sort_init_f32(instance, RISCV_DSP_SORT_QUICK,
         RISCV_DSP_SORT_ASCENDING);
         riscv_dsp_sort_f32(instance, src, dst, size);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6525" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6525" bodyend="6530"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga0b681489294a482ee601d49a1fee29d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_merge_init_f32</definition>
        <argsstring>(riscv_dsp_sort_merge_f32_t *instance, riscv_dsp_sort_order order, float32_t *buf)</argsstring>
        <name>hpm_dsp_sort_merge_init_f32</name>
        <param>
          <type>riscv_dsp_sort_merge_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>riscv_dsp_sort_order</type>
          <declname>order</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">order</parametername>
</parameternamelist>
<parameterdescription>
<para>desired sorting order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the working buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>This function has to be called to initialize the instance structure before the function riscv_dsp_sort_merge_f32 is executed. Please refer to Section 2.11.2.2 for a code example.</para>
</listitem><listitem><para>The possible sorting orders for the merge sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order </para>
</listitem></itemizedlist>
</para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6547" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6547" bodyend="6552"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga6251837945f09f43d0a67afa1d02e96a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_sort_merge_f32</definition>
        <argsstring>(const riscv_dsp_sort_merge_f32_t *instance, float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_sort_merge_f32</name>
        <param>
          <type>const riscv_dsp_sort_merge_f32_t *</type>
          <declname>instance</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Merge sort. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the instance structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in a vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Note:</bold> </para>
<para><orderedlist>
<listitem><para>The possible sorting orders for the merge sorting (i.e., options for order) include<itemizedlist>
<listitem><para>RISCV_DSP_SORT_DESCENDING descending order</para>
</listitem><listitem><para>RISCV_DSP_SORT_ASCENDING ascending order</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>To ensure correct results, you must initialize the instance structure with the function riscv_dsp_sort_merge_init_f32 before using this function riscv_dsp_sort_merge_f32. For how to use the two functions, please refer to the code example below.</para>
</listitem></orderedlist>
</para>
<para><bold>Example</bold> <preformatted>
    With the input size as 100 and sorting order as descending, the code example of merge
    sorting is as follows:

    #define size 100
    riscv_dsp_sort_merge_f32_t *instance;
    float32_t src[size] = {};
    float32_t buf[size];
    float32_t dst[size];
    riscv_dsp_sort_merge_init_f32(instance, RISCV_DSP_SORT_DESCENDING, buf);
    riscv_dsp_sort_merge_f32(instance, src, dst, size);
    </preformatted> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6587" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6587" bodyend="6592"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gab973a2a30b2016648bea995f4a737553" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void write_q15x2_ia</definition>
        <argsstring>(q15_t **pQ15, q31_t value)</argsstring>
        <name>write_q15x2_ia</name>
        <param>
          <type>q15_t **</type>
          <declname>pQ15</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6609" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6609" bodyend="6617"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gacd7f0bd117301b1be9027be69dee5ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_read_q15x2_ia</definition>
        <argsstring>(const q15_t **in_q15)</argsstring>
        <name>hpm_nn_read_q15x2_ia</name>
        <param>
          <type>const q15_t **</type>
          <declname>in_q15</declname>
        </param>
        <briefdescription>
<para>Read 2 q15 elements and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_q15</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6625" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6625" bodyend="6633"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gac2a74c274ace586d087007e626b31232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_sat_doubling_high_mult</definition>
        <argsstring>(const q31_t m1, const q31_t m2)</argsstring>
        <name>hpm_nn_sat_doubling_high_mult</name>
        <param>
          <type>const q31_t</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
<para>Saturating doubling high multiply. Result matches NEON instruction VQRDMULH. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">m1</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplicand </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">m2</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiplier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of multiplication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6643" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6643" bodyend="6658"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga436801bba206264415e0dd7053fd6c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_divide_by_power_of_two</definition>
        <argsstring>(const q31_t dividend, const q31_t exponent)</argsstring>
        <name>hpm_nn_divide_by_power_of_two</name>
        <param>
          <type>const q31_t</type>
          <declname>dividend</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
<para>Rounding divide by power of two. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dividend</parametername>
</parameternamelist>
<parameterdescription>
<para>- Dividend </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">exponent</parametername>
</parameternamelist>
<parameterdescription>
<para>- Divisor = power(2, exponent) Range: [0, 31] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rounded result of division. Midpoint is rounded away from zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6668" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6668" bodyend="6685"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga32e31fcb5f8c099f4d2ef3179c24d875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_requantize</definition>
        <argsstring>(const q31_t val, const q31_t multiplier, const q31_t shift)</argsstring>
        <name>hpm_nn_requantize</name>
        <param>
          <type>const q31_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>const q31_t</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6687" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6687" bodyend="6691"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gab003dc83165a70a246a3f1aac74eb664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t hpm_nn_read_q7x4_ia</definition>
        <argsstring>(const q7_t **in_q7)</argsstring>
        <name>hpm_nn_read_q7x4_ia</name>
        <param>
          <type>const q7_t **</type>
          <declname>in_q7</declname>
        </param>
        <briefdescription>
<para>Read 4 q7 from q7 pointer and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_q7</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6698" column="28" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6698" bodyend="6706"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga30cc265bd7e14567407197d43179ca93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE const q7_t *</type>
        <definition>__STATIC_FORCEINLINE const q7_t * read_and_pad_reordered</definition>
        <argsstring>(const q7_t *source, q31_t *out1, q31_t *out2)</argsstring>
        <name>read_and_pad_reordered</name>
        <param>
          <type>const q7_t *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out2</declname>
        </param>
        <briefdescription>
<para>read and expand one q7 word into two q15 words with reordering </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6712" column="33" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6712" bodyend="6720"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1gaa5408e49a2d7b95b9c3d0a80593bb18c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE const q7_t *</type>
        <definition>__STATIC_FORCEINLINE const q7_t * read_and_pad</definition>
        <argsstring>(const q7_t *source, q31_t *out1, q31_t *out2)</argsstring>
        <name>read_and_pad</name>
        <param>
          <type>const q7_t *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out1</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>out2</declname>
        </param>
        <briefdescription>
<para>read and expand one q7 word into two q15 words </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6726" column="33" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6726" bodyend="6736"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga1ac7adf059e961b703a237ecc917570c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE int32_t</type>
        <definition>__STATIC_FORCEINLINE int32_t hpm_nn_read_s8x4_ia</definition>
        <argsstring>(const int8_t **in_s8)</argsstring>
        <name>hpm_nn_read_s8x4_ia</name>
        <param>
          <type>const int8_t **</type>
          <declname>in_s8</declname>
        </param>
        <briefdescription>
<para>Read 4 s8 from s8 pointer and post increment pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">in_s8</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that holds address of input. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>q31 value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6743" column="30" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6743" bodyend="6751"/>
      </memberdef>
      <memberdef kind="function" id="group__sort_1ga2c643d3f7228d3c26dbe8db3289cd3d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE void</type>
        <definition>__STATIC_FORCEINLINE void hpm_nn_q7_to_q15_with_offset</definition>
        <argsstring>(const int8_t *src, int16_t *dst, int32_t block_size, int16_t offset)</argsstring>
        <name>hpm_nn_q7_to_q15_with_offset</name>
        <param>
          <type>const int8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>block_size</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6753" column="27" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6753" bodyend="6794"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__sort_1ga2953f124ae444ebdd2b2a0873ac36b7e" prot="public" static="no">
        <name>LEFT_SHIFT</name>
        <param><defname>_shift</defname></param>
        <initializer>(_shift &gt; 0 ? _shift : 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6604" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga26af54489c1401b91595bf0c92ef87c4" prot="public" static="no">
        <name>RIGHT_SHIFT</name>
        <param><defname>_shift</defname></param>
        <initializer>(_shift &gt; 0 ? 0 : -_shift)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6605" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga468734b237f1c95a31715aa2b60a576e" prot="public" static="no">
        <name>Q31_MAX</name>
        <initializer>((q31_t)(0x7FFFFFFFL))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6606" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__sort_1ga1eb725c94dbb052aa24b62321be0445b" prot="public" static="no">
        <name>Q31_MIN</name>
        <initializer>((q31_t)(0x80000000L))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="6607" column="9" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="6607" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The generic sort function sorts elements of a vector by the algorithm and sorting order specified in its instance structure. The algorithms to be chosen from to perform the generic sorting include bitonic sort, bubble sort, heap sort, insertion sort, quick sort and selection sort. Andes DSP library only supports the generic sort function for floating-point data. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
