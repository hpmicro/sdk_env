<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__ewdg__interface" kind="group">
    <compoundname>ewdg_interface</compoundname>
    <title>EWDG driver APIs</title>
    <innerclass refid="structewdg__func__ctrl__config__t" prot="public">ewdg_func_ctrl_config_t</innerclass>
    <innerclass refid="structewdg__interrupt__reset__config__t" prot="public">ewdg_interrupt_reset_config_t</innerclass>
    <innerclass refid="structewdg__config__t" prot="public">ewdg_config_t</innerclass>
    <innergroup refid="group__ewdg__event">EWDG Event definitions</innergroup>
    <innergroup refid="group__ewdg__password__def">EWDG Password definitions</innergroup>
    <innergroup refid="group__ewdg__interrupt">EWDG interrupt definitions</innergroup>
    <innergroup refid="group__ewdg__reset__source">EWDG reset source definitions</innergroup>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ewdg__interface_1ga531c35e38ede3ea4e5ba5afb24b29493" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__ewdg__interface_1gga531c35e38ede3ea4e5ba5afb24b29493abfb1e6fbad6b0576fe69f29aa83190e7" prot="public">
          <name>status_ewdg_tick_out_of_range</name>
          <initializer>=  ((uint32_t)(status_group_ewdg)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The tick is out of range </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga531c35e38ede3ea4e5ba5afb24b29493a6254c7a31b7ec7a04822f0ed8c9a3a53" prot="public">
          <name>status_ewdg_div_out_of_range</name>
          <initializer>=  ((uint32_t)(status_group_ewdg)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clock Divider is out of range </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga531c35e38ede3ea4e5ba5afb24b29493a51ccee8220760ae722a80b95f77ea4ce" prot="public">
          <name>status_ewdg_feature_unsupported</name>
          <initializer>=  ((uint32_t)(status_group_ewdg)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Feature is not supported </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EWDG error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="29" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="enum" id="group__ewdg__interface_1ga0a3c25dee2b2577cec9b765ba5982715" prot="public" static="no" strong="no">
        <type></type>
        <name>ewdg_refresh_unlock_method_t</name>
        <enumvalue id="group__ewdg__interface_1gga0a3c25dee2b2577cec9b765ba5982715a3c237f5bee6dbc37ecdab21b9f59b0a8" prot="public">
          <name>ewdg_refresh_unlock_method_password</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use the Unlock Password directly </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga0a3c25dee2b2577cec9b765ba5982715a66d724ff3015375883d1a30b7745a5bc" prot="public">
          <name>ewdg_refresh_unlock_method_ring_left_shift_password_by_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use password[14:0] | password[15] </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga0a3c25dee2b2577cec9b765ba5982715a228b500e7969fd144350a82ae89da9c3" prot="public">
          <name>ewdg_refresh_unlock_method_fixed_key</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use fixed key: 0x55AA </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga0a3c25dee2b2577cec9b765ba5982715a21ddf5150b27439a818b3f2b88898a23" prot="public">
          <name>ewdg_refresh_unlock_method_ring_left_shift_password_by_1_bit0_xor_password_bit0</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use last_password[14:0] | (last_password[15] ^ password[0]) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga0a3c25dee2b2577cec9b765ba5982715a9aa3fe626ce55be7fbf2002dcd60cde1" prot="public">
          <name>ewdg_refresh_unlock_method_max</name>
          <initializer>= ewdg_refresh_unlock_method_ring_left_shift_password_by_1_bit0_xor_password_bit0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Max allowed range </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EWDG Refresh Unlock Methods. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="108" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="108" bodyend="119"/>
      </memberdef>
      <memberdef kind="enum" id="group__ewdg__interface_1ga9a509cdb5b9bf7fcf0698d8501435b2b" prot="public" static="no" strong="no">
        <type></type>
        <name>ewdg_cnt_clk_sel_t</name>
        <enumvalue id="group__ewdg__interface_1gga9a509cdb5b9bf7fcf0698d8501435b2ba2a6e2b6b1c7175f2b2efdbbf554090d5" prot="public">
          <name>ewdg_cnt_clk_src_bus_clk</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clock is from BUS clock </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga9a509cdb5b9bf7fcf0698d8501435b2baeb65a851b5b8093675a35607d6833249" prot="public">
          <name>ewdg_cnt_clk_src_ext_osc_clk</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clock is from External OSC </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EWDG Clock source for internal counter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="124" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="enum" id="group__ewdg__interface_1ga2325fa92237cc30c5d4c71b15503d2e0" prot="public" static="no" strong="no">
        <type></type>
        <name>ewdg_window_low_limit_t</name>
        <enumvalue id="group__ewdg__interface_1gga2325fa92237cc30c5d4c71b15503d2e0a19203337591e7d0cc87a08af8c52b537" prot="public">
          <name>ewdg_window_lower_timeout_period_8_div_16</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Refresh should be issued after 8/16 of timeout period </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga2325fa92237cc30c5d4c71b15503d2e0a747a1471efc5b0f57b91091630c1fd61" prot="public">
          <name>ewdg_window_lower_timeout_period_10_div_16</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Refresh should be issued after 10/16 of timeout period </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga2325fa92237cc30c5d4c71b15503d2e0ad0aa3434d899f674095a79218d8c230d" prot="public">
          <name>ewdg_window_lower_timeout_period_12_div_16</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Refresh should be issued after 12/16 of timeout period </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga2325fa92237cc30c5d4c71b15503d2e0a1be10d9f86440303e1acc7ef95164aef" prot="public">
          <name>ewdg_window_lower_timeout_period_14_div_16</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Refresh should be issued after 14/16 of timeout period </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga2325fa92237cc30c5d4c71b15503d2e0a5f5c5d5f0342f5475ed15ef1d70f0fba" prot="public">
          <name>ewdg_window_lower_timeout_period_max</name>
          <initializer>= ewdg_window_lower_timeout_period_14_div_16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum allowed limit value </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EWDG Lower Window Limitations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="132" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="132" bodyend="143"/>
      </memberdef>
      <memberdef kind="enum" id="group__ewdg__interface_1ga1e460ae4ca96e5847a23f278e8c69f37" prot="public" static="no" strong="no">
        <type></type>
        <name>ewdg_window_upper_limit_t</name>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a7ce6c2b141e8c811bc00cee61c9b3c49" prot="public">
          <name>ewdg_window_upper_timeout_period_8_div_16</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>8/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a2e747b41011d792a92dcc561903f1c52" prot="public">
          <name>ewdg_window_upper_timeout_period_1_div_16</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>1/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a388a4c7e161548d2d48039aef7970fe4" prot="public">
          <name>ewdg_window_upper_timeout_period_2_div_16</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>2/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a7f0d638c3415cd7d14b168fa35ec4909" prot="public">
          <name>ewdg_window_upper_timeout_period_3_div_16</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>3/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a0c4cfa4cdcfedebe62f87859ef6f917e" prot="public">
          <name>ewdg_window_upper_timeout_period_4_div_16</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>4/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37aac6b94ed28fca76d8bb216fc250a6f58" prot="public">
          <name>ewdg_window_upper_timeout_period_5_div_16</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>5/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a6d7f2d14791385ee5835976bb5dd557b" prot="public">
          <name>ewdg_window_upper_timeout_period_6_div_16</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>6/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a0e59418a209fa960d8109afb799edf95" prot="public">
          <name>ewdg_window_upper_timeout_period_7_div_16</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>7/16 of timeout_reset_val </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga1e460ae4ca96e5847a23f278e8c69f37a8856d9a226f76ffdc307266f88f7618f" prot="public">
          <name>ewdg_window_upper_timeout_period_max</name>
          <initializer>= ewdg_window_upper_timeout_period_7_div_16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Maximum allowed upper limit </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EWDG Upper Window Limitations. </para>
        </briefdescription>
        <detaileddescription>
<para>The Actual Upper Window = Lower Window + Upper Window Limit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="150" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="150" bodyend="161"/>
      </memberdef>
      <memberdef kind="enum" id="group__ewdg__interface_1ga99084a88c1fa40031054b67585e84715" prot="public" static="no" strong="no">
        <type></type>
        <name>ewdg_low_power_mode_t</name>
        <enumvalue id="group__ewdg__interface_1gga99084a88c1fa40031054b67585e84715a975057e763bdb96f4766eefa35876feb" prot="public">
          <name>ewdg_low_power_mode_halt</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Watchdog is halted in low power mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ewdg__interface_1gga99084a88c1fa40031054b67585e84715ab9320a09f7aa515e269ccf0bfb8af8f6" prot="public">
          <name>ewdg_low_power_mode_work_clock_normal</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Watchdog is will work with normal clock in low power mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="163" column="1" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="163" bodyend="166"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__ewdg__interface_1ga8290f82fc6f8841b08aa3c83f234a042" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ewdg_is_ctrl_reg_locked</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_is_ctrl_reg_locked</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the Control Registers are locked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Registers are locked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Registers are unlocked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="254" column="20" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga276951c4044e5851ff9aa9397c81fb0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ewdg_get_count_clk_divider</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_get_count_clk_divider</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Divider for Counter Clock. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>divider value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="266" column="24" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga8828da0742cb4e7b713d31afc6d4c438" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool ewdg_is_refresh_locked</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_is_refresh_locked</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Check whether the Refresh register is locked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Registers are locked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Registers are unlocked </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="279" column="20" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga2f8392278f864149d27c6b0f8ccbcd69" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ewdg_unlock_ctrl_regs</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_unlock_ctrl_regs</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Unlock Write to Control Registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="289" column="20" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="289" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gaacac5a4f195f86218688a17cf82dcf8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ewdg_write_refresh_reg</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_write_refresh_reg</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Write Refresh Magic Number to EWDG Refresh register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; EWDG Refresh key</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="299" column="20" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga928c20729538f7f3ff5707552b3bcfef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ewdg_get_timeout_reset_ticks</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_get_timeout_reset_ticks</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Timeout Reset ticks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timeout Reset ticks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="309" column="24" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gad208697888b6e51d7512d5a100e0a2ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ewdg_get_timeout_interrupt_ticks</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_get_timeout_interrupt_ticks</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Timeout Interrupt ticks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Timeout Interrupt ticks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="320" column="24" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga65c24b3953230f96cc45553b7116ecc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ewdg_clear_status_flags</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t mask)</argsstring>
        <name>ewdg_clear_status_flags</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear Interrupt Status for EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The TIMEOUT_INT_EVENT cannot be cleared directly, it needs to be cleared by the refresh sequence</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Status Mask Bits, <ref refid="group__ewdg__event" kindref="compound">EWDG Event definitions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="334" column="20" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gaef142adababca9e3baec2ee1a28d7934" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ewdg_get_status_flags</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_get_status_flags</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Status of EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STATUS register value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="346" column="24" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gac473755599fa5bc9314ff7e1efb9e758" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__ewdg__interface_1ga0a3c25dee2b2577cec9b765ba5982715" kindref="member">ewdg_refresh_unlock_method_t</ref></type>
        <definition>static ewdg_refresh_unlock_method_t ewdg_get_refresh_unlock_method</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_get_refresh_unlock_method</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the Refresh Unlock Mechanism. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EWDG refresh unlock method </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="356" column="44" bodyfile="drivers/inc/hpm_ewdg_drv.h" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga7f68ea3cda399e218db588704e984687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_enable</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_enable</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para>This function enables the functionality of the EWDG and start the watchdog timer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Once the EWDG is enabled,<itemizedlist>
<listitem><para>if the software needs to update the control register, the update unlock must be performed first if the control register lock is enabled. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="373" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="472" bodyend="478" declfile="drivers/inc/hpm_ewdg_drv.h" declline="373" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga959394bc95778be8d20443dfb7b14bf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_disable</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_disable</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="380" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="480" bodyend="486" declfile="drivers/inc/hpm_ewdg_drv.h" declline="380" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga3161a29add9fdae7ba40e8f5e9c1f87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ewdg_init_ctrl_func</definition>
        <argsstring>(EWDG_Type *ptr, ewdg_func_ctrl_config_t *config, uint32_t cnt_src_freq)</argsstring>
        <name>ewdg_init_ctrl_func</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structewdg__func__ctrl__config__t" kindref="compound">ewdg_func_ctrl_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cnt_src_freq</declname>
        </param>
        <briefdescription>
<para>Initialize the Control function for EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Control Function Configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cnt_src_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Source frequency for EWDG counter</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="392" column="12" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="86" bodyend="202" declfile="drivers/inc/hpm_ewdg_drv.h" declline="392" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga32c33801a84983782fb0f837ae43988c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ewdg_init_interrupt_reset</definition>
        <argsstring>(EWDG_Type *ptr, ewdg_interrupt_reset_config_t *config)</argsstring>
        <name>ewdg_init_interrupt_reset</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structewdg__interrupt__reset__config__t" kindref="compound">ewdg_interrupt_reset_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize the Error function for EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>Error Function Configuration</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity Error Reset</para>
<para>&lt; Unlock Control Register Fail Reset</para>
<para>&lt; Refresh Register Unlock Fail Reset</para>
<para>&lt; Update Control Register Violation Reset</para>
<para>&lt; Watchdog Timeout Reset</para>
<para>&lt; Refresh Register Violation Reset</para>
<para>&lt; Watchdog Timeout Interrupt</para>
<para>&lt; Parity Error Interrupt</para>
<para>&lt; Unlock Control Register Fail Interrupt</para>
<para>&lt; Refresh Register Unlock Fail interrupt</para>
<para>&lt; Update Control Register Violation Interrupt</para>
<para>&lt; Refresh Register Violation interrupt</para>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="403" column="12" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="204" bodyend="274" declfile="drivers/inc/hpm_ewdg_drv.h" declline="403" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gae3efabfbfa99578f5a518c4d17df8f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_get_default_config</definition>
        <argsstring>(EWDG_Type *ptr, ewdg_config_t *config)</argsstring>
        <name>ewdg_get_default_config</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structewdg__config__t" kindref="compound">ewdg_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default configuration for EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG Configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Default EWDG Refresh Password</para>
<para>&lt; Default EWDG Update Password</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="410" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="60" bodyend="84" declfile="drivers/inc/hpm_ewdg_drv.h" declline="410" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga0f447fb16164b4b14b970218ee3b7a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ewdg_init</definition>
        <argsstring>(EWDG_Type *ptr, ewdg_config_t *config)</argsstring>
        <name>ewdg_init</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structewdg__config__t" kindref="compound">ewdg_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize the EWDG module. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG configuration</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="421" column="12" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="276" bodyend="302" declfile="drivers/inc/hpm_ewdg_drv.h" declline="421" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga4515772780f5a617fb1a75961afb146c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ewdg_unlock_refresh</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_unlock_refresh</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Unlock the write to refresh register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; EWDG Unlock Fixed key</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="431" column="12" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="304" bodyend="344" declfile="drivers/inc/hpm_ewdg_drv.h" declline="431" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gae6a9509685e3c4a62d86f0d48e13eb51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t ewdg_refresh</definition>
        <argsstring>(EWDG_Type *ptr)</argsstring>
        <name>ewdg_refresh</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Refresh EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error happened </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="441" column="12" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="346" bodyend="353" declfile="drivers/inc/hpm_ewdg_drv.h" declline="441" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga1d161b6add8fb2d014b5f67c4571275e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ewdg_get_count_clock_freq</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t src_clk_freq)</argsstring>
        <name>ewdg_get_count_clock_freq</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <briefdescription>
<para>Get the Divided Counter Clock Frequency for EWDG. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Source clock of the Counter clock</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>divided Counter clock Frequency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="451" column="10" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="355" bodyend="363" declfile="drivers/inc/hpm_ewdg_drv.h" declline="451" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga17451f1341a46fab9ebafc46e5fab214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t ewdg_convert_timeout_us_to_timeout_ticks</definition>
        <argsstring>(uint32_t src_clk_freq, uint32_t timeout_us)</argsstring>
        <name>ewdg_convert_timeout_us_to_timeout_ticks</name>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_us</declname>
        </param>
        <briefdescription>
<para>Convert the timeout in terms of microseconds to the timeout in terms of timeout ticks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock Frequency of the counter clock source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_us</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in terms of microseconds</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>timeout in terms of counter clock ticks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="461" column="10" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="365" bodyend="374" declfile="drivers/inc/hpm_ewdg_drv.h" declline="461" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga5fd41bddc80ed71f2418c4794a36262b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ewdg_convert_timeout_ticks_to_timeout_us</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t src_clk_freq, uint32_t timeout_ticks)</argsstring>
        <name>ewdg_convert_timeout_ticks_to_timeout_us</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ticks</declname>
        </param>
        <briefdescription>
<para>Convert the timeout in terms of timeout ticks to the timeout in terms of microseconds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock Frequency of the counter clock source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Timeout in terms of ticks</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>timeout in terms of counter clock ticks </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="472" column="10" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="376" bodyend="388" declfile="drivers/inc/hpm_ewdg_drv.h" declline="472" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gaf898b14901955c11fdfe4d1d3fe3f8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_enable_interrupt</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t mask)</argsstring>
        <name>ewdg_enable_interrupt</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable EWDG interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Mask, valid value refer to <ref refid="group__ewdg__interrupt" kindref="compound">EWDG interrupt definitions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity Error Interrupt</para>
<para>&lt; Unlock Control Register Fail Interrupt</para>
<para>&lt; Update Control Register Violation Interrupt</para>
<para>&lt; Watchdog Timeout Interrupt</para>
<para>&lt; Refresh Register Unlock Fail interrupt</para>
<para>&lt; Refresh Register Violation interrupt</para>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="479" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="390" bodyend="404" declfile="drivers/inc/hpm_ewdg_drv.h" declline="479" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga0db9d6ef689a4c19d1de91a1f9a732f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_disable_interrupt</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t mask)</argsstring>
        <name>ewdg_disable_interrupt</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable EWDG interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt Mask, valid value refer to <ref refid="group__ewdg__interrupt" kindref="compound">EWDG interrupt definitions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity Error Interrupt</para>
<para>&lt; Unlock Control Register Fail Interrupt</para>
<para>&lt; Update Control Register Violation Interrupt</para>
<para>&lt; Watchdog Timeout Interrupt</para>
<para>&lt; Refresh Register Unlock Fail interrupt</para>
<para>&lt; Refresh Register Violation interrupt</para>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="486" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="406" bodyend="420" declfile="drivers/inc/hpm_ewdg_drv.h" declline="486" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1gaf151df0bc292b9878c7056610484e55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_enable_reset</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t mask)</argsstring>
        <name>ewdg_enable_reset</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable EWDG Reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset Mask, valid value refer to <ref refid="group__ewdg__reset__source" kindref="compound">EWDG reset source definitions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity Error Reset</para>
<para>&lt; Unlock Control Register Fail Reset</para>
<para>&lt; Update Control Register Violation Reset</para>
<para>&lt; Watchdog Timeout Reset</para>
<para>&lt; Refresh Register Unlock Fail Reset</para>
<para>&lt; Refresh Register Violation Reset</para>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="493" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="422" bodyend="436" declfile="drivers/inc/hpm_ewdg_drv.h" declline="493" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga284c02a86a90bd7ceb72c149743afdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_disable_reset</definition>
        <argsstring>(EWDG_Type *ptr, uint32_t mask)</argsstring>
        <name>ewdg_disable_reset</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable EWDG Reset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset Mask, valid value refer to <ref refid="group__ewdg__reset__source" kindref="compound">EWDG reset source definitions</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity Error Reset</para>
<para>&lt; Unlock Control Register Fail Reset</para>
<para>&lt; Update Control Register Violation Reset</para>
<para>&lt; Watchdog Timeout Reset</para>
<para>&lt; Refresh Register Unlock Fail Reset</para>
<para>&lt; Refresh Register Violation Reset</para>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="500" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="438" bodyend="452" declfile="drivers/inc/hpm_ewdg_drv.h" declline="500" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ewdg__interface_1ga06ac2d58764b6462516d720b1ef0c9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ewdg_switch_clock_source</definition>
        <argsstring>(EWDG_Type *ptr, ewdg_cnt_clk_sel_t clk_sel)</argsstring>
        <name>ewdg_switch_clock_source</name>
        <param>
          <type><ref refid="structEWDG__Type" kindref="compound">EWDG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__ewdg__interface_1ga9a509cdb5b9bf7fcf0698d8501435b2b" kindref="member">ewdg_cnt_clk_sel_t</ref></type>
          <declname>clk_sel</declname>
        </param>
        <briefdescription>
<para>Switch the EWDG clock source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>EWDG base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">clk_sel</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock source selection for EWDG counter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Parity bit for Control Register</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_ewdg_drv.h" line="507" column="6" bodyfile="drivers/src/hpm_ewdg_drv.c" bodystart="454" bodyend="470" declfile="drivers/inc/hpm_ewdg_drv.h" declline="507" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>EWDG driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
