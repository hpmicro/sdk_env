<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__can__interface" kind="group">
    <compoundname>can_interface</compoundname>
    <title>CAN driver APIs</title>
    <innerclass refid="structcan__bit__timing__param__t" prot="public">can_bit_timing_param_t</innerclass>
    <innerclass refid="structcan__filter__config__t" prot="public">can_filter_config_t</innerclass>
    <innerclass refid="structcan__config__t" prot="public">can_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__can__interface_1ga3c2194028cec610456e376ab7a52cd99" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99ae96b1ac882763cb4c8d2451495b6e164" prot="public">
          <name>status_can_bit_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(0))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN bit error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99a43ff40f92c5cb0da19f05968992852b7" prot="public">
          <name>status_can_form_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(1))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Form error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99a9ed82093c1bb95538000027c70570623" prot="public">
          <name>status_can_stuff_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(2))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN stuff error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99a78e42513c60026fc263a8801caf05f29" prot="public">
          <name>status_can_ack_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(3))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN ACK error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99a361fa2997079c1f25b046e63d44be5ee" prot="public">
          <name>status_can_crc_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(4))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN CRC error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99afdd5a9663f667ae265e7546de2440e9e" prot="public">
          <name>status_can_other_error</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(5))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN other error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99aa220d5bd47aa8b734b151015496e93c2" prot="public">
          <name>status_can_tx_fifo_full</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(6))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN TX fifo full </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99a6077b3bdf357687fa33f2b7f27fd6b05" prot="public">
          <name>status_can_filter_index_invalid</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(7))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN filter index is invalid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99ac0d5ba8473773f14d321b14e16c8631f" prot="public">
          <name>status_can_filter_num_invalid</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(8))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN filter number is invalid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga3c2194028cec610456e376ab7a52cd99abeeddfad79514084285efc9faa28a769" prot="public">
          <name>status_can_invalid_bit_timing</name>
          <initializer>=  ((uint32_t)(status_group_can)*1000U + (uint32_t)(9))</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Invalid CAN bit timing parameter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CAN error codes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="32" column="1" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="group__can__interface_1ga8838d48d32587e1d02f134904760b944" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944af28e46e53eb21b4aca04e23ee366cfdf" prot="public">
          <name>can_payload_size_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a7ed3d475850172634efd7d4207bea421" prot="public">
          <name>can_payload_size_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a59e88bd1de784788fcf3ffe563bfee24" prot="public">
          <name>can_payload_size_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944ae1c9a2c883e56564ac1a5b47947482e4" prot="public">
          <name>can_payload_size_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a294b840e944b3989e687ad25228e9219" prot="public">
          <name>can_payload_size_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a676fc9d6d28fd42ed6164017af5dd11d" prot="public">
          <name>can_payload_size_5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944add2a67966e03f6e376aab337481c8d2f" prot="public">
          <name>can_payload_size_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944ae0952cd9017dd54fc3cc237d35f4b0f8" prot="public">
          <name>can_payload_size_7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 7 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a1fd9ac23c0a1c70732b9cd16f840ea44" prot="public">
          <name>can_payload_size_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944af3efce552949dcf79e46b9e82e19d970" prot="public">
          <name>can_payload_size_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a8d460591395d51862e2202f59b3a619c" prot="public">
          <name>can_payload_size_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a64eaeca350b8d1a37400abd89d3dc52f" prot="public">
          <name>can_payload_size_20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a74991244c51e449819a26e4e79ef29ec" prot="public">
          <name>can_payload_size_24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a13cc8368ae15618a9f7b227c05270fe3" prot="public">
          <name>can_payload_size_32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 32 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a4a246cd64d7852b3e70956df040fc7ed" prot="public">
          <name>can_payload_size_48</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 48 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944a4f54e842aff31ef877394d929fcdd4da" prot="public">
          <name>can_payload_size_64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Payload size is 64 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__can__interface_1gga8838d48d32587e1d02f134904760b944ae25ee666c07bd147f6a811cd798cfc8c" prot="public">
          <name>can_payload_size_max</name>
          <initializer>= can_payload_size_64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CAN DLC definitions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="121" column="1" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="121" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__can__interface_1ga52f54c24e8e9ae0e017b12e3d561ce2d" prot="public" static="no">
        <type>enum _can_mode</type>
        <definition>typedef enum _can_mode can_node_mode_t</definition>
        <argsstring></argsstring>
        <name>can_node_mode_t</name>
        <briefdescription>
<para>CAN loopback types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="107" column="17"/>
      </memberdef>
      <memberdef kind="typedef" id="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" prot="public" static="no">
        <type>enum _can_bit_timing_option</type>
        <definition>typedef enum _can_bit_timing_option can_bit_timing_option_t</definition>
        <argsstring></argsstring>
        <name>can_bit_timing_option_t</name>
        <briefdescription>
<para>CAN bit timing options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="116" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="group__can__interface_1gaead5fa76fd408804e2cd0828a2fe6ecc" prot="public" static="no">
        <type>union _can_rx_buf</type>
        <definition>typedef union _can_rx_buf can_receive_buf_t</definition>
        <argsstring></argsstring>
        <name>can_receive_buf_t</name>
        <briefdescription>
<para>CAN receive buffer data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="175" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" prot="public" static="no">
        <type>union _can_tx_buf</type>
        <definition>typedef union _can_tx_buf can_transmit_buf_t</definition>
        <argsstring></argsstring>
        <name>can_transmit_buf_t</name>
        <briefdescription>
<para>CAN transmit buffer data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="198" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__can__interface_1gafb42b10b1f2a2ca45872da968340a0a4" prot="public" static="no">
        <type>enum _can_filter_id_mode</type>
        <definition>typedef enum _can_filter_id_mode can_filter_id_mode_t</definition>
        <argsstring></argsstring>
        <name>can_filter_id_mode_t</name>
        <briefdescription>
<para>CAN acceptance filter modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="207" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__can__interface_1gab6e2a05f695556c4b536c204d124f7f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_reset</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_reset</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Reset CAN controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>reset flag for CAN controller <itemizedlist>
<listitem><para>true reset the CAN controller </para>
</listitem>
<listitem><para>false clear the CAN controller reset flag </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="274" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga0c6069b848881509e94d03531cb9523e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_force_bus_off</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_force_bus_off</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Force CAN controller to Bus-off mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="287" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga0546791b59326060a6572a93cbcd4fc4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_node_mode</definition>
        <argsstring>(CAN_Type *base, can_node_mode_t mode)</argsstring>
        <name>can_set_node_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__can__interface_1ga52f54c24e8e9ae0e017b12e3d561ce2d" kindref="member">can_node_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set CAN mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN loopback mode <itemizedlist>
<listitem><para>can_mode_normal Normal work mode </para>
</listitem>
<listitem><para>can_mode_loopback_internal internal loopback mode </para>
</listitem>
<listitem><para>can_mode_loopback_external external loopback mode </para>
</listitem>
<listitem><para>can_mode_listen_only CAN listen-only mode </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="302" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="302" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga0a0de02da597aa142c8f2c635451af8b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_listen_only_mode</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_enable_listen_only_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable CAN listen-only mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN listen-only mode enable flag <itemizedlist>
<listitem><para>true enable listen-only mode </para>
</listitem>
<listitem><para>false disable listen-only mode </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="324" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="324" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga4dcb0a0b43beca63626c1bd70d233229" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enter_standby_mode</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_enter_standby_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enter CAN standby mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Can standby mode enable flag <itemizedlist>
<listitem><para>true enable standby mode </para>
</listitem>
<listitem><para>false disable standby mode </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="340" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="340" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga435ea033e91254b240a3d2692c593f5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_disable_ptb_retransmission</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_disable_ptb_retransmission</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Disable the re-transmission for the primary transmission buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag for disabling re-transmission for PTB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="355" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="355" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gadd77ad7b290d49d4c8111cb64e183c68" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_ptb_retransmission_disabled</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_ptb_retransmission_disabled</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether re-transmission is disabled for PTB or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true Re-transmission is disabled for PTB </para>
</simplesect>
<simplesect kind="return"><para>false Re-transmission is enabled for PTB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="371" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gae65f034449e099c9d1416fec6ff6f65d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_disable_stb_retransmission</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_disable_stb_retransmission</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Disable the re-transmission for the secondary transmission buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag for disabling re-transmission for STB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="382" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="382" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga9065095bbf7a3fb70dd53e84aef45bc2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_stb_retransmission_disabled</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_stb_retransmission_disabled</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether re-transmission is disabled for STB or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true Re-transmission is disabled for STB </para>
</simplesect>
<simplesect kind="return"><para>false Re-transmission is enabled for STB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="398" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gac1501582c751f8a28985a1c3c5243d1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_select_tx_buffer</definition>
        <argsstring>(CAN_Type *base, bool select_secondary_buffer)</argsstring>
        <name>can_select_tx_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>select_secondary_buffer</declname>
        </param>
        <briefdescription>
<para>Select CAN TX buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">select_secondary_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN secondary transmit buffer selection flag <itemizedlist>
<listitem><para>true Select the secondary transmit buffer </para>
</listitem>
<listitem><para>false Select the primary transmit buffer </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="411" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="411" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga6ccd85b582f85de46ab638c3c93722a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_start_high_priority_message_transmit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_start_high_priority_message_transmit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start CAN high priority message transmit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="425" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gaa24188776602337467340d570cd546b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_abort_high_priority_message_transmit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_abort_high_priority_message_transmit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Abort CAN high priority message transmit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="434" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga24f9342949f8ec44bd7513a75557a44a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_start_message_transmit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_start_message_transmit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start CAN message transmit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="443" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga3a4320d363e5618566eb83944319b019" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_start_all_message_transmit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_start_all_message_transmit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Start CAN all messages transmit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="452" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gae9e0bc700b3f3d645e3a1b98d83a9ddf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_abort_message_transmit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_abort_message_transmit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Abort CAN message transmit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="461" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga92aa2e20006d67b433ccfe0ab501710a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_switch_to_next_tx_buffer</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_switch_to_next_tx_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Switch to next CAN tx buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="470" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gace7f0b6c493ba5dffd840fdcd96d4477" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_select_tx_buffer_priority_mode</definition>
        <argsstring>(CAN_Type *base, bool enable_priority_decision)</argsstring>
        <name>can_select_tx_buffer_priority_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_priority_decision</declname>
        </param>
        <briefdescription>
<para>Select CAN tx buffer priority mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable_priority_decision</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN tx buffer priority mode selection flag <itemizedlist>
<listitem><para>true priority decision mode </para>
</listitem>
<listitem><para>false FIFO mode </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="482" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="482" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga5de7ef8a412f0cfd68d498fca7508e85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_secondary_transmit_buffer_status</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_secondary_transmit_buffer_status</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN secondary transmit buffer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>secondary</parametername>
</parameternamelist>
<parameterdescription>
<para>transmit buffer status, 0: empty, 1: &lt;= 1/2 full, 2: &gt; 1/2 full, 3: full </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="497" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gaeb857b795d4302f0db1ba39ea79e3e6b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_primary_transmit_buffer_full</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_primary_transmit_buffer_full</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the primary transmit buffer is full. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true for full </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="507" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gaed7d586c58e6394c87e5c9ae660b7372" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_secondary_transmit_buffer_full</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_secondary_transmit_buffer_full</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the secondary transmit buffer is full. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true for full </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CAN Secondary Transmit buffer is full</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="517" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="517" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga1da71caefe18e0de7bec467bdc60c329" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_in_bus_off_mode</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_in_bus_off_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether the CAN is in BUS off mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true for bus off mode </para>
</simplesect>
<simplesect kind="return"><para>false for non-bus off mode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="529" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga6d8473a6062662c406d835816853640c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_self_ack</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_enable_self_ack</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable can self ack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Self-ack enable flag, true or false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="540" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="540" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gaf4fafca8d57538f0d52b456b670003e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_receive_buffer_overflow_mode</definition>
        <argsstring>(CAN_Type *base, bool override_enable)</argsstring>
        <name>can_set_receive_buffer_overflow_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>override_enable</declname>
        </param>
        <briefdescription>
<para>Set CAN receive buffer overflow mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">override_enable</parametername>
</parameternamelist>
<parameterdescription>
<para>receive buffer overflow mode option <itemizedlist>
<listitem><para>true the oldest message will be overwritten </para>
</listitem>
<listitem><para>false the new message will not be stored </para>
</listitem>
</itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="556" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="556" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gac8d9eb5826c69dc9eb87993d579c7134" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_receive_buffer_overflow</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_receive_buffer_overflow</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether CAN receive buffer is overflow. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>or false </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="570" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="570" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga17d145853d07de1d00ec40b335906339" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_release_receive_buffer</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_release_receive_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Release CAN receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="580" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="580" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga3ebf853b8d9bc79fa98b545b51cc4b7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_allow_store_all_data_in_receive_buffer</definition>
        <argsstring>(CAN_Type *base, bool allow)</argsstring>
        <name>can_allow_store_all_data_in_receive_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow</declname>
        </param>
        <briefdescription>
<para>Allow can store all date in receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">allow</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to determine whether to store error data frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="590" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="590" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga6bf8ad2d2c3e4596cedff91910868d79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_receive_buffer_status</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_receive_buffer_status</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN receive buffer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>Receive</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer status, 0: empty, 1: &gt; empty, &lt; almost full, 2: &gt;= almost full, 3: full </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="604" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="604" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gae0825616300ddf36c1be07a32ddf657b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool can_is_data_available_in_receive_buffer</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_is_data_available_in_receive_buffer</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Check whether there are data available in receive buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the receive buffer is not empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CAN Receive buffer is empty</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="614" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="614" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga84ebb3675b0698af0bd572b6dff7888c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_can_fd_iso_mode</definition>
        <argsstring>(CAN_Type *base, bool enable)</argsstring>
        <name>can_enable_can_fd_iso_mode</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable CAN FD ISO mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN-FD ISO mode enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="625" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="625" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gacd2e45edae3c77e25a15cfd58b0e04d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_tx_rx_irq</definition>
        <argsstring>(CAN_Type *base, uint8_t mask)</argsstring>
        <name>can_enable_tx_rx_irq</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable CAN TX/RX interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="639" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="639" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gae1be4b29b7474bf9c64769daf92bb54e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_disable_tx_rx_irq</definition>
        <argsstring>(CAN_Type *base, uint8_t mask)</argsstring>
        <name>can_disable_tx_rx_irq</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable CAN TX/RX interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="649" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="649" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga4cbc8dffa436fc2ad5f2d9bc4030f05e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_clear_tx_rx_flags</definition>
        <argsstring>(CAN_Type *base, uint8_t flags)</argsstring>
        <name>can_clear_tx_rx_flags</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Clear CAN TX/RX flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN TX/RX interrupt flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="659" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="659" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga59d881ba010799dc9447f908d05ba39a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_tx_rx_flags</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_tx_rx_flags</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN TX/RX flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>Tx/RX interrupt flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="670" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="670" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga883ad3561bd3d6db480fe026cd2edf3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_error_irq</definition>
        <argsstring>(CAN_Type *base, uint8_t mask)</argsstring>
        <name>can_enable_error_irq</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable CAN error interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN error interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="680" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga65457c022f3c55f288bf37942809ccc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_disable_error_irq</definition>
        <argsstring>(CAN_Type *base, uint8_t mask)</argsstring>
        <name>can_disable_error_irq</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable CAN error interrupt. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN error interrupt mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="691" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gac550e035dd57a57b993140291e64cd03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_error_interrupt_flags</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_error_interrupt_flags</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN error interrupt flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>error interrupt flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="701" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="701" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gadd32c6836083cea5910fa6d7be98df10" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_clear_error_interrupt_flags</definition>
        <argsstring>(CAN_Type *base, uint8_t flags)</argsstring>
        <name>can_clear_error_interrupt_flags</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Get CAN clear interrupt flags. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN error interrupt flags </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="711" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="711" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga86e7b4997864c184d96a25d210d68d92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_last_error_kind</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_last_error_kind</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get last CAN error kind. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>last error kind </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="722" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="722" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga9df5fff463d7eefeb342e139a9b4edf5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_last_arbitration_lost_position</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_last_arbitration_lost_position</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN last arbitrary lost position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>last arbitrary lost position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="732" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="732" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gabaaf1ac9262c86fad5f3ca03c9abe63f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_transmitter_delay_compensation</definition>
        <argsstring>(CAN_Type *base, uint8_t sample_point, bool enable)</argsstring>
        <name>can_set_transmitter_delay_compensation</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sample_point</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Set CAN transmitter delay compensation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sample_point</parametername>
</parameternamelist>
<parameterdescription>
<para>delay compensation sample point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>delay compensation enable flag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="744" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="744" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga2c29a479c133d9e24691dbbd79c045e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_warning_limits</definition>
        <argsstring>(CAN_Type *base, uint8_t almost_full_limit, uint8_t error_warning_limit)</argsstring>
        <name>can_set_warning_limits</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>almost_full_limit</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>error_warning_limit</declname>
        </param>
        <briefdescription>
<para>Set CAN warning limits. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">almost_full_limit</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error_warning_limit</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="761" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="761" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga7ecdbd21447091b4a04d878674daeb14" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_receive_error_count</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_receive_error_count</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN receive error count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>receive error count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="771" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="771" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga619811359d4e0380e067129b76a53663" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t can_get_transmit_error_count</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_get_transmit_error_count</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get CAN transmit error count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>CAN</parametername>
</parameternamelist>
<parameterdescription>
<para>transmit error count </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="781" column="23" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="781" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga8def393aa0654c160a65da9cacaeeec3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_enable_filter</definition>
        <argsstring>(CAN_Type *base, uint32_t index)</argsstring>
        <name>can_enable_filter</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Enable a specified CAN filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN filter index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="792" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga113d609ad117311b29f09a17f4052520" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_disable_filter</definition>
        <argsstring>(CAN_Type *base, uint32_t index)</argsstring>
        <name>can_disable_filter</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Disable a specified CAN filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN filter index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="803" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="803" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gabe2e41f5a36374c2864816ed68042de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_get_default_config</definition>
        <argsstring>(can_config_t *config)</argsstring>
        <name>can_get_default_config</name>
        <param>
          <type><ref refid="structcan__config__t" kindref="compound">can_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Get default CAN configuration parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="813" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="618" bodyend="653" declfile="drivers/inc/hpm_can_drv.h" declline="813" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga4b98f7d670a9f51da7ad27fd36ec609d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_init</definition>
        <argsstring>(CAN_Type *base, can_config_t *config, uint32_t src_clk_freq)</argsstring>
        <name>can_init</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="structcan__config__t" kindref="compound">can_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <briefdescription>
<para>Initialize the CAN controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN configuration </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN IP source clock frequency </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="822" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="655" bodyend="776" declfile="drivers/inc/hpm_can_drv.h" declline="822" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga5f816882c2c1001ca8381608deab446c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void can_deinit</definition>
        <argsstring>(CAN_Type *base)</argsstring>
        <name>can_deinit</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>De-initialize the CAN controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="828" column="6" bodyfile="drivers/src/hpm_can_drv.c" bodystart="778" bodyend="785" declfile="drivers/inc/hpm_can_drv.h" declline="828" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga47e798ab81b91c1d129685cd54a6c2b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_slow_speed_timing</definition>
        <argsstring>(CAN_Type *base, const can_bit_timing_param_t *param)</argsstring>
        <name>can_set_slow_speed_timing</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Configure the Slow Speed Bit timing using low-level interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit timing parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="836" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="836" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga87a6964bf3e2d2ad391b626c60f79363" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void can_set_fast_speed_timing</definition>
        <argsstring>(CAN_Type *base, const can_bit_timing_param_t *param)</argsstring>
        <name>can_set_fast_speed_timing</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Configure the Fast Speed Bit timing using low-level interface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit timing parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="847" column="20" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="847" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gace01a30f4853415ffd8a46a69eef1921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_set_bit_timing</definition>
        <argsstring>(CAN_Type *base, can_bit_timing_option_t option, uint32_t src_clk_freq, uint32_t baudrate, uint16_t samplepoint_min, uint16_t samplepoint_max)</argsstring>
        <name>can_set_bit_timing</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_min</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_max</declname>
        </param>
        <briefdescription>
<para>Configure the CAN bit timing for CAN BUS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit timing option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN IP source clock frequency </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN baudrate in MHz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum Sample point, range(0-1000), samplepoint_min / 1000 will be used in calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum Sample point, range(0-1000), samplepoint_max / 1000 will be used in calculation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="863" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="265" bodyend="294" declfile="drivers/inc/hpm_can_drv.h" declline="863" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga3a8c46558825c0463a50618161351de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_calculate_bit_timing</definition>
        <argsstring>(uint32_t src_clk_freq, can_bit_timing_option_t option, uint32_t baudrate, uint16_t samplepoint_min, uint16_t samplepoint_max, can_bit_timing_param_t *timing_param)</argsstring>
        <name>can_calculate_bit_timing</name>
        <param>
          <type>uint32_t</type>
          <declname>src_clk_freq</declname>
        </param>
        <param>
          <type><ref refid="group__can__interface_1ga262601289513f1abac3f06d2f55bc624" kindref="member">can_bit_timing_option_t</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baudrate</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_min</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>samplepoint_max</declname>
        </param>
        <param>
          <type><ref refid="structcan__bit__timing__param__t" kindref="compound">can_bit_timing_param_t</ref> *</type>
          <declname>timing_param</declname>
        </param>
        <briefdescription>
<para>Calculate the CAN bit timing for CAN BUS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src_clk_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN IP source clock frequency </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit timing option </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baudrate</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN baudrate in MHz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum Sample point, range(0-1000), samplepoint_min / 1000 will be used in calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">samplepoint_max</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum Sample point, range(0-1000), samplepoint_max / 1000 will be used in calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">timing_param</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated CAN bit timing parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="878" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="169" bodyend="240" declfile="drivers/inc/hpm_can_drv.h" declline="878" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1gae03b8c0387b3a0867505f5781ae35214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_set_filter</definition>
        <argsstring>(CAN_Type *base, const can_filter_config_t *config)</argsstring>
        <name>can_set_filter</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="structcan__filter__config__t" kindref="compound">can_filter_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Configure the acceptable filter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN filter configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="890" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="296" bodyend="336" declfile="drivers/inc/hpm_can_drv.h" declline="890" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga111b83df5cafa16889865acef42097a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_send_message_blocking</definition>
        <argsstring>(CAN_Type *base, const can_transmit_buf_t *message)</argsstring>
        <name>can_send_message_blocking</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Send CAN message using blocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message to be sent out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CAN Secondary Transmit buffer is full</para>
<para>&lt; CAN Secondary Transmit buffer is empty</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="898" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="388" bodyend="429" declfile="drivers/inc/hpm_can_drv.h" declline="898" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga4cc3ed8404d5d0340d1d03dd9fca679c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_send_high_priority_message_blocking</definition>
        <argsstring>(CAN_Type *base, const can_transmit_buf_t *message)</argsstring>
        <name>can_send_high_priority_message_blocking</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Send high-priority message using blocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message to be sent out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="906" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="431" bodyend="458" declfile="drivers/inc/hpm_can_drv.h" declline="906" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga3edf5cdf5a93d28aa629c2bcdac3d9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_send_message_nonblocking</definition>
        <argsstring>(CAN_Type *base, const can_transmit_buf_t *message)</argsstring>
        <name>can_send_message_nonblocking</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Send CAN message using non-blocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message to be sent out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CAN Secondary Transmit buffer is full</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="915" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="460" bodyend="484" declfile="drivers/inc/hpm_can_drv.h" declline="915" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga9a7676e94c3b7d500f85f44c93e44ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_send_high_priority_message_nonblocking</definition>
        <argsstring>(CAN_Type *base, const can_transmit_buf_t *message)</argsstring>
        <name>can_send_high_priority_message_nonblocking</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="group__can__interface_1gaf4926adb0f6c2361ea40b6a26a108a4d" kindref="member">can_transmit_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Send high-priority message using non-blocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message to be sent out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>API</parametername>
</parameternamelist>
<parameterdescription>
<para>execution status, status_success or status_invalid_argument </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="923" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="486" bodyend="508" declfile="drivers/inc/hpm_can_drv.h" declline="923" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga152ceffef9b26071634f3910426156f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_receive_message_blocking</definition>
        <argsstring>(CAN_Type *base, can_receive_buf_t *message)</argsstring>
        <name>can_receive_message_blocking</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__can__interface_1gaead5fa76fd408804e2cd0828a2fe6ecc" kindref="member">can_receive_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Receive CAN message using blocking transfer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>API execution is successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_bit_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_form_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN form error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_stuff_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN stuff error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_ack_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN ack error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_crc_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN crc error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_other_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Other error happened during receiving message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CAN Receive buffer is empty</para>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="940" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="510" bodyend="564" declfile="drivers/inc/hpm_can_drv.h" declline="940" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__can__interface_1ga064b9c32ea5252b72e35f7bc6b31a4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t can_read_received_message</definition>
        <argsstring>(CAN_Type *base, can_receive_buf_t *message)</argsstring>
        <name>can_read_received_message</name>
        <param>
          <type><ref refid="structCAN__Type" kindref="compound">CAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="group__can__interface_1gaead5fa76fd408804e2cd0828a2fe6ecc" kindref="member">can_receive_buf_t</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Read Received CAN message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This API assumes that the received CAN message is available. It can be used in the interrupt handler </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">message</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN message buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>API execution is successful </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_bit_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN bit error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_form_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN form error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_stuff_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN stuff error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_ack_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN ack error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_crc_error</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN crc error happened during receiving message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_can_other_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Other error happened during receiving message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="960" column="12" bodyfile="drivers/src/hpm_can_drv.c" bodystart="566" bodyend="616" declfile="drivers/inc/hpm_can_drv.h" declline="960" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__can__interface_1ga45004900abaec268c5921b69da8c2887" prot="public" static="no">
        <name>CAN_EVENT_RECEIVE</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ac22e3ca639fa49f8839f3b290039e0c6" kindref="member">CAN_RTIF_RIF_MASK</ref>)</initializer>
        <briefdescription>
<para>CAN Event definitions. </para>
        </briefdescription>
        <detaileddescription>
<para>CAN Receive event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="48" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gadddd2de4254d97c0661aa68e3b65f5b9" prot="public" static="no">
        <name>CAN_EVENT_RX_BUF_OVERRUN</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1aee46abaaa553234f7a1b05dd4646c9bf" kindref="member">CAN_RTIF_ROIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN RX buffer overrun event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="49" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gab269cb173bef923b1034ffca72d917cd" prot="public" static="no">
        <name>CAN_EVENT_RX_BUF_FULL</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a196e127aed700385753f34bbecb4d884" kindref="member">CAN_RTIF_RFIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN RX buffer full event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="50" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gab133777fcb21ebacf88e2c5a0599d90b" prot="public" static="no">
        <name>CAN_EVENT_RX_BUF_ALMOST_FULL</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a89f9c5ac0f817949d575503f63145cab" kindref="member">CAN_RTIF_RAFIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN RX buffer almost full event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="51" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga36e97c1be186b5a75158413c9b83a03f" prot="public" static="no">
        <name>CAN_EVENT_TX_PRIMARY_BUF</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ac9bafce6c399f676b19362124d854253" kindref="member">CAN_RTIF_TPIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN TX primary buffer event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="52" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gadce5e0b22e7fea05d914df345c4064d0" prot="public" static="no">
        <name>CAN_EVENT_TX_SECONDARY_BUF</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1acaa6345bc629b3cea898189bf0daf87a" kindref="member">CAN_RTIF_TSIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN TX secondary buffer event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="53" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga49527ad60df35216eb68581e55b5f1ad" prot="public" static="no">
        <name>CAN_EVENT_ERROR</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1abb06038140bdf1237235cb4e7728edef" kindref="member">CAN_RTIF_EIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN error event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="54" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga10cf0ca55b49dcd8b6d36f2841ed0186" prot="public" static="no">
        <name>CAN_EVENT_ABORT</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a53529ff4a3585cfb20a10614b1c77d2b" kindref="member">CAN_RTIF_AIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN abort event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="55" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gabac161adbf7014034259484d94dada78" prot="public" static="no">
        <name>CAN_STB_IS_EMPTY</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>CAN Secondary Transmit buffer Status. </para>
        </briefdescription>
        <detaileddescription>
<para>CAN Secondary Transmit buffer is empty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="60" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga9c82d54d07460fcd04b058e3bd443823" prot="public" static="no">
        <name>CAN_STB_LESS_EQUAL_HALF_FULL</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Secondary Transmit buffer &lt;= 1/2 * FULL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="61" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gaf8b4612501a0582068c54890b79b0c80" prot="public" static="no">
        <name>CAN_STB_MORE_THAN_HALF_FULL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Secondary Transmit buffer &gt; 1/2 * FULL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="62" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gadbcad1bc10c1b20bc669c6cad6f0e0c8" prot="public" static="no">
        <name>CAN_STB_IS_FULL</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Secondary Transmit buffer is full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="63" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga31ccdcf915e018404ef95f6eb1285398" prot="public" static="no">
        <name>CAN_RXBUF_IS_EMPTY</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>CAN Receive Buffer States. </para>
        </briefdescription>
        <detaileddescription>
<para>CAN Receive buffer is empty </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="68" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga41040bd96b02a36221dd0e07357fb8b4" prot="public" static="no">
        <name>CAN_RXBUF_HAS_DATA</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Receive buffer has data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="69" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gaa32eec42bee70c9ffe7533b0d261952f" prot="public" static="no">
        <name>CAN_RXBUF_ALMOST_FULL</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Receive buffer is almost full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="70" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga53eea02ce7f65e6c6fe10f93d28aaebb" prot="public" static="no">
        <name>CAN_RXBUF_IS_FULL</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Receive buffer is full </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="71" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga826fb80a9cb2519389e3d240916f4aa8" prot="public" static="no">
        <name>CAN_ERROR_WARNING_LIMIT_FLAG</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ad6ec23a0dcab1e96792b3a2dc6785c15" kindref="member">CAN_ERRINT_EWARN_MASK</ref>)</initializer>
        <briefdescription>
<para>CAN Error interrupts/flags. </para>
        </briefdescription>
        <detaileddescription>
<para>CAN Error Limit reached </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="77" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga49eacceb89aaf21fbc6bcc82bb43f900" prot="public" static="no">
        <name>CAN_ERROR_PASSIVE_MODE_ACTIVE_FLAG</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1ae59798db6e5497f6690d65b5b03251c9" kindref="member">CAN_ERRINT_EPASS_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Passive mode active </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="78" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga7711abcc1bd4f24605a7dde3d050d383" prot="public" static="no">
        <name>CAN_ERROR_PASSIVE_INT_ENABLE</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a938bbd34038047d47b6089cc2d1616bd" kindref="member">CAN_ERRINT_EPIE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Passive Interrupt Enable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="79" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga9463e8494da893fc524c11a3ddc874bf" prot="public" static="no">
        <name>CAN_ERROR_PASSIVE_INT_FLAG</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a93c1d0d42bb8b25712a743f3822d78b1" kindref="member">CAN_ERRINT_EPIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Passive Interrupt Flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="80" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga99d87ea7842cd8048b282d5c1894eb16" prot="public" static="no">
        <name>CAN_ERROR_ARBITRATION_LOST_INT_ENABLE</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1af050e97adfeba0687a693cf66cd46f6d" kindref="member">CAN_ERRINT_ALIE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Arbitration Lost Interrupt Enable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="81" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga8e3507f80810b115b23def9f75f069bd" prot="public" static="no">
        <name>CAN_ERROR_ARBITRATION_LOST_INT_FLAG</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1af050e97adfeba0687a693cf66cd46f6d" kindref="member">CAN_ERRINT_ALIE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN arbitration Lost Interrupt Flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="82" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gad9b4a37700a584948b82c44f896c18df" prot="public" static="no">
        <name>CAN_ERROR_BUS_ERROR_INT_ENABLE</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a85fc0f385cd3ed395f34f75a14ca0652" kindref="member">CAN_ERRINT_BEIE_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN BUS error Interrupt Enable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="83" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gaaf6de434d010d4ebe013a0ae1882c1da" prot="public" static="no">
        <name>CAN_ERROR_BUS_ERROR_INT_FLAG</name>
        <initializer>(<ref refid="HPM6300_2ip_2hpm__can__regs_8h_1a5ac2a1de9786742c141005b48377c6ed" kindref="member">CAN_ERRINT_BEIF_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN BUS error Interrupt flag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="84" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga46e012eee9f7ee0e7da17b95e6283802" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_NO_ERROR</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>CAN Error Kinds. </para>
        </briefdescription>
        <detaileddescription>
<para>No error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="90" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga9a2c4773cca5be1fe436745454de514c" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_BIT_ERROR</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bit error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="91" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga4ceea60be8e37c35ed578a74e681ec45" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_FORM_ERROR</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Form error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="92" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga9f09020f9f5a3ae1416bdb9757d68b42" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_STUFF_ERROR</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stuff error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="93" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga70ab31920bdfe51ae4a86d3e55029f3a" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_ACK_ERROR</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acknowledgment error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="94" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga9442a06e746e173590307f1fe69c2535" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_CRC_ERROR</name>
        <initializer>(5U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CRC error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="95" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1ga85288ce8739e201312d3d7cd3dcbcb7a" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_OTHER_ERROR</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Other errors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="96" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__can__interface_1gaf0964b203588ef81387c902be12bfa4f" prot="public" static="no">
        <name>CAN_KIND_OF_ERROR_BUS_OFF</name>
        <initializer>(7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BUS off error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_can_drv.h" line="97" column="9" bodyfile="drivers/inc/hpm_can_drv.h" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CAN driver APIs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
