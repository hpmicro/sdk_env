<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="hpm__gpio__drv_8c" kind="file" language="C++">
    <compoundname>hpm_gpio_drv.c</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes refid="hpm__gpio__drv_8h" local="yes">hpm_gpio_drv.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>hpm_gpio_drv.h</label>
        <link refid="hpm__gpio__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/src/hpm_gpio_drv.c</label>
        <link refid="hpm__gpio__drv_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="9">
        <label>hpm_gpio_regs.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <member refid="group__gpio__interface_1gaf185361a636543b887884d4181a38567" kind="function"><name>gpio_toggle_pin_interrupt_trigger_polarity</name></member>
      <member refid="group__gpio__interface_1gacd9a8d88162c584100917b404b4a1562" kind="function"><name>gpio_toggle_pin_interrupt_trigger_type</name></member>
      <member refid="group__gpio__interface_1ga517c1fcab62cae38d01fc3f40229b834" kind="function"><name>gpio_config_pin_interrupt</name></member>
      <member refid="group__gpio__interface_1ga9a166919df03e1bf8aa95b3d63d11e28" kind="function"><name>gpio_set_pin_output_with_initial</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__gpio__drv_8h" kindref="compound">hpm_gpio_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gaf185361a636543b887884d4181a38567" kindref="member">gpio_toggle_pin_interrupt_trigger_polarity</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>gpio_index,<sp/>uint8_t<sp/>pin_index)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intr_was_enabled<sp/>=<sp/><ref refid="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" kindref="member">gpio_check_pin_interrupt_enabled</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" kindref="member">gpio_disable_pin_interrupt</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a94bf0c4aafffe1acc4543a579cf22ae5" kindref="member">PL</ref>[gpio_index].<ref refid="structGPIO__Type_1a780e6b7163dffe82bc1594543e8d1d17" kindref="member">TOGGLE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intr_was_enabled)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" kindref="member">gpio_enable_pin_interrupt</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gacd9a8d88162c584100917b404b4a1562" kindref="member">gpio_toggle_pin_interrupt_trigger_type</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>gpio_index,<sp/>uint8_t<sp/>pin_index)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>intr_was_enabled<sp/>=<sp/><ref refid="group__gpio__interface_1ga4c75c7eae33c20332c5bd33504f95c66" kindref="member">gpio_check_pin_interrupt_enabled</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1ga4cad69d16584e4f71978c1a8b56f44e8" kindref="member">gpio_disable_pin_interrupt</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a12c9266e742c377bdbb07569f7a37913" kindref="member">TP</ref>[gpio_index].<ref refid="structGPIO__Type_1a780e6b7163dffe82bc1594543e8d1d17" kindref="member">TOGGLE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intr_was_enabled)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__gpio__interface_1gad7d872375fd34e61b989f45c4d4f6acd" kindref="member">gpio_enable_pin_interrupt</ref>(ptr,<sp/>gpio_index,<sp/>pin_index);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga517c1fcab62cae38d01fc3f40229b834" kindref="member">gpio_config_pin_interrupt</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>gpio_index,<sp/>uint8_t<sp/>pin_index,<sp/><ref refid="group__gpio__interface_1gad7182efe68dbafcf2a7ed1160981bf3e" kindref="member">gpio_interrupt_trigger_t</ref><sp/>trigger)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(trigger)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da846270f87fce1489f24140683fee771c" kindref="member">gpio_interrupt_trigger_level_high</ref>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da023cccdb0b3a0fc552f6342b2dc75284" kindref="member">gpio_interrupt_trigger_level_low</ref>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a12c9266e742c377bdbb07569f7a37913" kindref="member">TP</ref>[gpio_index].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trigger<sp/>==<sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da846270f87fce1489f24140683fee771c" kindref="member">gpio_interrupt_trigger_level_high</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a94bf0c4aafffe1acc4543a579cf22ae5" kindref="member">PL</ref>[gpio_index].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a94bf0c4aafffe1acc4543a579cf22ae5" kindref="member">PL</ref>[gpio_index].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181da804174609c618d98a66cce32a45b0216" kindref="member">gpio_interrupt_trigger_edge_falling</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181dafa6a62aa9f4720df68df630bb9396dbd" kindref="member">gpio_interrupt_trigger_edge_rising</ref>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT)<sp/>&amp;&amp;<sp/>(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a550d763eefb570fe09cf6d8bec64ba95" kindref="member">PD</ref>[gpio_index].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a12c9266e742c377bdbb07569f7a37913" kindref="member">TP</ref>[gpio_index].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trigger<sp/>==<sp/><ref refid="group__gpio__interface_1gga027ed1423986f66573a6f676734f181dafa6a62aa9f4720df68df630bb9396dbd" kindref="member">gpio_interrupt_trigger_edge_rising</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a94bf0c4aafffe1acc4543a579cf22ae5" kindref="member">PL</ref>[gpio_index].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a94bf0c4aafffe1acc4543a579cf22ae5" kindref="member">PL</ref>[gpio_index].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT)<sp/>&amp;&amp;<sp/>(GPIO_SOC_HAS_EDGE_BOTH_INTERRUPT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>gpio_interrupt_trigger_edge_both:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a12c9266e742c377bdbb07569f7a37913" kindref="member">TP</ref>[gpio_index].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a550d763eefb570fe09cf6d8bec64ba95" kindref="member">PD</ref>[gpio_index].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin_index;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__gpio__interface_1ga9a166919df03e1bf8aa95b3d63d11e28" kindref="member">gpio_set_pin_output_with_initial</ref>(<ref refid="structGPIO__Type" kindref="compound">GPIO_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>port,<sp/>uint8_t<sp/>pin,<sp/>uint8_t<sp/>initial)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initial<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1aa4f012bd1d6296106b5178ce5ba8b73a" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1aa4f012bd1d6296106b5178ce5ba8b73a" kindref="member">DO</ref>[port].<ref refid="structGPIO__Type_1a08461f7379d01c2e74b80618392712f3" kindref="member">CLEAR</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structGPIO__Type_1a1f849b016116feb2c6a253cd390d8b77" kindref="member">OE</ref>[port].<ref refid="structGPIO__Type_1a2567a627c8388318f1f2992cfa60fbc1" kindref="member">SET</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>pin;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/src/hpm_gpio_drv.c"/>
  </compounddef>
</doxygen>
