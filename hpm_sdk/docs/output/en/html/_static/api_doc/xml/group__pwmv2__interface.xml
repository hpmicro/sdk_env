<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__pwmv2__interface" kind="group">
    <compoundname>pwmv2_interface</compoundname>
    <title>PWMV2 driver APIs</title>
    <innerclass refid="structpwmv2__cmp__config" prot="public">pwmv2_cmp_config</innerclass>
    <innerclass refid="structpwmv2__async__fault__source__config" prot="public">pwmv2_async_fault_source_config</innerclass>
    <innerclass refid="structpwmv2__config" prot="public">pwmv2_config</innerclass>
    <innerclass refid="structpwmv2__pair__config" prot="public">pwmv2_pair_config</innerclass>
    <innerclass refid="structpwmv2__cmp__calculate__cfg" prot="public">pwmv2_cmp_calculate_cfg</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_counter_t</name>
        <enumvalue id="group__pwmv2__interface_1gga073afe5210aca56cc6508f1c4e67a0f1a10b372b1a9d083f327b4cd1ad82d318e" prot="public">
          <name>pwm_counter_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga073afe5210aca56cc6508f1c4e67a0f1a074cf5984ceb4c9dcaf359c0b67c4cb0" prot="public">
          <name>pwm_counter_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga073afe5210aca56cc6508f1c4e67a0f1a3eb5520b679fe2811cc99a7faaa024d5" prot="public">
          <name>pwm_counter_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga073afe5210aca56cc6508f1c4e67a0f1ad97f3260bb26890225ec9a01bc5defb7" prot="public">
          <name>pwm_counter_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="48" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_channel_t</name>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afcaf3c71f681ef7012fe44a5fe30c5c434e" prot="public">
          <name>pwm_channel_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afca42fc2ed1d0108eeb2fcf72b53bcca0bb" prot="public">
          <name>pwm_channel_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afca0047c0868e76ceb2b6c930e73a85f772" prot="public">
          <name>pwm_channel_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afcaded71b65a5ca944a8c5ba7b6b26c2573" prot="public">
          <name>pwm_channel_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afca79d08283b45c1a56844b6b494a50f946" prot="public">
          <name>pwm_channel_4</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afcabbb756e169cf6efc70d60c2383f12b53" prot="public">
          <name>pwm_channel_5</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afca91588508b9cabde03f63239a5e40150f" prot="public">
          <name>pwm_channel_6</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5113beb40c2e296de6af562228064afca2faf572f110342c2a8ecdea24f81bf2f" prot="public">
          <name>pwm_channel_7</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="55" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="55" bodyend="64"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gacf85b50227196efc8c6872e581526c33" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_reload_update_time_t</name>
        <enumvalue id="group__pwmv2__interface_1ggacf85b50227196efc8c6872e581526c33af2ee3965d71e1fdfc4de556bb9291194" prot="public">
          <name>pwm_reload_update_on_shlk</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggacf85b50227196efc8c6872e581526c33a5dda0fdea732a3c97021026469f40834" prot="public">
          <name>pwm_reload_update_on_compare_point</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggacf85b50227196efc8c6872e581526c33a49bf91363dc23b428b1d631d7de38808" prot="public">
          <name>pwm_reload_update_on_reload</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggacf85b50227196efc8c6872e581526c33a8fd3ee60dcb653502bace56f5320c7e3" prot="public">
          <name>pwm_reload_update_on_trigger</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="67" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gad9023b87385114e7261f5c929996eb11" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_force_mode_t</name>
        <enumvalue id="group__pwmv2__interface_1ggad9023b87385114e7261f5c929996eb11ac4ba6edc57bcf90243939bed02ca588f" prot="public">
          <name>pwm_force_output_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggad9023b87385114e7261f5c929996eb11a6328162ee634470c96292bb100135f2f" prot="public">
          <name>pwm_force_output_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggad9023b87385114e7261f5c929996eb11aa02a395d74fc074db238375fa9d250e6" prot="public">
          <name>pwm_force_output_high_z</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggad9023b87385114e7261f5c929996eb11a1c42c6d200293b904019dbdfbe63efdb" prot="public">
          <name>pwm_force_output_no_force</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>pwm output type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="79" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gad9e9c223bd5e64daf5204a2f85e33079" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_fault_mode_t</name>
        <enumvalue id="group__pwmv2__interface_1ggad9e9c223bd5e64daf5204a2f85e33079a91f66f04785940972b61c4466dca5020" prot="public">
          <name>pwm_fault_output_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggad9e9c223bd5e64daf5204a2f85e33079aca24450a8f21a63cd9da44428d35123e" prot="public">
          <name>pwm_fault_output_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggad9e9c223bd5e64daf5204a2f85e33079a05b2f7a0f878c7c7e876bad0c832ba0e" prot="public">
          <name>pwm_fault_output_high_z</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>output </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="86" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gaef8d74988e8d4ce381d2cb09bdedfa66" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_fault_pad_polarity_t</name>
        <enumvalue id="group__pwmv2__interface_1ggaef8d74988e8d4ce381d2cb09bdedfa66aceff334ac95695f2fc1e50680fdc2214" prot="public">
          <name>pad_fault_active_low</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaef8d74988e8d4ce381d2cb09bdedfa66a545addb9125e691210d6e33cab28471d" prot="public">
          <name>pad_fault_active_high</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="92" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga644abc3178c71168d1a4a766fc3498ec" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_shadow_register_output_polarity_t</name>
        <enumvalue id="group__pwmv2__interface_1gga644abc3178c71168d1a4a766fc3498eca6c5e20a0d4921d963c3b66bb2d22bc04" prot="public">
          <name>pwm_shadow_register_output_polarity_on_shlk</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga644abc3178c71168d1a4a766fc3498eca5dc08811affa38ce6f4a3fdd619c1da5" prot="public">
          <name>pwm_shadow_register_output_polarity_on_reload</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="97" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gab0c6a9b659ab518e713c217c8e272eee" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_force_shadow_trigger_t</name>
        <enumvalue id="group__pwmv2__interface_1ggab0c6a9b659ab518e713c217c8e272eeea62927fa13274be70cacac09a95ed28aa" prot="public">
          <name>pwm_force_update_shadow_immediately</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after software set shlk bit of shlk register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab0c6a9b659ab518e713c217c8e272eeea9bcce5afb8e56d30b4970319b429b36a" prot="public">
          <name>pwm_force_update_shadow_at_cmp_point</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab0c6a9b659ab518e713c217c8e272eeea18ab09209cdb3c0c8bf06be76c59d2eb" prot="public">
          <name>pwm_force_update_shadow_at_reload</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>immediately after the register being modified </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab0c6a9b659ab518e713c217c8e272eeeaba44dedffbd1655664db4576bf33134a" prot="public">
          <name>pwm_force_update_shadow_none</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after SHSYNCI assert </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="102" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga5858e26eba5f7d29021413cbf1474ba5" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_force_trigger_t</name>
        <enumvalue id="group__pwmv2__interface_1gga5858e26eba5f7d29021413cbf1474ba5a8e6b18ce2009822a6202f3c23b1f8fba" prot="public">
          <name>pwm_force_immediately</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after software set shlk bit of shlk register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5858e26eba5f7d29021413cbf1474ba5ae9677b3f355feb1452cf944f4e7c5886" prot="public">
          <name>pwm_force_at_reload</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5858e26eba5f7d29021413cbf1474ba5a214f031a393b2df82dcbcc8ce66a2393" prot="public">
          <name>pwm_force_at_trigmux</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga5858e26eba5f7d29021413cbf1474ba5a51b088cd80eb9cddfc6b50746fdf3152" prot="public">
          <name>pwm_force_none</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after SHSYNCI assert </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="109" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="109" bodyend="114"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gab3cc0fd921830d2d6f91673d95a69112" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_logic_four_cmp_cfg_t</name>
        <enumvalue id="group__pwmv2__interface_1ggab3cc0fd921830d2d6f91673d95a69112a7a37f449429db86163de1a216292db6c" prot="public">
          <name>pwm_logic_four_cmp_or</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab3cc0fd921830d2d6f91673d95a69112a98f85ccdfa9842288e1e236616cfa1f0" prot="public">
          <name>pwm_logic_four_cmp_and</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab3cc0fd921830d2d6f91673d95a69112a1d1df87709b048784fc661b020a02c9a" prot="public">
          <name>pwm_logic_four_cmp_xor</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggab3cc0fd921830d2d6f91673d95a69112aa7711c3adaeba620632e295e63c9fdeb" prot="public">
          <name>pwm_logic_four_cmp_cd</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="117" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gaec3049d2cc4071e106dadbb2f7e7e174" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_fault_recovery_trigger_t</name>
        <enumvalue id="group__pwmv2__interface_1ggaec3049d2cc4071e106dadbb2f7e7e174a75992a2dbaf3d15474caee50d617f13f" prot="public">
          <name>pwm_fault_recovery_immediately</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>immediately </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaec3049d2cc4071e106dadbb2f7e7e174aa125d1a86ab216a1548d996cda6fdaae" prot="public">
          <name>pwm_fault_recovery_on_reload</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after pwm timer counter reload time </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaec3049d2cc4071e106dadbb2f7e7e174a21656ad5027fc14497ce661c276dc99e" prot="public">
          <name>pwm_fault_recovery_on_hw_event</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after hardware event assert </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaec3049d2cc4071e106dadbb2f7e7e174a3d3f3807ff4d2e29894cf536d5363617" prot="public">
          <name>pwm_fault_recovery_on_fault_clear</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after software write faultclr bit in GCR register </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>select when to recover PWM output after fault </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="128" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_dac_channel_t</name>
        <enumvalue id="group__pwmv2__interface_1gga46f74189e3b4b2dd9cf6a1ccb3d3befdaf11b97d84b4b4c2d29884e6771ff8506" prot="public">
          <name>pwm_dac_channel_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga46f74189e3b4b2dd9cf6a1ccb3d3befdaade21b13244d4dd383f86d81cdaa6002" prot="public">
          <name>pwm_dac_channel_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga46f74189e3b4b2dd9cf6a1ccb3d3befda5ec5aa9a4a6c1ba3d9dfcf0d90054d36" prot="public">
          <name>pwm_dac_channel_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga46f74189e3b4b2dd9cf6a1ccb3d3befdaea3e67766b0a98fad7a938438438b160" prot="public">
          <name>pwm_dac_channel_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="135" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga7350e792e106c95f399df0513d91d082" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_capture_input_select_t</name>
        <enumvalue id="group__pwmv2__interface_1gga7350e792e106c95f399df0513d91d082a1f333d8038e011e6007930fba4dc210b" prot="public">
          <name>pwm_capture_from_trigmux</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga7350e792e106c95f399df0513d91d082a242163b291c62377b606f3afcc24b871" prot="public">
          <name>pwm_capture_from_gpio</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="142" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_dma_chn_t</name>
        <enumvalue id="group__pwmv2__interface_1gga99b2151bd96434ad99af2565163bdd6da64e59754545079b5019ef8f9162513b4" prot="public">
          <name>pwm_dma_0</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga99b2151bd96434ad99af2565163bdd6da9759e703135260a4aaa10de8ad745f7e" prot="public">
          <name>pwm_dma_1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga99b2151bd96434ad99af2565163bdd6dab3700c1d369d84ab5a95a1949e7c65c8" prot="public">
          <name>pwm_dma_2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga99b2151bd96434ad99af2565163bdd6dadd90862bd7544a2744d90c8b151d1beb" prot="public">
          <name>pwm_dma_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="147" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1gaf6601af0535a6f524dc2050d8171e184" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_cmp_shadow_register_update_trigger_t</name>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a5b721facda59702f0a3e6f535b173353" prot="public">
          <name>pwm_shadow_register_update_on_shlk</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>after software set shlk bit of shlk register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a7dd1665b2594690e88e09f53c8c505fb" prot="public">
          <name>pwm_shadow_register_update_on_modify</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>immediately after the register being modified </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a7746479ede9e555faa01f0e8ba8ab1c1" prot="public">
          <name>pwm_shadow_register_update_on_reload</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a4be9cc42bee4870660fac272876ec0fb" prot="public">
          <name>pwm_shadow_register_update_on_trigmux</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184acf1d098ad040c4c13fb2b0d9b3574831" prot="public">
          <name>pwm_shadow_register_update_on_rld_cmp_select0</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a5ed66494f5443cbf34968f005e42c5eb" prot="public">
          <name>pwm_shadow_register_update_on_rld_cmp_select1</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1ggaf6601af0535a6f524dc2050d8171e184a8b632a50a0c0c4bf4814afb485bd8b76" prot="public">
          <name>pwm_shadow_register_update_on_none</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="154" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="154" bodyend="162"/>
      </memberdef>
      <memberdef kind="enum" id="group__pwmv2__interface_1ga0955cf2d150782fbf9e199d1de928d2c" prot="public" static="no" strong="no">
        <type></type>
        <name>pwm_cmp_source_t</name>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2cabfe7981b86f3b03fe0b3e35ce7f84f86" prot="public">
          <name>cmp_value_from_shadow_val</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2ca3ec83fb69cff47514dc78e58eea0db03" prot="public">
          <name>cmp_value_from_calculate</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2ca425a1183b1e20180ebd6115a6b1faeeb" prot="public">
          <name>cmp_value_from_capture_posedge</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2ca9a5163530af6200b66036db886799ce2" prot="public">
          <name>cmp_value_from_counters</name>
          <initializer>= 0x38</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2ca125b03e0504942c81669cc170346c6e0" prot="public">
          <name>cmp_value_fffff000</name>
          <initializer>= 0x3e</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__pwmv2__interface_1gga0955cf2d150782fbf9e199d1de928d2ca266e361ebfa06c88dd544486fedde43e" prot="public">
          <name>cmp_value_ffffff00</name>
          <initializer>= 0x3f</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="164" column="1" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="164" bodyend="171"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" prot="public" static="no">
        <type>struct <ref refid="structpwmv2__cmp__config" kindref="compound">pwmv2_cmp_config</ref></type>
        <definition>typedef struct pwmv2_cmp_config pwmv2_cmp_config_t</definition>
        <argsstring></argsstring>
        <name>pwmv2_cmp_config_t</name>
        <briefdescription>
<para>pwm compare config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="188" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pwmv2__interface_1gabf8226a40d6175115450d86bca5fd368" prot="public" static="no">
        <type>struct <ref refid="structpwmv2__async__fault__source__config" kindref="compound">pwmv2_async_fault_source_config</ref></type>
        <definition>typedef struct pwmv2_async_fault_source_config pwmv2_async_fault_source_config_t</definition>
        <argsstring></argsstring>
        <name>pwmv2_async_fault_source_config_t</name>
        <briefdescription>
<para>pwm fault source config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="197" column="35"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pwmv2__interface_1ga786827c3a95746c0eebefb63754fd541" prot="public" static="no">
        <type>struct <ref refid="structpwmv2__config" kindref="compound">pwmv2_config</ref></type>
        <definition>typedef struct pwmv2_config pwmv2_config_t</definition>
        <argsstring></argsstring>
        <name>pwmv2_config_t</name>
        <briefdescription>
<para>pwm config data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="221" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pwmv2__interface_1gae93ed61d3ca9fb8e63f5b1ba8cee3f69" prot="public" static="no">
        <type>struct <ref refid="structpwmv2__pair__config" kindref="compound">pwmv2_pair_config</ref></type>
        <definition>typedef struct pwmv2_pair_config pwmv2_pair_config_t</definition>
        <argsstring></argsstring>
        <name>pwmv2_pair_config_t</name>
        <briefdescription>
<para>pair pwm config </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="229" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="group__pwmv2__interface_1gaf13c51a53907b5c980528b10327fcb4f" prot="public" static="no">
        <type>struct <ref refid="structpwmv2__cmp__calculate__cfg" kindref="compound">pwmv2_cmp_calculate_cfg</ref></type>
        <definition>typedef struct pwmv2_cmp_calculate_cfg pwmv2_cmp_calculate_cfg_t</definition>
        <argsstring></argsstring>
        <name>pwmv2_cmp_calculate_cfg_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="243" column="27"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__pwmv2__interface_1ga454fffe6baec69dfa06a3d3c604d755c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pwmv2_deinit</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_deinit</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>pwm deinitialize function </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="256" column="6" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="11" bodyend="40" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="256" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaaa64bc4ff8780a783b3e860bfbd96be3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_issue_shadow_register_lock_event</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_issue_shadow_register_lock_event</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>issue all shawdow register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="263" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0898224ca782698d9e5c32da997e1adb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_shadow_register_lock</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_shadow_register_lock</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>lock all shawdow register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="273" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga8b18d39b011de8e27c2eb91e4ba06786" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_counter_reload_trigmux_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t trig_index)</argsstring>
        <name>pwmv2_set_counter_reload_trigmux_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>select one trigger from 8, set to use input signal(selected by cnt_reload_trig) to reload timer </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>one trigger from 8 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="285" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga7147324449242a1f9e53960ff822cea6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_multi_counter_sync</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t mask)</argsstring>
        <name>pwmv2_enable_multi_counter_sync</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Multiple counters are enabled at the same time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>bit0 - cnt0, bit1 - cnt1, bitn - cntn, n==3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="296" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga28294888311c0e07f22982334ac008e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_start_pwm_output_sync</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t mask)</argsstring>
        <name>pwmv2_start_pwm_output_sync</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Multiple pwm out at the same time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>bit0 - cnt0, bit1 - cnt1, bitn - cntn, n==3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="309" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga234db669d8a9709aba1d79854b3e1305" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_shadow_register_unlock</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_shadow_register_unlock</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>unlock all shadow register </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="319" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab303e93d8b7d1e22c1a3eedb52d06d4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_shadow_unlock_bit_mask</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_shadow_unlock_bit_mask</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>The shadow registers can be updated only when related unlock_bit is set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>bit2 to bit 29 for value_shadow, bit30 for force_mode, bit31 for polarity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="330" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga73fa6609358ba0800a39cd39093b8c44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_shadow_val</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t index, uint32_t value, uint8_t high_resolution_tick, bool enable_half_cycle)</argsstring>
        <name>pwmv2_set_shadow_val</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>high_resolution_tick</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_half_cycle</declname>
        </param>
        <briefdescription>
<para>Set the value of the shadow register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>normal value (24bit) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high_resolution_tick</parametername>
</parameternamelist>
<parameterdescription>
<para>High precision pwm values (0 -255) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable_half_cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>half-cycle pwm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="344" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaafbc8c8dd81b20f0db6f563f06b263ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_force_output</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_force_mode_t mode, bool invert)</argsstring>
        <name>pwmv2_force_output</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gad9023b87385114e7261f5c929996eb11" kindref="member">pwm_force_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>invert</declname>
        </param>
        <briefdescription>
<para>force pwm output </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gad9023b87385114e7261f5c929996eb11" kindref="member">pwm_force_mode_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invert</parametername>
</parameternamelist>
<parameterdescription>
<para>0 - low level, 1 - high level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="357" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="357" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaa4b02703152da46db77149e9528e0ca3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_four_cmp</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_four_cmp</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>enable four pwm outputs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="370" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga56742ed499b65c2963a5a1013e1ebc1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_four_cmp</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_four_cmp</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>disable four pwm outputs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="381" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad05948b982015e581df086dfa478dd95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_fault_signal_select_from_pad</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t pad_index)</argsstring>
        <name>pwmv2_fault_signal_select_from_pad</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pad_index</declname>
        </param>
        <briefdescription>
<para>Direct selection of the fail signal from the pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pad_index</parametername>
</parameternamelist>
<parameterdescription>
<para>motor pad </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="393" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gabdbe16227506734eeaf04d593d2942ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_fault_signal_polarity</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_fault_pad_polarity_t polarity)</argsstring>
        <name>pwmv2_fault_signal_polarity</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gaef8d74988e8d4ce381d2cb09bdedfa66" kindref="member">pwm_fault_pad_polarity_t</ref></type>
          <declname>polarity</declname>
        </param>
        <briefdescription>
<para>Configure the polarity of the fail signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polarity</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gaef8d74988e8d4ce381d2cb09bdedfa66" kindref="member">pwm_fault_pad_polarity_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="405" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga7ca35c62e8b3644ef815ac4e6e11f132" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_fault_from_pad</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_fault_from_pad</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable the fault signal from the pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="416" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga09f14dfb2d135b3f28e062994d5e13c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_fault_from_pad</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_fault_from_pad</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable the fault signal from the pin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="427" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0ffe43134ca592cdb8fd7c350c9effc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_fault_from_trigmux</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_fault_from_trigmux</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable the fault signal from the trigmux. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="438" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac279143a74707913464b36387c9bba15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_fault_from_trigmux</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_fault_from_trigmux</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable the fault signal from the trigmux. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="449" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="449" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga060357c2d3cf72424c6f4182534f29e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_output_invert</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_output_invert</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable pwm output invert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="460" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="460" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga66000e4d190cee7d70ff417b16a7f637" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_output_invert</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_output_invert</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable pwm output invert. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="471" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gafb8c5850aeb8f16728b88b89230e2e4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_invert_by_shadow</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_shadow_register_output_polarity_t update_select)</argsstring>
        <name>pwmv2_enable_invert_by_shadow</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga644abc3178c71168d1a4a766fc3498ec" kindref="member">pwm_shadow_register_output_polarity_t</ref></type>
          <declname>update_select</declname>
        </param>
        <briefdescription>
<para>Enable invert operations via shadow registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_select</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga644abc3178c71168d1a4a766fc3498ec" kindref="member">pwm_shadow_register_output_polarity_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="483" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="483" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga38d564f8aa7482e154b0013bb682609c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_invert_by_shadow</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_invert_by_shadow</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable invert operations via shadow registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="495" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga45a9173acc0077b9b944e169211f59d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_channel_enable_output</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_channel_enable_output</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable pwm output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="506" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="506" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac089f92603a610670397288c2a659708" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_channel_disable_output</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_channel_disable_output</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable pwm output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="517" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="517" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaff4c6dc3774ba16e972afe7816a6cfe3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_force_update_time_by_shadow</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_force_shadow_trigger_t update_time)</argsstring>
        <name>pwmv2_force_update_time_by_shadow</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gab0c6a9b659ab518e713c217c8e272eee" kindref="member">pwm_force_shadow_trigger_t</ref></type>
          <declname>update_time</declname>
        </param>
        <briefdescription>
<para>Forces the output configuration to be updated from the time shadow hosting takes effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update_time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gab0c6a9b659ab518e713c217c8e272eee" kindref="member">pwm_force_shadow_trigger_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="529" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga754b6312a3ffad69ccde72ce9473b179" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_fault_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_fault_mode_t mode)</argsstring>
        <name>pwmv2_set_fault_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gad9e9c223bd5e64daf5204a2f85e33079" kindref="member">pwm_fault_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>set the fault mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gad9e9c223bd5e64daf5204a2f85e33079" kindref="member">pwm_fault_mode_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="541" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="541" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga1f9c48ee0c42fd246d8337f3266e444a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_fault_recovery_time</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_fault_recovery_trigger_t trig)</argsstring>
        <name>pwmv2_set_fault_recovery_time</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gaec3049d2cc4071e106dadbb2f7e7e174" kindref="member">pwm_fault_recovery_trigger_t</ref></type>
          <declname>trig</declname>
        </param>
        <briefdescription>
<para>Set the fault mode recovery time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gaec3049d2cc4071e106dadbb2f7e7e174" kindref="member">pwm_fault_recovery_trigger_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="553" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="553" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga23a1b0d56d9ec7ce64f678bdba28d0d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_force_by_hardware</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_force_by_hardware</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Trigger forced mode by hardware signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="564" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="564" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga1bee9da007bb676541885be45c2ec9e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_force_by_software</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_force_by_software</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable force mode triggered by software. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="575" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga761183dd6d45d2af4b2498e72b626e51" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_force_by_software</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_force_by_software</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable force mode triggered by software. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="586" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga3cab5bddfdfaeb5fa62203ad6d211c7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_pair_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_pair_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable pwm complementary mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="597" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="597" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaa60283108e62342e1f079cea8ba0f967" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_pair_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_pair_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable pwm complementary mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="608" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga1a5d195dd98aa5344b79cd50720866ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_four_cmp_logic</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_logic_four_cmp_cfg_t logic)</argsstring>
        <name>pwmv2_set_four_cmp_logic</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gab3cc0fd921830d2d6f91673d95a69112" kindref="member">pwm_logic_four_cmp_cfg_t</ref></type>
          <declname>logic</declname>
        </param>
        <briefdescription>
<para>Configure the logic between the 4 cmp, valid only if the 4 cmp output is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logic</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gab3cc0fd921830d2d6f91673d95a69112" kindref="member">pwm_logic_four_cmp_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="620" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gae011db26006d1bd68ab899e35f7a4f77" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_force_update_time</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_force_trigger_t time)</argsstring>
        <name>pwmv2_set_force_update_time</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5858e26eba5f7d29021413cbf1474ba5" kindref="member">pwm_force_trigger_t</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Setting the effective time of forced output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5858e26eba5f7d29021413cbf1474ba5" kindref="member">pwm_force_trigger_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="632" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaafd3038c2c80b69cc206c14357c215e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_trig_force_mode_select_trigmux_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t trigmux_index)</argsstring>
        <name>pwmv2_trig_force_mode_select_trigmux_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trigmux_index</declname>
        </param>
        <briefdescription>
<para>Selecting trigmux&apos;s signal as a forced mode trigger source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigmux_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trigmux index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="644" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9cc24a908cc7fd3d5795981de6b790d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_trig_force_hardware_or_software_select_trigmux_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t trigmux_index)</argsstring>
        <name>pwmv2_trig_force_hardware_or_software_select_trigmux_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trigmux_index</declname>
        </param>
        <briefdescription>
<para>Selection of trigger signals for software or hardware trigmux. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigmux_index</parametername>
</parameternamelist>
<parameterdescription>
<para>select one trigger from 8 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="656" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="656" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga6ac902b0ce5fffbd64ab45149ae0e35d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_select_force_trigmux_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t trigmux_index)</argsstring>
        <name>pwmv2_select_force_trigmux_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trigmux_index</declname>
        </param>
        <briefdescription>
<para>Select the trigger source that forces the output to take effect. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigmux_index</parametername>
</parameternamelist>
<parameterdescription>
<para>select one trigger from 8 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="668" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaf463c6a934e5a903a6ce816d2f6ddbea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_select_recovery_fault_trigmux_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t trigmux_index)</argsstring>
        <name>pwmv2_select_recovery_fault_trigmux_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trigmux_index</declname>
        </param>
        <briefdescription>
<para>Selection of trigger signal for fault recovery. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigmux_index</parametername>
</parameternamelist>
<parameterdescription>
<para>select one trigger from 8 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="680" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga99e155a76cfb08a7be0a72ee46d185c9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_dead_area</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint32_t dead)</argsstring>
        <name>pwmv2_set_dead_area</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dead</declname>
        </param>
        <briefdescription>
<para>set pwm dead area </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dead</parametername>
</parameternamelist>
<parameterdescription>
<para>dead area time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="692" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga29e58848fee4a39a93c90ce608ea2237" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_trigout_cmp_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t trigmux_chn, uint8_t cmp_index)</argsstring>
        <name>pwmv2_set_trigout_cmp_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>trigmux_chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>Setting the comparator as an input to trigmux. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trigmux_chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="704" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="704" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaab10a44f66f63be04b5058ad1cf08d1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_software_force</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_enable_software_force</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Enable software forced output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="715" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="715" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga566bb4b9a5d9c94df589cc7097bd0c61" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_software_force</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_disable_software_force</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Disable software forced output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="726" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0caf3565835e89c24c29cd4ef31fad16" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_software_dac_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dac_channel_t dac_index)</argsstring>
        <name>pwmv2_enable_software_dac_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref></type>
          <declname>dac_index</declname>
        </param>
        <briefdescription>
<para>Enable the software dac mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dac_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="772" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="772" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaa94c04aa4d74e11a19a8b382d725dcb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_software_dac_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dac_channel_t dac_index)</argsstring>
        <name>pwmv2_disable_software_dac_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref></type>
          <declname>dac_index</declname>
        </param>
        <briefdescription>
<para>Disable the software dac mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dac_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="783" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="783" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gae2bf32e6b698adfc32e2b1dd694129f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_debug_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_enable_debug_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Enable debug mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="793" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="793" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga69148cc175876f31d59d543e700bdc38" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_debug_mode</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_disable_debug_mode</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Disable debug mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="804" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="804" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaf1af784be85d25a14a0bf8d7080fb213" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_fault_event</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_clear_fault_event</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>Clear fault event. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="815" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac4271e96b90a5c93dc7333864c827530" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_shadow_lock_feature</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_enable_shadow_lock_feature</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Using the Shadow Register Function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="825" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="825" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga735c3609e27e5cb0bfe5c6f85d769367" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_shadow_lock_feature</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_disable_shadow_lock_feature</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Do not use the shadow register function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="835" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="835" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga5290a933beb44684511f8fed43107ee3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_counter_working_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_get_counter_working_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>Get counter work status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="847" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="847" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaa0c68203adafde26ebd7b9fed650e8cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_cmp_working_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index)</argsstring>
        <name>pwmv2_get_cmp_working_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>Get cmp work status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="859" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="859" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga2992fec4333639c2b132dd36575458d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_force_working_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_force_working_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get force mode work status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="870" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="870" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga885bdbf8cfc0888340dc4d89db238d54" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_force_work_out_polarity_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_force_work_out_polarity_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get the status of the output polarity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t polarity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="881" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="881" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga199440e8a6e02dbc850290904e2f2e41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_counter_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_get_counter_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>Getting the value of a counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t counter value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="893" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="893" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga1ca1ad7d2f429f3852174c3490c55074" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_dac_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dac_channel_t dac_index, uint32_t value)</argsstring>
        <name>pwmv2_set_dac_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref></type>
          <declname>dac_index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>set dac value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dac_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>dac value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="905" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="905" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0485feff76e20e7214c22aa039ff6c86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_capture_posedge_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_get_capture_posedge_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>get capture posedge value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t posedge value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="917" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga574884f1d8661a2e191aa7829479dc86" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_capture_selection_input_source</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwm_capture_input_select_t select)</argsstring>
        <name>pwmv2_capture_selection_input_source</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga7350e792e106c95f399df0513d91d082" kindref="member">pwm_capture_input_select_t</ref></type>
          <declname>select</declname>
        </param>
        <briefdescription>
<para>Select the input source for the captured signal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga7350e792e106c95f399df0513d91d082" kindref="member">pwm_capture_input_select_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="929" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="929" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga05997445db5f348daf758adb719f51e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_capture_counter_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, uint8_t counter_index)</argsstring>
        <name>pwmv2_set_capture_counter_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>Set the counter to be used for the capture channel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para>counter index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="942" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="942" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga89135412ff553cff8d74d3889f6c40c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_capture_negedge_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn)</argsstring>
        <name>pwmv2_get_capture_negedge_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <briefdescription>
<para>get capture negedge value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t posedge value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="955" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="955" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaae2e98b897bb96516e8a21877607ddb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_irq_status_all</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_irq_status_all</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get all interrupt status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="966" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="966" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gafb7881536e488317da317323fc0303a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_calculate_overflow_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_clear_calculate_overflow_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>clear calculate overflow irq status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="976" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="976" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga21c60cb722e26d2ef1de31ee98c36722" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_calculate_overflow_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_enable_calculate_overflow_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>enable calculate overflow irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="986" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="986" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga33cf5cc0e20d40c97e336f926ebb42d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_calculate_overflow_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_disable_calculate_overflow_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Disable calculate overflow irq. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="996" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="996" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0168b3207d1c0f9e97cce23728324dcf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_cmp_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_cmp_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get cmp irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1007" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1007" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga13f64f7f9ac2ebfc83c47208c3edc43f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_cmp_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_cmp_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear cmp irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>uint32_t irq status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1018" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1018" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab35bc6823122c0151725143f64678b4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_reload_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_reload_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get reload irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t reload irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1029" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1029" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaca14f8a49c37b7a5c628827f433193ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_reload_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_reload_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear reload irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq status mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1040" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1040" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga76d7d975cfefe6e8464f53b86c3d4259" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_capture_posedge_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_capture_posedge_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get capture posedge irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1051" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1051" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaabc447819bb279cb58e27c92ad1bd83e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_capture_posedge_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_capture_posedge_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear capture posedge irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>capture posedge irq mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1062" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1062" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga2283e2ecbf403233cdeac134dc983eda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_capture_negedge_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_capture_negedge_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get capture negedge irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1073" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1073" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac69b01c54a7ebd2f7587f1b1ca4c3187" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_capture_negedge_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_capture_negedge_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear capture negedge irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>capture posedge irq mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1084" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1084" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga5992658e3ebf6bca031268073b564116" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_fault_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_fault_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get fault irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1095" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1095" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac9ba89a7f9824bb1a3ee78a8c4baba5f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_fault_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_fault_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear fault irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>pwm irq mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1106" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1106" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga3c9870c729fdb25fefa3b891b7f44bde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pwmv2_get_burstend_irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x)</argsstring>
        <name>pwmv2_get_burstend_irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <briefdescription>
<para>Get burstend irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t irq status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1117" column="24" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga4095e674f7cade65d0eb10db40604fda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_clear_burstend__irq_status</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint32_t mask)</argsstring>
        <name>pwmv2_clear_burstend__irq_status</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear burstend irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1128" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1128" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga479a4f2c2b5490d778ab915e59ea60b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_cmp_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index)</argsstring>
        <name>pwmv2_enable_cmp_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>enable cmp irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1139" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1139" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac87409fef72da6cee4a83debd69832e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_cmp_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index)</argsstring>
        <name>pwmv2_disable_cmp_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>disable cmp irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1150" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1150" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaa5b54c076f8167d6ecf52227f89ff659" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_reload_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_enable_reload_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>enable reload irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1161" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1161" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac7d8483cac38509cca929c4e7a3946d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_reload_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_disable_reload_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>disable reload irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1172" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1172" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0429cf2fc897b6801695513f03e03c0f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_capture_posedge_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_enable_capture_posedge_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>enable capture posedge irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1183" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1183" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga8f9d4973e5220e73adc5712e33493f29" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_capture_posedge_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_disable_capture_posedge_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>disable capture posedge irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1194" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1194" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab9630e9b963eae6167f2409da608fdf1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_capture_nededge_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_enable_capture_nededge_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>enable capture nedege irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1205" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1205" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga5b1c5ba28d2497c3e1757d1cff2cea65" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_capture_nededge_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_disable_capture_nededge_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>disable capture nedege irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1216" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1216" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad7833648a320413247ce58595846d3cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_fault_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_enable_fault_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>enable fault irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1227" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1227" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaf535ceb8065d9610978184aeec6c8238" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_fault_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t channel_index)</argsstring>
        <name>pwmv2_disable_fault_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>channel_index</declname>
        </param>
        <briefdescription>
<para>disable fault irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1238" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1238" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9ac50367fc1e997c08c9f8ecfc040f3c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_burstend_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_enable_burstend_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>enable burstend irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1249" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1249" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0be964445eb23642e3e13ca8b3a2cace" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_burstend_irq</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_disable_burstend_irq</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>disable burstend irq </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1260" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1260" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gadabf29416270e131679afe7e0e140dee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_dma_at_compare_point</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dma_chn_t dma_channel, uint8_t cmp_index)</argsstring>
        <name>pwmv2_enable_dma_at_compare_point</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref></type>
          <declname>dma_channel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>enable dma at compare point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dma_channel</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1272" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1272" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga2f1149da4967606a6a534e9bc6604c9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_dma_at_compare_point</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dma_chn_t dma_channel)</argsstring>
        <name>pwmv2_disable_dma_at_compare_point</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref></type>
          <declname>dma_channel</declname>
        </param>
        <briefdescription>
<para>disable dma at compare point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dma_channel</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1284" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1284" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga83e9a7d97fb4664db17648aee2476a0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_dma_at_reload_point</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dma_chn_t dma_channel, pwm_counter_t reload_index)</argsstring>
        <name>pwmv2_enable_dma_at_reload_point</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref></type>
          <declname>dma_channel</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>reload_index</declname>
        </param>
        <briefdescription>
<para>enable dma at reload point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dma_channel</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reload_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1296" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1296" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga028968ce43f36d46cb3ac1bc1ccd2fa0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_dma_at_reload_point</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_dma_chn_t dma_channel)</argsstring>
        <name>pwmv2_disable_dma_at_reload_point</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref></type>
          <declname>dma_channel</declname>
        </param>
        <briefdescription>
<para>disable dma at reload point </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dma_channel</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga99b2151bd96434ad99af2565163bdd6d" kindref="member">pwm_dma_chn_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1308" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1308" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga09eec6a6200645b7ab2524af84f3e72d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_reload_select_compare_point0_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t cmp_index)</argsstring>
        <name>pwmv2_reload_select_compare_point0_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>select compare point 0 index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1320" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1320" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad4f975bfc5b5d1858f4a902c467abe2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_reload_select_compare_point1_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t cmp_index)</argsstring>
        <name>pwmv2_reload_select_compare_point1_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <briefdescription>
<para>select compare point 1 index </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1332" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1332" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga941ed7c7841351b9748cb846ccb85aaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_reload_select_input_trigger</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t trig_index)</argsstring>
        <name>pwmv2_reload_select_input_trigger</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>Select the input trigger source for the reload point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trig index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1344" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1344" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaf6d2120877e27504cb0bf37dddbcff97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_reload_update_time</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, pwm_reload_update_time_t update)</argsstring>
        <name>pwmv2_set_reload_update_time</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gacf85b50227196efc8c6872e581526c33" kindref="member">pwm_reload_update_time_t</ref></type>
          <declname>update</declname>
        </param>
        <briefdescription>
<para>Set reload update time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gacf85b50227196efc8c6872e581526c33" kindref="member">pwm_reload_update_time_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1356" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1356" bodyend="1359"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga8ad240a14a04bb9e653babd228313eca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_set_dac_data_parameter</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t dac_parameter)</argsstring>
        <name>pwmv2_counter_set_dac_data_parameter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dac_parameter</declname>
        </param>
        <briefdescription>
<para>Set dac data parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dac_parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>dac parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1368" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1368" bodyend="1371"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga53c8b8b19c2abc1f019b43b3fde1f894" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_conuter_select_dac_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, pwm_dac_channel_t dac_index)</argsstring>
        <name>pwmv2_conuter_select_dac_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref></type>
          <declname>dac_index</declname>
        </param>
        <briefdescription>
<para>Select dac index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dac_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga46f74189e3b4b2dd9cf6a1ccb3d3befd" kindref="member">pwm_dac_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1380" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1380" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad1529a5c820ebbdceb84fa8450bd1133" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_up_limit_enable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_up_limit_enable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable the upper limit of the calculation unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1391" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1391" bodyend="1394"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac8af06a556986ad12c4b84e4e18e7ac5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_up_limit_disable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_up_limit_disable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable the upper limit of the calculation unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1402" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1402" bodyend="1405"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga55ac2b269a3a22514e1a088ecb72f337" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_select_up_limit_from_shadow_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t index)</argsstring>
        <name>pwmv2_counter_select_up_limit_from_shadow_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Select the upper limit from the shadow register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1414" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1414" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac716fa80b0227b938d11ab408e5359aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_low_limit_enable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_low_limit_enable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable the lower limit of the calculation unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1425" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1425" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga4f26f09424c7ff9349ff3e2b7fef5de9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_low_limit_disable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_low_limit_disable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable the lower limit of the calculation unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1437" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1437" bodyend="1440"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga14ad79f5f566fb6d2856ac9be9affb78" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_select_low_limit_from_shadow_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t index)</argsstring>
        <name>pwmv2_counter_select_low_limit_from_shadow_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Select the lower limit from the shadow register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1449" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1449" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab3fb751260b5f57786c7563c18a0f81b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_select_data_offset_from_shadow_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t index)</argsstring>
        <name>pwmv2_counter_select_data_offset_from_shadow_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Select data offset from shadow register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1461" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1461" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaea7a04cbb8b44f8e0b7490cb20b9e6ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_enable_reload_by_trig</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_enable_reload_by_trig</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>enable counter reload by trigmux </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1472" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1472" bodyend="1475"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gae59c9d9d030a198d4af35f30137dbc6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_disable_reload_by_trig</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_disable_reload_by_trig</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>disable counter reload by trigmux </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1483" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1483" bodyend="1486"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga5b2d79b0b3e9fb0498c98746cc07fd50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_update_trig1</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t trig_index)</argsstring>
        <name>pwmv2_counter_update_trig1</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>Select counter update by trigmux1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trigmux index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1495" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1495" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac4d97adabe80faa3bb36cd6a1724ac2a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_enable_update_trig1</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_enable_update_trig1</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable counter update by trigmux1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1506" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1506" bodyend="1509"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga4a8b4e6894fafbd62fcd6e7c586fac8f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_disable_update_trig1</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_disable_update_trig1</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable counter update by trigmux1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1517" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1517" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0d3c49ab9f852c3967adee4982f9a9e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_set_trig1_calculate_cell_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t cal_index)</argsstring>
        <name>pwmv2_counter_set_trig1_calculate_cell_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>Enable change counter value to one of the calculation cell output when cnt_update_triger1 issued. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cal index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1529" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1529" bodyend="1532"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaec0665f74998dedccca83c703368eb3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_update_trig0</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t trig_index)</argsstring>
        <name>pwmv2_counter_update_trig0</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>Select counter update by trigmux0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trigmux index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1541" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1541" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9002492f46efa92a0b14a1ad08623be3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_enable_update_trig0</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_enable_update_trig0</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable counter update by trigmux0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1552" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1552" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9343aa87a103ec687bb829fbe1c31046" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_disable_update_trig0</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_disable_update_trig0</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable counter update by trigmux0. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1563" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1563" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga37eed6b74d09c3c445de626111e25620" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_set_trig0_calculate_cell_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t cal_index)</argsstring>
        <name>pwmv2_counter_set_trig0_calculate_cell_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>Enable change counter value to one of the calculation cell output when cnt_update_triger0 issued. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cal index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1575" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1575" bodyend="1578"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga535060762153a897d55f39b12b45cefc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_start_select_trigger_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint8_t trig_index)</argsstring>
        <name>pwmv2_counter_start_select_trigger_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>Set trigmux index to start counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trig index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1587" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1587" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9ea3c724428592c22723c08710cd42b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_start_trigger_enable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_start_trigger_enable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable trigmux to trigger counter initiation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1598" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1598" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaab6926ef8be64454fddf5240e05a2569" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_start_trigger_disable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_start_trigger_disable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable trigmux to trigger counter initiation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1609" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1609" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab727ecaa2e95129e32f468af233bc5a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_set_counter_burst</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter, uint16_t burst)</argsstring>
        <name>pwmv2_set_counter_burst</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>burst</declname>
        </param>
        <briefdescription>
<para>Set counter burst value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>burst</parametername>
</parameternamelist>
<parameterdescription>
<para>burst value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1621" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1621" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga2e0e30f06e246ef3b79d08ac7964522c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_counter_burst_disable</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_counter_burst_disable</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable counter burst function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1632" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1632" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gab9f163007f38503398bd923b3c74f88c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_start_pwm_output</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_start_pwm_output</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>start pwm output </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1643" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1643" bodyend="1646"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga661e204fa28b5b3f31ce4f8cf94e0c94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_reset_counter</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_reset_counter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Reset pwm counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1654" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1654" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad55388c93f796179aa52f035c03a6e4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_enable_counter</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_enable_counter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Enable pwm counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1665" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1665" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gae8069e05014abdd0ea836348f0aab56a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_disable_counter</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_counter_t counter)</argsstring>
        <name>pwmv2_disable_counter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Disable pwm counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1676" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1676" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga62cd562d25ebb070b4160254fd7e43ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_set_up_limit_parameter</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t value)</argsstring>
        <name>pwmv2_calculate_set_up_limit_parameter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set calculate up limit parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1688" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1688" bodyend="1691"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaf4d5e5aa5b9ac74b3fe1330c97e20e6a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_set_low_limit_parameter</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t value)</argsstring>
        <name>pwmv2_calculate_set_low_limit_parameter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set calculate low limit parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1700" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1700" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gabeaed148a7ca5b152d429ae3135aadc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_set_period_parameter</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t value)</argsstring>
        <name>pwmv2_calculate_set_period_parameter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set calculate period parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1712" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1712" bodyend="1715"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac28bc0ac1d5d4132be4d6eeade16c24a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_set_dac_value_parameter</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t value)</argsstring>
        <name>pwmv2_calculate_set_dac_value_parameter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set calculate dac value parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1724" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1724" bodyend="1727"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gafb7f0de24072710a323222d4016e07fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_select_counter_calculate_index</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t counter_calculate)</argsstring>
        <name>pwmv2_calculate_select_counter_calculate_index</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>counter_calculate</declname>
        </param>
        <briefdescription>
<para>Select calculate index to counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_calculate</parametername>
</parameternamelist>
<parameterdescription>
<para>counter index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1736" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1736" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gafa52b37f57a8d2a11056b5d4c5582eee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_select_in_value</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t index)</argsstring>
        <name>pwmv2_calculate_select_in_value</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Select calculate input value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1748" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1748" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac74b659599fba6539179c31db4942ed1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_enable_up_limit</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index)</argsstring>
        <name>pwmv2_calculate_enable_up_limit</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>enable calculate up limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1759" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1759" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga76358b4347e8fe392443d511b8bccea8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_disable_up_limit</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index)</argsstring>
        <name>pwmv2_calculate_disable_up_limit</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>disable calculate up limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1770" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1770" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gae6dd473caf9fe58f1aef91c7ba202de9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_select_up_limit_offset</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t shadow_index)</argsstring>
        <name>pwmv2_calculate_select_up_limit_offset</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shadow_index</declname>
        </param>
        <briefdescription>
<para>Select up limit offset from shadow index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shadow_index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1782" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1782" bodyend="1785"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gad4fa867381c531958ac030c8f55e7788" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_select_low_limit_offset</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t shadow_index)</argsstring>
        <name>pwmv2_calculate_select_low_limit_offset</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shadow_index</declname>
        </param>
        <briefdescription>
<para>Select low limit offset from shadow index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shadow_index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1794" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1794" bodyend="1797"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gac56248c5e77db28498134d317e728379" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_select_in_offset</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, uint8_t shadow_index)</argsstring>
        <name>pwmv2_calculate_select_in_offset</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>shadow_index</declname>
        </param>
        <briefdescription>
<para>Select offset from shadow index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shadow_index</parametername>
</parameternamelist>
<parameterdescription>
<para>shadow index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1806" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1806" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga2431ebfdf77a0d028521c2047d3b7570" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_enable_low_limit</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index)</argsstring>
        <name>pwmv2_calculate_enable_low_limit</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>enable low limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1817" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1817" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga761c540460d8e17e968da08aed1f74d3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_calculate_disable_low_limit</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index)</argsstring>
        <name>pwmv2_calculate_disable_low_limit</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <briefdescription>
<para>disable low limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1828" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1828" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga9936308a51871b9c740d2e386cb7ac53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_select_cmp_trigmux</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index, uint8_t trig_index)</argsstring>
        <name>pwmv2_select_cmp_trigmux</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>trig_index</declname>
        </param>
        <briefdescription>
<para>Select cmp trigmux index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_index</parametername>
</parameternamelist>
<parameterdescription>
<para>trigmux index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1840" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1840" bodyend="1843"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga452f2e2b49cb30e52efae473a8373d1f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_cmp_update_trig_time</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index, pwm_cmp_shadow_register_update_trigger_t trig_time)</argsstring>
        <name>pwmv2_cmp_update_trig_time</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gaf6601af0535a6f524dc2050d8171e184" kindref="member">pwm_cmp_shadow_register_update_trigger_t</ref></type>
          <declname>trig_time</declname>
        </param>
        <briefdescription>
<para>Select cmp update trigmux time. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trig_time</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gaf6601af0535a6f524dc2050d8171e184" kindref="member">pwm_cmp_shadow_register_update_trigger_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1852" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1852" bodyend="1855"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0dd8970009e9541b8a03669c85348af8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_select_cmp_source</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index, pwm_cmp_source_t cmp_sel, uint8_t index)</argsstring>
        <name>pwmv2_select_cmp_source</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga0955cf2d150782fbf9e199d1de928d2c" kindref="member">pwm_cmp_source_t</ref></type>
          <declname>cmp_sel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Select cmp source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_sel</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga0955cf2d150782fbf9e199d1de928d2c" kindref="member">pwm_cmp_source_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>source index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1865" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1865" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga77da6110f3f07b8c5fa577a61417ef62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pwmv2_cmp_select_counter</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cmp_index, pwm_counter_t counter_index)</argsstring>
        <name>pwmv2_cmp_select_counter</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref></type>
          <declname>counter_index</declname>
        </param>
        <briefdescription>
<para>Select cmp use counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter_index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga073afe5210aca56cc6508f1c4e67a0f1" kindref="member">pwm_counter_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1877" column="20" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="1877" bodyend="1882"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga0e0e4f34e5804999a29308285a2b1c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pwmv2_config_cmp</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t index, pwmv2_cmp_config_t *config)</argsstring>
        <name>pwmv2_config_cmp</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>config pwm cmp </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1891" column="6" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="42" bodyend="61" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1891" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gaff66875754198926c41719c856ee87c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pwmv2_config_async_fault_source</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t index, pwmv2_async_fault_source_config_t *config)</argsstring>
        <name>pwmv2_config_async_fault_source</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gabf8226a40d6175115450d86bca5fd368" kindref="member">pwmv2_async_fault_source_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>config async fault source </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gabf8226a40d6175115450d86bca5fd368" kindref="member">pwmv2_async_fault_source_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1900" column="6" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="63" bodyend="68" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1900" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga275eec39f2b8f1c9e8d652db1125d146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pwmv2_config_pwm</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t index, pwmv2_config_t *config, bool enable_pair_mode)</argsstring>
        <name>pwmv2_config_pwm</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga786827c3a95746c0eebefb63754fd541" kindref="member">pwmv2_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable_pair_mode</declname>
        </param>
        <briefdescription>
<para>config pwm </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga786827c3a95746c0eebefb63754fd541" kindref="member">pwmv2_config_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable_pair_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>bool </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1910" column="6" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="70" bodyend="90" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1910" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gabe312ce989fdebd6fffd3a60b1ecc9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pwmv2_setup_waveform</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwmv2_config_t *pwm_config, uint8_t cmp_start_index, pwmv2_cmp_config_t *cmp, uint8_t cmp_num)</argsstring>
        <name>pwmv2_setup_waveform</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga786827c3a95746c0eebefb63754fd541" kindref="member">pwmv2_config_t</ref> *</type>
          <declname>pwm_config</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_start_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> *</type>
          <declname>cmp</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_num</declname>
        </param>
        <briefdescription>
<para>Set pwm waveform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structpwm__config" kindref="compound">pwm_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga786827c3a95746c0eebefb63754fd541" kindref="member">pwmv2_config_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_start_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp start index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_num</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hpm_stat_t <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1923" column="12" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="92" bodyend="104" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1923" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1gadeba31bd7cf23f3f962f620cbad6ede9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t pwmv2_setup_waveform_in_pair</definition>
        <argsstring>(PWMV2_Type *pwm_x, pwm_channel_t chn, pwmv2_pair_config_t *pwm_pair_config, uint8_t cmp_start_index, pwmv2_cmp_config_t *cmp, uint8_t cmp_num)</argsstring>
        <name>pwmv2_setup_waveform_in_pair</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref></type>
          <declname>chn</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gae93ed61d3ca9fb8e63f5b1ba8cee3f69" kindref="member">pwmv2_pair_config_t</ref> *</type>
          <declname>pwm_pair_config</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_start_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> *</type>
          <declname>cmp</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cmp_num</declname>
        </param>
        <briefdescription>
<para>set the pwm waveform complementary mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga5113beb40c2e296de6af562228064afc" kindref="member">pwm_channel_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structpwm__pair__config" kindref="compound">pwm_pair_config</ref></parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gae93ed61d3ca9fb8e63f5b1ba8cee3f69" kindref="member">pwmv2_pair_config_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_start_index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp start index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1ga23fac4e1c4884b96c4184ad2385fd851" kindref="member">pwmv2_cmp_config_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_num</parametername>
</parameternamelist>
<parameterdescription>
<para>cmp number </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>hpm_stat_t <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1938" column="12" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="106" bodyend="119" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1938" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__pwmv2__interface_1ga36f53dd106084d6e17f27c20b2370b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pwmv2_setup_cmp_calculate</definition>
        <argsstring>(PWMV2_Type *pwm_x, uint8_t cal_index, pwmv2_cmp_calculate_cfg_t *cal)</argsstring>
        <name>pwmv2_setup_cmp_calculate</name>
        <param>
          <type><ref refid="structPWMV2__Type" kindref="compound">PWMV2_Type</ref> *</type>
          <declname>pwm_x</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cal_index</declname>
        </param>
        <param>
          <type><ref refid="group__pwmv2__interface_1gaf13c51a53907b5c980528b10327fcb4f" kindref="member">pwmv2_cmp_calculate_cfg_t</ref> *</type>
          <declname>cal</declname>
        </param>
        <briefdescription>
<para>Configure the cmp calculate unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm_x</parametername>
</parameternamelist>
<parameterdescription>
<para>PWM base address, HPM_PWMx(x=0..n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal_index</parametername>
</parameternamelist>
<parameterdescription>
<para>calculate index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cal</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__pwmv2__interface_1gaf13c51a53907b5c980528b10327fcb4f" kindref="member">pwmv2_cmp_calculate_cfg_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="1949" column="6" bodyfile="drivers/src/hpm_pwmv2_drv.c" bodystart="121" bodyend="134" declfile="drivers/inc/hpm_pwmv2_drv.h" declline="1949" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__pwmv2__interface_1gaf5f46e40ddde95d913d0a4ba9809d007" prot="public" static="no">
        <name>PWM_UNLOCK_KEY</name>
        <initializer>(0xB0382607UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="23" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga1e0950b62526774f1fa593901e95e3fa" prot="public" static="no">
        <name>PWM_CMP_UNABLE_OUTPUT_INDEX</name>
        <initializer>(16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="24" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga41e3e49216607a2255830976ae54765e" prot="public" static="no">
        <name>PWM_IRQ_FAULT</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__pwm__regs_8h_1a9dc9c7834be67d5544affe2d79664ae5" kindref="member">PWM_IRQEN_FAULTIRQE_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="27" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga6027230b009bab73a4c6faed03336234" prot="public" static="no">
        <name>PWM_IRQ_EX_RELOAD</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__pwm__regs_8h_1a58f02f0824228dfe801806eec5eaa4f9" kindref="member">PWM_IRQEN_XRLDIRQE_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="28" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1gaff362eb90ec8c478297709219aef1a9d" prot="public" static="no">
        <name>PWM_IRQ_HALF_RELOAD</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__pwm__regs_8h_1a58b35db11e328af2d21b47f56ba44879" kindref="member">PWM_IRQEN_HALFRLDIRQE_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="29" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1gadb62c3b73963f70dc050a540d01d3abf" prot="public" static="no">
        <name>PWM_IRQ_RELOAD</name>
        <initializer><ref refid="HPM5300_2ip_2hpm__pwm__regs_8h_1a178822356605020880bed1aaa5595e2a" kindref="member">PWM_IRQEN_RLDIRQE_MASK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="30" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga06b52a73bf14f35074f12d8ebcdb01fa" prot="public" static="no">
        <name>PWM_IRQ_CMP</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="HPM5300_2ip_2hpm__pwm__regs_8h_1a65d7650089d76d1083131baa15491f09" kindref="member">PWM_IRQEN_CMPIRQEX_SET</ref>((1 &lt;&lt; x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="31" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga3565fe004fcc1bb8b474c52f5ec9b47d" prot="public" static="no">
        <name>PWM_FORCE_OUTPUT</name>
        <param><defname>pwm_index</defname></param>
        <param><defname>force_output</defname></param>
        <initializer>    (force_output &lt;&lt; (pwm_index &lt;&lt; 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="34" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="34" bodyend="35"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1gaa956730210c5ce163a30e78269cd1eb0" prot="public" static="no">
        <name>PWM_DUTY_CYCLE_FP_MAX</name>
        <initializer>((1U &lt;&lt; 24) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="37" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga480c845f4f954aca75a57740faafde46" prot="public" static="no">
        <name>PWMV2_SOC_CAL_COUNT_MAX</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="40" column="13" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1gaf232b151fc5f85e1796fd44910e50bca" prot="public" static="no">
        <name>PWMV2_SHADOW_INDEX</name>
        <param><defname>x</defname></param>
        <initializer>PWMV2_SHADOW_VAL_##x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="43" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1gabf2d9c97afbcf2fd6109751af3e129ff" prot="public" static="no">
        <name>PWMV2_CMP_INDEX</name>
        <param><defname>x</defname></param>
        <initializer>PWMV2_CMP_VAL_WORK_##x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="44" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga5f3368deb705fd883883f424d197c475" prot="public" static="no">
        <name>PWMV2_CALCULATE_INDEX</name>
        <param><defname>x</defname></param>
        <initializer>PWMV2_CAL_##x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="45" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__pwmv2__interface_1ga4ee0410c49efbbc5042fa1ee7eff3e92" prot="public" static="no">
        <name>PWMV2_CAL_SHADOW_OFFSET_ZERO</name>
        <initializer>(31)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_pwmv2_drv.h" line="46" column="9" bodyfile="drivers/inc/hpm_pwmv2_drv.h" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PWM driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
