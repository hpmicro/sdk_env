<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__complex" kind="group">
    <compoundname>complex</compoundname>
    <title>DSP Complex Functions</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__complex_1ga6279d9125ae054f847dcbbbe3ef97470" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2318" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2318" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga17685c07c61c82b0e0f0a8ec18806df4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q15 value INT16_MIN (0x8000) will be saturated to the maximum allowable positive value INT16_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2338" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2338" bodyend="2347"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaa84045e328defa47c5c7eb7ab8902b6e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cconj_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cconj_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Conjugate the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The Q31 value INT32_MIN (0x80000000) will be saturated to the maximum allowable positive value INT32_MAX. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2358" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2358" bodyend="2367"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaae1a84f713d1770fab4cb7866c54d7a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size, float32_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2377" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2377" bodyend="2382"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gae862ce9eb2be037fecf298fc137529b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, uint32_t size, float32_t *rout, float32_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2392" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2392" bodyend="2401"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gab7b17001cfbaea2178eecbb5310740c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, uint32_t size, q15_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2413" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2413" bodyend="2418"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaed38faa72902fe73d0a66af546fabc12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, uint32_t size, q31_t *rout, q31_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into q24 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2431" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2431" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga5715eeb2e01429a1feaab66cb670ea22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, uint32_t size, q31_t *dst)</argsstring>
        <name>hpm_dsp_cdprod_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Compute the dot product of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2448" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2448" bodyend="2453"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gabd35e9042e1980dd0bfefe64b881a239" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cdprod_typ2_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, uint32_t size, q63_t *rout, q63_t *iout)</argsstring>
        <name>hpm_dsp_cdprod_typ2_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>rout</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>iout</declname>
        </param>
        <briefdescription>
<para>Compute the dot product type2 of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*rout</parametername>
</parameternamelist>
<parameterdescription>
<para>the real sum of the output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*iout</parametername>
</parameternamelist>
<parameterdescription>
<para>the imag sum of the output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into q48 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2467" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2467" bodyend="2476"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga73e8a36fb1700c6d4aedb11735471fed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2485" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2485" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga76d1ccdf21d59caaff2d237dd4c248f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 2.14 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2505" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2505" bodyend="2514"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga8c66d13cf354d53a7a386791b61d3913" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 2.30 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2525" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2525" bodyend="2534"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga7e76928be457195f5653c5e12a6d5e0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_f32</definition>
        <argsstring>(const float32_t *src, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the floating-potint complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2544" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2544" bodyend="2553"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gac3b3bd14a0a65018bf16ce05645d1e57" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_q15</definition>
        <argsstring>(const q15_t *src, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2564" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2564" bodyend="2573"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gada55d2942703610d2d9c4bed0fc33553" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmag_sqr_q31</definition>
        <argsstring>(const q31_t *src, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmag_sqr_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Compute the magnitude squared of the q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2584" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2584" bodyend="2593"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga00885d375580a1993563af83376679f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_f32</definition>
        <argsstring>(const float32_t *src1, const float32_t *src2, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two folating-point complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2603" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2603" bodyend="2612"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga73a51071d53fbc9e8744932c7068a0a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_q15</definition>
        <argsstring>(const q15_t *src1, const q15_t *src2, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two q15 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.15 x 1.15 = 2.30 format and finally output is shift into 3.13 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2624" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2624" bodyend="2633"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gace87468ca2a2a9cf06e8719ec18eb365" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_q31</definition>
        <argsstring>(const q31_t *src1, const q31_t *src2, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply two q31 complex vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*src2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The multiplication outputs are in 1.31 x 1.31 = 2.62 format and finally output is shift into 3.29 format. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2645" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2645" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga21ac7cbc44156c53adee7fd12569fd45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_f32</definition>
        <argsstring>(const float32_t *src, const float32_t *real, float32_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the folating-point complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2664" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2664" bodyend="2673"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1gaeda77b2e8121a5ba2f3ca133e02eec97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_q15</definition>
        <argsstring>(const q15_t *src, const q15_t *real, q15_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the q15 complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results will be saturated in Q15 range [0x8000 0x7FFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2684" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2684" bodyend="2693"/>
      </memberdef>
      <memberdef kind="function" id="group__complex_1ga9cb61bdbab96f556c9a3d132eab891bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hpm_dsp_cmul_real_q31</definition>
        <argsstring>(const q31_t *src, const q31_t *real, q31_t *dst, uint32_t size)</argsstring>
        <name>hpm_dsp_cmul_real_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Multiply the q31 complex vector by a real vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*real</parametername>
</parameternamelist>
<parameterdescription>
<para>the input real vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*dst</parametername>
</parameternamelist>
<parameterdescription>
<para>output complex vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the vectors.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Output results will be saturated in Q31 range[0x80000000 0x7FFFFFFF]. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="middleware/hpm_math/hpm_math.h" line="2704" column="20" bodyfile="middleware/hpm_math/hpm_math.h" bodystart="2704" bodyend="2713"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This set of functions operates on complex data vectors. The data in the input <computeroutput>src</computeroutput> vector and output <computeroutput>dst</computeroutput> are arranged in the array as: [real, imag, real, imag, real, imag, ...). </para>
    </detaileddescription>
  </compounddef>
</doxygen>
