<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="HPM5300_2HPM5361_2hpm__plic__drv_8h" kind="file" language="C++">
    <compoundname>hpm_plic_drv.h</compoundname>
    <includedby refid="HPM5300_2HPM5361_2hpm__interrupt_8h" local="yes">soc/HPM5300/HPM5361/hpm_interrupt.h</includedby>
    <invincdepgraph>
      <node id="4">
        <label>soc/HPM5300/HPM5361/hpm_clock_drv.c</label>
        <link refid="HPM5300_2HPM5361_2hpm__clock__drv_8c"/>
      </node>
      <node id="2">
        <label>soc/HPM5300/HPM5361/hpm_interrupt.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__interrupt_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>soc/HPM5300/HPM5361/hpm_l1c_drv.c</label>
        <link refid="HPM5300_2HPM5361_2hpm__l1c__drv_8c"/>
      </node>
      <node id="5">
        <label>soc/HPM5300/HPM5361/hpm_l1c_drv.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__l1c__drv_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>soc/HPM5300/HPM5361/hpm_mcan_soc.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h"/>
      </node>
      <node id="8">
        <label>soc/HPM5300/HPM5361/hpm_otp_drv.c</label>
        <link refid="HPM5300_2HPM5361_2hpm__otp__drv_8c"/>
      </node>
      <node id="1">
        <label>soc/HPM5300/HPM5361/hpm_plic_drv.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__plic__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>soc/HPM5300/HPM5361/hpm_soc.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__soc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>soc/HPM5300/HPM5361/hpm_soc_feature.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__soc__feature_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>soc/HPM5300/HPM5361/hpm_sysctl_drv.c</label>
        <link refid="HPM5300_2HPM5361_2hpm__sysctl__drv_8c"/>
      </node>
      <node id="11">
        <label>soc/HPM5300/HPM5361/hpm_trgm_soc_drv.h</label>
        <link refid="HPM5300_2HPM5361_2hpm__trgm__soc__drv_8h"/>
      </node>
      <node id="12">
        <label>soc/HPM5300/HPM5361/system.c</label>
        <link refid="HPM5300_2HPM5361_2system_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="define">
      <member refid="group__plic__interface_1gaa7e6f672d610ceb8d981d92b36b2bf7e" kind="define"><name>HPM_PLIC_TARGET_M_MODE</name></member>
      <member refid="group__plic__interface_1gada2189ecfe4227e3acd4d031a38c484b" kind="define"><name>HPM_PLIC_TARGET_S_MODE</name></member>
      <member refid="group__plic__interface_1ga5b2ae61f67695cb71a40983a0ea60160" kind="define"><name>HPM_PLIC_FEATURE_OFFSET</name></member>
      <member refid="group__plic__interface_1ga6f814e1312522b2f55cc1f936fcb4c67" kind="define"><name>HPM_PLIC_FEATURE_VECTORED_MODE</name></member>
      <member refid="group__plic__interface_1gaa01d14eaaedebc034b9e0bb5d769144e" kind="define"><name>HPM_PLIC_FEATURE_PREEMPTIVE_PRIORITY_IRQ</name></member>
      <member refid="group__plic__interface_1gae0e6239ee54d47db46974a72489edc05" kind="define"><name>HPM_PLIC_PRIORITY_OFFSET</name></member>
      <member refid="group__plic__interface_1ga7fe984242795e857192fc3221223bc88" kind="define"><name>HPM_PLIC_PRIORITY_SHIFT_PER_SOURCE</name></member>
      <member refid="group__plic__interface_1gab0bf25e7e02ce65646d9e8304ce61162" kind="define"><name>HPM_PLIC_PENDING_OFFSET</name></member>
      <member refid="group__plic__interface_1ga4e6a02e79a56d8354a1bc4b1ad0d5fa9" kind="define"><name>HPM_PLIC_PENDING_SHIFT_PER_SOURCE</name></member>
      <member refid="group__plic__interface_1ga8135352f2aad5746b0a5d417b14162d8" kind="define"><name>HPM_PLIC_TRIGGER_TYPE_OFFSET</name></member>
      <member refid="group__plic__interface_1ga6f76b4e89503bfe0cd2f87abc1c728d8" kind="define"><name>HPM_PLIC_TRIGGER_TYPE_SHIFT_PER_SORUCE</name></member>
      <member refid="group__plic__interface_1ga50a47f73cbc0a9aa6f3cf73e51229657" kind="define"><name>HPM_PLIC_ENABLE_OFFSET</name></member>
      <member refid="group__plic__interface_1ga196f41c7d52c351d0a02eb6f2838b63e" kind="define"><name>HPM_PLIC_ENABLE_SHIFT_PER_TARGET</name></member>
      <member refid="group__plic__interface_1ga81200f423525e4c21aac82ae442c5cef" kind="define"><name>HPM_PLIC_THRESHOLD_OFFSET</name></member>
      <member refid="group__plic__interface_1gafbf7f0f92275bb33e7710893a87eb06a" kind="define"><name>HPM_PLIC_THRESHOLD_SHIFT_PER_TARGET</name></member>
      <member refid="group__plic__interface_1ga0e88e945a77a4b9aa3d7be0759db22bf" kind="define"><name>HPM_PLIC_CLAIM_OFFSET</name></member>
      <member refid="group__plic__interface_1ga4f1760b391c38b46c1c28550aba1ade5" kind="define"><name>HPM_PLIC_CLAIM_SHIFT_PER_TARGET</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021-2023<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_PLIC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="group__plic__interface_1gaa7e6f672d610ceb8d981d92b36b2bf7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_TARGET_M_MODE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="group__plic__interface_1gada2189ecfe4227e3acd4d031a38c484b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_TARGET_S_MODE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Feature<sp/>Register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="group__plic__interface_1ga5b2ae61f67695cb71a40983a0ea60160" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_FEATURE_OFFSET<sp/>(0x00000000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="group__plic__interface_1ga6f814e1312522b2f55cc1f936fcb4c67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_FEATURE_VECTORED_MODE<sp/>(0x2UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__plic__interface_1gaa01d14eaaedebc034b9e0bb5d769144e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_FEATURE_PREEMPTIVE_PRIORITY_IRQ<sp/>(0x1UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Priority<sp/>Register<sp/>-<sp/>32<sp/>bits<sp/>per<sp/>irq<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__plic__interface_1gae0e6239ee54d47db46974a72489edc05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_PRIORITY_OFFSET<sp/>(0x00000004UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__plic__interface_1ga7fe984242795e857192fc3221223bc88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_PRIORITY_SHIFT_PER_SOURCE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pending<sp/>Register<sp/>-<sp/>1<sp/>bit<sp/>per<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__plic__interface_1gab0bf25e7e02ce65646d9e8304ce61162" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_PENDING_OFFSET<sp/>(0x00001000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="group__plic__interface_1ga4e6a02e79a56d8354a1bc4b1ad0d5fa9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_PENDING_SHIFT_PER_SOURCE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="group__plic__interface_1ga8135352f2aad5746b0a5d417b14162d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_TRIGGER_TYPE_OFFSET<sp/>(0x00001080UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="group__plic__interface_1ga6f76b4e89503bfe0cd2f87abc1c728d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_TRIGGER_TYPE_SHIFT_PER_SORUCE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Enable<sp/>Register<sp/>-<sp/>0x80<sp/>per<sp/>target<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="group__plic__interface_1ga50a47f73cbc0a9aa6f3cf73e51229657" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_ENABLE_OFFSET<sp/>(0x00002000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__plic__interface_1ga196f41c7d52c351d0a02eb6f2838b63e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_ENABLE_SHIFT_PER_TARGET<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Priority<sp/>Threshold<sp/>Register<sp/>-<sp/>0x1000<sp/>per<sp/>target<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="group__plic__interface_1ga81200f423525e4c21aac82ae442c5cef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_THRESHOLD_OFFSET<sp/>(0x00200000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__plic__interface_1gafbf7f0f92275bb33e7710893a87eb06a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_THRESHOLD_SHIFT_PER_TARGET<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Claim<sp/>Register<sp/>-<sp/>0x1000<sp/>per<sp/>target<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="group__plic__interface_1ga0e88e945a77a4b9aa3d7be0759db22bf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_CLAIM_OFFSET<sp/>(0x00200004UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__plic__interface_1ga4f1760b391c38b46c1c28550aba1ade5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PLIC_CLAIM_SHIFT_PER_TARGET<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__ASSEMBLER__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_set_feature(uint32_t<sp/>base,<sp/>uint32_t<sp/>feature)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+<sp/><ref refid="group__plic__interface_1ga5b2ae61f67695cb71a40983a0ea60160" kindref="member">HPM_PLIC_FEATURE_OFFSET</ref>)<sp/>=<sp/>feature;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_set_threshold(uint32_t<sp/>base,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>target,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>threshold)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*threshold_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga81200f423525e4c21aac82ae442c5cef" kindref="member">HPM_PLIC_THRESHOLD_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1gafbf7f0f92275bb33e7710893a87eb06a" kindref="member">HPM_PLIC_THRESHOLD_SHIFT_PER_TARGET</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>*threshold_ptr<sp/>=<sp/>threshold;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_set_irq_priority(uint32_t<sp/>base,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>irq,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>priority)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*priority_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1gae0e6239ee54d47db46974a72489edc05" kindref="member">HPM_PLIC_PRIORITY_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((irq<sp/>-<sp/>1)<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1ga7fe984242795e857192fc3221223bc88" kindref="member">HPM_PLIC_PRIORITY_SHIFT_PER_SOURCE</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>*priority_ptr<sp/>=<sp/>priority;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_set_irq_pending(uint32_t<sp/>base,<sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*current_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1gab0bf25e7e02ce65646d9e8304ce61162" kindref="member">HPM_PLIC_PENDING_OFFSET</ref><sp/>+<sp/>((irq<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_ptr<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(irq<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_enable_irq_edge_trigger(uint32_t<sp/>base,<sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*current_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga8135352f2aad5746b0a5d417b14162d8" kindref="member">HPM_PLIC_TRIGGER_TYPE_OFFSET</ref><sp/>+<sp/>((irq<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_ptr<sp/>|=<sp/>(1UL<sp/>&lt;&lt;<sp/>(irq<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_enable_irq_level_trigger(uint32_t<sp/>base,<sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*current_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga8135352f2aad5746b0a5d417b14162d8" kindref="member">HPM_PLIC_TRIGGER_TYPE_OFFSET</ref><sp/>+<sp/>((irq<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_ptr<sp/>&amp;=<sp/>~(1UL<sp/>&lt;&lt;<sp/>(irq<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_enable_irq(uint32_t<sp/>base,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>target,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*current_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga50a47f73cbc0a9aa6f3cf73e51229657" kindref="member">HPM_PLIC_ENABLE_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1ga196f41c7d52c351d0a02eb6f2838b63e" kindref="member">HPM_PLIC_ENABLE_SHIFT_PER_TARGET</ref>)<sp/>+</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((irq<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current<sp/>=<sp/>*current_ptr;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(irq<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_ptr<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_disable_irq(uint32_t<sp/>base,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>target,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*current_ptr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga50a47f73cbc0a9aa6f3cf73e51229657" kindref="member">HPM_PLIC_ENABLE_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1ga196f41c7d52c351d0a02eb6f2838b63e" kindref="member">HPM_PLIC_ENABLE_SHIFT_PER_TARGET</ref>)<sp/>+</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((irq<sp/>&gt;&gt;<sp/>5)<sp/>&lt;&lt;<sp/>2));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current<sp/>=<sp/>*current_ptr;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current<sp/>&amp;<sp/>~((1<sp/>&lt;&lt;<sp/>(irq<sp/>&amp;<sp/>0x1F)));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>*current_ptr<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>__plic_claim_irq(uint32_t<sp/>base,<sp/>uint32_t<sp/>target)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*claim_addr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga0e88e945a77a4b9aa3d7be0759db22bf" kindref="member">HPM_PLIC_CLAIM_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1ga4f1760b391c38b46c1c28550aba1ade5" kindref="member">HPM_PLIC_CLAIM_SHIFT_PER_TARGET</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*claim_addr;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">ATTR_ALWAYS_INLINE<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__plic_complete_irq(uint32_t<sp/>base,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>target,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>irq)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*claim_addr<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>*)<sp/>(base<sp/>+</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__plic__interface_1ga0e88e945a77a4b9aa3d7be0759db22bf" kindref="member">HPM_PLIC_CLAIM_OFFSET</ref><sp/>+</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(target<sp/>&lt;&lt;<sp/><ref refid="group__plic__interface_1ga4f1760b391c38b46c1c28550aba1ade5" kindref="member">HPM_PLIC_CLAIM_SHIFT_PER_TARGET</ref>));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*claim_addr<sp/>=<sp/>irq;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__ASSEMBLER__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HPM_PLIC_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="soc/HPM5300/HPM5361/hpm_plic_drv.h"/>
  </compounddef>
</doxygen>
