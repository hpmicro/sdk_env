<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__usb__device_8h" kind="file" language="C++">
    <compoundname>hpm_usb_device.h</compoundname>
    <includes refid="hpm__usb__drv_8h" local="yes">hpm_usb_drv.h</includes>
    <includes local="yes">hpm_soc_feature.h</includes>
    <includedby refid="hpm__usb__device_8c" local="yes">components/usb/device/hpm_usb_device.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>components/usb/device/hpm_usb_device.h</label>
        <link refid="hpm__usb__device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_usb_drv.h</label>
        <link refid="hpm__usb__drv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="9">
        <label>hpm_usb_regs.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>components/usb/device/hpm_usb_device.c</label>
        <link refid="hpm__usb__device_8c"/>
      </node>
      <node id="1">
        <label>components/usb/device/hpm_usb_device.h</label>
        <link refid="hpm__usb__device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structdcd__qtd__t" prot="public">dcd_qtd_t</innerclass>
    <innerclass refid="structdcd__qhd__t" prot="public">dcd_qhd_t</innerclass>
    <innerclass refid="structdcd__data__t" prot="public">dcd_data_t</innerclass>
    <innerclass refid="structusb__device__handle__t" prot="public">usb_device_handle_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__usb__device_8h_1a7b84f6f6de6970e83b246fa001837c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref> *</type>
        <definition>dcd_qhd_t * usb_device_qhd_get</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_idx)</argsstring>
        <name>usb_device_qhd_get</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="102" column="11" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="37" bodyend="40" declfile="components/usb/device/hpm_usb_device.h" declline="102" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1aeca807c412186c9b440926e6b09e5e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref> *</type>
        <definition>dcd_qtd_t * usb_device_qtd_get</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_idx)</argsstring>
        <name>usb_device_qtd_get</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="105" column="11" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="42" bodyend="45" declfile="components/usb/device/hpm_usb_device.h" declline="105" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1aeb2861ead16d131783005521c758003e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_bus_reset</definition>
        <argsstring>(usb_device_handle_t *handle, uint16_t ep0_max_packet_size)</argsstring>
        <name>usb_device_bus_reset</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ep0_max_packet_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="108" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="47" bodyend="63" declfile="components/usb/device/hpm_usb_device.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1aff5c5bbf109bef049a6e43ee0e6f0ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_init</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t int_mask)</argsstring>
        <name>usb_device_init</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>int_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="111" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="65" bodyend="90" declfile="components/usb/device/hpm_usb_device.h" declline="111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a952f0c59d9f0a71ac8ef29d1e01ed28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_deinit</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_deinit</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="114" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="92" bodyend="102" declfile="components/usb/device/hpm_usb_device.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ac6acdf1faa69dd173aed6a7bf5181ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_set_address</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t dev_addr)</argsstring>
        <name>usb_device_set_address</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dev_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="117" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="129" bodyend="135" declfile="components/usb/device/hpm_usb_device.h" declline="117" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a4fc4fa752803dbaab6229bf924790cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_address</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_address</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="120" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="137" bodyend="140" declfile="components/usb/device/hpm_usb_device.h" declline="120" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a37020f3476ace0964f6a41f4d41eb463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_remote_wakeup</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_remote_wakeup</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="123" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="142" bodyend="145" declfile="components/usb/device/hpm_usb_device.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a9f16a801e6dcf23a2bfc39d0bdf669fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_connect</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_connect</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="126" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="147" bodyend="150" declfile="components/usb/device/hpm_usb_device.h" declline="126" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a49c229661efa584a360c5acc567c7775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_disconnect</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_disconnect</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="129" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="152" bodyend="155" declfile="components/usb/device/hpm_usb_device.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1af0f1868b609a6a4e80ab5d995d654087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_open</definition>
        <argsstring>(usb_device_handle_t *handle, usb_endpoint_config_t *config)</argsstring>
        <name>usb_device_edpt_open</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="132" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="191" bodyend="218" declfile="components/usb/device/hpm_usb_device.h" declline="132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ae940db2eb63e5664ec4da32cfc7bf3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_xfer</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr, uint8_t *buffer, uint32_t total_bytes)</argsstring>
        <name>usb_device_edpt_xfer</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>total_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="135" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="220" bodyend="282" declfile="components/usb/device/hpm_usb_device.h" declline="135" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a77617c2f3c1c50f8b32b5a719ad724d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="138" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="284" bodyend="287" declfile="components/usb/device/hpm_usb_device.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a81c86c7e4a2a34f60a0ac57870adc614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_clear_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_clear_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="141" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="289" bodyend="292" declfile="components/usb/device/hpm_usb_device.h" declline="141" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ab1af4566dcc6d17c54f37fa7c833b3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_check_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_check_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="144" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="294" bodyend="297" declfile="components/usb/device/hpm_usb_device.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ad908b5ca776d40a3d68a79bb9e0e3cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_close</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_close</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="147" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="299" bodyend="302" declfile="components/usb/device/hpm_usb_device.h" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a9b19b9d70ac34c22cdda1a6753efe40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_close_all</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_edpt_close_all</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="149" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="304" bodyend="309" declfile="components/usb/device/hpm_usb_device.h" declline="149" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1abed7da9a100b190518993ed312d966f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_status_flags</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_status_flags</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="151" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="104" bodyend="107" declfile="components/usb/device/hpm_usb_device.h" declline="151" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1adf0fb6cfb1e4a1e07d83ab692df373b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_status_flags</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_status_flags</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="153" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="109" bodyend="112" declfile="components/usb/device/hpm_usb_device.h" declline="153" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a38201fa0e9befacc7d8af78bbe7bd79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_interrupts</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_interrupts</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="155" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="114" bodyend="117" declfile="components/usb/device/hpm_usb_device.h" declline="155" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a1cc54eba002e4b728918651899147963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_port_speed</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_speed</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="157" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="119" bodyend="122" declfile="components/usb/device/hpm_usb_device.h" declline="157" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ac1d50a20329a6117480f3280da50f0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_suspend_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_suspend_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="159" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="124" bodyend="127" declfile="components/usb/device/hpm_usb_device.h" declline="159" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a1267c28baeedc0857a235f57eb6749dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_get_port_ccs</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_ccs</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="161" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="157" bodyend="160" declfile="components/usb/device/hpm_usb_device.h" declline="161" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ac8b02aaa2a1a9c7be03eb67946b0a2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_get_port_reset_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_reset_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="163" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="162" bodyend="165" declfile="components/usb/device/hpm_usb_device.h" declline="163" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1ad224fccd8c89072c7aec5833cf27d805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_get_edpt_complete_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_edpt_complete_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="165" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="167" bodyend="170" declfile="components/usb/device/hpm_usb_device.h" declline="165" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a732a4b5a7e610349f1c33a744a00b31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_edpt_complete_status</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_edpt_complete_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="167" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="172" bodyend="175" declfile="components/usb/device/hpm_usb_device.h" declline="167" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a2e0b811c6de3bcb9f3e423b437c1d848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_get_setup_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_setup_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="169" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="177" bodyend="180" declfile="components/usb/device/hpm_usb_device.h" declline="169" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8h_1a93feae1af796beb71f08bd107f02e3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_setup_status</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_setup_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.h" line="171" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="182" bodyend="185" declfile="components/usb/device/hpm_usb_device.h" declline="171" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_USB_DEVICE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_USB_DEVICE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Includes</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__usb__drv_8h" kindref="compound">hpm_usb_drv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_soc_feature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>Macro<sp/>Constant<sp/>Declarations</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Macro<sp/>Typedef<sp/>Declaration</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Queue<sp/>Transfer<sp/>Descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structdcd__qtd__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>0:<sp/>Next<sp/>QTD<sp/>Pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Next<sp/>link<sp/>pointer<sp/>This<sp/>field<sp/>contains<sp/>the<sp/>physical<sp/>memory<sp/>address<sp/>of<sp/>the<sp/>next<sp/>dTD<sp/>to<sp/>be<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>1:<sp/>qTQ<sp/>Token<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="34" refid="structdcd__qtd__t_1a27cddc2e01b365a98740fc31085fea87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a27cddc2e01b365a98740fc31085fea87" kindref="member">xact_err</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="36" refid="structdcd__qtd__t_1ac07eccffaafe3e52c73d64d56404a390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1ac07eccffaafe3e52c73d64d56404a390" kindref="member">buffer_err</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="37" refid="structdcd__qtd__t_1a5c05e9b9d9d10d539362a80b9ac10a4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a5c05e9b9d9d10d539362a80b9ac10a4d" kindref="member">halted</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="38" refid="structdcd__qtd__t_1a5354880e7117e2b90012e296d9056e1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a5354880e7117e2b90012e296d9056e1f" kindref="member">active</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="40" refid="structdcd__qtd__t_1acab789399d4b3b93d6be8077043498a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1acab789399d4b3b93d6be8077043498a8" kindref="member">iso_mult_override</ref><sp/><sp/><sp/><sp/>:<sp/>2<sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>field<sp/>can<sp/>be<sp/>used<sp/>for<sp/>transmit<sp/>ISOs<sp/>to<sp/>override<sp/>the<sp/>MULT<sp/>field<sp/>in<sp/>the<sp/>dQH.<sp/>This<sp/>field<sp/>must<sp/>be<sp/>zero<sp/>for<sp/>all<sp/>packet<sp/>types<sp/>that<sp/>are<sp/>not<sp/>transmit-ISO.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>3;</highlight></codeline>
<codeline lineno="42" refid="structdcd__qtd__t_1abc9e2e8ddd72fcf0cc790f75388fd696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1abc9e2e8ddd72fcf0cc790f75388fd696" kindref="member">int_on_complete</ref><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="43" refid="structdcd__qtd__t_1a7b77db73758849bbf5ae55664a2bda78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a7b77db73758849bbf5ae55664a2bda78" kindref="member">total_bytes</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>15;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>2-6:<sp/>Buffer<sp/>Page<sp/>Pointer<sp/>List,<sp/>Each<sp/>element<sp/>in<sp/>the<sp/>list<sp/>is<sp/>a<sp/>4K<sp/>page<sp/>aligned,<sp/>physical<sp/>memory<sp/>address.<sp/>The<sp/>lower<sp/>12<sp/>bits<sp/>in<sp/>each<sp/>pointer<sp/>are<sp/>reserved<sp/>(except<sp/>for<sp/>the<sp/>first<sp/>one)<sp/>as<sp/>each<sp/>memory<sp/>pointer<sp/>must<sp/>reference<sp/>the<sp/>start<sp/>of<sp/>a<sp/>4K<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structdcd__qtd__t_1a1752fa3236c2546e544f93cb740927fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t_1ad9e2765711a66dd16eadeedefd835d00" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qtd__t_1a1752fa3236c2546e544f93cb740927fb" kindref="member">buffer</ref>[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a147d4b1f3cf24487b81f0ede4f2fd9a5" kindref="member">USB_SOC_DCD_QHD_BUFFER_COUNT</ref>];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-------------<sp/>DCD<sp/>Area<sp/>-------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structdcd__qtd__t_1a8ab966c980a57ab66ddb13267ea010c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="structdcd__qtd__t_1a8ab966c980a57ab66ddb13267ea010c2" kindref="member">expected_bytes</ref>;</highlight></codeline>
<codeline lineno="51" refid="structdcd__qtd__t_1aa488fdc2da09ef8a6408db379e139b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="structdcd__qtd__t_1aa488fdc2da09ef8a6408db379e139b65" kindref="member">reserved</ref>[2];</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Queue<sp/>Head<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structdcd__qhd__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>0:<sp/>Capabilities<sp/>and<sp/>Characteristics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>15<sp/>;<sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>packets<sp/>executed<sp/>per<sp/>transaction<sp/>descriptor<sp/>00<sp/>-<sp/>Execute<sp/>N<sp/>transactions<sp/>as<sp/>demonstrated<sp/>by<sp/>the<sp/>USB<sp/>variable<sp/>length<sp/>protocol<sp/>where<sp/>N<sp/>is<sp/>computed<sp/>using<sp/>Max_packet_length<sp/>and<sp/>the<sp/>Total_bytes<sp/>field<sp/>in<sp/>the<sp/>dTD.<sp/>01<sp/>-<sp/>Execute<sp/>one<sp/>transaction<sp/>10<sp/>-<sp/>Execute<sp/>two<sp/>transactions<sp/>11<sp/>-<sp/>Execute<sp/>three<sp/>transactions<sp/>Remark:<sp/>Non-isochronous<sp/>endpoints<sp/>must<sp/>set<sp/>MULT<sp/>=<sp/>00.<sp/>Remark:<sp/>Isochronous<sp/>endpoints<sp/>must<sp/>set<sp/>MULT<sp/>=<sp/>01,<sp/>10,<sp/>or<sp/>11<sp/>as<sp/>needed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structdcd__qhd__t_1a085698cdddec3897172f6a66a028b670" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qhd__t_1a085698cdddec3897172f6a66a028b670" kindref="member">int_on_setup</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1<sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>Interrupt<sp/>on<sp/>setup<sp/>This<sp/>bit<sp/>is<sp/>used<sp/>on<sp/>control<sp/>type<sp/>endpoints<sp/>to<sp/>indicate<sp/>if<sp/>USBINT<sp/>is<sp/>set<sp/>in<sp/>response<sp/>to<sp/>a<sp/>setup<sp/>being<sp/>received.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structdcd__qhd__t_1a0dc3eab99ac50e0ff60d5c708f05c019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qhd__t_1a0dc3eab99ac50e0ff60d5c708f05c019" kindref="member">max_packet_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>11<sp/>;<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>directly<sp/>corresponds<sp/>to<sp/>the<sp/>maximum<sp/>packet<sp/>size<sp/>of<sp/>the<sp/>associated<sp/>endpoint<sp/>(wMaxPacketSize)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="62" refid="structdcd__qhd__t_1ac6b2f17d99c36e9d905e4aa19ca4e51a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qhd__t_1ac6b2f17d99c36e9d905e4aa19ca4e51a" kindref="member">zero_length_termination</ref><sp/>:<sp/>1<sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>bit<sp/>is<sp/>used<sp/>for<sp/>non-isochronous<sp/>endpoints<sp/>to<sp/>indicate<sp/>when<sp/>a<sp/>zero-length<sp/>packet<sp/>is<sp/>received<sp/>to<sp/>terminate<sp/>transfers<sp/>in<sp/>case<sp/>the<sp/>total<sp/>transfer<sp/>length<sp/>is<sp/>“multiple”.<sp/>0<sp/>-<sp/>Enable<sp/>zero-length<sp/>packet<sp/>to<sp/>terminate<sp/>transfers<sp/>equal<sp/>to<sp/>a<sp/>multiple<sp/>of<sp/>Max_packet_length<sp/>(default).<sp/>1<sp/>-<sp/>Disable<sp/>zero-length<sp/>packet<sp/>on<sp/>transfers<sp/>that<sp/>are<sp/>equal<sp/>in<sp/>length<sp/>to<sp/>a<sp/>multiple<sp/>Max_packet_length.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structdcd__qhd__t_1a994827a69bbf336cda3d0e651077e371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qhd__t_1a994827a69bbf336cda3d0e651077e371" kindref="member">iso_mult</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>1:<sp/>Current<sp/>qTD<sp/>Pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structdcd__qhd__t_1adfa368cacafe09f5b007324a4f151f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qhd__t_1ac351bb5310bdf053280fdd448f6fc644" kindref="member">uint32_t</ref><sp/><ref refid="structdcd__qhd__t_1adfa368cacafe09f5b007324a4f151f7b" kindref="member">qtd_addr</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>2-9:<sp/>Transfer<sp/>Overlay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/><ref refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" kindref="member">qtd_overlay</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Word<sp/>10-11:<sp/>Setup<sp/>request<sp/>(control<sp/>OUT<sp/>only)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structdcd__qhd__t_1a2076b060b0f70da8661abb9d79b1e40e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gae147b28fcfb6c35c2bfa5b8805c3343e" kindref="member">usb_control_request_t</ref><sp/><ref refid="structdcd__qhd__t_1a2076b060b0f70da8661abb9d79b1e40e" kindref="member">setup_request</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Due<sp/>to<sp/>the<sp/>fact<sp/>QHD<sp/>is<sp/>64<sp/>bytes<sp/>aligned<sp/>but<sp/>occupies<sp/>only<sp/>48<sp/>bytes</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>thus<sp/>there<sp/>are<sp/>16<sp/>bytes<sp/>padding<sp/>free<sp/>that<sp/>we<sp/>can<sp/>make<sp/>use<sp/>of.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structdcd__qhd__t_1a131891743272802efc5b7014ee8b2701" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="structdcd__qhd__t_1a131891743272802efc5b7014ee8b2701" kindref="member">reserved</ref>[16];</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="structdcd__data__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref><sp/><ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a9e1d2ceddebccb42589f3278b4ce96a1" kindref="member">USB_SOS_DCD_MAX_QHD_COUNT</ref>];</highlight></codeline>
<codeline lineno="85" refid="structdcd__data__t_1a3ec340989b464a965108b300c3ebd3ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/><ref refid="structdcd__data__t_1a3ec340989b464a965108b300c3ebd3ed" kindref="member">qtd</ref>[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1afb1932b4cd1f7c02b6ef1f3b5977d6b9" kindref="member">USB_SOC_DCD_MAX_QTD_COUNT</ref>];</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structusb__device__handle__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89" refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUSB__Type" kindref="compound">USB_Type</ref><sp/><sp/><sp/><sp/><sp/>*<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>;</highlight></codeline>
<codeline lineno="90" refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref><sp/><sp/><sp/>*<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Exported<sp/>Function<sp/>Declarations</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>qhd<sp/>of<sp/>the<sp/>specifed<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref><sp/>*<ref refid="hpm__usb__device_8h_1a7b84f6f6de6970e83b246fa001837c1f" kindref="member">usb_device_qhd_get</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_idx);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>qtd<sp/>of<sp/>the<sp/>specifed<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*<ref refid="hpm__usb__device_8h_1aeca807c412186c9b440926e6b09e5e1c" kindref="member">usb_device_qtd_get</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_idx);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>USB<sp/>bus<sp/>reset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1aeb2861ead16d131783005521c758003e" kindref="member">usb_device_bus_reset</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint16_t<sp/>ep0_max_packet_size);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>controller<sp/>to<sp/>device<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1aff5c5bbf109bef049a6e43ee0e6f0ce6" kindref="member">usb_device_init</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>int_mask);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>De-initialize<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a952f0c59d9f0a71ac8ef29d1e01ed28d" kindref="member">usb_device_deinit</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>Address<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1ac6acdf1faa69dd173aed6a7bf5181ef6" kindref="member">usb_device_set_address</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>dev_addr);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>device<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8h_1a4fc4fa752803dbaab6229bf924790cda" kindref="member">usb_device_get_address</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Wake<sp/>up<sp/>host<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a37020f3476ace0964f6a41f4d41eb463" kindref="member">usb_device_remote_wakeup</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Connect<sp/>by<sp/>enabling<sp/>internal<sp/>pull-up<sp/>resistor<sp/>on<sp/>D+/D-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a9f16a801e6dcf23a2bfc39d0bdf669fd" kindref="member">usb_device_connect</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Disconnect<sp/>by<sp/>disabling<sp/>internal<sp/>pull-up<sp/>resistor<sp/>on<sp/>D+/D-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a49c229661efa584a360c5acc567c7775" kindref="member">usb_device_disconnect</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Configure<sp/>an<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1af0f1868b609a6a4e80ab5d995d654087" kindref="member">usb_device_edpt_open</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Submit<sp/>a<sp/>transfe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1ae940db2eb63e5664ec4da32cfc7bf3a5" kindref="member">usb_device_edpt_xfer</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr,<sp/>uint8_t<sp/>*buffer,<sp/>uint32_t<sp/>total_bytes);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Stall<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a77617c2f3c1c50f8b32b5a719ad724d5" kindref="member">usb_device_edpt_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>clear<sp/>stall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a81c86c7e4a2a34f60a0ac57870adc614" kindref="member">usb_device_edpt_clear_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>stall<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1ab1af4566dcc6d17c54f37fa7c833b3b4" kindref="member">usb_device_edpt_check_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>close<sp/>a<sp/>specified<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1ad908b5ca776d40a3d68a79bb9e0e3cf1" kindref="member">usb_device_edpt_close</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a9b19b9d70ac34c22cdda1a6753efe40b" kindref="member">usb_device_edpt_close_all</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8h_1abed7da9a100b190518993ed312d966f6" kindref="member">usb_device_status_flags</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1adf0fb6cfb1e4a1e07d83ab692df373b4" kindref="member">usb_device_clear_status_flags</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8h_1a38201fa0e9befacc7d8af78bbe7bd79c" kindref="member">usb_device_interrupts</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8h_1a1cc54eba002e4b728918651899147963" kindref="member">usb_device_get_port_speed</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8h_1ac1d50a20329a6117480f3280da50f0e6" kindref="member">usb_device_get_suspend_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a1267c28baeedc0857a235f57eb6749dc" kindref="member">usb_device_get_port_ccs</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1ac8b02aaa2a1a9c7be03eb67946b0a2a4" kindref="member">usb_device_get_port_reset_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8h_1ad224fccd8c89072c7aec5833cf27d805" kindref="member">usb_device_get_edpt_complete_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a732a4b5a7e610349f1c33a744a00b31c" kindref="member">usb_device_clear_edpt_complete_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8h_1a2e0b811c6de3bcb9f3e423b437c1d848" kindref="member">usb_device_get_setup_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8h_1a93feae1af796beb71f08bd107f02e3be" kindref="member">usb_device_clear_setup_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_USB_DEVICE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="components/usb/device/hpm_usb_device.h"/>
  </compounddef>
</doxygen>
