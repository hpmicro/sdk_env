<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__ppi__interface" kind="group">
    <compoundname>ppi_interface</compoundname>
    <title>PPI driver APIs</title>
    <innerclass refid="structppi__clk__pin__config__t" prot="public">ppi_clk_pin_config_t</innerclass>
    <innerclass refid="structppi__cs__pin__config__t" prot="public">ppi_cs_pin_config_t</innerclass>
    <innerclass refid="structppi__cmd__config__t" prot="public">ppi_cmd_config_t</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__ppi__interface_1ga602bc85dfd50b5248a76631452782bae" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_cs_idle_polarity_t</name>
        <enumvalue id="group__ppi__interface_1gga602bc85dfd50b5248a76631452782baeae3f022372232883ba1d94be1d245ca24" prot="public">
          <name>ppi_cs_idle_pol_low</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga602bc85dfd50b5248a76631452782baea7fdd16caf820a739a32fb552e5e6a7be" prot="public">
          <name>ppi_cs_idle_pol_high</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>cs pin idle polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="26" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga0e5080bcfcb229235db8e41dc5f80402" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_dm_valid_polarity_t</name>
        <enumvalue id="group__ppi__interface_1gga0e5080bcfcb229235db8e41dc5f80402a82dbd67e064d04ab9b3091f377851125" prot="public">
          <name>ppi_dm_valid_pol_high</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga0e5080bcfcb229235db8e41dc5f80402aa47b824a04b69332ec2e84b779ac613b" prot="public">
          <name>ppi_dm_valid_pol_low</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>dm pin valid polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="35" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1gafa64bf8abeccda20dd374f81c26367b0" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_ctrl_polarity_t</name>
        <enumvalue id="group__ppi__interface_1ggafa64bf8abeccda20dd374f81c26367b0af5f5718d8d39fce51529158286a86e7b" prot="public">
          <name>ppi_ctrl_pol_low</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1ggafa64bf8abeccda20dd374f81c26367b0a3caf647e499df9db4c974b0991aa59fe" prot="public">
          <name>ppi_ctrl_pol_high</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ctrl pin polarity </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="44" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga83352ffe57452c76187f757b3a1d66b2" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_ctrl_pin_dir_t</name>
        <enumvalue id="group__ppi__interface_1gga83352ffe57452c76187f757b3a1d66b2a47b99cc9fa035d458b38a85ed3d33c74" prot="public">
          <name>ppi_ctrl_pin_dir_input</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga83352ffe57452c76187f757b3a1d66b2a4e376a2b6c04c4413e74d4b5be0d0daa" prot="public">
          <name>ppi_ctrl_pin_dir_output</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ctrl pin direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="53" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga04ee76d77891ff2dbfeb41f72764244b" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_clk_output_mode_t</name>
        <enumvalue id="group__ppi__interface_1gga04ee76d77891ff2dbfeb41f72764244baccd7cec28732baf3dbb9dd27195bc3fc" prot="public">
          <name>ppi_clk_output_by_cmd_clk_output</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga04ee76d77891ff2dbfeb41f72764244ba7ed32e98f9e18bb7bdbaed2254ffd5ab" prot="public">
          <name>ppi_clk_always_output</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>clock pin output mode </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="62" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_irq_mask_t</name>
        <enumvalue id="group__ppi__interface_1gga8122c6889df4785f5f717ad6d16967b0a6601a79014048468265739c2f52349df" prot="public">
          <name>ppi_irq_tm_out_mask</name>
          <initializer>= (0x1U)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>irq mask </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="71" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga27ca0208e6c362768733c06931e9f262" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_port_size_t</name>
        <enumvalue id="group__ppi__interface_1gga27ca0208e6c362768733c06931e9f262ad0b2da5c80caf90bcd6452767a6fd786" prot="public">
          <name>ppi_port_size_8bits</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga27ca0208e6c362768733c06931e9f262ac8aeb4bcef75c44edbff1e7eee8d41bd" prot="public">
          <name>ppi_port_size_16bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga27ca0208e6c362768733c06931e9f262acfcf37fbfa3a6fbddcce6e48ed02bf69" prot="public">
          <name>ppi_port_size_32bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>port size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="79" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1gaa42660f7b84b2b3baff1d68490f0317b" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_byte_sel_t</name>
        <enumvalue id="group__ppi__interface_1ggaa42660f7b84b2b3baff1d68490f0317ba3864bf657b09712bebdb0f72aaa71248" prot="public">
          <name>ppi_byte_sel_0_7_bits</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1ggaa42660f7b84b2b3baff1d68490f0317ba753d8b582f9faf47d45d5baeb0566fca" prot="public">
          <name>ppi_byte_sel_8_15_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1ggaa42660f7b84b2b3baff1d68490f0317ba014ebef132809191f51d51b9a8a1b4ae" prot="public">
          <name>ppi_byte_sel_16_23_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1ggaa42660f7b84b2b3baff1d68490f0317baf58be88c25d3018c3a96736dd1b2326f" prot="public">
          <name>ppi_byte_sel_24_31_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>cmd byte select </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="89" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1gab3325eea3a77e1ae29dcdbb682205474" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_ad_func_t</name>
        <enumvalue id="group__ppi__interface_1ggab3325eea3a77e1ae29dcdbb682205474abbae11657cdd8ec3df28627fda114de3" prot="public">
          <name>ppi_ad_func_data</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1ggab3325eea3a77e1ae29dcdbb682205474ac3ea02ee1c67ba36ab5c3228dc08e9bc" prot="public">
          <name>ppi_ad_func_addr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>cmd address and data function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="100" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="group__ppi__interface_1ga8a91e368a8473a1b77ddd89724e75338" prot="public" static="no" strong="no">
        <type></type>
        <name>ppi_ad_pin_dir_t</name>
        <enumvalue id="group__ppi__interface_1gga8a91e368a8473a1b77ddd89724e75338a559921c8cf05e165075bbd7b2688c661" prot="public">
          <name>ppi_ad_pin_dir_output</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__ppi__interface_1gga8a91e368a8473a1b77ddd89724e75338ae164aa9eba013512bbc61404ae218632" prot="public">
          <name>ppi_ad_pin_dir_input</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>cmd address and data pins direction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="109" column="1" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="109" bodyend="112"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__ppi__interface_1gaba5af71b3401e5eddb8ecc91f087e35e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_reset</definition>
        <argsstring>(PPI_Type *ppi, bool reset)</argsstring>
        <name>ppi_set_reset</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
        </param>
        <briefdescription>
<para>set ppi software reset </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reset</parametername>
</parameternamelist>
<parameterdescription>
<para>true - software reset; false - normal work. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="175" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="175" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga762681c9237b94f17d439f1599c847f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_config_cs_pin_polarity</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_cs_idle_polarity_t pol)</argsstring>
        <name>ppi_config_cs_pin_polarity</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ppi__interface_1ga602bc85dfd50b5248a76631452782bae" kindref="member">ppi_cs_idle_polarity_t</ref></type>
          <declname>pol</declname>
        </param>
        <briefdescription>
<para>config cs pin work valid polarity </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>cs pin index, value: 0 - 3 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pol</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__ppi__interface_1ga602bc85dfd50b5248a76631452782bae" kindref="member">ppi_cs_idle_polarity_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="191" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga1eaef44954256ff54eb4cce568f5ed15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_config_dm_pin_polarity</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_dm_valid_polarity_t pol)</argsstring>
        <name>ppi_config_dm_pin_polarity</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ppi__interface_1ga0e5080bcfcb229235db8e41dc5f80402" kindref="member">ppi_dm_valid_polarity_t</ref></type>
          <declname>pol</declname>
        </param>
        <briefdescription>
<para>config dm pin work polarity </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>If has HPM_IP_FEATURE_PPI_DM_POLARITY_EACH_CS feature, this is cs pin index, value: 0 - 3. Else, not use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pol</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__ppi__interface_1ga0e5080bcfcb229235db8e41dc5f80402" kindref="member">ppi_dm_valid_polarity_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="204" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga2445f52d1cd9dcaa631de467139a09a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_config_ctrl_pin_polarity</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_ctrl_polarity_t pol)</argsstring>
        <name>ppi_config_ctrl_pin_polarity</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ppi__interface_1gafa64bf8abeccda20dd374f81c26367b0" kindref="member">ppi_ctrl_polarity_t</ref></type>
          <declname>pol</declname>
        </param>
        <briefdescription>
<para>config ctrl pin work polarity, output and input ctrl pin polarity has different meaning </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl pin index, value: 0 - 7 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pol</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__ppi__interface_1gafa64bf8abeccda20dd374f81c26367b0" kindref="member">ppi_ctrl_polarity_t</ref> [1] Output: ppi_ctrl_pol_low is output the value in cmd; ppi_ctrl_pol_high is output reversed value in cmd. [2] Input: ppi_ctrl_pol_low is input low valid; ppi_ctrl_pol_high is input high valid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="228" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1gaffd42006a7edfa661f9b509e779fc11d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_ctrl_pin_dir</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_ctrl_pin_dir_t dir)</argsstring>
        <name>ppi_set_ctrl_pin_dir</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="group__ppi__interface_1ga83352ffe57452c76187f757b3a1d66b2" kindref="member">ppi_ctrl_pin_dir_t</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>set ctrl pin direction </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl pin index, value: 0 - 7 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl pin direction, <ref refid="group__ppi__interface_1ga83352ffe57452c76187f757b3a1d66b2" kindref="member">ppi_ctrl_pin_dir_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="241" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="241" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1gabd56ce9b55f58777941d51312ef757e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_config_timeout</definition>
        <argsstring>(PPI_Type *ppi, uint16_t timeout_cnt, bool enable)</argsstring>
        <name>ppi_config_timeout</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>timeout_cnt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>config timeout </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enable</parametername>
</parameternamelist>
<parameterdescription>
<para>true - enable; false - disable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="254" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1gab7526ef6af81e09290312cd534e8c14b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_irq_enable</definition>
        <argsstring>(PPI_Type *ppi, uint32_t mask)</argsstring>
        <name>ppi_set_irq_enable</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>set irq enable </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" kindref="member">ppi_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="265" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga45e98292be186ab65a7750602ca1855a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_irq_disable</definition>
        <argsstring>(PPI_Type *ppi, uint32_t mask)</argsstring>
        <name>ppi_set_irq_disable</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>set irq disable </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" kindref="member">ppi_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="276" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga42779ec0dadc2fdeeca265b2d3bd9cd3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ppi_get_irq_enable_status</definition>
        <argsstring>(PPI_Type *ppi)</argsstring>
        <name>ppi_get_irq_enable_status</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <briefdescription>
<para>get irq enable status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>irq</parametername>
</parameternamelist>
<parameterdescription>
<para>enable status, <ref refid="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" kindref="member">ppi_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="287" column="24" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1gad1cb0f7071a6d74c9002bddaeaa916cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t ppi_get_irq_status</definition>
        <argsstring>(PPI_Type *ppi)</argsstring>
        <name>ppi_get_irq_status</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <briefdescription>
<para>get irq status </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>irq</parametername>
</parameternamelist>
<parameterdescription>
<para>status, <ref refid="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" kindref="member">ppi_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="298" column="24" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga3912b630f108eedc7b9be9327fdf7ec1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_clear_irq_flag</definition>
        <argsstring>(PPI_Type *ppi, uint32_t mask)</argsstring>
        <name>ppi_clear_irq_flag</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear irq flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>irq mask, <ref refid="group__ppi__interface_1ga8122c6889df4785f5f717ad6d16967b0" kindref="member">ppi_irq_mask_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="309" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga385801d4e22b0aa6c645b216c954c721" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_clk_pin_enable</definition>
        <argsstring>(PPI_Type *ppi)</argsstring>
        <name>ppi_set_clk_pin_enable</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <briefdescription>
<para>set clk pin enable </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="319" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga7ae45c162b82e17b7506529b6461b55b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ppi_set_clk_pin_disable</definition>
        <argsstring>(PPI_Type *ppi)</argsstring>
        <name>ppi_set_clk_pin_disable</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <briefdescription>
<para>set clk pin disable </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="329" column="20" bodyfile="drivers/inc/hpm_ppi_drv.h" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga9894281efba060a92e915a6b0f3edd93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ppi_config_clk_pin</definition>
        <argsstring>(PPI_Type *ppi, ppi_clk_pin_config_t *config)</argsstring>
        <name>ppi_config_clk_pin</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type><ref refid="structppi__clk__pin__config__t" kindref="compound">ppi_clk_pin_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>config clock pin output </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>clock pin config structure pointer, <ref refid="structppi__clk__pin__config__t" kindref="compound">ppi_clk_pin_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="340" column="6" bodyfile="drivers/src/hpm_ppi_drv.c" bodystart="10" bodyend="22" declfile="drivers/inc/hpm_ppi_drv.h" declline="340" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga6b274fda7dbfab8459b7c021d3becf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ppi_config_cs_pin</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_cs_pin_config_t *config)</argsstring>
        <name>ppi_config_cs_pin</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structppi__cs__pin__config__t" kindref="compound">ppi_cs_pin_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>config cs pin </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>cs pin index, value: 0 - 3 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>cs pin config structure pointer, <ref refid="structppi__cs__pin__config__t" kindref="compound">ppi_cs_pin_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="349" column="6" bodyfile="drivers/src/hpm_ppi_drv.c" bodystart="24" bodyend="67" declfile="drivers/inc/hpm_ppi_drv.h" declline="349" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga808e1a49e64215249ed068555bf35ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ppi_config_cmd</definition>
        <argsstring>(PPI_Type *ppi, uint8_t index, ppi_cmd_config_t *config)</argsstring>
        <name>ppi_config_cmd</name>
        <param>
          <type><ref refid="structPPI__Type" kindref="compound">PPI_Type</ref> *</type>
          <declname>ppi</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structppi__cmd__config__t" kindref="compound">ppi_cmd_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>config cmd </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ppi</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>cmd index, value: 0 - 63 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>cmd config structure pointer, <ref refid="structppi__cmd__config__t" kindref="compound">ppi_cmd_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="358" column="6" bodyfile="drivers/src/hpm_ppi_drv.c" bodystart="69" bodyend="103" declfile="drivers/inc/hpm_ppi_drv.h" declline="358" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__ppi__interface_1ga2c3533b852a13b257f1218ef40b81797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ppi_ns2cycle</definition>
        <argsstring>(uint32_t freq_in_hz, uint32_t ns)</argsstring>
        <name>ppi_ns2cycle</name>
        <param>
          <type>uint32_t</type>
          <declname>freq_in_hz</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
<para>convert ns to cycle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">freq_in_hz</parametername>
</parameternamelist>
<parameterdescription>
<para>PPI clock frequency in Hz </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ns</parametername>
</parameternamelist>
<parameterdescription>
<para>time in ns </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cycle count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_ppi_drv.h" line="367" column="10" bodyfile="drivers/src/hpm_ppi_drv.c" bodystart="105" bodyend="118" declfile="drivers/inc/hpm_ppi_drv.h" declline="367" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>PPI driver APIs  . </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
