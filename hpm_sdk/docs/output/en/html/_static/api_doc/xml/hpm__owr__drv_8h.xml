<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__owr__drv_8h" kind="file" language="C++">
    <compoundname>hpm_owr_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_owr_regs.h</includes>
    <includedby refid="hpm__owr__drv_8c" local="yes">drivers/src/hpm_owr_drv.c</includedby>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>drivers/inc/hpm_owr_drv.h</label>
        <link refid="hpm__owr__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_owr_regs.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>drivers/inc/hpm_owr_drv.h</label>
        <link refid="hpm__owr__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>drivers/src/hpm_owr_drv.c</label>
        <link refid="hpm__owr__drv_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structowr__config__t" prot="public">owr_config_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="hpm__owr__drv_8h_1a5a3212d41e67f612d890dc066d197665" prot="public" static="no">
        <name>OWR_RPP_TIMEOUT</name>
        <initializer>(50000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="17" column="9" bodyfile="drivers/inc/hpm_owr_drv.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hpm__owr__drv_8h_1a0fc45f59165dbec16d014d3ffecd7ee4" prot="public" static="no">
        <name>OWR_WR_TIMEOUT</name>
        <initializer>(50000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="21" column="9" bodyfile="drivers/inc/hpm_owr_drv.h" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347" prot="public" static="no" strong="no">
        <type></type>
        <name>owr_irq_t</name>
        <enumvalue id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a1fda35abc8d54279858950cf7c020cef" prot="public">
          <name>owr_irq_receive_shift_register_full</name>
          <initializer>= OWR_IRQ_STS_RSRF_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347ad947fc4459835c089c90605ef0bdfe60" prot="public">
          <name>owr_irq_receive_buff_full</name>
          <initializer>= OWR_IRQ_STS_RBF_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a193fc85da55a851a8db1e2ec574ed294" prot="public">
          <name>owr_irq_transmit_shift_register_empty</name>
          <initializer>= OWR_IRQ_STS_TEMT_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347af1cd2b1ee550e617aa7492e6b74d9bf4" prot="public">
          <name>owr_irq_transmit_buffer_empty</name>
          <initializer>= OWR_IRQ_STS_TBE_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a43fb504bdf728288f1570d46ddbe6486" prot="public">
          <name>owr_irq_presence_detected</name>
          <initializer>= OWR_IRQ_STS_PST_DET_MASK</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>OWR IRQ Type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="29" column="1" bodyfile="drivers/inc/hpm_owr_drv.h" bodystart="29" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__owr__drv_8h_1aee2467db2be08f6779375cec62c9b6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_sw_reset</definition>
        <argsstring>(OWR_Type *ptr)</argsstring>
        <name>owr_sw_reset</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Software Reset OWR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of software reset. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="52" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="10" bodyend="16" declfile="drivers/inc/hpm_owr_drv.h" declline="52" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1aa9db54190684e8413b25e5ac048d0af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_init</definition>
        <argsstring>(OWR_Type *ptr, owr_config_t *config)</argsstring>
        <name>owr_init</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="structowr__config__t" kindref="compound">owr_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Init OWR. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">config</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to config for initializing OWR. <ref refid="structowr__config__t" kindref="compound">owr_config_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of init. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="61" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="18" bodyend="33" declfile="drivers/inc/hpm_owr_drv.h" declline="61" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1aa122b0ef449b9b589f265e4ec652d651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_reset_and_presence_pulses</definition>
        <argsstring>(OWR_Type *ptr)</argsstring>
        <name>owr_reset_and_presence_pulses</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Reset and presence pulses. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of reset and presence pulses. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="69" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="35" bodyend="50" declfile="drivers/inc/hpm_owr_drv.h" declline="69" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1a5d5725a3da8466fdba4e03389fc89da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_get_presence_status</definition>
        <argsstring>(OWR_Type *ptr, uint32_t *status)</argsstring>
        <name>owr_get_presence_status</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Get presence status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to status for storing presence status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of getting presence status. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="78" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="52" bodyend="61" declfile="drivers/inc/hpm_owr_drv.h" declline="78" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1aebfaf572eb4a187bba4ad2925ee45f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_release_bus</definition>
        <argsstring>(OWR_Type *ptr)</argsstring>
        <name>owr_release_bus</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Release bus. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of releasing bus. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="86" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="63" bodyend="86" declfile="drivers/inc/hpm_owr_drv.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1ade45994921267c4e4236133cf982304d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_write_data</definition>
        <argsstring>(OWR_Type *ptr, uint32_t data)</argsstring>
        <name>owr_write_data</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of writing data. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="95" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="88" bodyend="111" declfile="drivers/inc/hpm_owr_drv.h" declline="95" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1acdf06b5491a122b84a1cd42cbe90194f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_read_data</definition>
        <argsstring>(OWR_Type *ptr, uint32_t *data)</argsstring>
        <name>owr_read_data</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to data for storing read data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of reading data. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="104" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="113" bodyend="139" declfile="drivers/inc/hpm_owr_drv.h" declline="104" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1a66afb05fd8bb93848959ddc802f9b21f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_clear_irq_status</definition>
        <argsstring>(OWR_Type *ptr, uint32_t mask)</argsstring>
        <name>owr_clear_irq_status</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clear irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of irq status to clear owr_irq_event_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of clearing irq status. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="113" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="141" bodyend="146" declfile="drivers/inc/hpm_owr_drv.h" declline="113" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1a15e594798546f0f5d1d035d0403304e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_enable_interrupts</definition>
        <argsstring>(OWR_Type *ptr, uint32_t mask)</argsstring>
        <name>owr_enable_interrupts</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Enable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of interrupts to enable owr_irq_event_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of enabling interrupts. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="122" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="148" bodyend="153" declfile="drivers/inc/hpm_owr_drv.h" declline="122" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1adc7e4d02b8811176f8d2b4759b811e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_disable_interrupts</definition>
        <argsstring>(OWR_Type *ptr, uint32_t mask)</argsstring>
        <name>owr_disable_interrupts</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Disable interrupts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of interrupts to disable owr_irq_event_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of disabling interrupts. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="131" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="155" bodyend="160" declfile="drivers/inc/hpm_owr_drv.h" declline="131" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="hpm__owr__drv_8h_1aa0d53e41ff0d38ba00050c1947588c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>hpm_stat_t owr_get_irq_status</definition>
        <argsstring>(OWR_Type *ptr, uint32_t *status)</argsstring>
        <name>owr_get_irq_status</name>
        <param>
          <type>OWR_Type *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Get irq status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>OWR base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to status for storing irq status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> result of getting irq status. <ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/inc/hpm_owr_drv.h" line="140" column="12" bodyfile="drivers/src/hpm_owr_drv.c" bodystart="162" bodyend="171" declfile="drivers/inc/hpm_owr_drv.h" declline="140" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2025<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_OWR_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_OWR_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_owr_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>Macro<sp/>Constant<sp/>Declarations</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OWR_RPP_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="hpm__owr__drv_8h_1a5a3212d41e67f612d890dc066d197665" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OWR_RPP_TIMEOUT<sp/>(50000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OWR_WR_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="hpm__owr__drv_8h_1a0fc45f59165dbec16d014d3ffecd7ee4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OWR_WR_TIMEOUT<sp/>(50000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>Typedef<sp/>Enum<sp/>Declarations</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*-------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a1fda35abc8d54279858950cf7c020cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a1fda35abc8d54279858950cf7c020cef" kindref="member">owr_irq_receive_shift_register_full</ref><sp/>=<sp/>OWR_IRQ_STS_RSRF_MASK,</highlight></codeline>
<codeline lineno="31" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347ad947fc4459835c089c90605ef0bdfe60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347ad947fc4459835c089c90605ef0bdfe60" kindref="member">owr_irq_receive_buff_full</ref><sp/>=<sp/>OWR_IRQ_STS_RBF_MASK,</highlight></codeline>
<codeline lineno="32" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a193fc85da55a851a8db1e2ec574ed294" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a193fc85da55a851a8db1e2ec574ed294" kindref="member">owr_irq_transmit_shift_register_empty</ref><sp/>=<sp/>OWR_IRQ_STS_TEMT_MASK,</highlight></codeline>
<codeline lineno="33" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347af1cd2b1ee550e617aa7492e6b74d9bf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347af1cd2b1ee550e617aa7492e6b74d9bf4" kindref="member">owr_irq_transmit_buffer_empty</ref><sp/>=<sp/>OWR_IRQ_STS_TBE_MASK,</highlight></codeline>
<codeline lineno="34" refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a43fb504bdf728288f1570d46ddbe6486" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347a43fb504bdf728288f1570d46ddbe6486" kindref="member">owr_irq_presence_detected</ref><sp/>=<sp/>OWR_IRQ_STS_PST_DET_MASK</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="hpm__owr__drv_8h_1a440cbb65d40882aaf8c6958df252e347" kindref="member">owr_irq_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structowr__config__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39" refid="structowr__config__t_1aca7f0d7d9c8b350b73c0a55f844f658c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structowr__config__t_1aca7f0d7d9c8b350b73c0a55f844f658c" kindref="member">clock_source_frequency</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><ref refid="structowr__config__t" kindref="compound">owr_config_t</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1aee2467db2be08f6779375cec62c9b6d0" kindref="member">owr_sw_reset</ref>(OWR_Type<sp/>*ptr);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1aa9db54190684e8413b25e5ac048d0af9" kindref="member">owr_init</ref>(OWR_Type<sp/>*ptr,<sp/><ref refid="structowr__config__t" kindref="compound">owr_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1aa122b0ef449b9b589f265e4ec652d651" kindref="member">owr_reset_and_presence_pulses</ref>(OWR_Type<sp/>*ptr);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1a5d5725a3da8466fdba4e03389fc89da4" kindref="member">owr_get_presence_status</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>*status);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1aebfaf572eb4a187bba4ad2925ee45f0c" kindref="member">owr_release_bus</ref>(OWR_Type<sp/>*ptr);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1ade45994921267c4e4236133cf982304d" kindref="member">owr_write_data</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>data);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1acdf06b5491a122b84a1cd42cbe90194f" kindref="member">owr_read_data</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>*data);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1a66afb05fd8bb93848959ddc802f9b21f" kindref="member">owr_clear_irq_status</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1a15e594798546f0f5d1d035d0403304e5" kindref="member">owr_enable_interrupts</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1adc7e4d02b8811176f8d2b4759b811e54" kindref="member">owr_disable_interrupts</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="hpm__owr__drv_8h_1aa0d53e41ff0d38ba00050c1947588c33" kindref="member">owr_get_irq_status</ref>(OWR_Type<sp/>*ptr,<sp/>uint32_t<sp/>*status);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_OWR_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="drivers/inc/hpm_owr_drv.h"/>
  </compounddef>
</doxygen>
