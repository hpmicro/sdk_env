<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="hpm__usb__device_8c" kind="file" language="C++">
    <compoundname>hpm_usb_device.c</compoundname>
    <includes refid="hpm__usb__device_8h" local="yes">hpm_usb_device.h</includes>
    <includes local="yes">hpm_misc.h</includes>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <incdepgraph>
      <node id="1">
        <label>components/usb/device/hpm_usb_device.c</label>
        <link refid="hpm__usb__device_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hpm_usb_device.h</label>
        <link refid="hpm__usb__device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>hpm_usb_drv.h</label>
        <link refid="hpm__usb__drv_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>hpm_misc.h</label>
      </node>
      <node id="11">
        <label>hpm_soc_feature.h</label>
      </node>
      <node id="10">
        <label>hpm_usb_regs.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="hpm__usb__device_8c_1a17ae21bc3763a72ea53da11c9b4d73df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void usb_qtd_init</definition>
        <argsstring>(dcd_qtd_t *p_qtd, void *data_ptr, uint16_t total_bytes)</argsstring>
        <name>usb_qtd_init</name>
        <param>
          <type><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref> *</type>
          <declname>p_qtd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data_ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>total_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="17" column="13" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a7b84f6f6de6970e83b246fa001837c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref> *</type>
        <definition>dcd_qhd_t * usb_device_qhd_get</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_idx)</argsstring>
        <name>usb_device_qhd_get</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="37" column="11" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1aeca807c412186c9b440926e6b09e5e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref> *</type>
        <definition>dcd_qtd_t * usb_device_qtd_get</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_idx)</argsstring>
        <name>usb_device_qtd_get</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="42" column="11" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1aeb2861ead16d131783005521c758003e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_bus_reset</definition>
        <argsstring>(usb_device_handle_t *handle, uint16_t ep0_max_packet_size)</argsstring>
        <name>usb_device_bus_reset</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>ep0_max_packet_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="47" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="47" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1aff5c5bbf109bef049a6e43ee0e6f0ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_init</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t int_mask)</argsstring>
        <name>usb_device_init</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>int_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="65" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="65" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a952f0c59d9f0a71ac8ef29d1e01ed28d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_deinit</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_deinit</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="92" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="92" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1abed7da9a100b190518993ed312d966f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_status_flags</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_status_flags</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="104" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1adf0fb6cfb1e4a1e07d83ab692df373b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_status_flags</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_status_flags</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="109" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a38201fa0e9befacc7d8af78bbe7bd79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_interrupts</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_interrupts</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="114" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a1cc54eba002e4b728918651899147963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_port_speed</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_speed</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="119" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ac1d50a20329a6117480f3280da50f0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_suspend_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_suspend_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="124" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ac6acdf1faa69dd173aed6a7bf5181ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_set_address</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t dev_addr)</argsstring>
        <name>usb_device_set_address</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>dev_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="129" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="129" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a4fc4fa752803dbaab6229bf924790cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t usb_device_get_address</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_address</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="137" column="9" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a37020f3476ace0964f6a41f4d41eb463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_remote_wakeup</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_remote_wakeup</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="142" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a9f16a801e6dcf23a2bfc39d0bdf669fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_connect</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_connect</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="147" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a49c229661efa584a360c5acc567c7775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_disconnect</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_disconnect</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="152" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a1267c28baeedc0857a235f57eb6749dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_get_port_ccs</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_ccs</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="157" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ac8b02aaa2a1a9c7be03eb67946b0a2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_get_port_reset_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_port_reset_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="162" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ad224fccd8c89072c7aec5833cf27d805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_get_edpt_complete_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_edpt_complete_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="167" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a732a4b5a7e610349f1c33a744a00b31c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_edpt_complete_status</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_edpt_complete_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="172" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a2e0b811c6de3bcb9f3e423b437c1d848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t usb_device_get_setup_status</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_get_setup_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="177" column="10" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a93feae1af796beb71f08bd107f02e3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_clear_setup_status</definition>
        <argsstring>(usb_device_handle_t *handle, uint32_t mask)</argsstring>
        <name>usb_device_clear_setup_status</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="182" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1af0f1868b609a6a4e80ab5d995d654087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_open</definition>
        <argsstring>(usb_device_handle_t *handle, usb_endpoint_config_t *config)</argsstring>
        <name>usb_device_edpt_open</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="191" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="191" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ae940db2eb63e5664ec4da32cfc7bf3a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_xfer</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr, uint8_t *buffer, uint32_t total_bytes)</argsstring>
        <name>usb_device_edpt_xfer</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>total_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="220" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="220" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a77617c2f3c1c50f8b32b5a719ad724d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="284" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a81c86c7e4a2a34f60a0ac57870adc614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_clear_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_clear_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="289" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ab1af4566dcc6d17c54f37fa7c833b3b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool usb_device_edpt_check_stall</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_check_stall</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="294" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1ad908b5ca776d40a3d68a79bb9e0e3cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_close</definition>
        <argsstring>(usb_device_handle_t *handle, uint8_t ep_addr)</argsstring>
        <name>usb_device_edpt_close</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ep_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="299" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="hpm__usb__device_8c_1a9b19b9d70ac34c22cdda1a6753efe40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void usb_device_edpt_close_all</definition>
        <argsstring>(usb_device_handle_t *handle)</argsstring>
        <name>usb_device_edpt_close_all</name>
        <param>
          <type><ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="components/usb/device/hpm_usb_device.c" line="304" column="6" bodyfile="components/usb/device/hpm_usb_device.c" bodystart="304" bodyend="309"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Include</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__usb__device_8h" kindref="compound">hpm_usb_device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>qtd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a17ae21bc3763a72ea53da11c9b4d73df" kindref="member">usb_qtd_init</ref>(<ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*p_qtd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_ptr,<sp/>uint16_t<sp/>total_bytes)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(p_qtd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ad90cbe79db753d0ce004d0ad7b482a86" kindref="member">USB_SOC_DCD_QTD_NEXT_INVALID</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a5354880e7117e2b90012e296d9056e1f" kindref="member">active</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a7b77db73758849bbf5ae55664a2bda78" kindref="member">total_bytes</ref><sp/>=<sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a8ab966c980a57ab66ddb13267ea010c2" kindref="member">expected_bytes</ref><sp/>=<sp/>total_bytes;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_ptr<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a1752fa3236c2546e544f93cb740927fb" kindref="member">buffer</ref>[0]<sp/><sp/><sp/>=<sp/>(uint32_t)data_ptr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a147d4b1f3cf24487b81f0ede4f2fd9a5" kindref="member">USB_SOC_DCD_QHD_BUFFER_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1a1752fa3236c2546e544f93cb740927fb" kindref="member">buffer</ref>[i]<sp/>|=<sp/>((p_qtd-&gt;<ref refid="structdcd__qtd__t_1a1752fa3236c2546e544f93cb740927fb" kindref="member">buffer</ref>[i-1])<sp/>&amp;<sp/>0xFFFFF000UL)<sp/>+<sp/>4096U;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Device<sp/>API</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref><sp/>*<ref refid="hpm__usb__device_8c_1a7b84f6f6de6970e83b246fa001837c1f" kindref="member">usb_device_qhd_get</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_idx)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[ep_idx];</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*<ref refid="hpm__usb__device_8c_1aeca807c412186c9b440926e6b09e5e1c" kindref="member">usb_device_qtd_get</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_idx)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1a3ec340989b464a965108b300c3ebd3ed" kindref="member">qtd</ref>[ep_idx<sp/>*<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a6c3b471b7f1cb26de0bcc5360f4a7176" kindref="member">USB_SOC_DCD_QTD_COUNT_EACH_ENDPOINT</ref>];</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1aeb2861ead16d131783005521c758003e" kindref="member">usb_device_bus_reset</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint16_t<sp/>ep0_max_packet_size)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref><sp/>*dcd_data<sp/>=<sp/>handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga5656966fc46a5c1c45b05ad42ca0f1b9" kindref="member">usb_dcd_bus_reset</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep0_max_packet_size);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Queue<sp/>Head<sp/>&amp;<sp/>Queue<sp/>TD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(dcd_data,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>Control<sp/>Endpoints<sp/>(0<sp/>OUT,<sp/>1<sp/>IN)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[0].<ref refid="structdcd__qhd__t_1ac6b2f17d99c36e9d905e4aa19ca4e51a" kindref="member">zero_length_termination</ref><sp/>=<sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[1].<ref refid="structdcd__qhd__t_1ac6b2f17d99c36e9d905e4aa19ca4e51a" kindref="member">zero_length_termination</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[0].<ref refid="structdcd__qhd__t_1a0dc3eab99ac50e0ff60d5c708f05c019" kindref="member">max_packet_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[1].<ref refid="structdcd__qhd__t_1a0dc3eab99ac50e0ff60d5c708f05c019" kindref="member">max_packet_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ep0_max_packet_size;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[0].<ref refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" kindref="member">qtd_overlay</ref>.<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[1].<ref refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" kindref="member">qtd_overlay</ref>.<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ad90cbe79db753d0ce004d0ad7b482a86" kindref="member">USB_SOC_DCD_QTD_NEXT_INVALID</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>dcd_data-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[0].<ref refid="structdcd__qhd__t_1a085698cdddec3897172f6a66a028b670" kindref="member">int_on_setup</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1aff5c5bbf109bef049a6e43ee0e6f0ce6" kindref="member">usb_device_init</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>int_mask)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>memroy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>controller<sp/>in<sp/>device<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gaff93d59e0f375b4edd7195e12f21fc0a" kindref="member">usb_dcd_init</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>endpoint<sp/>list<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga4d330448bb7abef5ff1273927cebac81" kindref="member">usb_dcd_set_edpt_list_addr</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(0,<sp/><sp/>(uint32_t)handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gab758df15c9c7b620f14c721bc35eff9b" kindref="member">usb_clear_status_flags</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/><ref refid="group__usb__interface_1ga4f6763a3c0dba2fce55d681a0cc46bb9" kindref="member">usb_get_status_flags</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>interrupt<sp/>mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga90b58bdcf539cd729484d23dee83de12" kindref="member">usb_enable_interrupts</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>int_mask);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Connect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga3526d2d96452fe0f905cb41a44cbad03" kindref="member">usb_dcd_connect</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a952f0c59d9f0a71ac8ef29d1e01ed28d" kindref="member">usb_device_deinit</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3eaa77790dabddfa6c8006577ff7422d" kindref="member">USB_SOC_DCD_MAX_ENDPOINT_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga206094a9ee1dab3d52df63a36185b9b7" kindref="member">usb_dcd_edpt_close</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>(i<sp/>|<sp/>(<ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a7e072c1670e0569278bf13f7254468b4" kindref="member">usb_dir_in</ref><sp/><sp/>&lt;&lt;<sp/>0x07)));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga206094a9ee1dab3d52df63a36185b9b7" kindref="member">usb_dcd_edpt_close</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>(i<sp/>|<sp/>(<ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62aeaa12a81a0e999bc935e4e102a1a6d52" kindref="member">usb_dir_out</ref><sp/>&lt;&lt;<sp/>0x07)));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga45bce816a6316b47c9a0a26b566988af" kindref="member">usb_dcd_deinit</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdcd__data__t" kindref="compound">dcd_data_t</ref>));</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8c_1abed7da9a100b190518993ed312d966f6" kindref="member">usb_device_status_flags</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga4f6763a3c0dba2fce55d681a0cc46bb9" kindref="member">usb_get_status_flags</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1adf0fb6cfb1e4a1e07d83ab692df373b4" kindref="member">usb_device_clear_status_flags</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gab758df15c9c7b620f14c721bc35eff9b" kindref="member">usb_clear_status_flags</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>mask);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8c_1a38201fa0e9befacc7d8af78bbe7bd79c" kindref="member">usb_device_interrupts</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gaaaf873d0073c24e1322cb78040785bd9" kindref="member">usb_get_interrupts</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8c_1a1cc54eba002e4b728918651899147963" kindref="member">usb_device_get_port_speed</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga14d1d0f4ba442713328d0e9a6f3d89ee" kindref="member">usb_get_port_speed</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8c_1ac1d50a20329a6117480f3280da50f0e6" kindref="member">usb_device_get_suspend_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga21870c361bfd4242f6bab55ce1572dd7" kindref="member">usb_get_suspend_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1ac6acdf1faa69dd173aed6a7bf5181ef6" kindref="member">usb_device_set_address</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>dev_addr)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Response<sp/>with<sp/>status<sp/>first<sp/>before<sp/>changing<sp/>device<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hpm__usb__device_8c_1ae940db2eb63e5664ec4da32cfc7bf3a5" kindref="member">usb_device_edpt_xfer</ref>(handle,<sp/>0<sp/>|<sp/><ref refid="group__usb__interface_1ggac8a76acd5a4f562121857c3b5fa12f62a221cb59897a7fb73e55c7da15e555fd5" kindref="member">usb_dir_in_mask</ref>,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga56f4485460fb8e69291a267a755b6870" kindref="member">usb_dcd_set_address</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>dev_addr);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">uint8_t<sp/><ref refid="hpm__usb__device_8c_1a4fc4fa752803dbaab6229bf924790cda" kindref="member">usb_device_get_address</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab785d17f2e833df64a42695d726f4157" kindref="member">usb_dcd_get_device_addr</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a37020f3476ace0964f6a41f4d41eb463" kindref="member">usb_device_remote_wakeup</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gaba25dc7f740483fca43efae2d35eab71" kindref="member">usb_dcd_remote_wakeup</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a9f16a801e6dcf23a2bfc39d0bdf669fd" kindref="member">usb_device_connect</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga3526d2d96452fe0f905cb41a44cbad03" kindref="member">usb_dcd_connect</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a49c229661efa584a360c5acc567c7775" kindref="member">usb_device_disconnect</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gab7681ff335b3134cf4fe056a4d06be49" kindref="member">usb_dcd_disconnect</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a1267c28baeedc0857a235f57eb6749dc" kindref="member">usb_device_get_port_ccs</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1gab042236cf3fd048b9fd38a45db340244" kindref="member">usb_get_port_ccs</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1ac8b02aaa2a1a9c7be03eb67946b0a2a4" kindref="member">usb_device_get_port_reset_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga0ea35987674289f35787ab42935c4ef4" kindref="member">usb_get_port_reset_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8c_1ad224fccd8c89072c7aec5833cf27d805" kindref="member">usb_device_get_edpt_complete_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga7eff2d319dc7c0a51fbd50cb68f4b713" kindref="member">usb_dcd_get_edpt_complete_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a732a4b5a7e610349f1c33a744a00b31c" kindref="member">usb_device_clear_edpt_complete_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga82811e6be34b432b2e744744d30da1e2" kindref="member">usb_dcd_clear_edpt_complete_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>mask);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">uint32_t<sp/><ref refid="hpm__usb__device_8c_1a2e0b811c6de3bcb9f3e423b437c1d848" kindref="member">usb_device_get_setup_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga458e6353080c3188117e60c451d85a96" kindref="member">usb_dcd_get_edpt_setup_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a93feae1af796beb71f08bd107f02e3be" kindref="member">usb_device_clear_setup_status</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gae5aea3d230463140c4ecb3b0b7f098b4" kindref="member">usb_dcd_clear_edpt_setup_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>mask);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>Endpoint<sp/>API</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1af0f1868b609a6a4e80ab5d995d654087" kindref="member">usb_device_edpt_open</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/><ref refid="structusb__endpoint__config__t" kindref="compound">usb_endpoint_config_t</ref><sp/>*config)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epnum<sp/><sp/>=<sp/>config-&gt;<ref refid="structusb__endpoint__config__t_1a1992fc20d489e4121247d915354d352d" kindref="member">ep_addr</ref><sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>(config-&gt;<ref refid="structusb__endpoint__config__t_1a1992fc20d489e4121247d915354d352d" kindref="member">ep_addr</ref><sp/>&amp;<sp/>0x80)<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ep_idx<sp/>=<sp/>2<sp/>*<sp/>epnum<sp/>+<sp/>dir;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref><sp/>*p_qhd;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>not<sp/>exceed<sp/>max<sp/>endpoint<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(epnum<sp/>&gt;=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3eaa77790dabddfa6c8006577ff7422d" kindref="member">USB_SOC_DCD_MAX_ENDPOINT_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prepare<sp/>Queue<sp/>Head<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd<sp/>=<sp/>&amp;handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[ep_idx];</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(p_qhd,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref>));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd-&gt;<ref refid="structdcd__qhd__t_1ac6b2f17d99c36e9d905e4aa19ca4e51a" kindref="member">zero_length_termination</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd-&gt;<ref refid="structdcd__qhd__t_1a0dc3eab99ac50e0ff60d5c708f05c019" kindref="member">max_packet_size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>config-&gt;<ref refid="structusb__endpoint__config__t_1a464ade9a8ba66d3a5f057e37c6897273" kindref="member">max_packet_size</ref><sp/>&amp;<sp/>0x7FFu;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd-&gt;<ref refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" kindref="member">qtd_overlay</ref>.<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1ad90cbe79db753d0ce004d0ad7b482a86" kindref="member">USB_SOC_DCD_QTD_NEXT_INVALID</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config-&gt;<ref refid="structusb__endpoint__config__t_1a1f66686c038bcfb44fc25300bdfbc0da" kindref="member">xfer</ref><sp/>==<sp/><ref refid="group__usb__interface_1ggad74e07f65d6e7c0bd897ffeffedbd0c9a74b1e326fd6b9902b3e1087ad5e1116e" kindref="member">usb_xfer_isochronous</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_qhd-&gt;<ref refid="structdcd__qhd__t_1a994827a69bbf336cda3d0e651077e371" kindref="member">iso_mult</ref><sp/>=<sp/>((config-&gt;<ref refid="structusb__endpoint__config__t_1a464ade9a8ba66d3a5f057e37c6897273" kindref="member">max_packet_size</ref><sp/>&gt;&gt;<sp/>11u)<sp/>&amp;<sp/>0x3u)<sp/>+<sp/>1u;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gab2450ed6584f4fc6056d785c4b340f19" kindref="member">usb_dcd_edpt_open</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>config);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1ae940db2eb63e5664ec4da32cfc7bf3a5" kindref="member">usb_device_edpt_xfer</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr,<sp/>uint8_t<sp/>*buffer,<sp/>uint32_t<sp/>total_bytes)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>epnum<sp/>=<sp/>ep_addr<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dir<sp/><sp/><sp/>=<sp/>(ep_addr<sp/>&amp;<sp/>0x80)<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ep_idx<sp/>=<sp/>2<sp/>*<sp/>epnum<sp/>+<sp/>dir;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>qtd_num;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>xfer_len;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qhd__t" kindref="compound">dcd_qhd_t</ref><sp/>*p_qhd;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*p_qtd;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*first_p_qtd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdcd__qtd__t" kindref="compound">dcd_qtd_t</ref><sp/>*prev_p_qtd<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(epnum<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>follows<sp/>UM<sp/>Setup<sp/>packet<sp/>handling<sp/>using<sp/>setup<sp/>lockout<sp/>mechanism</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wait<sp/>until<sp/>ENDPTSETUPSTAT<sp/>before<sp/>priming<sp/>data/status<sp/>in<sp/>response<sp/>TODO<sp/>add<sp/>time<sp/>out</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__usb__interface_1ga458e6353080c3188117e60c451d85a96" kindref="member">usb_dcd_get_edpt_setup_status</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>)<sp/>&amp;<sp/><ref refid="group__common__interface_1gaa63a47bf7b4fb914109cf9c7e4ab0762" kindref="member">HPM_BITSMASK</ref>(1,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>qtd_num<sp/>=<sp/>(total_bytes<sp/>+<sp/>0x3fff)<sp/>/<sp/>0x4000;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qtd_num<sp/>&gt;<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a6c3b471b7f1cb26de0bcc5360f4a7176" kindref="member">USB_SOC_DCD_QTD_COUNT_EACH_ENDPOINT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(uint8_t<sp/>*)<ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(0,<sp/>(uint32_t)buffer);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd<sp/>=<sp/>&amp;handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1ab6ecd8458fe7a62e9c97dfe2bd415c86" kindref="member">qhd</ref>[ep_idx];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_qtd<sp/>=<sp/>&amp;handle-&gt;<ref refid="structusb__device__handle__t_1a63d2af30a9aad10fad2dc7e9dbeed050" kindref="member">dcd_data</ref>-&gt;<ref refid="structdcd__data__t_1a3ec340989b464a965108b300c3ebd3ed" kindref="member">qtd</ref>[ep_idx<sp/>*<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a6c3b471b7f1cb26de0bcc5360f4a7176" kindref="member">USB_SOC_DCD_QTD_COUNT_EACH_ENDPOINT</ref><sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&gt;<sp/>0x4000)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfer_len<sp/>=<sp/>0x4000;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes<sp/>-=<sp/>0x4000;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xfer_len<sp/>=<sp/>total_bytes;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__usb__device_8c_1a17ae21bc3763a72ea53da11c9b4d73df" kindref="member">usb_qtd_init</ref>(p_qtd,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)buffer,<sp/>xfer_len);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_bytes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_qtd-&gt;<ref refid="structdcd__qtd__t_1abc9e2e8ddd72fcf0cc790f75388fd696" kindref="member">int_on_complete</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>xfer_len;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_p_qtd)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_p_qtd-&gt;<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/>=<sp/>(uint32_t)p_qtd;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_p_qtd<sp/>=<sp/>p_qtd;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_p_qtd<sp/>=<sp/>p_qtd;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(total_bytes<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>p_qhd-&gt;<ref refid="structdcd__qhd__t_1a0fcb28051fb1da04d34e659438d6f725" kindref="member">qtd_overlay</ref>.<ref refid="structdcd__qtd__t_1a16e36b0b88cc0a507965504504cc325d" kindref="member">next</ref><sp/>=<sp/><ref refid="HPM5300_2HPM5301_2hpm__misc_8h_1a721e0d5de9fd2d5dd577d5e89e1abb3a" kindref="member">core_local_mem_to_sys_address</ref>(0,<sp/>(uint32_t)<sp/>first_p_qtd);<sp/></highlight><highlight class="comment">/*<sp/>link<sp/>qtd<sp/>to<sp/>qhd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gaadf458a5102a42b971d1ff9c69cdc712" kindref="member">usb_dcd_edpt_xfer</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep_idx);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a77617c2f3c1c50f8b32b5a719ad724d5" kindref="member">usb_device_edpt_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga363402a353d7b62397b3e742f3013ef9" kindref="member">usb_dcd_edpt_stall</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep_addr);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a81c86c7e4a2a34f60a0ac57870adc614" kindref="member">usb_device_edpt_clear_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1gae98b1372cf7dda04bf8669fbe56ba969" kindref="member">usb_dcd_edpt_clear_stall</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep_addr);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1ab1af4566dcc6d17c54f37fa7c833b3b4" kindref="member">usb_device_edpt_check_stall</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__interface_1ga83beef7b50abe7cca5684662b13b25f0" kindref="member">usb_dcd_edpt_check_stall</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep_addr);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1ad908b5ca776d40a3d68a79bb9e0e3cf1" kindref="member">usb_device_edpt_close</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle,<sp/>uint8_t<sp/>ep_addr)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__usb__interface_1ga206094a9ee1dab3d52df63a36185b9b7" kindref="member">usb_dcd_edpt_close</ref>(handle-&gt;<ref refid="structusb__device__handle__t_1a72eb661bf7af3166f132d3e8cea50d89" kindref="member">regs</ref>,<sp/>ep_addr);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="hpm__usb__device_8c_1a9b19b9d70ac34c22cdda1a6753efe40b" kindref="member">usb_device_edpt_close_all</ref>(<ref refid="structusb__device__handle__t" kindref="compound">usb_device_handle_t</ref><sp/>*handle)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a3eaa77790dabddfa6c8006577ff7422d" kindref="member">USB_SOC_DCD_MAX_ENDPOINT_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hpm__usb__device_8c_1ad908b5ca776d40a3d68a79bb9e0e3cf1" kindref="member">usb_device_edpt_close</ref>(handle,<sp/>i);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="components/usb/device/hpm_usb_device.c"/>
  </compounddef>
</doxygen>
