<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="HPM6800_2HPM6880_2hpm__mcan__soc_8h" kind="file" language="C++">
    <compoundname>hpm_mcan_soc.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="yes">hpm_mcan_regs.h</includes>
    <includes refid="HPM6800_2HPM6880_2hpm__soc_8h" local="yes">hpm_soc.h</includes>
    <includes refid="HPM6800_2HPM6880_2hpm__soc__feature_8h" local="yes">hpm_soc_feature.h</includes>
    <incdepgraph>
      <node id="74">
        <label>riscv/riscv_core.h</label>
        <link refid="riscv__core_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>hpm_csr_drv.h</label>
        <link refid="hpm__csr__drv_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>hpm_batt_iomux.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__batt__iomux_8h"/>
      </node>
      <node id="75">
        <label>hpm_csr_regs.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__csr__regs_8h"/>
      </node>
      <node id="82">
        <label>hpm_dmamux_src.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__dmamux__src_8h"/>
      </node>
      <node id="76">
        <label>hpm_interrupt.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__interrupt_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>hpm_iomux.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__iomux_8h"/>
      </node>
      <node id="1">
        <label>soc/HPM6800/HPM6880/hpm_mcan_soc.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>hpm_misc.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__misc_8h"/>
      </node>
      <node id="81">
        <label>hpm_otp_table.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__otp__table_8h"/>
      </node>
      <node id="79">
        <label>hpm_plic_drv.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__plic__drv_8h"/>
      </node>
      <node id="84">
        <label>hpm_pmic_iomux.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__pmic__iomux_8h"/>
      </node>
      <node id="4">
        <label>hpm_soc.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__soc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>hpm_soc_feature.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__soc__feature_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>hpm_soc_ip_feature.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__soc__ip__feature_8h"/>
      </node>
      <node id="5">
        <label>hpm_soc_irq.h</label>
        <link refid="HPM6800_2HPM6880_2hpm__soc__irq_8h"/>
      </node>
      <node id="45">
        <label>hpm_ddrctl_regs.h</label>
        <link refid="hpm__ddrctl__regs_8h"/>
      </node>
      <node id="62">
        <label>hpm_ddrphy_regs.h</label>
        <link refid="hpm__ddrphy__regs_8h"/>
      </node>
      <node id="41">
        <label>hpm_gpu_regs.h</label>
        <link refid="hpm__gpu__regs_8h"/>
      </node>
      <node id="35">
        <label>hpm_gwc_regs.h</label>
        <link refid="hpm__gwc__regs_8h"/>
      </node>
      <node id="40">
        <label>hpm_lcb_regs.h</label>
        <link refid="hpm__lcb__regs_8h"/>
      </node>
      <node id="38">
        <label>hpm_lvb_regs.h</label>
        <link refid="hpm__lvb__regs_8h"/>
      </node>
      <node id="61">
        <label>hpm_mipi_csi_phy_regs.h</label>
        <link refid="hpm__mipi__csi__phy__regs_8h"/>
      </node>
      <node id="37">
        <label>hpm_mipi_csi_regs.h</label>
        <link refid="hpm__mipi__csi__regs_8h"/>
      </node>
      <node id="60">
        <label>hpm_mipi_dsi_phy_regs.h</label>
        <link refid="hpm__mipi__dsi__phy__regs_8h"/>
      </node>
      <node id="36">
        <label>hpm_mipi_dsi_regs.h</label>
        <link refid="hpm__mipi__dsi__regs_8h"/>
      </node>
      <node id="39">
        <label>hpm_pixelmux_regs.h</label>
        <link refid="hpm__pixelmux__regs_8h"/>
      </node>
      <node id="29">
        <label>hpm_smix_regs.h</label>
        <link refid="hpm__smix__regs_8h"/>
      </node>
      <node id="7">
        <label>assert.h</label>
      </node>
      <node id="25">
        <label>hpm_adc16_regs.h</label>
      </node>
      <node id="64">
        <label>hpm_bacc_regs.h</label>
      </node>
      <node id="66">
        <label>hpm_bcfg_regs.h</label>
      </node>
      <node id="67">
        <label>hpm_bgpr_regs.h</label>
      </node>
      <node id="70">
        <label>hpm_bkey_regs.h</label>
      </node>
      <node id="71">
        <label>hpm_bmon_regs.h</label>
      </node>
      <node id="65">
        <label>hpm_bpor_regs.h</label>
      </node>
      <node id="69">
        <label>hpm_bsec_regs.h</label>
      </node>
      <node id="32">
        <label>hpm_cam_regs.h</label>
      </node>
      <node id="15">
        <label>hpm_crc_regs.h</label>
      </node>
      <node id="78">
        <label>hpm_csr_regs.h</label>
      </node>
      <node id="27">
        <label>hpm_dao_regs.h</label>
      </node>
      <node id="22">
        <label>hpm_dmamux_regs.h</label>
      </node>
      <node id="23">
        <label>hpm_dmav2_regs.h</label>
      </node>
      <node id="42">
        <label>hpm_enet_regs.h</label>
      </node>
      <node id="21">
        <label>hpm_ewdg_regs.h</label>
      </node>
      <node id="46">
        <label>hpm_ffa_regs.h</label>
      </node>
      <node id="11">
        <label>hpm_gpio_regs.h</label>
      </node>
      <node id="24">
        <label>hpm_gpiom_regs.h</label>
      </node>
      <node id="19">
        <label>hpm_gptmr_regs.h</label>
      </node>
      <node id="17">
        <label>hpm_i2c_regs.h</label>
      </node>
      <node id="26">
        <label>hpm_i2s_regs.h</label>
      </node>
      <node id="54">
        <label>hpm_ioc_regs.h</label>
      </node>
      <node id="34">
        <label>hpm_jpeg_regs.h</label>
      </node>
      <node id="52">
        <label>hpm_keym_regs.h</label>
      </node>
      <node id="31">
        <label>hpm_lcdc_regs.h</label>
      </node>
      <node id="20">
        <label>hpm_mbx_regs.h</label>
      </node>
      <node id="3">
        <label>hpm_mcan_regs.h</label>
      </node>
      <node id="13">
        <label>hpm_mchtmr_regs.h</label>
      </node>
      <node id="49">
        <label>hpm_mon_regs.h</label>
      </node>
      <node id="73">
        <label>hpm_mono_regs.h</label>
      </node>
      <node id="51">
        <label>hpm_otp_regs.h</label>
      </node>
      <node id="57">
        <label>hpm_pcfg_regs.h</label>
      </node>
      <node id="28">
        <label>hpm_pdm_regs.h</label>
      </node>
      <node id="33">
        <label>hpm_pdma_regs.h</label>
      </node>
      <node id="58">
        <label>hpm_pgpr_regs.h</label>
      </node>
      <node id="12">
        <label>hpm_plic_regs.h</label>
      </node>
      <node id="14">
        <label>hpm_plic_sw_regs.h</label>
      </node>
      <node id="55">
        <label>hpm_pllctlv2_regs.h</label>
      </node>
      <node id="56">
        <label>hpm_ppor_regs.h</label>
      </node>
      <node id="30">
        <label>hpm_ptpc_regs.h</label>
      </node>
      <node id="50">
        <label>hpm_rng_regs.h</label>
      </node>
      <node id="68">
        <label>hpm_rtc_regs.h</label>
      </node>
      <node id="47">
        <label>hpm_sdp_regs.h</label>
      </node>
      <node id="44">
        <label>hpm_sdxc_regs.h</label>
      </node>
      <node id="48">
        <label>hpm_sec_regs.h</label>
      </node>
      <node id="18">
        <label>hpm_spi_regs.h</label>
      </node>
      <node id="53">
        <label>hpm_sysctl_regs.h</label>
      </node>
      <node id="72">
        <label>hpm_tamp_regs.h</label>
      </node>
      <node id="63">
        <label>hpm_tsns_regs.h</label>
      </node>
      <node id="16">
        <label>hpm_uart_regs.h</label>
      </node>
      <node id="43">
        <label>hpm_usb_regs.h</label>
      </node>
      <node id="59">
        <label>hpm_vad_regs.h</label>
      </node>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="9">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structmcan__msg__buf__attr__t" prot="public">mcan_msg_buf_attr_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad618ad20aa476c222e8d51e09411a3cf" prot="public" static="no">
        <name>MCAN_SOC_TSU_SRC_TWO_STAGES</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="24" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aff279e99b67d4ac024171faa459f9e9a" prot="public" static="no">
        <name>HPM_MCAN_EXT_TBSEL_NUM</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="26" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a6b1384d700537b90265b89648083bde2" prot="public" static="no">
        <name>HPM_MCAN_TBSEL_BASE</name>
        <initializer>(0xF02FF000UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="27" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8cdbbac84056c8097e292c76330ec362" prot="public" static="no">
        <name>HPM_MCAN_TBSEL</name>
        <initializer>(*(volatile uint32_t *)<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a6b1384d700537b90265b89648083bde2" kindref="member">HPM_MCAN_TBSEL_BASE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="28" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8e80f5854b14bd415cab82f4e7c46d95" prot="public" static="no">
        <name>HPM_MCAN_TBSEL_BITWIDTH</name>
        <initializer>(6U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="29" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a37338f7631fa1b18c82a92b051caa1df" prot="public" static="no">
        <name>HPM_MCAN_TBSEL_MASK</name>
        <initializer>((1UL &lt;&lt; <ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a8e80f5854b14bd415cab82f4e7c46d95" kindref="member">HPM_MCAN_TBSEL_BITWIDTH</ref>) - 1UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="30" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad64b42e9942eec2fb9482d47efb3d9de" prot="public" static="no">
        <name>HPM_MCAN_TBSEL0_SHIFT</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="31" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" prot="public" static="no">
        <name>MCAN_MSG_BUF_BASE_VALID_START</name>
        <initializer>(0xF0400000UL)    /* This is the start address of AHB_RAM */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="33" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a282ed0864d37a4a6c0c288edeab2ae84" prot="public" static="no">
        <name>MCAN_MSG_BUG_SIZE_MAX</name>
        <initializer>(32UL * 1024UL)   /* This is the total <ref refid="group__nnactivation_1gaf8fd9ce16b371c8a3bf5e0b37a69419f" kindref="member">size</ref> of AHB_RAM */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="34" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a532a8a30cfaa2756506e8d251cf0f842" prot="public" static="no">
        <name>MCAN_MSG_BUF_BASE_VALID_END</name>
        <initializer>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" kindref="member">MCAN_MSG_BUF_BASE_VALID_START</ref> + <ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a282ed0864d37a4a6c0c288edeab2ae84" kindref="member">MCAN_MSG_BUG_SIZE_MAX</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="35" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a753282d5054c13ee31745a7938d1e14e" prot="public" static="no">
        <name>MCAN_MSG_BUF_ALIGNMENT_SIZE</name>
        <initializer>(4U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="37" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ac55f4c4fe77de41a229b950d6d98b23e" prot="public" static="no">
        <name>MCAN_MSG_BUF_SIZE_IN_WORDS</name>
        <initializer>(640U)</initializer>
        <briefdescription>
<para>MCAN MSG BUF base address (AHB_RAM) </para>
        </briefdescription>
        <detaileddescription>
<para>Default Message Buffer Size in this driver </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="42" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8f5ad574215a2efc281831abe600116f" prot="public" static="no">
        <name>MCAN_IP_SLOT_SIZE</name>
        <initializer>(0x4000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="43" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a46d8a6d4cb2172bd990687dac21c2507" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_MIN</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>TSU External Timebase Sources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="48" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a594c573a2a8fe599fb14949951b0a053" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_0</name>
        <initializer>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a46d8a6d4cb2172bd990687dac21c2507" kindref="member">MCAN_TSU_EXT_TIMEBASE_SRC_MIN</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="49" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1abd8103f9433bf37a3053a5f3eef32686" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_1</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="50" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ab4b93f84863f379e6d3d04bd78311cbc" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_2</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="51" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aaa40b036c2bc6a84b33816abeea02478" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_3</name>
        <initializer>(3U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="52" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a84f8ad5491195a8069b79a4fba47ea9c" prot="public" static="no">
        <name>MCAN_TSU_EXT_TIMEBASE_SRC_MAX</name>
        <initializer>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1aaa40b036c2bc6a84b33816abeea02478" kindref="member">MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_3</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="53" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a54a9729e08c65ee426144b3ed90463ef" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_PTPC0</name>
        <initializer>(0x20)</initializer>
        <briefdescription>
<para>MCAN TSU timebase option for each External Timebase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="58" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a09043862fb7eebba06a690d96920b2b9" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN0</name>
        <initializer>(0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="59" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aae912915f060990971c7ddf4748c817c" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN1</name>
        <initializer>(0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="60" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a623432d2e64a92608dab99f65e473000" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN2</name>
        <initializer>(0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="61" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a92285a70e73054add92e195e9bd7627c" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN3</name>
        <initializer>(0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="62" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afff12810f9a8ed54746d7da5954aa9e0" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN4</name>
        <initializer>(0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="63" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aa193412c8b6a12b5f7fcaf46402904aa" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN5</name>
        <initializer>(0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="64" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a1c917b716f02567c19e876912e92be34" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN6</name>
        <initializer>(0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="65" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afb2012ba870f7ff64a112a48b461905d" prot="public" static="no">
        <name>MCAN_TSU_TBSEL_MCAN7</name>
        <initializer>(0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="66" column="9" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a6f2f6b9044453fefd44d604119268f19" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structmcan__msg__buf__attr__t" kindref="compound">mcan_msg_buf_attr_t</ref></type>
        <definition>mcan_msg_buf_attr_t mcan_soc_msg_buf_attr[(8U)]</definition>
        <argsstring>[(8U)]</argsstring>
        <name>mcan_soc_msg_buf_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="68" column="28" declfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" declline="68" declcolumn="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_instance_from_base</definition>
        <argsstring>(MCAN_Type *base)</argsstring>
        <name>mcan_get_instance_from_base</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Get the MCAN instance index from base address. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">base</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>MCAN instance index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="79" column="24" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1abccf7fddc6cf0e9e7fa450a97efe2dde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_set_tsu_ext_timebase_src</definition>
        <argsstring>(MCAN_Type *ptr, uint8_t src)</argsstring>
        <name>mcan_set_tsu_ext_timebase_src</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Set External Timebase Source for MCAN TSU. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>External Timebase source </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="90" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a32033448a163dce095ae7af7d51833aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_set_tsu_tbsel_option</definition>
        <argsstring>(MCAN_Type *ptr, uint8_t ext_tbsel, uint8_t tbsel_option)</argsstring>
        <name>mcan_set_tsu_tbsel_option</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ext_tbsel</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tbsel_option</declname>
        </param>
        <briefdescription>
<para>Set the Source for specified external timebase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ext_tbsel</parametername>
</parameternamelist>
<parameterdescription>
<para>External TBSEL index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tbsel_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Timebase source selection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="104" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="104" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad1202e05d93dcf7041d436d587b255ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_enable_standby_pin</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_enable_standby_pin</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable Standby Pin for MCAN. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="118" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ac232ee80f849dd666dbe138230d4dad0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void mcan_disable_standby_pin</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_disable_standby_pin</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable Standby pin for MCAN. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="127" column="20" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a33a6cf87becabf75cc3a6c1cdfb7f715" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref></type>
        <definition>static hpm_stat_t mcan_set_msg_buf_attr</definition>
        <argsstring>(MCAN_Type *ptr, const mcan_msg_buf_attr_t *attr)</argsstring>
        <name>mcan_set_msg_buf_attr</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="structmcan__msg__buf__attr__t" kindref="compound">mcan_msg_buf_attr_t</ref> *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Set the attribute of the Message Buffer for specified MCAN. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute of message buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>status_success</parametername>
</parameternamelist>
<parameterdescription>
<para>No error occurred </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status_invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>Invalid argument was detected </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="139" column="26" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="139" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_ram_base</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_ram_base</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get RAM base for MCAN. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RAM base for MCAN </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="165" column="24" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_ram_offset</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_ram_offset</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get the MCAN RAM offset in the dedicated/shared RAM for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RAM offset for MCAN </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="179" column="24" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t mcan_get_ram_size</definition>
        <argsstring>(MCAN_Type *ptr)</argsstring>
        <name>mcan_get_ram_size</name>
        <param>
          <type><ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Get MCAN RAM size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>MCAN base </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RAM size in bytes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h" line="190" column="24" bodyfile="soc/HPM6800/HPM6880/hpm_mcan_soc.h" bodystart="190" bodyend="194"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-2025<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_MCAN_SOC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_SOC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_mcan_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HPM6800_2HPM6880_2hpm__soc_8h" kindref="compound">hpm_soc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="HPM6800_2HPM6880_2hpm__soc__feature_8h" kindref="compound">hpm_soc_feature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ram_base;<sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ram_size;<sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/><ref refid="structmcan__msg__buf__attr__t" kindref="compound">mcan_msg_buf_attr_t</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad618ad20aa476c222e8d51e09411a3cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_SOC_TSU_SRC_TWO_STAGES<sp/><sp/><sp/><sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aff279e99b67d4ac024171faa459f9e9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_EXT_TBSEL_NUM<sp/><sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a6b1384d700537b90265b89648083bde2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_TBSEL_BASE<sp/>(0xF02FF000UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8cdbbac84056c8097e292c76330ec362" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_TBSEL<sp/>(*(volatile<sp/>uint32_t<sp/>*)HPM_MCAN_TBSEL_BASE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8e80f5854b14bd415cab82f4e7c46d95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_TBSEL_BITWIDTH<sp/>(6U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a37338f7631fa1b18c82a92b051caa1df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_TBSEL_MASK<sp/>((1UL<sp/>&lt;&lt;<sp/>HPM_MCAN_TBSEL_BITWIDTH)<sp/>-<sp/>1UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad64b42e9942eec2fb9482d47efb3d9de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_MCAN_TBSEL0_SHIFT<sp/>(8U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MSG_BUF_BASE_VALID_START<sp/>(0xF0400000UL)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>start<sp/>address<sp/>of<sp/>AHB_RAM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a282ed0864d37a4a6c0c288edeab2ae84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MSG_BUG_SIZE_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32UL<sp/>*<sp/>1024UL)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>the<sp/>total<sp/>size<sp/>of<sp/>AHB_RAM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a532a8a30cfaa2756506e8d251cf0f842" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MSG_BUF_BASE_VALID_END<sp/><sp/><sp/>(MCAN_MSG_BUF_BASE_VALID_START<sp/>+<sp/>MCAN_MSG_BUG_SIZE_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a753282d5054c13ee31745a7938d1e14e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MSG_BUF_ALIGNMENT_SIZE<sp/><sp/><sp/>(4U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ac55f4c4fe77de41a229b950d6d98b23e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_MSG_BUF_SIZE_IN_WORDS<sp/>(640U)<sp/><sp/><sp/></highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a8f5ad574215a2efc281831abe600116f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_IP_SLOT_SIZE<sp/>(0x4000U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a46d8a6d4cb2172bd990687dac21c2507" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_MIN<sp/><sp/><sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a594c573a2a8fe599fb14949951b0a053" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_0<sp/>(MCAN_TSU_EXT_TIMEBASE_SRC_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1abd8103f9433bf37a3053a5f3eef32686" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_1<sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ab4b93f84863f379e6d3d04bd78311cbc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_2<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aaa40b036c2bc6a84b33816abeea02478" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_3<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a84f8ad5491195a8069b79a4fba47ea9c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_EXT_TIMEBASE_SRC_MAX<sp/><sp/><sp/><sp/><sp/>(MCAN_TSU_EXT_TIMEBASE_SRC_TBSEL_3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a54a9729e08c65ee426144b3ed90463ef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_PTPC0<sp/>(0x20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a09043862fb7eebba06a690d96920b2b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN0<sp/>(0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aae912915f060990971c7ddf4748c817c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN1<sp/>(0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a623432d2e64a92608dab99f65e473000" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN2<sp/>(0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a92285a70e73054add92e195e9bd7627c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN3<sp/>(0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afff12810f9a8ed54746d7da5954aa9e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN4<sp/>(0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1aa193412c8b6a12b5f7fcaf46402904aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN5<sp/>(0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a1c917b716f02567c19e876912e92be34" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN6<sp/>(0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afb2012ba870f7ff64a112a48b461905d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MCAN_TSU_TBSEL_MCAN7<sp/>(0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structmcan__msg__buf__attr__t" kindref="compound">mcan_msg_buf_attr_t</ref><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac7a3cfa4baaef18f32874586e4ae5e93" kindref="member">mcan_soc_msg_buf_attr</ref>[<ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a0ddb2da93c7bb386377b6210604b6a01" kindref="member">MCAN_SOC_MAX_COUNT</ref>];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpluspus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" kindref="member">mcan_get_instance_from_base</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*base)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>index<sp/>=<sp/>((uint32_t)<sp/>base<sp/>-<sp/><ref refid="HPM5300_2HPM5321_2hpm__soc_8h_1af64a211be2920140509eeb2b5027f9b1" kindref="member">HPM_MCAN0_BASE</ref>)<sp/>/<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a8f5ad574215a2efc281831abe600116f" kindref="member">MCAN_IP_SLOT_SIZE</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1abccf7fddc6cf0e9e7fa450a97efe2dde" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1abccf7fddc6cf0e9e7fa450a97efe2dde" kindref="member">mcan_set_tsu_ext_timebase_src</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>src)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>&lt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1aff279e99b67d4ac024171faa459f9e9a" kindref="member">HPM_MCAN_EXT_TBSEL_NUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a003c3bbdfae5e6a73810a4b6fb86eab5" kindref="member">GLB_CTL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structMCAN__Type_1a003c3bbdfae5e6a73810a4b6fb86eab5" kindref="member">GLB_CTL</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1adeea6c9251cef80d650f0103c3727fd8" kindref="member">~MCAN_GLB_CTL_TSU_TBIN_SEL_MASK</ref>)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1ab2048c2e7889e05ce46e377b4f7f78c7" kindref="member">MCAN_GLB_CTL_TSU_TBIN_SEL_SET</ref>(src);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a32033448a163dce095ae7af7d51833aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a32033448a163dce095ae7af7d51833aa" kindref="member">mcan_set_tsu_tbsel_option</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>ext_tbsel,<sp/>uint8_t<sp/>tbsel_option)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>ptr;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext_tbsel<sp/>&lt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1aff279e99b67d4ac024171faa459f9e9a" kindref="member">HPM_MCAN_EXT_TBSEL_NUM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tbsel_shift<sp/>=<sp/>(ext_tbsel<sp/>*<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a8e80f5854b14bd415cab82f4e7c46d95" kindref="member">HPM_MCAN_TBSEL_BITWIDTH</ref>)<sp/>+<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ad64b42e9942eec2fb9482d47efb3d9de" kindref="member">HPM_MCAN_TBSEL0_SHIFT</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tbsel_mask<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a37338f7631fa1b18c82a92b051caa1df" kindref="member">HPM_MCAN_TBSEL_MASK</ref><sp/>&lt;&lt;<sp/>tbsel_shift;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a8cdbbac84056c8097e292c76330ec362" kindref="member">HPM_MCAN_TBSEL</ref><sp/>=<sp/>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a8cdbbac84056c8097e292c76330ec362" kindref="member">HPM_MCAN_TBSEL</ref><sp/>&amp;<sp/>~tbsel_mask)<sp/>|<sp/>(((uint32_t)<sp/>tbsel_option<sp/>&lt;&lt;<sp/>tbsel_shift)<sp/>&amp;<sp/>tbsel_mask);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ad1202e05d93dcf7041d436d587b255ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ad1202e05d93dcf7041d436d587b255ba" kindref="member">mcan_enable_standby_pin</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a003c3bbdfae5e6a73810a4b6fb86eab5" kindref="member">GLB_CTL</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a9bffb97dac3ea59359cd2e13fd1b1bdb" kindref="member">MCAN_GLB_CTL_M_CAN_STBY_MASK</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1ac232ee80f849dd666dbe138230d4dad0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac232ee80f849dd666dbe138230d4dad0" kindref="member">mcan_disable_standby_pin</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structMCAN__Type_1a003c3bbdfae5e6a73810a4b6fb86eab5" kindref="member">GLB_CTL</ref><sp/>&amp;=<sp/><ref refid="HPM5300_2ip_2hpm__mcan__regs_8h_1a9bffb97dac3ea59359cd2e13fd1b1bdb" kindref="member">~MCAN_GLB_CTL_M_CAN_STBY_MASK</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a33a6cf87becabf75cc3a6c1cdfb7f715" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a33a6cf87becabf75cc3a6c1cdfb7f715" kindref="member">mcan_set_msg_buf_attr</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmcan__msg__buf__attr__t" kindref="compound">mcan_msg_buf_attr_t</ref><sp/>*attr)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((attr<sp/>==<sp/>NULL)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a11c5af70be26a34fd3b5456f26a12a3f" kindref="member">ram_base</ref><sp/>&lt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" kindref="member">MCAN_MSG_BUF_BASE_VALID_START</ref>)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a11c5af70be26a34fd3b5456f26a12a3f" kindref="member">ram_base</ref><sp/>&gt;=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a532a8a30cfaa2756506e8d251cf0f842" kindref="member">MCAN_MSG_BUF_BASE_VALID_END</ref>)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a94ae66721ee5ee9c5c586dc7141228a8" kindref="member">ram_size</ref><sp/>&gt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a282ed0864d37a4a6c0c288edeab2ae84" kindref="member">MCAN_MSG_BUG_SIZE_MAX</ref>)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a11c5af70be26a34fd3b5456f26a12a3f" kindref="member">ram_base</ref><sp/>+<sp/>attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a94ae66721ee5ee9c5c586dc7141228a8" kindref="member">ram_size</ref><sp/>&gt;<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a532a8a30cfaa2756506e8d251cf0f842" kindref="member">MCAN_MSG_BUF_BASE_VALID_END</ref>)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a11c5af70be26a34fd3b5456f26a12a3f" kindref="member">ram_base</ref><sp/>%<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a753282d5054c13ee31745a7938d1e14e" kindref="member">MCAN_MSG_BUF_ALIGNMENT_SIZE</ref><sp/>!=<sp/>0U)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a94ae66721ee5ee9c5c586dc7141228a8" kindref="member">ram_size</ref><sp/>%<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a753282d5054c13ee31745a7938d1e14e" kindref="member">MCAN_MSG_BUF_ALIGNMENT_SIZE</ref><sp/>!=<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>instance<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" kindref="member">mcan_get_instance_from_base</ref>(ptr);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance<sp/>&gt;=<sp/><ref refid="HPM5300_2HPM5301_2hpm__soc__feature_8h_1a0ddb2da93c7bb386377b6210604b6a01" kindref="member">MCAN_SOC_MAX_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa380c9b8304ad8399f1be634d6f5c4701" kindref="member">status_invalid_argument</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac7a3cfa4baaef18f32874586e4ae5e93" kindref="member">mcan_soc_msg_buf_attr</ref>[instance].ram_base<sp/>=<sp/>attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a11c5af70be26a34fd3b5456f26a12a3f" kindref="member">ram_base</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac7a3cfa4baaef18f32874586e4ae5e93" kindref="member">mcan_soc_msg_buf_attr</ref>[instance].ram_size<sp/>=<sp/>attr-&gt;<ref refid="structmcan__msg__buf__attr__t_1a94ae66721ee5ee9c5c586dc7141228a8" kindref="member">ram_size</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__common__interface_1gga57008dafb69438605b6d0039d9ed7a8fa99d8737a9b635c0c9d87d7ac65801ce7" kindref="member">status_success</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1af884bf0b46ce94fff62fa952b3e702e3" kindref="member">mcan_get_ram_base</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>ptr;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>As<sp/>the<sp/>`mcan_get_ram_offset`<sp/>returns<sp/>the<sp/>actual<sp/>offset<sp/>in<sp/>AHB<sp/>RAM,<sp/>this<sp/>function<sp/>always<sp/>returns</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>base<sp/>address<sp/>of<sp/>the<sp/>AHB_RAM</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" kindref="member">MCAN_MSG_BUF_BASE_VALID_START</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a28361ca55fdb171f773cc68d77bd3b13" kindref="member">mcan_get_ram_offset</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>instance<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" kindref="member">mcan_get_instance_from_base</ref>(ptr);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac7a3cfa4baaef18f32874586e4ae5e93" kindref="member">mcan_soc_msg_buf_attr</ref>[instance].ram_base<sp/>-<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a7902e2a535fa746c47c037bd2418d346" kindref="member">MCAN_MSG_BUF_BASE_VALID_START</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="HPM6800_2HPM6880_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1afed5b5120182aece6b7e886f02e18b96" kindref="member">mcan_get_ram_size</ref>(<ref refid="structMCAN__Type" kindref="compound">MCAN_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>instance<sp/>=<sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1a97ddc78fe9d49b32ad0b8e9cba231bed" kindref="member">mcan_get_instance_from_base</ref>(ptr);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2HPM5361_2hpm__mcan__soc_8h_1ac7a3cfa4baaef18f32874586e4ae5e93" kindref="member">mcan_soc_msg_buf_attr</ref>[instance].ram_size;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpluspus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_MCAN_SOC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="soc/HPM6800/HPM6880/hpm_mcan_soc.h"/>
  </compounddef>
</doxygen>
