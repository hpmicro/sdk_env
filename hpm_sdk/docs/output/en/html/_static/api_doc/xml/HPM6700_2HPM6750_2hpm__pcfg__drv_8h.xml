<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h" kind="file" language="C++">
    <compoundname>hpm_pcfg_drv.h</compoundname>
    <includes refid="hpm__common_8h" local="yes">hpm_common.h</includes>
    <includes local="yes">hpm_pcfg_regs.h</includes>
    <incdepgraph>
      <node id="2">
        <label>hpm_common.h</label>
        <link refid="hpm__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>soc/HPM6700/HPM6750/hpm_pcfg_drv.h</label>
        <link refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>hpm_pcfg_regs.h</label>
      </node>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpcfg__irc24m__config__t" prot="public">pcfg_irc24m_config_t</innerclass>
    <sectiondef kind="define">
      <member refid="group__pcfg__interface_1ga907bd9192cf96463330b327fc5e6f1d4" kind="define"><name>PCFG_CLOCK_GATE_MODE_ALWAYS_ON</name></member>
      <member refid="group__pcfg__interface_1ga9b2ed4b7f5f3df390a04f9e8a7e9ce4d" kind="define"><name>PCFG_CLOCK_GATE_MODE_ALWAYS_OFF</name></member>
      <member refid="group__pcfg__interface_1ga76eb49073b07e1dcfadf66cba2057f0c" kind="define"><name>PCFG_CLOCK_GATE_MODE_ALWAYS_FOLLOW_FLOW</name></member>
      <member refid="group__pcfg__interface_1gac64ef2e43505826af4345b0f0c7054e7" kind="define"><name>PCFG_PERIPH_KEEP_CLOCK_ON</name></member>
      <member refid="group__pcfg__interface_1ga27dd029abaa50d3b551e201a3ee6a08e" kind="define"><name>PCFG_PERIPH_KEEP_CLOCK_OFF</name></member>
      <member refid="group__pcfg__interface_1ga595b3e060d9b0f8c1f4efa3987dd2513" kind="define"><name>PCFG_PERIPH_SET_CLOCK_AUTO</name></member>
      <member refid="group__pcfg__interface_1ga6ad09cac85ab01b0875d50a4e4381536" kind="define"><name>PCFG_CLOCK_GATE_CONTROL_MASK</name></member>
      <member refid="group__pcfg__interface_1ga1768d361cad03e9d5432272578efb689" kind="define"><name>PCFG_DEBUG_STOP_SOURCE_ENABLE_CORE0</name></member>
      <member refid="group__pcfg__interface_1ga814b9802567f00a02a318ef41596b9ab" kind="define"><name>PCFG_DEBUG_STOP_SOURCE_DISABLE_CORE0</name></member>
      <member refid="group__pcfg__interface_1gad3478218270f69932b4b07d43955c90d" kind="define"><name>PCFG_DEBUG_STOP_SOURCE_ENABLE_CORE1</name></member>
      <member refid="group__pcfg__interface_1ga9591111cc942c379f28cc5d9fb9ae1e3" kind="define"><name>PCFG_DEBUG_STOP_SOURCE_DISABLE_CORE1</name></member>
    </sectiondef>
    <sectiondef kind="enum">
      <member refid="group__pcfg__interface_1gacbc65524f0416acc0573a12467136c97" kind="enum"><name>pcfg_irc24m_reference_t</name></member>
      <member refid="group__pcfg__interface_1ga1c68326e4f9a18b117487e215b663a29" kind="enum"><name>pcfg_dcdc_lp_current_limit_t</name></member>
      <member refid="group__pcfg__interface_1gab69c667013b4225b29ea7bf5cd6eef18" kind="enum"><name>pcfg_dcdc_current_hys_t</name></member>
      <member refid="group__pcfg__interface_1ga8ce9bb6fc809e2360386b68e62881432" kind="enum"><name>pcfg_dcdc_mode_t</name></member>
      <member refid="group__pcfg__interface_1ga4471d0183b961ae9bdb70f1b98a988a6" kind="enum"><name>pcfg_pmc_periph_t</name></member>
      <member refid="group__pcfg__interface_1ga8189b2d880afe26808747af2225d2afa" kind="enum"><name>pcfg_wakeup_src_t</name></member>
      <member refid="group__pcfg__interface_1ga464ceffb3905a556933d0ea8d4c64d22" kind="enum"><name></name></member>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga82ccccb3cca1122041b38e57dc93fb85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_bandgap_disable_power_save_mode</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_disable_power_save_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>bandgap disable power save mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="108" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga41d60a398452f35269485188c6c8a337" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_bandgap_enable_power_save_mode</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_enable_power_save_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>bandgap enable power save mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="118" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga1fd20fd98c9000ba12574cc484855382" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_bandgap_disable_lowpower_mode</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_disable_lowpower_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>bandgap disable power save mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="128" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaa5443fc113f72d6c1abc78e1b35e069b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_bandgap_enable_lowpower_mode</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_enable_lowpower_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>bandgap enable low power mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="138" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga12defa029a359bafea6bf5ac4fd37ae8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_bandgap_is_trimmed</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_is_trimmed</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if bandgap is trimmed or not </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if bandgap is trimmed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="150" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2964c8b1ac520dc504a03e2aa183cf5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_bandgap_reload_trim</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_bandgap_reload_trim</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>bandgap reload trim value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="160" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaf6042523545d751c1429b0733d9f4c9d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_ldo2p5_turn_off</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_ldo2p5_turn_off</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>turn off LDO2P5 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="170" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga0c3d453db44333f4e95d141dc052f2b9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_ldo2p5_turn_on</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_ldo2p5_turn_on</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>turn on LDO 2.5V </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="180" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gab3a3e545faf99f1044161eda2887ffd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_ldo2p5_is_stable</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_ldo2p5_is_stable</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if LDO 2.5V is stable </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if LDO2P5 is stable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="192" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga500cf3c36adea02c8280fab6dcc73176" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_dcdc_is_stable</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_is_stable</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="202" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga89dd5a7e185c2ff174969213b3016df9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_set_mode</definition>
        <argsstring>(PCFG_Type *ptr, uint8_t mode)</argsstring>
        <name>pcfg_dcdc_set_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="211" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae490e8f6e5aad325e742223c1a8c7cd9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_set_lp_current_limit</definition>
        <argsstring>(PCFG_Type *ptr, pcfg_dcdc_lp_current_limit_t limit, bool over_limit)</argsstring>
        <name>pcfg_dcdc_set_lp_current_limit</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pcfg__interface_1ga1c68326e4f9a18b117487e215b663a29" kindref="member">pcfg_dcdc_lp_current_limit_t</ref></type>
          <declname>limit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>over_limit</declname>
        </param>
        <briefdescription>
<para>set low power current limit </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">limit</parametername>
</parameternamelist>
<parameterdescription>
<para>current limit at low power mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">over_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>unused parameter, will be discarded </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="223" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="223" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacff5b815b12217a356c9bca3090c03e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_disable_power_loss_prot</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_disable_power_loss_prot</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable power loss protection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="234" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga5612bd1d6cb03a2381fa3db9c44d09d2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_enable_power_loss_prot</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_enable_power_loss_prot</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable power loss protection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="244" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga9cef7782111ba2502956dcf88b147c0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_dcdc_is_power_loss</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_is_power_loss</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if power loss flag is set </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if power loss is set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="256" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga47e43b14d3eb426a502955c8db8d5d92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_disable_over_voltage_prot</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_disable_over_voltage_prot</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable over voltage protection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="266" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga3aa31166e3c551ebaf91b7b551096f5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_ensable_over_voltage_prot</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_ensable_over_voltage_prot</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable over voltage protection </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="276" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae4f08e4672c7ed5ef4efcfad3ef0d3df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_dcdc_is_over_voltage</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_is_over_voltage</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>checkover voltage flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if flag is set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="287" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gadcce99a66c93883c0a6168e1569f790c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_disable_measure_current</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_disable_measure_current</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable current measurement </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="297" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacf75234df921da9487b7f6c785139864" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_enable_measure_current</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_enable_measure_current</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable current measurement </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="307" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga1c396c7e60e179996cf2cd3946a5bc99" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_dcdc_is_measure_current_valid</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_is_measure_current_valid</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if measured current is valid </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if measured current is valid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="319" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2e81ebe00369f5f6e09c7dd863919235" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pcfg_dcdc_get_start_time_in_cycle</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_get_start_time_in_cycle</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get DCDC start time in number of 24MHz clock cycles </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>dcdc</parametername>
</parameternamelist>
<parameterdescription>
<para>start time in cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="331" column="24" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gafbf4efc4c6e8e07ab36060de0ea87f36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pcfg_dcdc_get_resume_time_in_cycle</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_dcdc_get_resume_time_in_cycle</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get DCDC resume time in number of 24MHz clock cycles </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>dcdc</parametername>
</parameternamelist>
<parameterdescription>
<para>resuem time in cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="343" column="24" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacd16a9214602fc62a9570a2ac26640b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_set_start_time_in_cycle</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t cycles)</argsstring>
        <name>pcfg_dcdc_set_start_time_in_cycle</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>set DCDC start time in 24MHz clock cycles </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>start time in cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="354" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gab0d0f78ce917bce3436b7d0a77b46aa9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_dcdc_set_resume_time_in_cycle</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t cycles)</argsstring>
        <name>pcfg_dcdc_set_resume_time_in_cycle</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>set DCDC resuem time in 24MHz clock cycles </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cycles</parametername>
</parameternamelist>
<parameterdescription>
<para>resume time in cycles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="365" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae0d0211371d35e8c8435fc2ce9034009" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_disable_power_trap</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_disable_power_trap</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable power trap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="375" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga139c758b419bbf416cd773b65c41d177" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_enable_power_trap</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_enable_power_trap</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable power trap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="385" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga4ff4010071ef25f7e53bce7e121e2be1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_is_power_trap_triggered</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_is_power_trap_triggered</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if power trap is triggered </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if power trap is triggered </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="397" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="397" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2954ba3d53c7019a59c0e71fa8a647dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_clear_power_trap_trigger_flag</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_clear_power_trap_trigger_flag</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>clear power trap trigger flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="407" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga47ea944943e15ad4ec89520799f3507a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_disable_dcdc_retention</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_disable_dcdc_retention</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>disable dcdc retention </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="417" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="417" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaf3068bda81630f4e6ec60c497d77b01a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_enable_dcdc_retention</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_enable_dcdc_retention</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>enable dcdc retention to retain soc sram data </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="427" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="427" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gad63159fe1773bdd1754c9f4009d1ddaf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_clear_wakeup_cause</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t mask)</argsstring>
        <name>pcfg_clear_wakeup_cause</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>clear wakeup cause flag </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask of flags to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="438" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae68502324b23f56153a1a471b2e32560" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t pcfg_get_wakeup_cause</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_get_wakeup_cause</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>get wakeup cause </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>of wake cause </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="450" column="24" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gad80900699a7e9276d84ba0ad739ae357" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_enable_wakeup_source</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t mask)</argsstring>
        <name>pcfg_enable_wakeup_source</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>enable wakeup source </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>wakeup source mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="461" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="461" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga9633fef8f90cdfff04d9a03c0561f433" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_disable_wakeup_source</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t mask)</argsstring>
        <name>pcfg_disable_wakeup_source</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>disable wakeup source </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>source to be disabled as wakeup source </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="472" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga87f910607d0913e9846f38dcd0eb4299" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_set_periph_clock_mode</definition>
        <argsstring>(PCFG_Type *ptr, uint32_t mode)</argsstring>
        <name>pcfg_set_periph_clock_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>set clock gate mode in vpmc domain </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>clock gate mode mask </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="483" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="483" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga194e4e181f33cf896d87df5f4431fe34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_update_periph_clock_mode</definition>
        <argsstring>(PCFG_Type *ptr, pcfg_pmc_periph_t periph, bool on)</argsstring>
        <name>pcfg_update_periph_clock_mode</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="group__pcfg__interface_1ga4471d0183b961ae9bdb70f1b98a988a6" kindref="member">pcfg_pmc_periph_t</ref></type>
          <declname>periph</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>update clock gate mode in vpmc domain </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">periph</parametername>
</parameternamelist>
<parameterdescription>
<para>peripherals to be updated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">on</parametername>
</parameternamelist>
<parameterdescription>
<para>true - always on, false - always off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="495" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="495" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga935615d6f155a1e34d31e91dfa724687" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_disable_cpu0_debug_stop_notfication</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_disable_cpu0_debug_stop_notfication</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable CPU0 debug stop notficiation to peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="509" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="509" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga62d2e09d0399a0304e8407b26ec0f755" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_enable_cpu0_debug_stop_notfication</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_enable_cpu0_debug_stop_notfication</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable CPU0 debug stop notification to peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="519" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2c96e164545077449b21994d94ebb283" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_disable_cpu1_debug_stop_notfication</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_disable_cpu1_debug_stop_notfication</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Disable CPU1 debug stop notification to peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="529" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae6339a5aeea51aa3021551e951b13cb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_enable_cpu1_debug_stop_notfication</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_enable_cpu1_debug_stop_notfication</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Enable CPU1 debug stop notification to peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="539" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="539" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga4c426ad8a3c255333cf68e5bb7577f74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_config_debug_stop_notification</definition>
        <argsstring>(PCFG_Type *ptr, uint8_t mask)</argsstring>
        <name>pcfg_config_debug_stop_notification</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Configure CPU core debug stop notification to peripherals. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="550" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaada6a35555ac757f9c50ca44ad36213e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool pcfg_irc24m_is_trimmed</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_irc24m_is_trimmed</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>check if irc24m is trimmed </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>if it is trimmed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="562" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacae32471cbd4e5baad75d6e2abb52422" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pcfg_irc24m_reload_trim</definition>
        <argsstring>(PCFG_Type *ptr)</argsstring>
        <name>pcfg_irc24m_reload_trim</name>
        <param>
          <type><ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>reload irc24m trim value </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" line="572" column="20" bodyfile="soc/HPM6700/HPM6750/hpm_pcfg_drv.h" bodystart="572" bodyend="575"/>
      </memberdef>
      <member refid="group__pcfg__interface_1gaaa6751b38febe1731a5c23f761519c84" kind="function"><name>pcfg_dcdc_switch_to_dcm_mode</name></member>
      <member refid="group__pcfg__interface_1ga12c395d9b8f42ca1da12cc4146ab43f3" kind="function"><name>pcfg_irc24m_config_track</name></member>
      <member refid="group__pcfg__interface_1gae7d759a18709e354b54515d2ac82148c" kind="function"><name>pcfg_dcdc_set_lpmode_voltage</name></member>
      <member refid="group__pcfg__interface_1ga1a3048c449a6bf186321f2a360f5ea2f" kind="function"><name>pcfg_ldo2p5_set_voltage</name></member>
      <member refid="group__pcfg__interface_1ga23eceb2163d0c2534ab504b4fe6583a8" kind="function"><name>pcfg_dcdc_set_voltage</name></member>
      <member refid="group__pcfg__interface_1ga19758e0f28c3363f3b6e0692177ca996" kind="function"><name>pcfg_ldo1p1_set_voltage</name></member>
      <member refid="group__pcfg__interface_1ga21ec5635d0fbfc0488173b0142e99812" kind="function"><name>pcfg_dcdc_get_current_level</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021<sp/>HPMicro</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>BSD-3-Clause</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPM_PCFG_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPM_PCFG_DRV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hpm__common_8h" kindref="compound">hpm_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hpm_pcfg_regs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="group__pcfg__interface_1ga907bd9192cf96463330b327fc5e6f1d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_CLOCK_GATE_MODE_ALWAYS_ON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="group__pcfg__interface_1ga9b2ed4b7f5f3df390a04f9e8a7e9ce4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_CLOCK_GATE_MODE_ALWAYS_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="group__pcfg__interface_1ga76eb49073b07e1dcfadf66cba2057f0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_CLOCK_GATE_MODE_ALWAYS_FOLLOW_FLOW<sp/>(0x1UL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="group__pcfg__interface_1gac64ef2e43505826af4345b0f0c7054e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_PERIPH_KEEP_CLOCK_ON(p)<sp/>(PCFG_CLOCK_GATE_MODE_ALWAYS_ON<sp/>&lt;&lt;<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="group__pcfg__interface_1ga27dd029abaa50d3b551e201a3ee6a08e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_PERIPH_KEEP_CLOCK_OFF(p)<sp/>(PCFG_CLOCK_GATE_MODE_ALWAYS_OFF<sp/>&lt;&lt;<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="group__pcfg__interface_1ga595b3e060d9b0f8c1f4efa3987dd2513" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_PERIPH_SET_CLOCK_AUTO(p)<sp/>(PCFG_CLOCK_GATE_MODE_ALWAYS_FOLLOW_FLOW<sp/>&lt;&lt;<sp/>(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>irc24m<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="group__pcfg__interface_1gacbc65524f0416acc0573a12467136c97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31" refid="group__pcfg__interface_1ggacbc65524f0416acc0573a12467136c97a787901ad98bf25814a95c16a409dd73c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1ggacbc65524f0416acc0573a12467136c97a787901ad98bf25814a95c16a409dd73c" kindref="member">pcfg_irc24m_reference_32k</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1ggacbc65524f0416acc0573a12467136c97a5e26b79d7584453b8550a44b5c8974c7" kindref="member">pcfg_irc24m_reference_24m_xtal</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="33" refid="group__pcfg__interface_1ggacbc65524f0416acc0573a12467136c97a5e26b79d7584453b8550a44b5c8974c7" refkind="member"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1gacbc65524f0416acc0573a12467136c97" kindref="member">pcfg_irc24m_reference_t</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>dcdc<sp/>current<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="group__pcfg__interface_1ga1c68326e4f9a18b117487e215b663a29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37" refid="group__pcfg__interface_1gga1c68326e4f9a18b117487e215b663a29a71b3d876d929e96c7a46076c2ec3816c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga1c68326e4f9a18b117487e215b663a29a71b3d876d929e96c7a46076c2ec3816c" kindref="member">pcfg_dcdc_lp_current_limit_250ma</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="38" refid="group__pcfg__interface_1gga1c68326e4f9a18b117487e215b663a29ac5060d97b5a40c60cf2b014432bb4706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga1c68326e4f9a18b117487e215b663a29ac5060d97b5a40c60cf2b014432bb4706" kindref="member">pcfg_dcdc_lp_current_limit_200ma</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1ga1c68326e4f9a18b117487e215b663a29" kindref="member">pcfg_dcdc_lp_current_limit_t</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>dcdc<sp/>current<sp/>hys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="group__pcfg__interface_1gab69c667013b4225b29ea7bf5cd6eef18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43" refid="group__pcfg__interface_1ggab69c667013b4225b29ea7bf5cd6eef18aded84d404af5087d67492da37c38d828" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1ggab69c667013b4225b29ea7bf5cd6eef18aded84d404af5087d67492da37c38d828" kindref="member">pcfg_dcdc_current_hys_12_5mv</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="44" refid="group__pcfg__interface_1ggab69c667013b4225b29ea7bf5cd6eef18a269a211e6254ccc1ad48f6c85ba63a90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1ggab69c667013b4225b29ea7bf5cd6eef18a269a211e6254ccc1ad48f6c85ba63a90" kindref="member">pcfg_dcdc_current_hys_25mv</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1gab69c667013b4225b29ea7bf5cd6eef18" kindref="member">pcfg_dcdc_current_hys_t</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>dcdc<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__pcfg__interface_1ga8ce9bb6fc809e2360386b68e62881432" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="49" refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a408e45fce9c649dcc1bdd6fecde27b13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a408e45fce9c649dcc1bdd6fecde27b13" kindref="member">pcfg_dcdc_mode_off</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="50" refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a6969c79cddde6aa9fb7af5d686150fb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a6969c79cddde6aa9fb7af5d686150fb8" kindref="member">pcfg_dcdc_mode_basic</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="51" refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a11cd143824217c48816a07c3d0113083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a11cd143824217c48816a07c3d0113083" kindref="member">pcfg_dcdc_mode_general</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="52" refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a6ac2ef4a5178f7bc4cceb92107d63e98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8ce9bb6fc809e2360386b68e62881432a6ac2ef4a5178f7bc4cceb92107d63e98" kindref="member">pcfg_dcdc_mode_expert</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1ga8ce9bb6fc809e2360386b68e62881432" kindref="member">pcfg_dcdc_mode_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>pmc<sp/>domain<sp/>peripherals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__pcfg__interface_1ga4471d0183b961ae9bdb70f1b98a988a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a26c4840c7dfbfc51c5c1dc85ee4e2ca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a26c4840c7dfbfc51c5c1dc85ee4e2ca0" kindref="member">pcfg_pmc_periph_fuse</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a7d8bef6f359e5860a4569ec3cf7a6fec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a7d8bef6f359e5860a4569ec3cf7a6fec" kindref="member">pcfg_pmc_periph_ram</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="59" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a9742741dcd73788768b52fed14b32adc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a9742741dcd73788768b52fed14b32adc" kindref="member">pcfg_pmc_periph_vad</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="60" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6ae98d785364769c900e17fbd54b1413c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6ae98d785364769c900e17fbd54b1413c1" kindref="member">pcfg_pmc_periph_gpio</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="61" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6adeed753d24e0d99f672203806b2c49d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6adeed753d24e0d99f672203806b2c49d7" kindref="member">pcfg_pmc_periph_ioc</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="62" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a768ac104f3f92f2957e72835b574951b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a768ac104f3f92f2957e72835b574951b" kindref="member">pcfg_pmc_periph_timer</ref><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="63" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6af80646f30b0257d6fbc19925cb44d002" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6af80646f30b0257d6fbc19925cb44d002" kindref="member">pcfg_pmc_periph_wdog</ref><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="64" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6aa518ad33f2409e21e50aa89e7a418b38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6aa518ad33f2409e21e50aa89e7a418b38" kindref="member">pcfg_pmc_periph_uart</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="65" refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a9ee71126ca0802136cec0ab14fc77dd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga4471d0183b961ae9bdb70f1b98a988a6a9ee71126ca0802136cec0ab14fc77dd0" kindref="member">pcfg_pmc_periph_debug</ref><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1ga4471d0183b961ae9bdb70f1b98a988a6" kindref="member">pcfg_pmc_periph_t</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>wakeup<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__pcfg__interface_1ga8189b2d880afe26808747af2225d2afa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70" refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa7fbb936e003513707c45b1906ee33670" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa7fbb936e003513707c45b1906ee33670" kindref="member">pcfg_wakeup_src_otp</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>4),</highlight></codeline>
<codeline lineno="71" refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa8d277bd2e3d539a2a43f9ba6183c5e42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa8d277bd2e3d539a2a43f9ba6183c5e42" kindref="member">pcfg_wakeup_src_puart</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>7),</highlight></codeline>
<codeline lineno="72" refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaaf6672d65e10bae147fbaf443ffa95f51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaaf6672d65e10bae147fbaf443ffa95f51" kindref="member">pcfg_wakeup_src_ptimer</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>8),</highlight></codeline>
<codeline lineno="73" refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa54530ef52461b5ed2a8d886761814102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa54530ef52461b5ed2a8d886761814102" kindref="member">pcfg_wakeup_src_pwdg</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>9),</highlight></codeline>
<codeline lineno="74" refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa7cc7df3e475aba5124c525b7c483f032" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga8189b2d880afe26808747af2225d2afaa7cc7df3e475aba5124c525b7c483f032" kindref="member">pcfg_wakeup_src_pgpio</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>10),</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/><ref refid="group__pcfg__interface_1ga8189b2d880afe26808747af2225d2afa" kindref="member">pcfg_wakeup_src_t</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79" refid="group__pcfg__interface_1gga464ceffb3905a556933d0ea8d4c64d22a1555f9fe3b96f09ea67c3982838c3985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gga18efc29f05f292310db38a8c7e81dcdaa1555f9fe3b96f09ea67c3982838c3985" kindref="member">status_pcfg_ldo_out_of_range</ref><sp/>=<sp/><ref refid="group__common__interface_1gad76dfbb0423d0cd3a7b77cbcd9043146" kindref="member">MAKE_STATUS</ref>(<ref refid="group__common__interface_1ggadb49720dc49f7d4e4cf9adbf2948e409ae421a66c4af4b7da4fd219f5df047abf" kindref="member">status_group_pcfg</ref>,<sp/>1),</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@brief<sp/>PCFG<sp/>irc24m<sp/>config<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>freq_in_hz;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__pcfg__interface_1gacbc65524f0416acc0573a12467136c97" kindref="member">pcfg_irc24m_reference_t</ref><sp/>reference;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>return_to_default_on_xtal_loss;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>free_run;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><ref refid="structpcfg__irc24m__config__t" kindref="compound">pcfg_irc24m_config_t</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__pcfg__interface_1ga6ad09cac85ab01b0875d50a4e4381536" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_CLOCK_GATE_CONTROL_MASK(module,<sp/>mode)<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(mode)<sp/>&lt;&lt;<sp/>((module)<sp/>&lt;&lt;<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="group__pcfg__interface_1ga1768d361cad03e9d5432272578efb689" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_DEBUG_STOP_SOURCE_ENABLE_CORE0<sp/>(PCFG_DEBUG_STOP_CPU0_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="group__pcfg__interface_1ga814b9802567f00a02a318ef41596b9ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_DEBUG_STOP_SOURCE_DISABLE_CORE0<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="group__pcfg__interface_1gad3478218270f69932b4b07d43955c90d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_DEBUG_STOP_SOURCE_ENABLE_CORE1<sp/>(PCFG_DEBUG_STOP_CPU1_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="group__pcfg__interface_1ga9591111cc942c379f28cc5d9fb9ae1e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PCFG_DEBUG_STOP_SOURCE_DISABLE_CORE1<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga82ccccb3cca1122041b38e57dc93fb85" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga82ccccb3cca1122041b38e57dc93fb85" kindref="member">pcfg_bandgap_disable_power_save_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>&amp;=<sp/>~PCFG_BANDGAP_POWER_SAVE_MASK;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga41d60a398452f35269485188c6c8a337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga41d60a398452f35269485188c6c8a337" kindref="member">pcfg_bandgap_enable_power_save_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__pcfg__regs_8h_1afed531fb06f1bc936a881537e306ff71" kindref="member">PCFG_BANDGAP_POWER_SAVE_MASK</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga1fd20fd98c9000ba12574cc484855382" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga1fd20fd98c9000ba12574cc484855382" kindref="member">pcfg_bandgap_disable_lowpower_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>&amp;=<sp/>~PCFG_BANDGAP_LOWPOWER_MODE_MASK;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaa5443fc113f72d6c1abc78e1b35e069b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gaa5443fc113f72d6c1abc78e1b35e069b" kindref="member">pcfg_bandgap_enable_lowpower_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__pcfg__regs_8h_1a8fc9a9c4207c7012a236eb6c616f7413" kindref="member">PCFG_BANDGAP_LOWPOWER_MODE_MASK</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga12defa029a359bafea6bf5ac4fd37ae8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga12defa029a359bafea6bf5ac4fd37ae8" kindref="member">pcfg_bandgap_is_trimmed</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1ab62d8970fd8dfb5650a1cac80436de6f" kindref="member">PCFG_BANDGAP_VBG_TRIMMED_MASK</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2964c8b1ac520dc504a03e2aa183cf5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga2964c8b1ac520dc504a03e2aa183cf5b" kindref="member">pcfg_bandgap_reload_trim</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5d7f7fe65fb17ab7c44673234ba93033" kindref="member">BANDGAP</ref><sp/>&amp;=<sp/>~PCFG_BANDGAP_VBG_TRIMMED_MASK;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaf6042523545d751c1429b0733d9f4c9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gaf6042523545d751c1429b0733d9f4c9d" kindref="member">pcfg_ldo2p5_turn_off</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a0c149c853457f56eca1deb868af6cc3a" kindref="member">LDO2P5</ref><sp/>&amp;=<sp/>~PCFG_LDO2P5_ENABLE_MASK;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga0c3d453db44333f4e95d141dc052f2b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga0c3d453db44333f4e95d141dc052f2b9" kindref="member">pcfg_ldo2p5_turn_on</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a0c149c853457f56eca1deb868af6cc3a" kindref="member">LDO2P5</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a3ebea26c896530e63fd83343c63cadf6" kindref="member">PCFG_LDO2P5_ENABLE_MASK</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gab3a3e545faf99f1044161eda2887ffd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gab3a3e545faf99f1044161eda2887ffd6" kindref="member">pcfg_ldo2p5_is_stable</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a01bf8c7ca5990873c8008c842b173fb7" kindref="member">PCFG_LDO2P5_READY_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a0c149c853457f56eca1deb868af6cc3a" kindref="member">LDO2P5</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@brief<sp/>check<sp/>if<sp/>DCDC<sp/>is<sp/>stable<sp/>or<sp/>not</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@retval<sp/>true<sp/>if<sp/>DCDC<sp/>is<sp/>stable</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga500cf3c36adea02c8280fab6dcc73176" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga500cf3c36adea02c8280fab6dcc73176" kindref="member">pcfg_dcdc_is_stable</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a5a41e210bb312b805277015265fc6fc0" kindref="member">PCFG_DCDC_MODE_READY_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a8f8df9a060162436678df7424ba9a351" kindref="member">DCDC_MODE</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>DCDC<sp/>work<sp/>mode</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga89dd5a7e185c2ff174969213b3016df9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga89dd5a7e185c2ff174969213b3016df9" kindref="member">pcfg_dcdc_set_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>mode)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a8f8df9a060162436678df7424ba9a351" kindref="member">DCDC_MODE</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a8f8df9a060162436678df7424ba9a351" kindref="member">DCDC_MODE</ref><sp/>&amp;<sp/>~PCFG_DCDC_MODE_MODE_MASK)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a3756fb95a66a0de505aebbb1d082b3b3" kindref="member">PCFG_DCDC_MODE_MODE_SET</ref>(mode);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae490e8f6e5aad325e742223c1a8c7cd9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga66ff37ec65b62fa28864e79ca47382bb" kindref="member">pcfg_dcdc_set_lp_current_limit</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/><ref refid="group__pcfg__interface_1ga1c68326e4f9a18b117487e215b663a29" kindref="member">pcfg_dcdc_lp_current_limit_t</ref><sp/>limit,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>over_limit)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>over_limit;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>&amp;<sp/>~PCFG_DCDC_PROT_ILIMIT_LP_MASK)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1af22984a7b28d772e3eee5b38d0e2ad65" kindref="member">PCFG_DCDC_PROT_ILIMIT_LP_SET</ref>(limit);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacff5b815b12217a356c9bca3090c03e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gacff5b815b12217a356c9bca3090c03e7" kindref="member">pcfg_dcdc_disable_power_loss_prot</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__pcfg__regs_8h_1a26267c94db655e348b8fb2cfadbf0f66" kindref="member">PCFG_DCDC_PROT_DISABLE_POWER_LOSS_MASK</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga5612bd1d6cb03a2381fa3db9c44d09d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga5612bd1d6cb03a2381fa3db9c44d09d2" kindref="member">pcfg_dcdc_enable_power_loss_prot</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>&amp;=<sp/>~PCFG_DCDC_PROT_DISABLE_POWER_LOSS_MASK;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga9cef7782111ba2502956dcf88b147c0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga9cef7782111ba2502956dcf88b147c0a" kindref="member">pcfg_dcdc_is_power_loss</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aec153e7bceb54f9ce048bb397cdf6be4" kindref="member">PCFG_DCDC_PROT_POWER_LOSS_FLAG_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga47e43b14d3eb426a502955c8db8d5d92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga47e43b14d3eb426a502955c8db8d5d92" kindref="member">pcfg_dcdc_disable_over_voltage_prot</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1ab7707abc3043b729188a5996beb21a6c" kindref="member">PCFG_DCDC_PROT_DISABLE_OVERVOLTAGE_MASK</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga3aa31166e3c551ebaf91b7b551096f5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga3aa31166e3c551ebaf91b7b551096f5b" kindref="member">pcfg_dcdc_ensable_over_voltage_prot</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>&amp;=<sp/>~PCFG_DCDC_PROT_DISABLE_OVERVOLTAGE_MASK;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae4f08e4672c7ed5ef4efcfad3ef0d3df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gae4f08e4672c7ed5ef4efcfad3ef0d3df" kindref="member">pcfg_dcdc_is_over_voltage</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1ae52ab8b5d7caa619a322aecaf4237e38" kindref="member">PCFG_DCDC_PROT_OVERVOLT_FLAG_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref>)<sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aac6f7643a904b58aae3bf9e7474f08e1" kindref="member">PCFG_DCDC_PROT_OVERVOLT_FLAG_MASK</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gadcce99a66c93883c0a6168e1569f790c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gadcce99a66c93883c0a6168e1569f790c" kindref="member">pcfg_dcdc_disable_measure_current</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a3ec93835c570a8190308f3a3558b5489" kindref="member">DCDC_CURRENT</ref><sp/>&amp;=<sp/>~PCFG_DCDC_CURRENT_ESTI_EN_MASK;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacf75234df921da9487b7f6c785139864" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gacf75234df921da9487b7f6c785139864" kindref="member">pcfg_dcdc_enable_measure_current</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a3ec93835c570a8190308f3a3558b5489" kindref="member">DCDC_CURRENT</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a34cdf209a8313899cce892ed24ec1095" kindref="member">PCFG_DCDC_CURRENT_ESTI_EN_MASK</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga1c396c7e60e179996cf2cd3946a5bc99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga1c396c7e60e179996cf2cd3946a5bc99" kindref="member">pcfg_dcdc_is_measure_current_valid</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a3ec93835c570a8190308f3a3558b5489" kindref="member">DCDC_CURRENT</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a0664d07719de7ecd58239b508f297a69" kindref="member">PCFG_DCDC_CURRENT_VALID_MASK</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2e81ebe00369f5f6e09c7dd863919235" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__pcfg__interface_1ga2e81ebe00369f5f6e09c7dd863919235" kindref="member">pcfg_dcdc_get_start_time_in_cycle</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a6a8fbd6593f6ec95fd635652015e59c8" kindref="member">PCFG_DCDC_START_TIME_START_TIME_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a737858fc7e8524639f66e22a2e5536ee" kindref="member">DCDC_START_TIME</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gafbf4efc4c6e8e07ab36060de0ea87f36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__pcfg__interface_1gafbf4efc4c6e8e07ab36060de0ea87f36" kindref="member">pcfg_dcdc_get_resume_time_in_cycle</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a000bf5e83fbe6d401f18e3807ebc7fc1" kindref="member">PCFG_DCDC_RESUME_TIME_RESUME_TIME_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1ab7e9a678c667c523452c20a7ddbe14f1" kindref="member">DCDC_RESUME_TIME</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacd16a9214602fc62a9570a2ac26640b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gacd16a9214602fc62a9570a2ac26640b3" kindref="member">pcfg_dcdc_set_start_time_in_cycle</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>cycles)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a737858fc7e8524639f66e22a2e5536ee" kindref="member">DCDC_START_TIME</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a6f19e7c64c61e07df17a2a26a02912d6" kindref="member">PCFG_DCDC_START_TIME_START_TIME_SET</ref>(cycles);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gab0d0f78ce917bce3436b7d0a77b46aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gab0d0f78ce917bce3436b7d0a77b46aa9" kindref="member">pcfg_dcdc_set_resume_time_in_cycle</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>cycles)</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab7e9a678c667c523452c20a7ddbe14f1" kindref="member">DCDC_RESUME_TIME</ref><sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aba4b6e50289ebf9b16192f1c9e184d39" kindref="member">PCFG_DCDC_RESUME_TIME_RESUME_TIME_SET</ref>(cycles);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae0d0211371d35e8c8435fc2ce9034009" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gae0d0211371d35e8c8435fc2ce9034009" kindref="member">pcfg_disable_power_trap</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>&amp;=<sp/>~PCFG_POWER_TRAP_TRAP_MASK;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga139c758b419bbf416cd773b65c41d177" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga139c758b419bbf416cd773b65c41d177" kindref="member">pcfg_enable_power_trap</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aa457a7239e0d61778d7e162a944c6e9a" kindref="member">PCFG_POWER_TRAP_TRAP_MASK</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga4ff4010071ef25f7e53bce7e121e2be1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga4ff4010071ef25f7e53bce7e121e2be1" kindref="member">pcfg_is_power_trap_triggered</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a04fe25d3706bd3cab2459005173adb99" kindref="member">PCFG_POWER_TRAP_TRIGGERED_MASK</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2954ba3d53c7019a59c0e71fa8a647dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga2954ba3d53c7019a59c0e71fa8a647dc" kindref="member">pcfg_clear_power_trap_trigger_flag</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a04fe25d3706bd3cab2459005173adb99" kindref="member">PCFG_POWER_TRAP_TRIGGERED_MASK</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga47ea944943e15ad4ec89520799f3507a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga47ea944943e15ad4ec89520799f3507a" kindref="member">pcfg_disable_dcdc_retention</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>&amp;=<sp/>~PCFG_POWER_TRAP_RETENTION_MASK;</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaf3068bda81630f4e6ec60c497d77b01a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gaf3068bda81630f4e6ec60c497d77b01a" kindref="member">pcfg_enable_dcdc_retention</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a38df381abfad790b324a8ba9b77a45cd" kindref="member">POWER_TRAP</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1a319b01b93b755d43c218264c996729f7" kindref="member">PCFG_POWER_TRAP_RETENTION_MASK</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gad63159fe1773bdd1754c9f4009d1ddaf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gad63159fe1773bdd1754c9f4009d1ddaf" kindref="member">pcfg_clear_wakeup_cause</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1abc93b34544aecc7da6b60c9b32e53d44" kindref="member">WAKE_CAUSE</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae68502324b23f56153a1a471b2e32560" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="group__pcfg__interface_1gae68502324b23f56153a1a471b2e32560" kindref="member">pcfg_get_wakeup_cause</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPCFG__Type_1abc93b34544aecc7da6b60c9b32e53d44" kindref="member">WAKE_CAUSE</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gad80900699a7e9276d84ba0ad739ae357" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gad80900699a7e9276d84ba0ad739ae357" kindref="member">pcfg_enable_wakeup_source</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a4802778bdb815d9e481a0a4c506c4278" kindref="member">WAKE_MASK</ref><sp/>&amp;=<sp/>~mask;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga9633fef8f90cdfff04d9a03c0561f433" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga9633fef8f90cdfff04d9a03c0561f433" kindref="member">pcfg_disable_wakeup_source</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a4802778bdb815d9e481a0a4c506c4278" kindref="member">WAKE_MASK</ref><sp/>|=<sp/>mask;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga87f910607d0913e9846f38dcd0eb4299" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga87f910607d0913e9846f38dcd0eb4299" kindref="member">pcfg_set_periph_clock_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint32_t<sp/>mode)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5ea98a64a70d5168d18e16bd351006d1" kindref="member">SCG_CTRL</ref><sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga194e4e181f33cf896d87df5f4431fe34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga194e4e181f33cf896d87df5f4431fe34" kindref="member">pcfg_update_periph_clock_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/><ref refid="group__pcfg__interface_1ga4471d0183b961ae9bdb70f1b98a988a6" kindref="member">pcfg_pmc_periph_t</ref><sp/>periph,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(on)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5ea98a64a70d5168d18e16bd351006d1" kindref="member">SCG_CTRL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a5ea98a64a70d5168d18e16bd351006d1" kindref="member">SCG_CTRL</ref><sp/>&amp;<sp/>~(0x03<sp/>&lt;&lt;<sp/>periph))<sp/>|<sp/><ref refid="group__pcfg__interface_1gac64ef2e43505826af4345b0f0c7054e7" kindref="member">PCFG_PERIPH_KEEP_CLOCK_ON</ref>(periph);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a5ea98a64a70d5168d18e16bd351006d1" kindref="member">SCG_CTRL</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a5ea98a64a70d5168d18e16bd351006d1" kindref="member">SCG_CTRL</ref><sp/>&amp;<sp/>~(0x03<sp/>&lt;&lt;<sp/>periph))<sp/>|<sp/><ref refid="group__pcfg__interface_1ga27dd029abaa50d3b551e201a3ee6a08e" kindref="member">PCFG_PERIPH_KEEP_CLOCK_OFF</ref>(periph);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga935615d6f155a1e34d31e91dfa724687" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga935615d6f155a1e34d31e91dfa724687" kindref="member">pcfg_disable_cpu0_debug_stop_notfication</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab2899d3bbb09e8423d80c147b59f5d96" kindref="member">DEBUG_STOP</ref><sp/>&amp;=<sp/>~PCFG_DEBUG_STOP_CPU0_MASK;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga62d2e09d0399a0304e8407b26ec0f755" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga62d2e09d0399a0304e8407b26ec0f755" kindref="member">pcfg_enable_cpu0_debug_stop_notfication</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab2899d3bbb09e8423d80c147b59f5d96" kindref="member">DEBUG_STOP</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__pcfg__regs_8h_1a0bbf819cf40d0dc118571d0459e4cc8c" kindref="member">PCFG_DEBUG_STOP_CPU0_MASK</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga2c96e164545077449b21994d94ebb283" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga2c96e164545077449b21994d94ebb283" kindref="member">pcfg_disable_cpu1_debug_stop_notfication</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab2899d3bbb09e8423d80c147b59f5d96" kindref="member">DEBUG_STOP</ref><sp/>&amp;=<sp/>~PCFG_DEBUG_STOP_CPU1_MASK;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gae6339a5aeea51aa3021551e951b13cb3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gae6339a5aeea51aa3021551e951b13cb3" kindref="member">pcfg_enable_cpu1_debug_stop_notfication</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab2899d3bbb09e8423d80c147b59f5d96" kindref="member">DEBUG_STOP</ref><sp/>|=<sp/><ref refid="HPM6200_2ip_2hpm__pcfg__regs_8h_1a7fb433eb340265ccdf1a402193e55bd1" kindref="member">PCFG_DEBUG_STOP_CPU1_MASK</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1ga4c426ad8a3c255333cf68e5bb7577f74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga4c426ad8a3c255333cf68e5bb7577f74" kindref="member">pcfg_config_debug_stop_notification</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint8_t<sp/>mask)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ab2899d3bbb09e8423d80c147b59f5d96" kindref="member">DEBUG_STOP</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gaada6a35555ac757f9c50ca44ad36213e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gaada6a35555ac757f9c50ca44ad36213e" kindref="member">pcfg_irc24m_is_trimmed</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ad9b8a99e2d52df9d1c5744ed3ffe4d5d" kindref="member">RC24M</ref><sp/>&amp;<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aececae6b3bf67ff06bc5406a55355e0b" kindref="member">PCFG_RC24M_RC_TRIMMED_MASK</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="HPM6700_2HPM6750_2hpm__pcfg__drv_8h_1gacae32471cbd4e5baad75d6e2abb52422" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gacae32471cbd4e5baad75d6e2abb52422" kindref="member">pcfg_irc24m_reload_trim</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1ad9b8a99e2d52df9d1c5744ed3ffe4d5d" kindref="member">RC24M</ref><sp/>&amp;=<sp/>~PCFG_RC24M_RC_TRIMMED_MASK;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="group__pcfg__interface_1gaaa6751b38febe1731a5c23f761519c84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1gaaa6751b38febe1731a5c23f761519c84" kindref="member">pcfg_dcdc_switch_to_dcm_mode</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>pcfc_dcdc_min_duty_cycle[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x6E,<sp/>0x6E,<sp/>0x70,<sp/>0x70,<sp/>0x70,<sp/>0x70,<sp/>0x72,<sp/>0x72,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x72,<sp/>0x72,<sp/>0x74,<sp/>0x74,<sp/>0x74,<sp/>0x74,<sp/>0x76,<sp/>0x76,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x76,<sp/>0x78,<sp/>0x78,<sp/>0x78,<sp/>0x78,<sp/>0x7A,<sp/>0x7A,<sp/>0x7A,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7A,<sp/>0x7C,<sp/>0x7C,<sp/>0x7C,<sp/>0x7E,<sp/>0x7E,<sp/>0x7E,<sp/>0x7E</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>voltage;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a8f8df9a060162436678df7424ba9a351" kindref="member">DCDC_MODE</ref><sp/>|=<sp/>0x77000u;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a2ed915788a156b1238c16c3b57cdd805" kindref="member">DCDC_ADVMODE</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a2ed915788a156b1238c16c3b57cdd805" kindref="member">DCDC_ADVMODE</ref><sp/>&amp;<sp/>~0x73F0067u)<sp/>|<sp/>0x4120067u;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>&amp;=<sp/>~PCFG_DCDC_PROT_SHORT_CURRENT_MASK;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a881eacb50ae5005a4a72cc396e50f204" kindref="member">DCDC_PROT</ref><sp/>|=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1aed5fbf70ebbb49d38ad4ae8b2c94a5c2" kindref="member">PCFG_DCDC_PROT_DISABLE_SHORT_MASK</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a8fadc33fca188ab59772d6c618598347" kindref="member">DCDC_MISC</ref><sp/>=<sp/>0x100000u;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>voltage<sp/>=<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1ab2ac2762cc97f66960b1033962e23910" kindref="member">PCFG_DCDC_MODE_VOLT_GET</ref>(ptr-&gt;<ref refid="structPCFG__Type_1a8f8df9a060162436678df7424ba9a351" kindref="member">DCDC_MODE</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>voltage<sp/>=<sp/>(voltage<sp/>-<sp/>600)<sp/>/<sp/>25;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr-&gt;<ref refid="structPCFG__Type_1a2c91d236b231f510313dbfa8d0cf814b" kindref="member">DCDC_ADVPARAM</ref><sp/>=<sp/>(ptr-&gt;<ref refid="structPCFG__Type_1a2c91d236b231f510313dbfa8d0cf814b" kindref="member">DCDC_ADVPARAM</ref><sp/>&amp;<sp/>~PCFG_DCDC_ADVPARAM_MIN_DUT_MASK)<sp/>|<sp/><ref refid="HPM5300_2ip_2hpm__pcfg__regs_8h_1af599189c33758a26276fd7628463bf62" kindref="member">PCFG_DCDC_ADVPARAM_MIN_DUT_SET</ref>(pcfc_dcdc_min_duty_cycle[voltage]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__pcfg__interface_1ga12c395d9b8f42ca1da12cc4146ab43f3" kindref="member">pcfg_irc24m_config_track</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/><ref refid="structpcfg__irc24m__config__t" kindref="compound">pcfg_irc24m_config_t</ref><sp/>*config);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>DCDC<sp/>voltage<sp/>at<sp/>standby<sp/>mode</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mv<sp/>target<sp/>voltage</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@retval<sp/>status_success<sp/>if<sp/>successfully<sp/>configured</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pcfg__interface_1gae7d759a18709e354b54515d2ac82148c" kindref="member">pcfg_dcdc_set_lpmode_voltage</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>mv);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>output<sp/>voltage<sp/>of<sp/>LDO<sp/>2.5V<sp/>in<sp/>mV</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mv<sp/>target<sp/>voltage</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>@retval<sp/>status_success<sp/>if<sp/>successfully<sp/>configured</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pcfg__interface_1ga1a3048c449a6bf186321f2a360f5ea2f" kindref="member">pcfg_ldo2p5_set_voltage</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>mv);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>DCDC<sp/>voltage</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mv<sp/>target<sp/>voltage</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*<sp/>@retval<sp/>status_success<sp/>if<sp/>successfully<sp/>configured</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pcfg__interface_1ga23eceb2163d0c2534ab504b4fe6583a8" kindref="member">pcfg_dcdc_set_voltage</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>mv);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/>@brief<sp/>set<sp/>output<sp/>voltage<sp/>of<sp/>LDO<sp/>1V<sp/>in<sp/>mV</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>mv<sp/>target<sp/>voltage</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>@retval<sp/>status_success<sp/>if<sp/>successfully<sp/>configured</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><ref refid="group__common__interface_1ga087efae82a4b174a0363363d9d5ece19" kindref="member">hpm_stat_t</ref><sp/><ref refid="group__pcfg__interface_1ga19758e0f28c3363f3b6e0692177ca996" kindref="member">pcfg_ldo1p1_set_voltage</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr,<sp/>uint16_t<sp/>mv);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/>@brief<sp/>get<sp/>current<sp/>DCDC<sp/>current<sp/>level<sp/>in<sp/>mA</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ptr<sp/>base<sp/>address</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/>@retval<sp/>Current<sp/>level<sp/>at<sp/>mA</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">uint16_t<sp/><ref refid="group__pcfg__interface_1ga21ec5635d0fbfc0488173b0142e99812" kindref="member">pcfg_dcdc_get_current_level</ref>(<ref refid="structPCFG__Type" kindref="compound">PCFG_Type</ref><sp/>*ptr);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HPM_PCFG_DRV_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="soc/HPM6700/HPM6750/hpm_pcfg_drv.h"/>
  </compounddef>
</doxygen>
